
07-ADC_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00010edc  080002a0  080002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00006ff0  0801117c  0801117c  0001217c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801816c  0801816c  0001916c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08018174  08018174  00019174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  08018178  08018178  00019178  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000001e4  24000000  0801817c  0001a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000024d8  240001e4  08018360  0001a1e4  2**2
                  ALLOC
  8 ._user_heap_stack 00000604  240026bc  08018360  0001a6bc  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  0001a1e4  2**0
                  CONTENTS, READONLY
 10 .debug_info   000247a4  00000000  00000000  0001a212  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00004f69  00000000  00000000  0003e9b6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00001c40  00000000  00000000  00043920  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0003e29d  00000000  00000000  00045560  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00025402  00000000  00000000  000837fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0017b3d2  00000000  00000000  000a8bff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000043  00000000  00000000  00223fd1  2**0
                  CONTENTS, READONLY
 17 .debug_rnglists 00001576  00000000  00000000  00224014  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_frame  00007bc4  00000000  00000000  0022558c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000065  00000000  00000000  0022d150  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	@ (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	@ (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	@ (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	240001e4 	.word	0x240001e4
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08011164 	.word	0x08011164

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	@ (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	@ (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	@ (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	240001e8 	.word	0x240001e8
 80002dc:	08011164 	.word	0x08011164

080002e0 <strlen>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002e6:	2a00      	cmp	r2, #0
 80002e8:	d1fb      	bne.n	80002e2 <strlen+0x2>
 80002ea:	1a18      	subs	r0, r3, r0
 80002ec:	3801      	subs	r0, #1
 80002ee:	4770      	bx	lr

080002f0 <memchr>:
 80002f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80002f4:	2a10      	cmp	r2, #16
 80002f6:	db2b      	blt.n	8000350 <memchr+0x60>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	d008      	beq.n	8000310 <memchr+0x20>
 80002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000302:	3a01      	subs	r2, #1
 8000304:	428b      	cmp	r3, r1
 8000306:	d02d      	beq.n	8000364 <memchr+0x74>
 8000308:	f010 0f07 	tst.w	r0, #7
 800030c:	b342      	cbz	r2, 8000360 <memchr+0x70>
 800030e:	d1f6      	bne.n	80002fe <memchr+0xe>
 8000310:	b4f0      	push	{r4, r5, r6, r7}
 8000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800031a:	f022 0407 	bic.w	r4, r2, #7
 800031e:	f07f 0700 	mvns.w	r7, #0
 8000322:	2300      	movs	r3, #0
 8000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000328:	3c08      	subs	r4, #8
 800032a:	ea85 0501 	eor.w	r5, r5, r1
 800032e:	ea86 0601 	eor.w	r6, r6, r1
 8000332:	fa85 f547 	uadd8	r5, r5, r7
 8000336:	faa3 f587 	sel	r5, r3, r7
 800033a:	fa86 f647 	uadd8	r6, r6, r7
 800033e:	faa5 f687 	sel	r6, r5, r7
 8000342:	b98e      	cbnz	r6, 8000368 <memchr+0x78>
 8000344:	d1ee      	bne.n	8000324 <memchr+0x34>
 8000346:	bcf0      	pop	{r4, r5, r6, r7}
 8000348:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800034c:	f002 0207 	and.w	r2, r2, #7
 8000350:	b132      	cbz	r2, 8000360 <memchr+0x70>
 8000352:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000356:	3a01      	subs	r2, #1
 8000358:	ea83 0301 	eor.w	r3, r3, r1
 800035c:	b113      	cbz	r3, 8000364 <memchr+0x74>
 800035e:	d1f8      	bne.n	8000352 <memchr+0x62>
 8000360:	2000      	movs	r0, #0
 8000362:	4770      	bx	lr
 8000364:	3801      	subs	r0, #1
 8000366:	4770      	bx	lr
 8000368:	2d00      	cmp	r5, #0
 800036a:	bf06      	itte	eq
 800036c:	4635      	moveq	r5, r6
 800036e:	3803      	subeq	r0, #3
 8000370:	3807      	subne	r0, #7
 8000372:	f015 0f01 	tst.w	r5, #1
 8000376:	d107      	bne.n	8000388 <memchr+0x98>
 8000378:	3001      	adds	r0, #1
 800037a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800037e:	bf02      	ittt	eq
 8000380:	3001      	addeq	r0, #1
 8000382:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000386:	3001      	addeq	r0, #1
 8000388:	bcf0      	pop	{r4, r5, r6, r7}
 800038a:	3801      	subs	r0, #1
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop

08000390 <MX_ADC2_Init>:
ADC_HandleTypeDef hadc2;
ADC_HandleTypeDef hadc3;

/* ADC2 init function */
void MX_ADC2_Init(void)
{
 8000390:	b580      	push	{r7, lr}
 8000392:	b088      	sub	sp, #32
 8000394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000396:	1d3b      	adds	r3, r7, #4
 8000398:	2200      	movs	r2, #0
 800039a:	601a      	str	r2, [r3, #0]
 800039c:	605a      	str	r2, [r3, #4]
 800039e:	609a      	str	r2, [r3, #8]
 80003a0:	60da      	str	r2, [r3, #12]
 80003a2:	611a      	str	r2, [r3, #16]
 80003a4:	615a      	str	r2, [r3, #20]
 80003a6:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 80003a8:	4b3f      	ldr	r3, [pc, #252]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003aa:	4a40      	ldr	r2, [pc, #256]	@ (80004ac <MX_ADC2_Init+0x11c>)
 80003ac:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 80003ae:	4b3e      	ldr	r3, [pc, #248]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003b0:	2200      	movs	r2, #0
 80003b2:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_16B;
 80003b4:	4b3c      	ldr	r3, [pc, #240]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003b6:	2200      	movs	r2, #0
 80003b8:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80003ba:	4b3b      	ldr	r3, [pc, #236]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003bc:	2201      	movs	r2, #1
 80003be:	60da      	str	r2, [r3, #12]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80003c0:	4b39      	ldr	r3, [pc, #228]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003c2:	2204      	movs	r2, #4
 80003c4:	611a      	str	r2, [r3, #16]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 80003c6:	4b38      	ldr	r3, [pc, #224]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003c8:	2200      	movs	r2, #0
 80003ca:	751a      	strb	r2, [r3, #20]
  hadc2.Init.ContinuousConvMode = DISABLE;
 80003cc:	4b36      	ldr	r3, [pc, #216]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003ce:	2200      	movs	r2, #0
 80003d0:	755a      	strb	r2, [r3, #21]
  hadc2.Init.NbrOfConversion = 4;
 80003d2:	4b35      	ldr	r3, [pc, #212]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003d4:	2204      	movs	r2, #4
 80003d6:	619a      	str	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = ENABLE;
 80003d8:	4b33      	ldr	r3, [pc, #204]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003da:	2201      	movs	r2, #1
 80003dc:	771a      	strb	r2, [r3, #28]
  hadc2.Init.NbrOfDiscConversion = 1;
 80003de:	4b32      	ldr	r3, [pc, #200]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003e0:	2201      	movs	r2, #1
 80003e2:	621a      	str	r2, [r3, #32]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80003e4:	4b30      	ldr	r3, [pc, #192]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003e6:	2200      	movs	r2, #0
 80003e8:	625a      	str	r2, [r3, #36]	@ 0x24
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80003ea:	4b2f      	ldr	r3, [pc, #188]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003ec:	2200      	movs	r2, #0
 80003ee:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 80003f0:	4b2d      	ldr	r3, [pc, #180]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003f2:	2200      	movs	r2, #0
 80003f4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80003f6:	4b2c      	ldr	r3, [pc, #176]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003f8:	2200      	movs	r2, #0
 80003fa:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc2.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 80003fc:	4b2a      	ldr	r3, [pc, #168]	@ (80004a8 <MX_ADC2_Init+0x118>)
 80003fe:	2200      	movs	r2, #0
 8000400:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc2.Init.OversamplingMode = DISABLE;
 8000402:	4b29      	ldr	r3, [pc, #164]	@ (80004a8 <MX_ADC2_Init+0x118>)
 8000404:	2200      	movs	r2, #0
 8000406:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800040a:	4827      	ldr	r0, [pc, #156]	@ (80004a8 <MX_ADC2_Init+0x118>)
 800040c:	f003 fc1a 	bl	8003c44 <HAL_ADC_Init>
 8000410:	4603      	mov	r3, r0
 8000412:	2b00      	cmp	r3, #0
 8000414:	d001      	beq.n	800041a <MX_ADC2_Init+0x8a>
  {
    Error_Handler();
 8000416:	f001 f9fd 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 800041a:	4b25      	ldr	r3, [pc, #148]	@ (80004b0 <MX_ADC2_Init+0x120>)
 800041c:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800041e:	2306      	movs	r3, #6
 8000420:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_387CYCLES_5;
 8000422:	2306      	movs	r3, #6
 8000424:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000426:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 800042a:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 800042c:	2304      	movs	r3, #4
 800042e:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000430:	2300      	movs	r3, #0
 8000432:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 8000434:	2300      	movs	r3, #0
 8000436:	777b      	strb	r3, [r7, #29]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000438:	1d3b      	adds	r3, r7, #4
 800043a:	4619      	mov	r1, r3
 800043c:	481a      	ldr	r0, [pc, #104]	@ (80004a8 <MX_ADC2_Init+0x118>)
 800043e:	f003 ffa3 	bl	8004388 <HAL_ADC_ConfigChannel>
 8000442:	4603      	mov	r3, r0
 8000444:	2b00      	cmp	r3, #0
 8000446:	d001      	beq.n	800044c <MX_ADC2_Init+0xbc>
  {
    Error_Handler();
 8000448:	f001 f9e4 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_4;
 800044c:	4b19      	ldr	r3, [pc, #100]	@ (80004b4 <MX_ADC2_Init+0x124>)
 800044e:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8000450:	230c      	movs	r3, #12
 8000452:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000454:	1d3b      	adds	r3, r7, #4
 8000456:	4619      	mov	r1, r3
 8000458:	4813      	ldr	r0, [pc, #76]	@ (80004a8 <MX_ADC2_Init+0x118>)
 800045a:	f003 ff95 	bl	8004388 <HAL_ADC_ConfigChannel>
 800045e:	4603      	mov	r3, r0
 8000460:	2b00      	cmp	r3, #0
 8000462:	d001      	beq.n	8000468 <MX_ADC2_Init+0xd8>
  {
    Error_Handler();
 8000464:	f001 f9d6 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_5;
 8000468:	4b13      	ldr	r3, [pc, #76]	@ (80004b8 <MX_ADC2_Init+0x128>)
 800046a:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 800046c:	2312      	movs	r3, #18
 800046e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000470:	1d3b      	adds	r3, r7, #4
 8000472:	4619      	mov	r1, r3
 8000474:	480c      	ldr	r0, [pc, #48]	@ (80004a8 <MX_ADC2_Init+0x118>)
 8000476:	f003 ff87 	bl	8004388 <HAL_ADC_ConfigChannel>
 800047a:	4603      	mov	r3, r0
 800047c:	2b00      	cmp	r3, #0
 800047e:	d001      	beq.n	8000484 <MX_ADC2_Init+0xf4>
  {
    Error_Handler();
 8000480:	f001 f9c8 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_7;
 8000484:	4b0d      	ldr	r3, [pc, #52]	@ (80004bc <MX_ADC2_Init+0x12c>)
 8000486:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 8000488:	2318      	movs	r3, #24
 800048a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800048c:	1d3b      	adds	r3, r7, #4
 800048e:	4619      	mov	r1, r3
 8000490:	4805      	ldr	r0, [pc, #20]	@ (80004a8 <MX_ADC2_Init+0x118>)
 8000492:	f003 ff79 	bl	8004388 <HAL_ADC_ConfigChannel>
 8000496:	4603      	mov	r3, r0
 8000498:	2b00      	cmp	r3, #0
 800049a:	d001      	beq.n	80004a0 <MX_ADC2_Init+0x110>
  {
    Error_Handler();
 800049c:	f001 f9ba 	bl	8001814 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 80004a0:	bf00      	nop
 80004a2:	3720      	adds	r7, #32
 80004a4:	46bd      	mov	sp, r7
 80004a6:	bd80      	pop	{r7, pc}
 80004a8:	24000200 	.word	0x24000200
 80004ac:	40022100 	.word	0x40022100
 80004b0:	0c900008 	.word	0x0c900008
 80004b4:	10c00010 	.word	0x10c00010
 80004b8:	14f00020 	.word	0x14f00020
 80004bc:	1d500080 	.word	0x1d500080

080004c0 <MX_ADC3_Init>:
/* ADC3 init function */
void MX_ADC3_Init(void)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b088      	sub	sp, #32
 80004c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80004c6:	1d3b      	adds	r3, r7, #4
 80004c8:	2200      	movs	r2, #0
 80004ca:	601a      	str	r2, [r3, #0]
 80004cc:	605a      	str	r2, [r3, #4]
 80004ce:	609a      	str	r2, [r3, #8]
 80004d0:	60da      	str	r2, [r3, #12]
 80004d2:	611a      	str	r2, [r3, #16]
 80004d4:	615a      	str	r2, [r3, #20]
 80004d6:	619a      	str	r2, [r3, #24]

  /* USER CODE END ADC3_Init 1 */

  /** Common config
  */
  hadc3.Instance = ADC3;
 80004d8:	4b3e      	ldr	r3, [pc, #248]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004da:	4a3f      	ldr	r2, [pc, #252]	@ (80005d8 <MX_ADC3_Init+0x118>)
 80004dc:	601a      	str	r2, [r3, #0]
  hadc3.Init.Resolution = ADC_RESOLUTION_16B;
 80004de:	4b3d      	ldr	r3, [pc, #244]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004e0:	2200      	movs	r2, #0
 80004e2:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 80004e4:	4b3b      	ldr	r3, [pc, #236]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004e6:	2201      	movs	r2, #1
 80004e8:	60da      	str	r2, [r3, #12]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80004ea:	4b3a      	ldr	r3, [pc, #232]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004ec:	2204      	movs	r2, #4
 80004ee:	611a      	str	r2, [r3, #16]
  hadc3.Init.LowPowerAutoWait = DISABLE;
 80004f0:	4b38      	ldr	r3, [pc, #224]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004f2:	2200      	movs	r2, #0
 80004f4:	751a      	strb	r2, [r3, #20]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80004f6:	4b37      	ldr	r3, [pc, #220]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004f8:	2200      	movs	r2, #0
 80004fa:	755a      	strb	r2, [r3, #21]
  hadc3.Init.NbrOfConversion = 4;
 80004fc:	4b35      	ldr	r3, [pc, #212]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80004fe:	2204      	movs	r2, #4
 8000500:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = ENABLE;
 8000502:	4b34      	ldr	r3, [pc, #208]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000504:	2201      	movs	r2, #1
 8000506:	771a      	strb	r2, [r3, #28]
  hadc3.Init.NbrOfDiscConversion = 1;
 8000508:	4b32      	ldr	r3, [pc, #200]	@ (80005d4 <MX_ADC3_Init+0x114>)
 800050a:	2201      	movs	r2, #1
 800050c:	621a      	str	r2, [r3, #32]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800050e:	4b31      	ldr	r3, [pc, #196]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000510:	2200      	movs	r2, #0
 8000512:	625a      	str	r2, [r3, #36]	@ 0x24
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000514:	4b2f      	ldr	r3, [pc, #188]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000516:	2200      	movs	r2, #0
 8000518:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 800051a:	4b2e      	ldr	r3, [pc, #184]	@ (80005d4 <MX_ADC3_Init+0x114>)
 800051c:	2200      	movs	r2, #0
 800051e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000520:	4b2c      	ldr	r3, [pc, #176]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000522:	2200      	movs	r2, #0
 8000524:	631a      	str	r2, [r3, #48]	@ 0x30
  hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 8000526:	4b2b      	ldr	r3, [pc, #172]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000528:	2200      	movs	r2, #0
 800052a:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc3.Init.OversamplingMode = DISABLE;
 800052c:	4b29      	ldr	r3, [pc, #164]	@ (80005d4 <MX_ADC3_Init+0x114>)
 800052e:	2200      	movs	r2, #0
 8000530:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000534:	4827      	ldr	r0, [pc, #156]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000536:	f003 fb85 	bl	8003c44 <HAL_ADC_Init>
 800053a:	4603      	mov	r3, r0
 800053c:	2b00      	cmp	r3, #0
 800053e:	d001      	beq.n	8000544 <MX_ADC3_Init+0x84>
  {
    Error_Handler();
 8000540:	f001 f968 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8000544:	2301      	movs	r3, #1
 8000546:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000548:	2306      	movs	r3, #6
 800054a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_387CYCLES_5;
 800054c:	2306      	movs	r3, #6
 800054e:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000550:	f240 73ff 	movw	r3, #2047	@ 0x7ff
 8000554:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000556:	2304      	movs	r3, #4
 8000558:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 800055a:	2300      	movs	r3, #0
 800055c:	61bb      	str	r3, [r7, #24]
  sConfig.OffsetSignedSaturation = DISABLE;
 800055e:	2300      	movs	r3, #0
 8000560:	777b      	strb	r3, [r7, #29]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000562:	1d3b      	adds	r3, r7, #4
 8000564:	4619      	mov	r1, r3
 8000566:	481b      	ldr	r0, [pc, #108]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000568:	f003 ff0e 	bl	8004388 <HAL_ADC_ConfigChannel>
 800056c:	4603      	mov	r3, r0
 800056e:	2b00      	cmp	r3, #0
 8000570:	d001      	beq.n	8000576 <MX_ADC3_Init+0xb6>
  {
    Error_Handler();
 8000572:	f001 f94f 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8000576:	4b19      	ldr	r3, [pc, #100]	@ (80005dc <MX_ADC3_Init+0x11c>)
 8000578:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 800057a:	230c      	movs	r3, #12
 800057c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800057e:	1d3b      	adds	r3, r7, #4
 8000580:	4619      	mov	r1, r3
 8000582:	4814      	ldr	r0, [pc, #80]	@ (80005d4 <MX_ADC3_Init+0x114>)
 8000584:	f003 ff00 	bl	8004388 <HAL_ADC_ConfigChannel>
 8000588:	4603      	mov	r3, r0
 800058a:	2b00      	cmp	r3, #0
 800058c:	d001      	beq.n	8000592 <MX_ADC3_Init+0xd2>
  {
    Error_Handler();
 800058e:	f001 f941 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 8000592:	4b13      	ldr	r3, [pc, #76]	@ (80005e0 <MX_ADC3_Init+0x120>)
 8000594:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_3;
 8000596:	2312      	movs	r3, #18
 8000598:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800059a:	1d3b      	adds	r3, r7, #4
 800059c:	4619      	mov	r1, r3
 800059e:	480d      	ldr	r0, [pc, #52]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80005a0:	f003 fef2 	bl	8004388 <HAL_ADC_ConfigChannel>
 80005a4:	4603      	mov	r3, r0
 80005a6:	2b00      	cmp	r3, #0
 80005a8:	d001      	beq.n	80005ae <MX_ADC3_Init+0xee>
  {
    Error_Handler();
 80005aa:	f001 f933 	bl	8001814 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_VBAT;
 80005ae:	4b0d      	ldr	r3, [pc, #52]	@ (80005e4 <MX_ADC3_Init+0x124>)
 80005b0:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_4;
 80005b2:	2318      	movs	r3, #24
 80005b4:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 80005b6:	1d3b      	adds	r3, r7, #4
 80005b8:	4619      	mov	r1, r3
 80005ba:	4806      	ldr	r0, [pc, #24]	@ (80005d4 <MX_ADC3_Init+0x114>)
 80005bc:	f003 fee4 	bl	8004388 <HAL_ADC_ConfigChannel>
 80005c0:	4603      	mov	r3, r0
 80005c2:	2b00      	cmp	r3, #0
 80005c4:	d001      	beq.n	80005ca <MX_ADC3_Init+0x10a>
  {
    Error_Handler();
 80005c6:	f001 f925 	bl	8001814 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 80005ca:	bf00      	nop
 80005cc:	3720      	adds	r7, #32
 80005ce:	46bd      	mov	sp, r7
 80005d0:	bd80      	pop	{r7, pc}
 80005d2:	bf00      	nop
 80005d4:	24000264 	.word	0x24000264
 80005d8:	58026000 	.word	0x58026000
 80005dc:	cfb80000 	.word	0xcfb80000
 80005e0:	cb840000 	.word	0xcb840000
 80005e4:	c7520000 	.word	0xc7520000

080005e8 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 80005e8:	b580      	push	{r7, lr}
 80005ea:	b08e      	sub	sp, #56	@ 0x38
 80005ec:	af00      	add	r7, sp, #0
 80005ee:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80005f0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80005f4:	2200      	movs	r2, #0
 80005f6:	601a      	str	r2, [r3, #0]
 80005f8:	605a      	str	r2, [r3, #4]
 80005fa:	609a      	str	r2, [r3, #8]
 80005fc:	60da      	str	r2, [r3, #12]
 80005fe:	611a      	str	r2, [r3, #16]
  if(adcHandle->Instance==ADC2)
 8000600:	687b      	ldr	r3, [r7, #4]
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	4a48      	ldr	r2, [pc, #288]	@ (8000728 <HAL_ADC_MspInit+0x140>)
 8000606:	4293      	cmp	r3, r2
 8000608:	d160      	bne.n	80006cc <HAL_ADC_MspInit+0xe4>
  {
  /* USER CODE BEGIN ADC2_MspInit 0 */

  /* USER CODE END ADC2_MspInit 0 */
    /* ADC2 clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 800060a:	4b48      	ldr	r3, [pc, #288]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800060c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8000610:	4a46      	ldr	r2, [pc, #280]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000612:	f043 0320 	orr.w	r3, r3, #32
 8000616:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 800061a:	4b44      	ldr	r3, [pc, #272]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800061c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8000620:	f003 0320 	and.w	r3, r3, #32
 8000624:	623b      	str	r3, [r7, #32]
 8000626:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000628:	4b40      	ldr	r3, [pc, #256]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800062a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800062e:	4a3f      	ldr	r2, [pc, #252]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000630:	f043 0301 	orr.w	r3, r3, #1
 8000634:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000638:	4b3c      	ldr	r3, [pc, #240]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800063a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800063e:	f003 0301 	and.w	r3, r3, #1
 8000642:	61fb      	str	r3, [r7, #28]
 8000644:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000646:	4b39      	ldr	r3, [pc, #228]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000648:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800064c:	4a37      	ldr	r2, [pc, #220]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800064e:	f043 0304 	orr.w	r3, r3, #4
 8000652:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000656:	4b35      	ldr	r3, [pc, #212]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000658:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800065c:	f003 0304 	and.w	r3, r3, #4
 8000660:	61bb      	str	r3, [r7, #24]
 8000662:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000664:	4b31      	ldr	r3, [pc, #196]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000666:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800066a:	4a30      	ldr	r2, [pc, #192]	@ (800072c <HAL_ADC_MspInit+0x144>)
 800066c:	f043 0302 	orr.w	r3, r3, #2
 8000670:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000674:	4b2d      	ldr	r3, [pc, #180]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000676:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800067a:	f003 0302 	and.w	r3, r3, #2
 800067e:	617b      	str	r3, [r7, #20]
 8000680:	697b      	ldr	r3, [r7, #20]
    PA6     ------> ADC2_INP3
    PA7     ------> ADC2_INP7
    PC4     ------> ADC2_INP4
    PB1     ------> ADC2_INP5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000682:	23c0      	movs	r3, #192	@ 0xc0
 8000684:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000686:	2303      	movs	r3, #3
 8000688:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800068a:	2300      	movs	r3, #0
 800068c:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800068e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000692:	4619      	mov	r1, r3
 8000694:	4826      	ldr	r0, [pc, #152]	@ (8000730 <HAL_ADC_MspInit+0x148>)
 8000696:	f004 fea3 	bl	80053e0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4;
 800069a:	2310      	movs	r3, #16
 800069c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800069e:	2303      	movs	r3, #3
 80006a0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006a2:	2300      	movs	r3, #0
 80006a4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80006a6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80006aa:	4619      	mov	r1, r3
 80006ac:	4821      	ldr	r0, [pc, #132]	@ (8000734 <HAL_ADC_MspInit+0x14c>)
 80006ae:	f004 fe97 	bl	80053e0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1;
 80006b2:	2302      	movs	r3, #2
 80006b4:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80006b6:	2303      	movs	r3, #3
 80006b8:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006ba:	2300      	movs	r3, #0
 80006bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006be:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80006c2:	4619      	mov	r1, r3
 80006c4:	481c      	ldr	r0, [pc, #112]	@ (8000738 <HAL_ADC_MspInit+0x150>)
 80006c6:	f004 fe8b 	bl	80053e0 <HAL_GPIO_Init>

  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }
}
 80006ca:	e028      	b.n	800071e <HAL_ADC_MspInit+0x136>
  else if(adcHandle->Instance==ADC3)
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	4a1a      	ldr	r2, [pc, #104]	@ (800073c <HAL_ADC_MspInit+0x154>)
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d123      	bne.n	800071e <HAL_ADC_MspInit+0x136>
    __HAL_RCC_ADC3_CLK_ENABLE();
 80006d6:	4b15      	ldr	r3, [pc, #84]	@ (800072c <HAL_ADC_MspInit+0x144>)
 80006d8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80006dc:	4a13      	ldr	r2, [pc, #76]	@ (800072c <HAL_ADC_MspInit+0x144>)
 80006de:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80006e2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80006e6:	4b11      	ldr	r3, [pc, #68]	@ (800072c <HAL_ADC_MspInit+0x144>)
 80006e8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80006ec:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80006f0:	613b      	str	r3, [r7, #16]
 80006f2:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80006f4:	4b0d      	ldr	r3, [pc, #52]	@ (800072c <HAL_ADC_MspInit+0x144>)
 80006f6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80006fa:	4a0c      	ldr	r2, [pc, #48]	@ (800072c <HAL_ADC_MspInit+0x144>)
 80006fc:	f043 0304 	orr.w	r3, r3, #4
 8000700:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000704:	4b09      	ldr	r3, [pc, #36]	@ (800072c <HAL_ADC_MspInit+0x144>)
 8000706:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800070a:	f003 0304 	and.w	r3, r3, #4
 800070e:	60fb      	str	r3, [r7, #12]
 8000710:	68fb      	ldr	r3, [r7, #12]
    HAL_SYSCFG_AnalogSwitchConfig(SYSCFG_SWITCH_PC2, SYSCFG_SWITCH_PC2_OPEN);
 8000712:	f04f 6180 	mov.w	r1, #67108864	@ 0x4000000
 8000716:	f04f 6080 	mov.w	r0, #67108864	@ 0x4000000
 800071a:	f003 f84b 	bl	80037b4 <HAL_SYSCFG_AnalogSwitchConfig>
}
 800071e:	bf00      	nop
 8000720:	3738      	adds	r7, #56	@ 0x38
 8000722:	46bd      	mov	sp, r7
 8000724:	bd80      	pop	{r7, pc}
 8000726:	bf00      	nop
 8000728:	40022100 	.word	0x40022100
 800072c:	58024400 	.word	0x58024400
 8000730:	58020000 	.word	0x58020000
 8000734:	58020800 	.word	0x58020800
 8000738:	58020400 	.word	0x58020400
 800073c:	58026000 	.word	0x58026000

08000740 <MX_GPIO_Init>:
     PH1-OSC_OUT (PH1)   ------> RCC_OSC_OUT
     PA13 (JTMS/SWDIO)   ------> DEBUG_JTMS-SWDIO
     PA14 (JTCK/SWCLK)   ------> DEBUG_JTCK-SWCLK
*/
void MX_GPIO_Init(void)
{
 8000740:	b580      	push	{r7, lr}
 8000742:	b08a      	sub	sp, #40	@ 0x28
 8000744:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000746:	f107 0314 	add.w	r3, r7, #20
 800074a:	2200      	movs	r2, #0
 800074c:	601a      	str	r2, [r3, #0]
 800074e:	605a      	str	r2, [r3, #4]
 8000750:	609a      	str	r2, [r3, #8]
 8000752:	60da      	str	r2, [r3, #12]
 8000754:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000756:	4b48      	ldr	r3, [pc, #288]	@ (8000878 <MX_GPIO_Init+0x138>)
 8000758:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800075c:	4a46      	ldr	r2, [pc, #280]	@ (8000878 <MX_GPIO_Init+0x138>)
 800075e:	f043 0310 	orr.w	r3, r3, #16
 8000762:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000766:	4b44      	ldr	r3, [pc, #272]	@ (8000878 <MX_GPIO_Init+0x138>)
 8000768:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800076c:	f003 0310 	and.w	r3, r3, #16
 8000770:	613b      	str	r3, [r7, #16]
 8000772:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000774:	4b40      	ldr	r3, [pc, #256]	@ (8000878 <MX_GPIO_Init+0x138>)
 8000776:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800077a:	4a3f      	ldr	r2, [pc, #252]	@ (8000878 <MX_GPIO_Init+0x138>)
 800077c:	f043 0304 	orr.w	r3, r3, #4
 8000780:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000784:	4b3c      	ldr	r3, [pc, #240]	@ (8000878 <MX_GPIO_Init+0x138>)
 8000786:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800078a:	f003 0304 	and.w	r3, r3, #4
 800078e:	60fb      	str	r3, [r7, #12]
 8000790:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000792:	4b39      	ldr	r3, [pc, #228]	@ (8000878 <MX_GPIO_Init+0x138>)
 8000794:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000798:	4a37      	ldr	r2, [pc, #220]	@ (8000878 <MX_GPIO_Init+0x138>)
 800079a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800079e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80007a2:	4b35      	ldr	r3, [pc, #212]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80007a8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80007ac:	60bb      	str	r3, [r7, #8]
 80007ae:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80007b0:	4b31      	ldr	r3, [pc, #196]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80007b6:	4a30      	ldr	r2, [pc, #192]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007b8:	f043 0301 	orr.w	r3, r3, #1
 80007bc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80007c0:	4b2d      	ldr	r3, [pc, #180]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80007c6:	f003 0301 	and.w	r3, r3, #1
 80007ca:	607b      	str	r3, [r7, #4]
 80007cc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80007ce:	4b2a      	ldr	r3, [pc, #168]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007d0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80007d4:	4a28      	ldr	r2, [pc, #160]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007d6:	f043 0302 	orr.w	r3, r3, #2
 80007da:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80007de:	4b26      	ldr	r3, [pc, #152]	@ (8000878 <MX_GPIO_Init+0x138>)
 80007e0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80007e4:	f003 0302 	and.w	r3, r3, #2
 80007e8:	603b      	str	r3, [r7, #0]
 80007ea:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PE3_GPIO_Port, PE3_Pin, GPIO_PIN_RESET);
 80007ec:	2200      	movs	r2, #0
 80007ee:	2108      	movs	r1, #8
 80007f0:	4822      	ldr	r0, [pc, #136]	@ (800087c <MX_GPIO_Init+0x13c>)
 80007f2:	f004 ffbd 	bl	8005770 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, LCD_CS_Pin|LCD_WR_RS_Pin, GPIO_PIN_SET);
 80007f6:	2201      	movs	r2, #1
 80007f8:	f44f 5120 	mov.w	r1, #10240	@ 0x2800
 80007fc:	481f      	ldr	r0, [pc, #124]	@ (800087c <MX_GPIO_Init+0x13c>)
 80007fe:	f004 ffb7 	bl	8005770 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = PE3_Pin;
 8000802:	2308      	movs	r3, #8
 8000804:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000806:	2301      	movs	r3, #1
 8000808:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800080a:	2300      	movs	r3, #0
 800080c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800080e:	2300      	movs	r3, #0
 8000810:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(PE3_GPIO_Port, &GPIO_InitStruct);
 8000812:	f107 0314 	add.w	r3, r7, #20
 8000816:	4619      	mov	r1, r3
 8000818:	4818      	ldr	r0, [pc, #96]	@ (800087c <MX_GPIO_Init+0x13c>)
 800081a:	f004 fde1 	bl	80053e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PE4 PE5 */
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 800081e:	2330      	movs	r3, #48	@ 0x30
 8000820:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000822:	2300      	movs	r3, #0
 8000824:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000826:	2300      	movs	r3, #0
 8000828:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800082a:	f107 0314 	add.w	r3, r7, #20
 800082e:	4619      	mov	r1, r3
 8000830:	4812      	ldr	r0, [pc, #72]	@ (800087c <MX_GPIO_Init+0x13c>)
 8000832:	f004 fdd5 	bl	80053e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = KEY_Pin;
 8000836:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800083a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800083c:	2300      	movs	r3, #0
 800083e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000840:	2302      	movs	r3, #2
 8000842:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(KEY_GPIO_Port, &GPIO_InitStruct);
 8000844:	f107 0314 	add.w	r3, r7, #20
 8000848:	4619      	mov	r1, r3
 800084a:	480d      	ldr	r0, [pc, #52]	@ (8000880 <MX_GPIO_Init+0x140>)
 800084c:	f004 fdc8 	bl	80053e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : PEPin PEPin */
  GPIO_InitStruct.Pin = LCD_CS_Pin|LCD_WR_RS_Pin;
 8000850:	f44f 5320 	mov.w	r3, #10240	@ 0x2800
 8000854:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000856:	2301      	movs	r3, #1
 8000858:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800085a:	2300      	movs	r3, #0
 800085c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800085e:	2303      	movs	r3, #3
 8000860:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000862:	f107 0314 	add.w	r3, r7, #20
 8000866:	4619      	mov	r1, r3
 8000868:	4804      	ldr	r0, [pc, #16]	@ (800087c <MX_GPIO_Init+0x13c>)
 800086a:	f004 fdb9 	bl	80053e0 <HAL_GPIO_Init>

}
 800086e:	bf00      	nop
 8000870:	3728      	adds	r7, #40	@ 0x28
 8000872:	46bd      	mov	sp, r7
 8000874:	bd80      	pop	{r7, pc}
 8000876:	bf00      	nop
 8000878:	58024400 	.word	0x58024400
 800087c:	58021000 	.word	0x58021000
 8000880:	58020800 	.word	0x58020800

08000884 <LCD_Test>:

ST7735_Object_t st7735_pObj;
uint32_t st7735_id;

void LCD_Test(void)
{
 8000884:	b5b0      	push	{r4, r5, r7, lr}
 8000886:	b088      	sub	sp, #32
 8000888:	af02      	add	r7, sp, #8
	uint8_t text[20];
	
	ST7735Ctx.Orientation = ST7735_ORIENTATION_LANDSCAPE_ROT180;
 800088a:	4b69      	ldr	r3, [pc, #420]	@ (8000a30 <LCD_Test+0x1ac>)
 800088c:	2203      	movs	r2, #3
 800088e:	609a      	str	r2, [r3, #8]
	ST7735Ctx.Panel = HannStar_Panel;
 8000890:	4b67      	ldr	r3, [pc, #412]	@ (8000a30 <LCD_Test+0x1ac>)
 8000892:	2200      	movs	r2, #0
 8000894:	731a      	strb	r2, [r3, #12]
	ST7735Ctx.Type = ST7735_0_9_inch_screen;
 8000896:	4b66      	ldr	r3, [pc, #408]	@ (8000a30 <LCD_Test+0x1ac>)
 8000898:	2201      	movs	r2, #1
 800089a:	735a      	strb	r2, [r3, #13]
	
	ST7735_RegisterBusIO(&st7735_pObj,&st7735_pIO);
 800089c:	4965      	ldr	r1, [pc, #404]	@ (8000a34 <LCD_Test+0x1b0>)
 800089e:	4866      	ldr	r0, [pc, #408]	@ (8000a38 <LCD_Test+0x1b4>)
 80008a0:	f001 f880 	bl	80019a4 <ST7735_RegisterBusIO>
	ST7735_LCD_Driver.Init(&st7735_pObj,ST7735_FORMAT_RBG565,&ST7735Ctx);
 80008a4:	4b65      	ldr	r3, [pc, #404]	@ (8000a3c <LCD_Test+0x1b8>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	4a61      	ldr	r2, [pc, #388]	@ (8000a30 <LCD_Test+0x1ac>)
 80008aa:	2105      	movs	r1, #5
 80008ac:	4862      	ldr	r0, [pc, #392]	@ (8000a38 <LCD_Test+0x1b4>)
 80008ae:	4798      	blx	r3
	ST7735_LCD_Driver.ReadID(&st7735_pObj,&st7735_id);
 80008b0:	4b62      	ldr	r3, [pc, #392]	@ (8000a3c <LCD_Test+0x1b8>)
 80008b2:	689b      	ldr	r3, [r3, #8]
 80008b4:	4962      	ldr	r1, [pc, #392]	@ (8000a40 <LCD_Test+0x1bc>)
 80008b6:	4860      	ldr	r0, [pc, #384]	@ (8000a38 <LCD_Test+0x1b4>)
 80008b8:	4798      	blx	r3
	
	LCD_SetBrightness(0);
 80008ba:	2000      	movs	r0, #0
 80008bc:	f000 f8ce 	bl	8000a5c <LCD_SetBrightness>
	
	extern unsigned char WeActStudiologo_160_80[];
	ST7735_LCD_Driver.DrawBitmap(&st7735_pObj,0,0,WeActStudiologo_160_80);
 80008c0:	4b5e      	ldr	r3, [pc, #376]	@ (8000a3c <LCD_Test+0x1b8>)
 80008c2:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
 80008c4:	4b5f      	ldr	r3, [pc, #380]	@ (8000a44 <LCD_Test+0x1c0>)
 80008c6:	2200      	movs	r2, #0
 80008c8:	2100      	movs	r1, #0
 80008ca:	485b      	ldr	r0, [pc, #364]	@ (8000a38 <LCD_Test+0x1b4>)
 80008cc:	47a0      	blx	r4
	
    uint32_t tick = get_tick();
 80008ce:	f002 ff11 	bl	80036f4 <HAL_GetTick>
 80008d2:	6178      	str	r0, [r7, #20]
	while (HAL_GPIO_ReadPin(KEY_GPIO_Port, KEY_Pin) != GPIO_PIN_SET)
 80008d4:	e06a      	b.n	80009ac <LCD_Test+0x128>
	{
		delay_ms(10);
 80008d6:	200a      	movs	r0, #10
 80008d8:	f002 ff18 	bl	800370c <HAL_Delay>

		if (get_tick() - tick <= 1000)
 80008dc:	f002 ff0a 	bl	80036f4 <HAL_GetTick>
 80008e0:	4602      	mov	r2, r0
 80008e2:	697b      	ldr	r3, [r7, #20]
 80008e4:	1ad3      	subs	r3, r2, r3
 80008e6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80008ea:	d80f      	bhi.n	800090c <LCD_Test+0x88>
			LCD_SetBrightness((get_tick() - tick) * 100 / 1000);
 80008ec:	f002 ff02 	bl	80036f4 <HAL_GetTick>
 80008f0:	4602      	mov	r2, r0
 80008f2:	697b      	ldr	r3, [r7, #20]
 80008f4:	1ad3      	subs	r3, r2, r3
 80008f6:	2264      	movs	r2, #100	@ 0x64
 80008f8:	fb02 f303 	mul.w	r3, r2, r3
 80008fc:	4a52      	ldr	r2, [pc, #328]	@ (8000a48 <LCD_Test+0x1c4>)
 80008fe:	fba2 2303 	umull	r2, r3, r2, r3
 8000902:	099b      	lsrs	r3, r3, #6
 8000904:	4618      	mov	r0, r3
 8000906:	f000 f8a9 	bl	8000a5c <LCD_SetBrightness>
 800090a:	e04f      	b.n	80009ac <LCD_Test+0x128>
		else if (get_tick() - tick <= 3000)
 800090c:	f002 fef2 	bl	80036f4 <HAL_GetTick>
 8000910:	4602      	mov	r2, r0
 8000912:	697b      	ldr	r3, [r7, #20]
 8000914:	1ad3      	subs	r3, r2, r3
 8000916:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 800091a:	4293      	cmp	r3, r2
 800091c:	d83d      	bhi.n	800099a <LCD_Test+0x116>
		{
			sprintf((char *)&text, "%03d", (get_tick() - tick - 1000) / 10);
 800091e:	f002 fee9 	bl	80036f4 <HAL_GetTick>
 8000922:	4602      	mov	r2, r0
 8000924:	697b      	ldr	r3, [r7, #20]
 8000926:	1ad3      	subs	r3, r2, r3
 8000928:	f5a3 737a 	sub.w	r3, r3, #1000	@ 0x3e8
 800092c:	4a47      	ldr	r2, [pc, #284]	@ (8000a4c <LCD_Test+0x1c8>)
 800092e:	fba2 2303 	umull	r2, r3, r2, r3
 8000932:	08da      	lsrs	r2, r3, #3
 8000934:	463b      	mov	r3, r7
 8000936:	4946      	ldr	r1, [pc, #280]	@ (8000a50 <LCD_Test+0x1cc>)
 8000938:	4618      	mov	r0, r3
 800093a:	f00f ff73 	bl	8010824 <siprintf>
			LCD_ShowString(ST7735Ctx.Width - 30, 1, ST7735Ctx.Width, 16, 16, text);
 800093e:	4b3c      	ldr	r3, [pc, #240]	@ (8000a30 <LCD_Test+0x1ac>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	b29b      	uxth	r3, r3
 8000944:	3b1e      	subs	r3, #30
 8000946:	b298      	uxth	r0, r3
 8000948:	4b39      	ldr	r3, [pc, #228]	@ (8000a30 <LCD_Test+0x1ac>)
 800094a:	681b      	ldr	r3, [r3, #0]
 800094c:	b29a      	uxth	r2, r3
 800094e:	463b      	mov	r3, r7
 8000950:	9301      	str	r3, [sp, #4]
 8000952:	2310      	movs	r3, #16
 8000954:	9300      	str	r3, [sp, #0]
 8000956:	2310      	movs	r3, #16
 8000958:	2101      	movs	r1, #1
 800095a:	f000 fb23 	bl	8000fa4 <LCD_ShowString>
			ST7735_LCD_Driver.FillRect(&st7735_pObj, 0, ST7735Ctx.Height - 3, (get_tick() - tick - 1000) * ST7735Ctx.Width / 2000, 3, 0xFFFF);
 800095e:	4b37      	ldr	r3, [pc, #220]	@ (8000a3c <LCD_Test+0x1b8>)
 8000960:	6b9c      	ldr	r4, [r3, #56]	@ 0x38
 8000962:	4b33      	ldr	r3, [pc, #204]	@ (8000a30 <LCD_Test+0x1ac>)
 8000964:	685b      	ldr	r3, [r3, #4]
 8000966:	1edd      	subs	r5, r3, #3
 8000968:	f002 fec4 	bl	80036f4 <HAL_GetTick>
 800096c:	4602      	mov	r2, r0
 800096e:	697b      	ldr	r3, [r7, #20]
 8000970:	1ad3      	subs	r3, r2, r3
 8000972:	f5a3 737a 	sub.w	r3, r3, #1000	@ 0x3e8
 8000976:	4a2e      	ldr	r2, [pc, #184]	@ (8000a30 <LCD_Test+0x1ac>)
 8000978:	6812      	ldr	r2, [r2, #0]
 800097a:	fb02 f303 	mul.w	r3, r2, r3
 800097e:	4a32      	ldr	r2, [pc, #200]	@ (8000a48 <LCD_Test+0x1c4>)
 8000980:	fba2 2303 	umull	r2, r3, r2, r3
 8000984:	09db      	lsrs	r3, r3, #7
 8000986:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800098a:	9201      	str	r2, [sp, #4]
 800098c:	2203      	movs	r2, #3
 800098e:	9200      	str	r2, [sp, #0]
 8000990:	462a      	mov	r2, r5
 8000992:	2100      	movs	r1, #0
 8000994:	4828      	ldr	r0, [pc, #160]	@ (8000a38 <LCD_Test+0x1b4>)
 8000996:	47a0      	blx	r4
 8000998:	e008      	b.n	80009ac <LCD_Test+0x128>
		}
		else if (get_tick() - tick > 3000)
 800099a:	f002 feab 	bl	80036f4 <HAL_GetTick>
 800099e:	4602      	mov	r2, r0
 80009a0:	697b      	ldr	r3, [r7, #20]
 80009a2:	1ad3      	subs	r3, r2, r3
 80009a4:	f640 32b8 	movw	r2, #3000	@ 0xbb8
 80009a8:	4293      	cmp	r3, r2
 80009aa:	d808      	bhi.n	80009be <LCD_Test+0x13a>
	while (HAL_GPIO_ReadPin(KEY_GPIO_Port, KEY_Pin) != GPIO_PIN_SET)
 80009ac:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80009b0:	4828      	ldr	r0, [pc, #160]	@ (8000a54 <LCD_Test+0x1d0>)
 80009b2:	f004 fec5 	bl	8005740 <HAL_GPIO_ReadPin>
 80009b6:	4603      	mov	r3, r0
 80009b8:	2b01      	cmp	r3, #1
 80009ba:	d18c      	bne.n	80008d6 <LCD_Test+0x52>
 80009bc:	e004      	b.n	80009c8 <LCD_Test+0x144>
			break;
 80009be:	bf00      	nop
	}
	while (HAL_GPIO_ReadPin(KEY_GPIO_Port, KEY_Pin) == GPIO_PIN_SET)
 80009c0:	e002      	b.n	80009c8 <LCD_Test+0x144>
	{
		delay_ms(10);
 80009c2:	200a      	movs	r0, #10
 80009c4:	f002 fea2 	bl	800370c <HAL_Delay>
	while (HAL_GPIO_ReadPin(KEY_GPIO_Port, KEY_Pin) == GPIO_PIN_SET)
 80009c8:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80009cc:	4821      	ldr	r0, [pc, #132]	@ (8000a54 <LCD_Test+0x1d0>)
 80009ce:	f004 feb7 	bl	8005740 <HAL_GPIO_ReadPin>
 80009d2:	4603      	mov	r3, r0
 80009d4:	2b01      	cmp	r3, #1
 80009d6:	d0f4      	beq.n	80009c2 <LCD_Test+0x13e>
	}
	LCD_Light(0, 300);
 80009d8:	f44f 7196 	mov.w	r1, #300	@ 0x12c
 80009dc:	2000      	movs	r0, #0
 80009de:	f000 f859 	bl	8000a94 <LCD_Light>

	ST7735_LCD_Driver.FillRect(&st7735_pObj, 0, 0, ST7735Ctx.Width,ST7735Ctx.Height, BLACK);
 80009e2:	4b16      	ldr	r3, [pc, #88]	@ (8000a3c <LCD_Test+0x1b8>)
 80009e4:	6b9c      	ldr	r4, [r3, #56]	@ 0x38
 80009e6:	4b12      	ldr	r3, [pc, #72]	@ (8000a30 <LCD_Test+0x1ac>)
 80009e8:	681a      	ldr	r2, [r3, #0]
 80009ea:	4b11      	ldr	r3, [pc, #68]	@ (8000a30 <LCD_Test+0x1ac>)
 80009ec:	685b      	ldr	r3, [r3, #4]
 80009ee:	2100      	movs	r1, #0
 80009f0:	9101      	str	r1, [sp, #4]
 80009f2:	9300      	str	r3, [sp, #0]
 80009f4:	4613      	mov	r3, r2
 80009f6:	2200      	movs	r2, #0
 80009f8:	2100      	movs	r1, #0
 80009fa:	480f      	ldr	r0, [pc, #60]	@ (8000a38 <LCD_Test+0x1b4>)
 80009fc:	47a0      	blx	r4

	sprintf((char *)&text, "CONVERSOR A/D");
 80009fe:	463b      	mov	r3, r7
 8000a00:	4915      	ldr	r1, [pc, #84]	@ (8000a58 <LCD_Test+0x1d4>)
 8000a02:	4618      	mov	r0, r3
 8000a04:	f00f ff0e 	bl	8010824 <siprintf>
	LCD_ShowString(4, 4, ST7735Ctx.Width, 16, 16, text);
 8000a08:	4b09      	ldr	r3, [pc, #36]	@ (8000a30 <LCD_Test+0x1ac>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	b29a      	uxth	r2, r3
 8000a0e:	463b      	mov	r3, r7
 8000a10:	9301      	str	r3, [sp, #4]
 8000a12:	2310      	movs	r3, #16
 8000a14:	9300      	str	r3, [sp, #0]
 8000a16:	2310      	movs	r3, #16
 8000a18:	2104      	movs	r1, #4
 8000a1a:	2004      	movs	r0, #4
 8000a1c:	f000 fac2 	bl	8000fa4 <LCD_ShowString>
	//sprintf((char *)&text, "STM32H7xx 0x%X", HAL_GetDEVID());
	//LCD_ShowString(4, 22, ST7735Ctx.Width, 16, 16, text);
	//sprintf((char *)&text, "LCD ID:0x%X", st7735_id);
	//LCD_ShowString(4, 40, ST7735Ctx.Width, 16, 16, text);

	LCD_Light(100, 200);
 8000a20:	21c8      	movs	r1, #200	@ 0xc8
 8000a22:	2064      	movs	r0, #100	@ 0x64
 8000a24:	f000 f836 	bl	8000a94 <LCD_Light>
}
 8000a28:	bf00      	nop
 8000a2a:	3718      	adds	r7, #24
 8000a2c:	46bd      	mov	sp, r7
 8000a2e:	bdb0      	pop	{r4, r5, r7, pc}
 8000a30:	240003e0 	.word	0x240003e0
 8000a34:	24000000 	.word	0x24000000
 8000a38:	240002c8 	.word	0x240002c8
 8000a3c:	24000024 	.word	0x24000024
 8000a40:	24000300 	.word	0x24000300
 8000a44:	08011238 	.word	0x08011238
 8000a48:	10624dd3 	.word	0x10624dd3
 8000a4c:	cccccccd 	.word	0xcccccccd
 8000a50:	0801117c 	.word	0x0801117c
 8000a54:	58020800 	.word	0x58020800
 8000a58:	08011184 	.word	0x08011184

08000a5c <LCD_SetBrightness>:

void LCD_SetBrightness(uint32_t Brightness)
{
 8000a5c:	b480      	push	{r7}
 8000a5e:	b083      	sub	sp, #12
 8000a60:	af00      	add	r7, sp, #0
 8000a62:	6078      	str	r0, [r7, #4]
	__HAL_TIM_SetCompare(LCD_Brightness_timer, LCD_Brightness_channel, Brightness);
 8000a64:	4b04      	ldr	r3, [pc, #16]	@ (8000a78 <LCD_SetBrightness+0x1c>)
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	687a      	ldr	r2, [r7, #4]
 8000a6a:	639a      	str	r2, [r3, #56]	@ 0x38
}
 8000a6c:	bf00      	nop
 8000a6e:	370c      	adds	r7, #12
 8000a70:	46bd      	mov	sp, r7
 8000a72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a76:	4770      	bx	lr
 8000a78:	240008f4 	.word	0x240008f4

08000a7c <LCD_GetBrightness>:

uint32_t LCD_GetBrightness(void)
{
 8000a7c:	b480      	push	{r7}
 8000a7e:	af00      	add	r7, sp, #0
		return __HAL_TIM_GetCompare(LCD_Brightness_timer, LCD_Brightness_channel);
 8000a80:	4b03      	ldr	r3, [pc, #12]	@ (8000a90 <LCD_GetBrightness+0x14>)
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
}
 8000a86:	4618      	mov	r0, r3
 8000a88:	46bd      	mov	sp, r7
 8000a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a8e:	4770      	bx	lr
 8000a90:	240008f4 	.word	0x240008f4

08000a94 <LCD_Light>:

// ��Ļ�𽥱������߱䰵
// Brightness_Dis: Ŀ��ֵ
// time: �ﵽĿ��ֵ��ʱ��,��λ: ms
void LCD_Light(uint32_t Brightness_Dis,uint32_t time)
{
 8000a94:	b580      	push	{r7, lr}
 8000a96:	b08a      	sub	sp, #40	@ 0x28
 8000a98:	af00      	add	r7, sp, #0
 8000a9a:	6078      	str	r0, [r7, #4]
 8000a9c:	6039      	str	r1, [r7, #0]
	uint32_t Brightness_Now;
	uint32_t time_now;
	float temp1,temp2;
	float k,set;
	
	Brightness_Now = LCD_GetBrightness();
 8000a9e:	f7ff ffed 	bl	8000a7c <LCD_GetBrightness>
 8000aa2:	6278      	str	r0, [r7, #36]	@ 0x24
	time_now = 0;
 8000aa4:	2300      	movs	r3, #0
 8000aa6:	623b      	str	r3, [r7, #32]
	if(Brightness_Now == Brightness_Dis)
 8000aa8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000aaa:	687b      	ldr	r3, [r7, #4]
 8000aac:	429a      	cmp	r2, r3
 8000aae:	d05e      	beq.n	8000b6e <LCD_Light+0xda>
		return;
	
	if(time == time_now)
 8000ab0:	683a      	ldr	r2, [r7, #0]
 8000ab2:	6a3b      	ldr	r3, [r7, #32]
 8000ab4:	429a      	cmp	r2, r3
 8000ab6:	d05c      	beq.n	8000b72 <LCD_Light+0xde>
		return;
	
	temp1 = Brightness_Now;
 8000ab8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000aba:	ee07 3a90 	vmov	s15, r3
 8000abe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ac2:	edc7 7a07 	vstr	s15, [r7, #28]
	temp1 = temp1 - Brightness_Dis;
 8000ac6:	687b      	ldr	r3, [r7, #4]
 8000ac8:	ee07 3a90 	vmov	s15, r3
 8000acc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ad0:	ed97 7a07 	vldr	s14, [r7, #28]
 8000ad4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000ad8:	edc7 7a07 	vstr	s15, [r7, #28]
	temp2 = time_now;
 8000adc:	6a3b      	ldr	r3, [r7, #32]
 8000ade:	ee07 3a90 	vmov	s15, r3
 8000ae2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000ae6:	edc7 7a06 	vstr	s15, [r7, #24]
	temp2 = temp2 - time;
 8000aea:	683b      	ldr	r3, [r7, #0]
 8000aec:	ee07 3a90 	vmov	s15, r3
 8000af0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000af4:	ed97 7a06 	vldr	s14, [r7, #24]
 8000af8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000afc:	edc7 7a06 	vstr	s15, [r7, #24]
	
	k = temp1 / temp2;
 8000b00:	edd7 6a07 	vldr	s13, [r7, #28]
 8000b04:	ed97 7a06 	vldr	s14, [r7, #24]
 8000b08:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000b0c:	edc7 7a05 	vstr	s15, [r7, #20]
	
	uint32_t tick=get_tick();
 8000b10:	f002 fdf0 	bl	80036f4 <HAL_GetTick>
 8000b14:	6138      	str	r0, [r7, #16]
	while(1)
	{
		delay_ms(1);
 8000b16:	2001      	movs	r0, #1
 8000b18:	f002 fdf8 	bl	800370c <HAL_Delay>
		
		time_now = get_tick()-tick;
 8000b1c:	f002 fdea 	bl	80036f4 <HAL_GetTick>
 8000b20:	4602      	mov	r2, r0
 8000b22:	693b      	ldr	r3, [r7, #16]
 8000b24:	1ad3      	subs	r3, r2, r3
 8000b26:	623b      	str	r3, [r7, #32]
		
		temp2 = time_now - 0;
 8000b28:	6a3b      	ldr	r3, [r7, #32]
 8000b2a:	ee07 3a90 	vmov	s15, r3
 8000b2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000b32:	edc7 7a06 	vstr	s15, [r7, #24]
		
		set = temp2*k + Brightness_Now;
 8000b36:	ed97 7a06 	vldr	s14, [r7, #24]
 8000b3a:	edd7 7a05 	vldr	s15, [r7, #20]
 8000b3e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000b42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000b44:	ee07 3a90 	vmov	s15, r3
 8000b48:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000b4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000b50:	edc7 7a03 	vstr	s15, [r7, #12]
		
		LCD_SetBrightness((uint32_t)set);
 8000b54:	edd7 7a03 	vldr	s15, [r7, #12]
 8000b58:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8000b5c:	ee17 0a90 	vmov	r0, s15
 8000b60:	f7ff ff7c 	bl	8000a5c <LCD_SetBrightness>
		
		if(time_now >= time) break;
 8000b64:	6a3a      	ldr	r2, [r7, #32]
 8000b66:	683b      	ldr	r3, [r7, #0]
 8000b68:	429a      	cmp	r2, r3
 8000b6a:	d204      	bcs.n	8000b76 <LCD_Light+0xe2>
		delay_ms(1);
 8000b6c:	e7d3      	b.n	8000b16 <LCD_Light+0x82>
		return;
 8000b6e:	bf00      	nop
 8000b70:	e002      	b.n	8000b78 <LCD_Light+0xe4>
		return;
 8000b72:	bf00      	nop
 8000b74:	e000      	b.n	8000b78 <LCD_Light+0xe4>
		if(time_now >= time) break;
 8000b76:	bf00      	nop
		
	}
}
 8000b78:	3728      	adds	r7, #40	@ 0x28
 8000b7a:	46bd      	mov	sp, r7
 8000b7c:	bd80      	pop	{r7, pc}
	...

08000b80 <LCD_ShowChar>:
//num:Caracteres a serem exibidos: " "--->"~"
//size:tamanho 12/16
//mode:modo de superposição(1)ou modo não de superposição(0)

void LCD_ShowChar(uint16_t x,uint16_t y,uint8_t num,uint8_t size,uint8_t mode)
{  							  
 8000b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b84:	b097      	sub	sp, #92	@ 0x5c
 8000b86:	af02      	add	r7, sp, #8
 8000b88:	461e      	mov	r6, r3
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	85fb      	strh	r3, [r7, #46]	@ 0x2e
 8000b8e:	460b      	mov	r3, r1
 8000b90:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 8000b92:	4613      	mov	r3, r2
 8000b94:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8000b98:	4633      	mov	r3, r6
 8000b9a:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 8000b9e:	466b      	mov	r3, sp
 8000ba0:	607b      	str	r3, [r7, #4]
  uint8_t temp,t1,t;
	uint16_t y0=y;
 8000ba2:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8000ba4:	f8a7 3048 	strh.w	r3, [r7, #72]	@ 0x48
	uint16_t x0=x;
 8000ba8:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8000baa:	f8a7 3046 	strh.w	r3, [r7, #70]	@ 0x46
	uint16_t colortemp=POINT_COLOR; 
 8000bae:	4baf      	ldr	r3, [pc, #700]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000bb0:	881b      	ldrh	r3, [r3, #0]
 8000bb2:	f8a7 3044 	strh.w	r3, [r7, #68]	@ 0x44
  uint32_t h,w;
	
	uint16_t write[size][size==12?6:8];
 8000bb6:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000bba:	2b0c      	cmp	r3, #12
 8000bbc:	d101      	bne.n	8000bc2 <LCD_ShowChar+0x42>
 8000bbe:	2106      	movs	r1, #6
 8000bc0:	e000      	b.n	8000bc4 <LCD_ShowChar+0x44>
 8000bc2:	2108      	movs	r1, #8
 8000bc4:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 8000bc8:	1e4b      	subs	r3, r1, #1
 8000bca:	643b      	str	r3, [r7, #64]	@ 0x40
 8000bcc:	460a      	mov	r2, r1
 8000bce:	2300      	movs	r3, #0
 8000bd0:	4692      	mov	sl, r2
 8000bd2:	469b      	mov	fp, r3
 8000bd4:	f04f 0200 	mov.w	r2, #0
 8000bd8:	f04f 0300 	mov.w	r3, #0
 8000bdc:	ea4f 130b 	mov.w	r3, fp, lsl #4
 8000be0:	ea43 731a 	orr.w	r3, r3, sl, lsr #28
 8000be4:	ea4f 120a 	mov.w	r2, sl, lsl #4
 8000be8:	460b      	mov	r3, r1
 8000bea:	005e      	lsls	r6, r3, #1
 8000bec:	4603      	mov	r3, r0
 8000bee:	3b01      	subs	r3, #1
 8000bf0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8000bf2:	460a      	mov	r2, r1
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	61ba      	str	r2, [r7, #24]
 8000bf8:	61fb      	str	r3, [r7, #28]
 8000bfa:	b2c3      	uxtb	r3, r0
 8000bfc:	2200      	movs	r2, #0
 8000bfe:	623b      	str	r3, [r7, #32]
 8000c00:	627a      	str	r2, [r7, #36]	@ 0x24
 8000c02:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8000c06:	465b      	mov	r3, fp
 8000c08:	6a3a      	ldr	r2, [r7, #32]
 8000c0a:	fb02 fc03 	mul.w	ip, r2, r3
 8000c0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c10:	4652      	mov	r2, sl
 8000c12:	fb02 f303 	mul.w	r3, r2, r3
 8000c16:	449c      	add	ip, r3
 8000c18:	4652      	mov	r2, sl
 8000c1a:	6a3b      	ldr	r3, [r7, #32]
 8000c1c:	fba2 8903 	umull	r8, r9, r2, r3
 8000c20:	eb0c 0309 	add.w	r3, ip, r9
 8000c24:	4699      	mov	r9, r3
 8000c26:	f04f 0200 	mov.w	r2, #0
 8000c2a:	f04f 0300 	mov.w	r3, #0
 8000c2e:	ea4f 1309 	mov.w	r3, r9, lsl #4
 8000c32:	ea43 7318 	orr.w	r3, r3, r8, lsr #28
 8000c36:	ea4f 1208 	mov.w	r2, r8, lsl #4
 8000c3a:	460a      	mov	r2, r1
 8000c3c:	2300      	movs	r3, #0
 8000c3e:	613a      	str	r2, [r7, #16]
 8000c40:	617b      	str	r3, [r7, #20]
 8000c42:	b2c3      	uxtb	r3, r0
 8000c44:	2200      	movs	r2, #0
 8000c46:	60bb      	str	r3, [r7, #8]
 8000c48:	60fa      	str	r2, [r7, #12]
 8000c4a:	e9d7 8904 	ldrd	r8, r9, [r7, #16]
 8000c4e:	464b      	mov	r3, r9
 8000c50:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8000c54:	4652      	mov	r2, sl
 8000c56:	fb02 fc03 	mul.w	ip, r2, r3
 8000c5a:	465b      	mov	r3, fp
 8000c5c:	4642      	mov	r2, r8
 8000c5e:	fb02 f303 	mul.w	r3, r2, r3
 8000c62:	449c      	add	ip, r3
 8000c64:	4642      	mov	r2, r8
 8000c66:	4653      	mov	r3, sl
 8000c68:	fba2 4503 	umull	r4, r5, r2, r3
 8000c6c:	eb0c 0305 	add.w	r3, ip, r5
 8000c70:	461d      	mov	r5, r3
 8000c72:	f04f 0200 	mov.w	r2, #0
 8000c76:	f04f 0300 	mov.w	r3, #0
 8000c7a:	012b      	lsls	r3, r5, #4
 8000c7c:	ea43 7314 	orr.w	r3, r3, r4, lsr #28
 8000c80:	0122      	lsls	r2, r4, #4
 8000c82:	460b      	mov	r3, r1
 8000c84:	4602      	mov	r2, r0
 8000c86:	fb02 f303 	mul.w	r3, r2, r3
 8000c8a:	005b      	lsls	r3, r3, #1
 8000c8c:	3307      	adds	r3, #7
 8000c8e:	08db      	lsrs	r3, r3, #3
 8000c90:	00db      	lsls	r3, r3, #3
 8000c92:	ebad 0d03 	sub.w	sp, sp, r3
 8000c96:	ab02      	add	r3, sp, #8
 8000c98:	3301      	adds	r3, #1
 8000c9a:	085b      	lsrs	r3, r3, #1
 8000c9c:	005b      	lsls	r3, r3, #1
 8000c9e:	63bb      	str	r3, [r7, #56]	@ 0x38
	uint16_t count;
	
  ST7735_GetXSize(&st7735_pObj,&w);
 8000ca0:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000ca4:	4619      	mov	r1, r3
 8000ca6:	4872      	ldr	r0, [pc, #456]	@ (8000e70 <LCD_ShowChar+0x2f0>)
 8000ca8:	f001 ffd8 	bl	8002c5c <ST7735_GetXSize>
	ST7735_GetYSize(&st7735_pObj,&h);
 8000cac:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8000cb0:	4619      	mov	r1, r3
 8000cb2:	486f      	ldr	r0, [pc, #444]	@ (8000e70 <LCD_ShowChar+0x2f0>)
 8000cb4:	f001 ffe4 	bl	8002c80 <ST7735_GetYSize>
	
	//Define a janela
	num=num-' ';//Obtém o valor do deslocamento
 8000cb8:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8000cbc:	3b20      	subs	r3, #32
 8000cbe:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
	count = 0;
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
	
	if(!mode) //Modo sem sobreposição
 8000cc8:	f897 3078 	ldrb.w	r3, [r7, #120]	@ 0x78
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	f040 80a7 	bne.w	8000e20 <LCD_ShowChar+0x2a0>
	{
		for(t=0;t<size;t++)
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8000cd8:	e09a      	b.n	8000e10 <LCD_ShowChar+0x290>
		{   
			if(size==12)temp=asc2_1206[num][t];  //Usar fonte 1206
 8000cda:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000cde:	2b0c      	cmp	r3, #12
 8000ce0:	d10e      	bne.n	8000d00 <LCD_ShowChar+0x180>
 8000ce2:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 8000ce6:	f897 104d 	ldrb.w	r1, [r7, #77]	@ 0x4d
 8000cea:	4862      	ldr	r0, [pc, #392]	@ (8000e74 <LCD_ShowChar+0x2f4>)
 8000cec:	4613      	mov	r3, r2
 8000cee:	005b      	lsls	r3, r3, #1
 8000cf0:	4413      	add	r3, r2
 8000cf2:	009b      	lsls	r3, r3, #2
 8000cf4:	4403      	add	r3, r0
 8000cf6:	440b      	add	r3, r1
 8000cf8:	781b      	ldrb	r3, [r3, #0]
 8000cfa:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8000cfe:	e00a      	b.n	8000d16 <LCD_ShowChar+0x196>
			else temp=asc2_1608[num][t];		 //Usar fonte 1608
 8000d00:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 8000d04:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000d08:	495b      	ldr	r1, [pc, #364]	@ (8000e78 <LCD_ShowChar+0x2f8>)
 8000d0a:	0112      	lsls	r2, r2, #4
 8000d0c:	440a      	add	r2, r1
 8000d0e:	4413      	add	r3, r2
 8000d10:	781b      	ldrb	r3, [r3, #0]
 8000d12:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
			
			for(t1=0;t1<8;t1++)
 8000d16:	2300      	movs	r3, #0
 8000d18:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 8000d1c:	e06d      	b.n	8000dfa <LCD_ShowChar+0x27a>
			{			    
				if(temp&0x80)
 8000d1e:	f997 304f 	ldrsb.w	r3, [r7, #79]	@ 0x4f
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	da0e      	bge.n	8000d44 <LCD_ShowChar+0x1c4>
					POINT_COLOR=(colortemp&0xFF)<<8|colortemp>>8;
 8000d26:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000d2a:	021b      	lsls	r3, r3, #8
 8000d2c:	b21a      	sxth	r2, r3
 8000d2e:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000d32:	0a1b      	lsrs	r3, r3, #8
 8000d34:	b29b      	uxth	r3, r3
 8000d36:	b21b      	sxth	r3, r3
 8000d38:	4313      	orrs	r3, r2
 8000d3a:	b21b      	sxth	r3, r3
 8000d3c:	b29a      	uxth	r2, r3
 8000d3e:	4b4b      	ldr	r3, [pc, #300]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000d40:	801a      	strh	r2, [r3, #0]
 8000d42:	e00d      	b.n	8000d60 <LCD_ShowChar+0x1e0>
				else 
					POINT_COLOR=(BACK_COLOR&0xFF)<<8|BACK_COLOR>>8;
 8000d44:	4b4d      	ldr	r3, [pc, #308]	@ (8000e7c <LCD_ShowChar+0x2fc>)
 8000d46:	881b      	ldrh	r3, [r3, #0]
 8000d48:	021b      	lsls	r3, r3, #8
 8000d4a:	b21a      	sxth	r2, r3
 8000d4c:	4b4b      	ldr	r3, [pc, #300]	@ (8000e7c <LCD_ShowChar+0x2fc>)
 8000d4e:	881b      	ldrh	r3, [r3, #0]
 8000d50:	0a1b      	lsrs	r3, r3, #8
 8000d52:	b29b      	uxth	r3, r3
 8000d54:	b21b      	sxth	r3, r3
 8000d56:	4313      	orrs	r3, r2
 8000d58:	b21b      	sxth	r3, r3
 8000d5a:	b29a      	uxth	r2, r3
 8000d5c:	4b43      	ldr	r3, [pc, #268]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000d5e:	801a      	strh	r2, [r3, #0]
				
				write[count][t/2]=POINT_COLOR;
 8000d60:	0872      	lsrs	r2, r6, #1
 8000d62:	f8b7 104a 	ldrh.w	r1, [r7, #74]	@ 0x4a
 8000d66:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000d6a:	085b      	lsrs	r3, r3, #1
 8000d6c:	b2db      	uxtb	r3, r3
 8000d6e:	461c      	mov	r4, r3
 8000d70:	4b3e      	ldr	r3, [pc, #248]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000d72:	8818      	ldrh	r0, [r3, #0]
 8000d74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000d76:	fb01 f202 	mul.w	r2, r1, r2
 8000d7a:	4422      	add	r2, r4
 8000d7c:	4601      	mov	r1, r0
 8000d7e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
				count ++;
 8000d82:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8000d86:	3301      	adds	r3, #1
 8000d88:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
				if(count >= size) count =0;
 8000d8c:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000d90:	b29b      	uxth	r3, r3
 8000d92:	f8b7 204a 	ldrh.w	r2, [r7, #74]	@ 0x4a
 8000d96:	429a      	cmp	r2, r3
 8000d98:	d302      	bcc.n	8000da0 <LCD_ShowChar+0x220>
 8000d9a:	2300      	movs	r3, #0
 8000d9c:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
				
				temp<<=1;
 8000da0:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8000da4:	005b      	lsls	r3, r3, #1
 8000da6:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
				y++;
 8000daa:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8000dac:	3301      	adds	r3, #1
 8000dae:	85bb      	strh	r3, [r7, #44]	@ 0x2c
				if(y>=h){POINT_COLOR=colortemp;return;}//Superárea
 8000db0:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 8000db2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000db4:	429a      	cmp	r2, r3
 8000db6:	d304      	bcc.n	8000dc2 <LCD_ShowChar+0x242>
 8000db8:	4a2c      	ldr	r2, [pc, #176]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000dba:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000dbe:	8013      	strh	r3, [r2, #0]
 8000dc0:	e0e6      	b.n	8000f90 <LCD_ShowChar+0x410>
				if((y-y0)==size)
 8000dc2:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 8000dc4:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000dc8:	1ad2      	subs	r2, r2, r3
 8000dca:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	d10e      	bne.n	8000df0 <LCD_ShowChar+0x270>
				{
					y=y0;
 8000dd2:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000dd6:	85bb      	strh	r3, [r7, #44]	@ 0x2c
					x++;
 8000dd8:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8000dda:	3301      	adds	r3, #1
 8000ddc:	85fb      	strh	r3, [r7, #46]	@ 0x2e
					if(x>=w){POINT_COLOR=colortemp;return;}//Superárea
 8000dde:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 8000de0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000de2:	429a      	cmp	r2, r3
 8000de4:	d30e      	bcc.n	8000e04 <LCD_ShowChar+0x284>
 8000de6:	4a21      	ldr	r2, [pc, #132]	@ (8000e6c <LCD_ShowChar+0x2ec>)
 8000de8:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000dec:	8013      	strh	r3, [r2, #0]
 8000dee:	e0cf      	b.n	8000f90 <LCD_ShowChar+0x410>
			for(t1=0;t1<8;t1++)
 8000df0:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8000df4:	3301      	adds	r3, #1
 8000df6:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 8000dfa:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8000dfe:	2b07      	cmp	r3, #7
 8000e00:	d98d      	bls.n	8000d1e <LCD_ShowChar+0x19e>
 8000e02:	e000      	b.n	8000e06 <LCD_ShowChar+0x286>
					break;
 8000e04:	bf00      	nop
		for(t=0;t<size;t++)
 8000e06:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000e0a:	3301      	adds	r3, #1
 8000e0c:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8000e10:	f897 204d 	ldrb.w	r2, [r7, #77]	@ 0x4d
 8000e14:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000e18:	429a      	cmp	r2, r3
 8000e1a:	f4ff af5e 	bcc.w	8000cda <LCD_ShowChar+0x15a>
 8000e1e:	e09c      	b.n	8000f5a <LCD_ShowChar+0x3da>
			}
		}
	}
	else//Método de sobreposição
	{
		for(t=0;t<size;t++)
 8000e20:	2300      	movs	r3, #0
 8000e22:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8000e26:	e091      	b.n	8000f4c <LCD_ShowChar+0x3cc>
		{   
			if(size==12)temp=asc2_1206[num][t];  //Usar fonte 1206
 8000e28:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000e2c:	2b0c      	cmp	r3, #12
 8000e2e:	d10e      	bne.n	8000e4e <LCD_ShowChar+0x2ce>
 8000e30:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 8000e34:	f897 104d 	ldrb.w	r1, [r7, #77]	@ 0x4d
 8000e38:	480e      	ldr	r0, [pc, #56]	@ (8000e74 <LCD_ShowChar+0x2f4>)
 8000e3a:	4613      	mov	r3, r2
 8000e3c:	005b      	lsls	r3, r3, #1
 8000e3e:	4413      	add	r3, r2
 8000e40:	009b      	lsls	r3, r3, #2
 8000e42:	4403      	add	r3, r0
 8000e44:	440b      	add	r3, r1
 8000e46:	781b      	ldrb	r3, [r3, #0]
 8000e48:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
 8000e4c:	e00a      	b.n	8000e64 <LCD_ShowChar+0x2e4>
			else temp=asc2_1608[num][t];		 //Usar fonte 1608
 8000e4e:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 8000e52:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000e56:	4908      	ldr	r1, [pc, #32]	@ (8000e78 <LCD_ShowChar+0x2f8>)
 8000e58:	0112      	lsls	r2, r2, #4
 8000e5a:	440a      	add	r2, r1
 8000e5c:	4413      	add	r3, r2
 8000e5e:	781b      	ldrb	r3, [r3, #0]
 8000e60:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
			for(t1=0;t1<8;t1++)
 8000e64:	2300      	movs	r3, #0
 8000e66:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 8000e6a:	e064      	b.n	8000f36 <LCD_ShowChar+0x3b6>
 8000e6c:	24000020 	.word	0x24000020
 8000e70:	240002c8 	.word	0x240002c8
 8000e74:	080176c4 	.word	0x080176c4
 8000e78:	08017b38 	.word	0x08017b38
 8000e7c:	24000304 	.word	0x24000304
			{			    
				if(temp&0x80)
 8000e80:	f997 304f 	ldrsb.w	r3, [r7, #79]	@ 0x4f
 8000e84:	2b00      	cmp	r3, #0
 8000e86:	da1a      	bge.n	8000ebe <LCD_ShowChar+0x33e>
					write[count][t/2]=(POINT_COLOR&0xFF)<<8|POINT_COLOR>>8;
 8000e88:	4b44      	ldr	r3, [pc, #272]	@ (8000f9c <LCD_ShowChar+0x41c>)
 8000e8a:	881b      	ldrh	r3, [r3, #0]
 8000e8c:	021b      	lsls	r3, r3, #8
 8000e8e:	b21a      	sxth	r2, r3
 8000e90:	4b42      	ldr	r3, [pc, #264]	@ (8000f9c <LCD_ShowChar+0x41c>)
 8000e92:	881b      	ldrh	r3, [r3, #0]
 8000e94:	0a1b      	lsrs	r3, r3, #8
 8000e96:	b29b      	uxth	r3, r3
 8000e98:	b21b      	sxth	r3, r3
 8000e9a:	4313      	orrs	r3, r2
 8000e9c:	b218      	sxth	r0, r3
 8000e9e:	0872      	lsrs	r2, r6, #1
 8000ea0:	f8b7 104a 	ldrh.w	r1, [r7, #74]	@ 0x4a
 8000ea4:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000ea8:	085b      	lsrs	r3, r3, #1
 8000eaa:	b2db      	uxtb	r3, r3
 8000eac:	461c      	mov	r4, r3
 8000eae:	b280      	uxth	r0, r0
 8000eb0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000eb2:	fb01 f202 	mul.w	r2, r1, r2
 8000eb6:	4422      	add	r2, r4
 8000eb8:	4601      	mov	r1, r0
 8000eba:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
				count ++;
 8000ebe:	f8b7 304a 	ldrh.w	r3, [r7, #74]	@ 0x4a
 8000ec2:	3301      	adds	r3, #1
 8000ec4:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
				if(count >= size) count =0;
 8000ec8:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000ecc:	b29b      	uxth	r3, r3
 8000ece:	f8b7 204a 	ldrh.w	r2, [r7, #74]	@ 0x4a
 8000ed2:	429a      	cmp	r2, r3
 8000ed4:	d302      	bcc.n	8000edc <LCD_ShowChar+0x35c>
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	f8a7 304a 	strh.w	r3, [r7, #74]	@ 0x4a
				
				temp<<=1;
 8000edc:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8000ee0:	005b      	lsls	r3, r3, #1
 8000ee2:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
				y++;
 8000ee6:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8000ee8:	3301      	adds	r3, #1
 8000eea:	85bb      	strh	r3, [r7, #44]	@ 0x2c
				if(y>=h){POINT_COLOR=colortemp;return;}//Superárea
 8000eec:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 8000eee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8000ef0:	429a      	cmp	r2, r3
 8000ef2:	d304      	bcc.n	8000efe <LCD_ShowChar+0x37e>
 8000ef4:	4a29      	ldr	r2, [pc, #164]	@ (8000f9c <LCD_ShowChar+0x41c>)
 8000ef6:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000efa:	8013      	strh	r3, [r2, #0]
 8000efc:	e048      	b.n	8000f90 <LCD_ShowChar+0x410>
				if((y-y0)==size)
 8000efe:	8dba      	ldrh	r2, [r7, #44]	@ 0x2c
 8000f00:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000f04:	1ad2      	subs	r2, r2, r3
 8000f06:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000f0a:	429a      	cmp	r2, r3
 8000f0c:	d10e      	bne.n	8000f2c <LCD_ShowChar+0x3ac>
				{
					y=y0;
 8000f0e:	f8b7 3048 	ldrh.w	r3, [r7, #72]	@ 0x48
 8000f12:	85bb      	strh	r3, [r7, #44]	@ 0x2c
					x++;
 8000f14:	8dfb      	ldrh	r3, [r7, #46]	@ 0x2e
 8000f16:	3301      	adds	r3, #1
 8000f18:	85fb      	strh	r3, [r7, #46]	@ 0x2e
					if(x>=w){POINT_COLOR=colortemp;return;}//Superárea
 8000f1a:	8dfa      	ldrh	r2, [r7, #46]	@ 0x2e
 8000f1c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8000f1e:	429a      	cmp	r2, r3
 8000f20:	d30e      	bcc.n	8000f40 <LCD_ShowChar+0x3c0>
 8000f22:	4a1e      	ldr	r2, [pc, #120]	@ (8000f9c <LCD_ShowChar+0x41c>)
 8000f24:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000f28:	8013      	strh	r3, [r2, #0]
 8000f2a:	e031      	b.n	8000f90 <LCD_ShowChar+0x410>
			for(t1=0;t1<8;t1++)
 8000f2c:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8000f30:	3301      	adds	r3, #1
 8000f32:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
 8000f36:	f897 304e 	ldrb.w	r3, [r7, #78]	@ 0x4e
 8000f3a:	2b07      	cmp	r3, #7
 8000f3c:	d9a0      	bls.n	8000e80 <LCD_ShowChar+0x300>
 8000f3e:	e000      	b.n	8000f42 <LCD_ShowChar+0x3c2>
					break;
 8000f40:	bf00      	nop
		for(t=0;t<size;t++)
 8000f42:	f897 304d 	ldrb.w	r3, [r7, #77]	@ 0x4d
 8000f46:	3301      	adds	r3, #1
 8000f48:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
 8000f4c:	f897 204d 	ldrb.w	r2, [r7, #77]	@ 0x4d
 8000f50:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000f54:	429a      	cmp	r2, r3
 8000f56:	f4ff af67 	bcc.w	8000e28 <LCD_ShowChar+0x2a8>
				}
			}  	 
		}     
	}
	ST7735_FillRGBRect(&st7735_pObj,x0,y0,(uint8_t *)&write,size==12?6:8,size); 
 8000f5a:	f8b7 1046 	ldrh.w	r1, [r7, #70]	@ 0x46
 8000f5e:	f8b7 0048 	ldrh.w	r0, [r7, #72]	@ 0x48
 8000f62:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 8000f66:	2b0c      	cmp	r3, #12
 8000f68:	d101      	bne.n	8000f6e <LCD_ShowChar+0x3ee>
 8000f6a:	2306      	movs	r3, #6
 8000f6c:	e000      	b.n	8000f70 <LCD_ShowChar+0x3f0>
 8000f6e:	2308      	movs	r3, #8
 8000f70:	f897 202a 	ldrb.w	r2, [r7, #42]	@ 0x2a
 8000f74:	9201      	str	r2, [sp, #4]
 8000f76:	9300      	str	r3, [sp, #0]
 8000f78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000f7a:	4602      	mov	r2, r0
 8000f7c:	4808      	ldr	r0, [pc, #32]	@ (8000fa0 <LCD_ShowChar+0x420>)
 8000f7e:	f001 fcbf 	bl	8002900 <ST7735_FillRGBRect>
	POINT_COLOR=colortemp;	    	   	 	  
 8000f82:	4a06      	ldr	r2, [pc, #24]	@ (8000f9c <LCD_ShowChar+0x41c>)
 8000f84:	f8b7 3044 	ldrh.w	r3, [r7, #68]	@ 0x44
 8000f88:	8013      	strh	r3, [r2, #0]
 8000f8a:	f8d7 d004 	ldr.w	sp, [r7, #4]
 8000f8e:	e001      	b.n	8000f94 <LCD_ShowChar+0x414>
				if(y>=h){POINT_COLOR=colortemp;return;}//Superárea
 8000f90:	f8d7 d004 	ldr.w	sp, [r7, #4]
}   
 8000f94:	3754      	adds	r7, #84	@ 0x54
 8000f96:	46bd      	mov	sp, r7
 8000f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f9c:	24000020 	.word	0x24000020
 8000fa0:	240002c8 	.word	0x240002c8

08000fa4 <LCD_ShowString>:
//width,height: tamanho da área
//size: tamanho da fonte
//*p: Endereço inicial da string

void LCD_ShowString(uint16_t x,uint16_t y,uint16_t width,uint16_t height,uint8_t size,uint8_t *p)
{         
 8000fa4:	b590      	push	{r4, r7, lr}
 8000fa6:	b087      	sub	sp, #28
 8000fa8:	af02      	add	r7, sp, #8
 8000faa:	4604      	mov	r4, r0
 8000fac:	4608      	mov	r0, r1
 8000fae:	4611      	mov	r1, r2
 8000fb0:	461a      	mov	r2, r3
 8000fb2:	4623      	mov	r3, r4
 8000fb4:	80fb      	strh	r3, [r7, #6]
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	80bb      	strh	r3, [r7, #4]
 8000fba:	460b      	mov	r3, r1
 8000fbc:	807b      	strh	r3, [r7, #2]
 8000fbe:	4613      	mov	r3, r2
 8000fc0:	803b      	strh	r3, [r7, #0]
	uint8_t x0=x;
 8000fc2:	88fb      	ldrh	r3, [r7, #6]
 8000fc4:	73fb      	strb	r3, [r7, #15]
	width+=x;
 8000fc6:	887a      	ldrh	r2, [r7, #2]
 8000fc8:	88fb      	ldrh	r3, [r7, #6]
 8000fca:	4413      	add	r3, r2
 8000fcc:	807b      	strh	r3, [r7, #2]
	height+=y;
 8000fce:	883a      	ldrh	r2, [r7, #0]
 8000fd0:	88bb      	ldrh	r3, [r7, #4]
 8000fd2:	4413      	add	r3, r2
 8000fd4:	803b      	strh	r3, [r7, #0]
    while((*p<='~')&&(*p>=' ')) //Determina se é um carater ilegal
 8000fd6:	e024      	b.n	8001022 <LCD_ShowString+0x7e>
    {       
        if(x>=width){x=x0;y+=size;}
 8000fd8:	88fa      	ldrh	r2, [r7, #6]
 8000fda:	887b      	ldrh	r3, [r7, #2]
 8000fdc:	429a      	cmp	r2, r3
 8000fde:	d307      	bcc.n	8000ff0 <LCD_ShowString+0x4c>
 8000fe0:	7bfb      	ldrb	r3, [r7, #15]
 8000fe2:	80fb      	strh	r3, [r7, #6]
 8000fe4:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000fe8:	b29a      	uxth	r2, r3
 8000fea:	88bb      	ldrh	r3, [r7, #4]
 8000fec:	4413      	add	r3, r2
 8000fee:	80bb      	strh	r3, [r7, #4]
        if(y>=height)break; //Desistir
 8000ff0:	88ba      	ldrh	r2, [r7, #4]
 8000ff2:	883b      	ldrh	r3, [r7, #0]
 8000ff4:	429a      	cmp	r2, r3
 8000ff6:	d21d      	bcs.n	8001034 <LCD_ShowString+0x90>
        LCD_ShowChar(x,y,*p,size,0);
 8000ff8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000ffa:	781a      	ldrb	r2, [r3, #0]
 8000ffc:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001000:	88b9      	ldrh	r1, [r7, #4]
 8001002:	88f8      	ldrh	r0, [r7, #6]
 8001004:	2400      	movs	r4, #0
 8001006:	9400      	str	r4, [sp, #0]
 8001008:	f7ff fdba 	bl	8000b80 <LCD_ShowChar>
        x+=size/2;
 800100c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001010:	085b      	lsrs	r3, r3, #1
 8001012:	b2db      	uxtb	r3, r3
 8001014:	461a      	mov	r2, r3
 8001016:	88fb      	ldrh	r3, [r7, #6]
 8001018:	4413      	add	r3, r2
 800101a:	80fb      	strh	r3, [r7, #6]
        p++;
 800101c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800101e:	3301      	adds	r3, #1
 8001020:	627b      	str	r3, [r7, #36]	@ 0x24
    while((*p<='~')&&(*p>=' ')) //Determina se é um carater ilegal
 8001022:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001024:	781b      	ldrb	r3, [r3, #0]
 8001026:	2b7e      	cmp	r3, #126	@ 0x7e
 8001028:	d805      	bhi.n	8001036 <LCD_ShowString+0x92>
 800102a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800102c:	781b      	ldrb	r3, [r3, #0]
 800102e:	2b1f      	cmp	r3, #31
 8001030:	d8d2      	bhi.n	8000fd8 <LCD_ShowString+0x34>
    }  
}
 8001032:	e000      	b.n	8001036 <LCD_ShowString+0x92>
        if(y>=height)break; //Desistir
 8001034:	bf00      	nop
}
 8001036:	bf00      	nop
 8001038:	3714      	adds	r7, #20
 800103a:	46bd      	mov	sp, r7
 800103c:	bd90      	pop	{r4, r7, pc}
	...

08001040 <lcd_init>:

static int32_t lcd_init(void)
{
 8001040:	b580      	push	{r7, lr}
 8001042:	b082      	sub	sp, #8
 8001044:	af00      	add	r7, sp, #0
	int32_t result = ST7735_OK;
 8001046:	2300      	movs	r3, #0
 8001048:	607b      	str	r3, [r7, #4]
	HAL_TIMEx_PWMN_Start(LCD_Brightness_timer,LCD_Brightness_channel);
 800104a:	2104      	movs	r1, #4
 800104c:	4803      	ldr	r0, [pc, #12]	@ (800105c <lcd_init+0x1c>)
 800104e:	f00b f947 	bl	800c2e0 <HAL_TIMEx_PWMN_Start>
	return result;
 8001052:	687b      	ldr	r3, [r7, #4]
}
 8001054:	4618      	mov	r0, r3
 8001056:	3708      	adds	r7, #8
 8001058:	46bd      	mov	sp, r7
 800105a:	bd80      	pop	{r7, pc}
 800105c:	240008f4 	.word	0x240008f4

08001060 <lcd_gettick>:

static int32_t lcd_gettick(void)
{
 8001060:	b580      	push	{r7, lr}
 8001062:	af00      	add	r7, sp, #0
	return HAL_GetTick();
 8001064:	f002 fb46 	bl	80036f4 <HAL_GetTick>
 8001068:	4603      	mov	r3, r0
}
 800106a:	4618      	mov	r0, r3
 800106c:	bd80      	pop	{r7, pc}
	...

08001070 <lcd_writereg>:

static int32_t lcd_writereg(uint8_t reg,uint8_t* pdata,uint32_t length)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	b086      	sub	sp, #24
 8001074:	af00      	add	r7, sp, #0
 8001076:	4603      	mov	r3, r0
 8001078:	60b9      	str	r1, [r7, #8]
 800107a:	607a      	str	r2, [r7, #4]
 800107c:	73fb      	strb	r3, [r7, #15]
	int32_t result;
	LCD_CS_RESET;
 800107e:	2200      	movs	r2, #0
 8001080:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001084:	481d      	ldr	r0, [pc, #116]	@ (80010fc <lcd_writereg+0x8c>)
 8001086:	f004 fb73 	bl	8005770 <HAL_GPIO_WritePin>
	LCD_RS_RESET;
 800108a:	2200      	movs	r2, #0
 800108c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001090:	481a      	ldr	r0, [pc, #104]	@ (80010fc <lcd_writereg+0x8c>)
 8001092:	f004 fb6d 	bl	8005770 <HAL_GPIO_WritePin>
	result = HAL_SPI_Transmit(SPI_Drv,&reg,1,100);
 8001096:	f107 010f 	add.w	r1, r7, #15
 800109a:	2364      	movs	r3, #100	@ 0x64
 800109c:	2201      	movs	r2, #1
 800109e:	4818      	ldr	r0, [pc, #96]	@ (8001100 <lcd_writereg+0x90>)
 80010a0:	f009 fc5a 	bl	800a958 <HAL_SPI_Transmit>
 80010a4:	4603      	mov	r3, r0
 80010a6:	617b      	str	r3, [r7, #20]
	LCD_RS_SET;
 80010a8:	2201      	movs	r2, #1
 80010aa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80010ae:	4813      	ldr	r0, [pc, #76]	@ (80010fc <lcd_writereg+0x8c>)
 80010b0:	f004 fb5e 	bl	8005770 <HAL_GPIO_WritePin>
	if(length > 0)
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d00c      	beq.n	80010d4 <lcd_writereg+0x64>
		result += HAL_SPI_Transmit(SPI_Drv,pdata,length,500);
 80010ba:	687b      	ldr	r3, [r7, #4]
 80010bc:	b29a      	uxth	r2, r3
 80010be:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 80010c2:	68b9      	ldr	r1, [r7, #8]
 80010c4:	480e      	ldr	r0, [pc, #56]	@ (8001100 <lcd_writereg+0x90>)
 80010c6:	f009 fc47 	bl	800a958 <HAL_SPI_Transmit>
 80010ca:	4603      	mov	r3, r0
 80010cc:	461a      	mov	r2, r3
 80010ce:	697b      	ldr	r3, [r7, #20]
 80010d0:	4413      	add	r3, r2
 80010d2:	617b      	str	r3, [r7, #20]
	LCD_CS_SET;
 80010d4:	2201      	movs	r2, #1
 80010d6:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80010da:	4808      	ldr	r0, [pc, #32]	@ (80010fc <lcd_writereg+0x8c>)
 80010dc:	f004 fb48 	bl	8005770 <HAL_GPIO_WritePin>
	if(result>0){
 80010e0:	697b      	ldr	r3, [r7, #20]
 80010e2:	2b00      	cmp	r3, #0
 80010e4:	dd03      	ble.n	80010ee <lcd_writereg+0x7e>
		result = -1;}
 80010e6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80010ea:	617b      	str	r3, [r7, #20]
 80010ec:	e001      	b.n	80010f2 <lcd_writereg+0x82>
	else{
		result = 0;}
 80010ee:	2300      	movs	r3, #0
 80010f0:	617b      	str	r3, [r7, #20]
	return result;
 80010f2:	697b      	ldr	r3, [r7, #20]
}
 80010f4:	4618      	mov	r0, r3
 80010f6:	3718      	adds	r7, #24
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bd80      	pop	{r7, pc}
 80010fc:	58021000 	.word	0x58021000
 8001100:	24000358 	.word	0x24000358

08001104 <lcd_readreg>:

static int32_t lcd_readreg(uint8_t reg,uint8_t* pdata)
{
 8001104:	b580      	push	{r7, lr}
 8001106:	b084      	sub	sp, #16
 8001108:	af00      	add	r7, sp, #0
 800110a:	4603      	mov	r3, r0
 800110c:	6039      	str	r1, [r7, #0]
 800110e:	71fb      	strb	r3, [r7, #7]
	int32_t result;
	LCD_CS_RESET;
 8001110:	2200      	movs	r2, #0
 8001112:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001116:	481b      	ldr	r0, [pc, #108]	@ (8001184 <lcd_readreg+0x80>)
 8001118:	f004 fb2a 	bl	8005770 <HAL_GPIO_WritePin>
	LCD_RS_RESET;
 800111c:	2200      	movs	r2, #0
 800111e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001122:	4818      	ldr	r0, [pc, #96]	@ (8001184 <lcd_readreg+0x80>)
 8001124:	f004 fb24 	bl	8005770 <HAL_GPIO_WritePin>
	
	result = HAL_SPI_Transmit(SPI_Drv,&reg,1,100);
 8001128:	1df9      	adds	r1, r7, #7
 800112a:	2364      	movs	r3, #100	@ 0x64
 800112c:	2201      	movs	r2, #1
 800112e:	4816      	ldr	r0, [pc, #88]	@ (8001188 <lcd_readreg+0x84>)
 8001130:	f009 fc12 	bl	800a958 <HAL_SPI_Transmit>
 8001134:	4603      	mov	r3, r0
 8001136:	60fb      	str	r3, [r7, #12]
	LCD_RS_SET;
 8001138:	2201      	movs	r2, #1
 800113a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800113e:	4811      	ldr	r0, [pc, #68]	@ (8001184 <lcd_readreg+0x80>)
 8001140:	f004 fb16 	bl	8005770 <HAL_GPIO_WritePin>
	result += HAL_SPI_Receive(SPI_Drv,pdata,1,500);
 8001144:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001148:	2201      	movs	r2, #1
 800114a:	6839      	ldr	r1, [r7, #0]
 800114c:	480e      	ldr	r0, [pc, #56]	@ (8001188 <lcd_readreg+0x84>)
 800114e:	f009 fdf1 	bl	800ad34 <HAL_SPI_Receive>
 8001152:	4603      	mov	r3, r0
 8001154:	461a      	mov	r2, r3
 8001156:	68fb      	ldr	r3, [r7, #12]
 8001158:	4413      	add	r3, r2
 800115a:	60fb      	str	r3, [r7, #12]
	LCD_CS_SET;
 800115c:	2201      	movs	r2, #1
 800115e:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001162:	4808      	ldr	r0, [pc, #32]	@ (8001184 <lcd_readreg+0x80>)
 8001164:	f004 fb04 	bl	8005770 <HAL_GPIO_WritePin>
	if(result>0){
 8001168:	68fb      	ldr	r3, [r7, #12]
 800116a:	2b00      	cmp	r3, #0
 800116c:	dd03      	ble.n	8001176 <lcd_readreg+0x72>
		result = -1;}
 800116e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001172:	60fb      	str	r3, [r7, #12]
 8001174:	e001      	b.n	800117a <lcd_readreg+0x76>
	else{
		result = 0;}
 8001176:	2300      	movs	r3, #0
 8001178:	60fb      	str	r3, [r7, #12]
	return result;
 800117a:	68fb      	ldr	r3, [r7, #12]
}
 800117c:	4618      	mov	r0, r3
 800117e:	3710      	adds	r7, #16
 8001180:	46bd      	mov	sp, r7
 8001182:	bd80      	pop	{r7, pc}
 8001184:	58021000 	.word	0x58021000
 8001188:	24000358 	.word	0x24000358

0800118c <lcd_senddata>:

static int32_t lcd_senddata(uint8_t* pdata,uint32_t length)
{
 800118c:	b580      	push	{r7, lr}
 800118e:	b084      	sub	sp, #16
 8001190:	af00      	add	r7, sp, #0
 8001192:	6078      	str	r0, [r7, #4]
 8001194:	6039      	str	r1, [r7, #0]
	int32_t result;
	LCD_CS_RESET;
 8001196:	2200      	movs	r2, #0
 8001198:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 800119c:	480f      	ldr	r0, [pc, #60]	@ (80011dc <lcd_senddata+0x50>)
 800119e:	f004 fae7 	bl	8005770 <HAL_GPIO_WritePin>
	//LCD_RS_SET;
	result =HAL_SPI_Transmit(SPI_Drv,pdata,length,100);
 80011a2:	683b      	ldr	r3, [r7, #0]
 80011a4:	b29a      	uxth	r2, r3
 80011a6:	2364      	movs	r3, #100	@ 0x64
 80011a8:	6879      	ldr	r1, [r7, #4]
 80011aa:	480d      	ldr	r0, [pc, #52]	@ (80011e0 <lcd_senddata+0x54>)
 80011ac:	f009 fbd4 	bl	800a958 <HAL_SPI_Transmit>
 80011b0:	4603      	mov	r3, r0
 80011b2:	60fb      	str	r3, [r7, #12]
	LCD_CS_SET;
 80011b4:	2201      	movs	r2, #1
 80011b6:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011ba:	4808      	ldr	r0, [pc, #32]	@ (80011dc <lcd_senddata+0x50>)
 80011bc:	f004 fad8 	bl	8005770 <HAL_GPIO_WritePin>
	if(result>0){
 80011c0:	68fb      	ldr	r3, [r7, #12]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	dd03      	ble.n	80011ce <lcd_senddata+0x42>
		result = -1;}
 80011c6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80011ca:	60fb      	str	r3, [r7, #12]
 80011cc:	e001      	b.n	80011d2 <lcd_senddata+0x46>
	else{
		result = 0;}
 80011ce:	2300      	movs	r3, #0
 80011d0:	60fb      	str	r3, [r7, #12]
	return result;
 80011d2:	68fb      	ldr	r3, [r7, #12]
}
 80011d4:	4618      	mov	r0, r3
 80011d6:	3710      	adds	r7, #16
 80011d8:	46bd      	mov	sp, r7
 80011da:	bd80      	pop	{r7, pc}
 80011dc:	58021000 	.word	0x58021000
 80011e0:	24000358 	.word	0x24000358

080011e4 <lcd_recvdata>:

static int32_t lcd_recvdata(uint8_t* pdata,uint32_t length)
{
 80011e4:	b580      	push	{r7, lr}
 80011e6:	b084      	sub	sp, #16
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	6078      	str	r0, [r7, #4]
 80011ec:	6039      	str	r1, [r7, #0]
	int32_t result;
	LCD_CS_RESET;
 80011ee:	2200      	movs	r2, #0
 80011f0:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 80011f4:	4810      	ldr	r0, [pc, #64]	@ (8001238 <lcd_recvdata+0x54>)
 80011f6:	f004 fabb 	bl	8005770 <HAL_GPIO_WritePin>
	//LCD_RS_SET;
	result = HAL_SPI_Receive(SPI_Drv,pdata,length,500);
 80011fa:	683b      	ldr	r3, [r7, #0]
 80011fc:	b29a      	uxth	r2, r3
 80011fe:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001202:	6879      	ldr	r1, [r7, #4]
 8001204:	480d      	ldr	r0, [pc, #52]	@ (800123c <lcd_recvdata+0x58>)
 8001206:	f009 fd95 	bl	800ad34 <HAL_SPI_Receive>
 800120a:	4603      	mov	r3, r0
 800120c:	60fb      	str	r3, [r7, #12]
	LCD_CS_SET;
 800120e:	2201      	movs	r2, #1
 8001210:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001214:	4808      	ldr	r0, [pc, #32]	@ (8001238 <lcd_recvdata+0x54>)
 8001216:	f004 faab 	bl	8005770 <HAL_GPIO_WritePin>
	if(result>0){
 800121a:	68fb      	ldr	r3, [r7, #12]
 800121c:	2b00      	cmp	r3, #0
 800121e:	dd03      	ble.n	8001228 <lcd_recvdata+0x44>
		result = -1;}
 8001220:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001224:	60fb      	str	r3, [r7, #12]
 8001226:	e001      	b.n	800122c <lcd_recvdata+0x48>
	else{
		result = 0;}
 8001228:	2300      	movs	r3, #0
 800122a:	60fb      	str	r3, [r7, #12]
	return result;
 800122c:	68fb      	ldr	r3, [r7, #12]
}
 800122e:	4618      	mov	r0, r3
 8001230:	3710      	adds	r7, #16
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}
 8001236:	bf00      	nop
 8001238:	58021000 	.word	0x58021000
 800123c:	24000358 	.word	0x24000358

08001240 <MPU_Config>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

static void MPU_Config(void)
{
 8001240:	b580      	push	{r7, lr}
 8001242:	b084      	sub	sp, #16
 8001244:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8001246:	463b      	mov	r3, r7
 8001248:	2200      	movs	r2, #0
 800124a:	601a      	str	r2, [r3, #0]
 800124c:	605a      	str	r2, [r3, #4]
 800124e:	609a      	str	r2, [r3, #8]
 8001250:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 8001252:	f004 f84d 	bl	80052f0 <HAL_MPU_Disable>

  /* Configure the MPU attributes for the QSPI 256MB without instruction access */
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
 8001256:	2301      	movs	r3, #1
 8001258:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number           = MPU_REGION_NUMBER0;
 800125a:	2300      	movs	r3, #0
 800125c:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress      = QSPI_BASE;
 800125e:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
 8001262:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size             = MPU_REGION_SIZE_256MB;
 8001264:	231b      	movs	r3, #27
 8001266:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8001268:	2300      	movs	r3, #0
 800126a:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.IsBufferable     = MPU_ACCESS_NOT_BUFFERABLE;
 800126c:	2300      	movs	r3, #0
 800126e:	73fb      	strb	r3, [r7, #15]
  MPU_InitStruct.IsCacheable      = MPU_ACCESS_NOT_CACHEABLE;
 8001270:	2300      	movs	r3, #0
 8001272:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsShareable      = MPU_ACCESS_NOT_SHAREABLE;
 8001274:	2300      	movs	r3, #0
 8001276:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
 8001278:	2301      	movs	r3, #1
 800127a:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.TypeExtField     = MPU_TEX_LEVEL1;
 800127c:	2301      	movs	r3, #1
 800127e:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.SubRegionDisable = 0x00;
 8001280:	2300      	movs	r3, #0
 8001282:	727b      	strb	r3, [r7, #9]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001284:	463b      	mov	r3, r7
 8001286:	4618      	mov	r0, r3
 8001288:	f004 f86a 	bl	8005360 <HAL_MPU_ConfigRegion>

  /* Configure the MPU attributes for the QSPI 8MB (QSPI Flash Size) to Cacheable WT */
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
 800128c:	2301      	movs	r3, #1
 800128e:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number           = MPU_REGION_NUMBER1;
 8001290:	2301      	movs	r3, #1
 8001292:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress      = QSPI_BASE;
 8001294:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
 8001298:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size             = MPU_REGION_SIZE_8MB;
 800129a:	2316      	movs	r3, #22
 800129c:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.AccessPermission = MPU_REGION_PRIV_RO;
 800129e:	2305      	movs	r3, #5
 80012a0:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.IsBufferable     = MPU_ACCESS_BUFFERABLE;
 80012a2:	2301      	movs	r3, #1
 80012a4:	73fb      	strb	r3, [r7, #15]
  MPU_InitStruct.IsCacheable      = MPU_ACCESS_CACHEABLE;
 80012a6:	2301      	movs	r3, #1
 80012a8:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsShareable      = MPU_ACCESS_NOT_SHAREABLE;
 80012aa:	2300      	movs	r3, #0
 80012ac:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_ENABLE;
 80012ae:	2300      	movs	r3, #0
 80012b0:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.TypeExtField     = MPU_TEX_LEVEL1;
 80012b2:	2301      	movs	r3, #1
 80012b4:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.SubRegionDisable = 0x00;
 80012b6:	2300      	movs	r3, #0
 80012b8:	727b      	strb	r3, [r7, #9]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80012ba:	463b      	mov	r3, r7
 80012bc:	4618      	mov	r0, r3
 80012be:	f004 f84f 	bl	8005360 <HAL_MPU_ConfigRegion>

  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80012c2:	2004      	movs	r0, #4
 80012c4:	f004 f82c 	bl	8005320 <HAL_MPU_Enable>
}
 80012c8:	bf00      	nop
 80012ca:	3710      	adds	r7, #16
 80012cc:	46bd      	mov	sp, r7
 80012ce:	bd80      	pop	{r7, pc}

080012d0 <CPU_CACHE_Enable>:

static void CPU_CACHE_Enable(void)
{
 80012d0:	b480      	push	{r7}
 80012d2:	b085      	sub	sp, #20
 80012d4:	af00      	add	r7, sp, #0
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 80012d6:	4b34      	ldr	r3, [pc, #208]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 80012d8:	695b      	ldr	r3, [r3, #20]
 80012da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d11b      	bne.n	800131a <CPU_CACHE_Enable+0x4a>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012e2:	f3bf 8f4f 	dsb	sy
}
 80012e6:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012e8:	f3bf 8f6f 	isb	sy
}
 80012ec:	bf00      	nop

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80012ee:	4b2e      	ldr	r3, [pc, #184]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 80012f0:	2200      	movs	r2, #0
 80012f2:	f8c3 2250 	str.w	r2, [r3, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80012f6:	f3bf 8f4f 	dsb	sy
}
 80012fa:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80012fc:	f3bf 8f6f 	isb	sy
}
 8001300:	bf00      	nop
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001302:	4b29      	ldr	r3, [pc, #164]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001304:	695b      	ldr	r3, [r3, #20]
 8001306:	4a28      	ldr	r2, [pc, #160]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001308:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800130c:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800130e:	f3bf 8f4f 	dsb	sy
}
 8001312:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001314:	f3bf 8f6f 	isb	sy
}
 8001318:	e000      	b.n	800131c <CPU_CACHE_Enable+0x4c>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 800131a:	bf00      	nop
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 800131c:	4b22      	ldr	r3, [pc, #136]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 800131e:	695b      	ldr	r3, [r3, #20]
 8001320:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001324:	2b00      	cmp	r3, #0
 8001326:	d138      	bne.n	800139a <CPU_CACHE_Enable+0xca>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8001328:	4b1f      	ldr	r3, [pc, #124]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 800132a:	2200      	movs	r2, #0
 800132c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001330:	f3bf 8f4f 	dsb	sy
}
 8001334:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 8001336:	4b1c      	ldr	r3, [pc, #112]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001338:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800133c:	60fb      	str	r3, [r7, #12]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800133e:	68fb      	ldr	r3, [r7, #12]
 8001340:	0b5b      	lsrs	r3, r3, #13
 8001342:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8001346:	60bb      	str	r3, [r7, #8]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001348:	68fb      	ldr	r3, [r7, #12]
 800134a:	08db      	lsrs	r3, r3, #3
 800134c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001350:	607b      	str	r3, [r7, #4]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001352:	68bb      	ldr	r3, [r7, #8]
 8001354:	015a      	lsls	r2, r3, #5
 8001356:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 800135a:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 800135c:	687a      	ldr	r2, [r7, #4]
 800135e:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001360:	4911      	ldr	r1, [pc, #68]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001362:	4313      	orrs	r3, r2
 8001364:	f8c1 3260 	str.w	r3, [r1, #608]	@ 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	1e5a      	subs	r2, r3, #1
 800136c:	607a      	str	r2, [r7, #4]
 800136e:	2b00      	cmp	r3, #0
 8001370:	d1ef      	bne.n	8001352 <CPU_CACHE_Enable+0x82>
    } while(sets-- != 0U);
 8001372:	68bb      	ldr	r3, [r7, #8]
 8001374:	1e5a      	subs	r2, r3, #1
 8001376:	60ba      	str	r2, [r7, #8]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d1e5      	bne.n	8001348 <CPU_CACHE_Enable+0x78>
  __ASM volatile ("dsb 0xF":::"memory");
 800137c:	f3bf 8f4f 	dsb	sy
}
 8001380:	bf00      	nop
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8001382:	4b09      	ldr	r3, [pc, #36]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001384:	695b      	ldr	r3, [r3, #20]
 8001386:	4a08      	ldr	r2, [pc, #32]	@ (80013a8 <CPU_CACHE_Enable+0xd8>)
 8001388:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800138c:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800138e:	f3bf 8f4f 	dsb	sy
}
 8001392:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001394:	f3bf 8f6f 	isb	sy
}
 8001398:	e000      	b.n	800139c <CPU_CACHE_Enable+0xcc>
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 800139a:	bf00      	nop
  /* Enable I-Cache */
  SCB_EnableICache();

  /* Enable D-Cache */
  SCB_EnableDCache();
}
 800139c:	bf00      	nop
 800139e:	3714      	adds	r7, #20
 80013a0:	46bd      	mov	sp, r7
 80013a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a6:	4770      	bx	lr
 80013a8:	e000ed00 	.word	0xe000ed00

080013ac <LED_Pisca>:

void LED_Pisca(uint32_t delay)
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b082      	sub	sp, #8
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(PE3_GPIO_Port,PE3_Pin,GPIO_PIN_SET);
 80013b4:	2201      	movs	r2, #1
 80013b6:	2108      	movs	r1, #8
 80013b8:	4808      	ldr	r0, [pc, #32]	@ (80013dc <LED_Pisca+0x30>)
 80013ba:	f004 f9d9 	bl	8005770 <HAL_GPIO_WritePin>
	HAL_Delay(delay);
 80013be:	6878      	ldr	r0, [r7, #4]
 80013c0:	f002 f9a4 	bl	800370c <HAL_Delay>
	HAL_GPIO_WritePin(PE3_GPIO_Port,PE3_Pin,GPIO_PIN_RESET);
 80013c4:	2200      	movs	r2, #0
 80013c6:	2108      	movs	r1, #8
 80013c8:	4804      	ldr	r0, [pc, #16]	@ (80013dc <LED_Pisca+0x30>)
 80013ca:	f004 f9d1 	bl	8005770 <HAL_GPIO_WritePin>
	HAL_Delay(delay);
 80013ce:	6878      	ldr	r0, [r7, #4]
 80013d0:	f002 f99c 	bl	800370c <HAL_Delay>
}
 80013d4:	bf00      	nop
 80013d6:	3708      	adds	r7, #8
 80013d8:	46bd      	mov	sp, r7
 80013da:	bd80      	pop	{r7, pc}
 80013dc:	58021000 	.word	0x58021000

080013e0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80013e0:	b580      	push	{r7, lr}
 80013e2:	b09a      	sub	sp, #104	@ 0x68
 80013e4:	af02      	add	r7, sp, #8

  /* USER CODE BEGIN 1 */
  #ifdef W25Qxx
    SCB->VTOR = QSPI_BASE;
  #endif
  MPU_Config();
 80013e6:	f7ff ff2b 	bl	8001240 <MPU_Config>
  CPU_CACHE_Enable();
 80013ea:	f7ff ff71 	bl	80012d0 <CPU_CACHE_Enable>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80013ee:	f002 f8fb 	bl	80035e8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80013f2:	f000 f963 	bl	80016bc <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 80013f6:	f000 f9db 	bl	80017b0 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80013fa:	f7ff f9a1 	bl	8000740 <MX_GPIO_Init>
  MX_ADC3_Init();
 80013fe:	f7ff f85f 	bl	80004c0 <MX_ADC3_Init>
  MX_SPI4_Init();
 8001402:	f000 fa0f 	bl	8001824 <MX_SPI4_Init>
  MX_TIM1_Init();
 8001406:	f001 ff33 	bl	8003270 <MX_TIM1_Init>
  MX_ADC2_Init();
 800140a:	f7fe ffc1 	bl	8000390 <MX_ADC2_Init>
  MX_USB_DEVICE_Init();
 800140e:	f00e fcc9 	bl	800fda4 <MX_USB_DEVICE_Init>
  MX_TIM2_Init();
 8001412:	f001 ffbd 	bl	8003390 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */

  int counterValue = 0;
 8001416:	2300      	movs	r3, #0
 8001418:	64fb      	str	r3, [r7, #76]	@ 0x4c
  int pastCounterValue = 0;
 800141a:	2300      	movs	r3, #0
 800141c:	65fb      	str	r3, [r7, #92]	@ 0x5c
  int dadoEncoder = 0;
 800141e:	2300      	movs	r3, #0
 8001420:	65bb      	str	r3, [r7, #88]	@ 0x58
  uint8_t dadoencoder[20];

  LCD_Test();
 8001422:	f7ff fa2f 	bl	8000884 <LCD_Test>

	/* Run the ADC calibration in single-ended mode */
  if (HAL_ADCEx_Calibration_Start(&hadc3, ADC_CALIB_OFFSET, ADC_SINGLE_ENDED) != HAL_OK)
 8001426:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 800142a:	2100      	movs	r1, #0
 800142c:	488e      	ldr	r0, [pc, #568]	@ (8001668 <main+0x288>)
 800142e:	f003 fdeb 	bl	8005008 <HAL_ADCEx_Calibration_Start>
 8001432:	4603      	mov	r3, r0
 8001434:	2b00      	cmp	r3, #0
 8001436:	d001      	beq.n	800143c <main+0x5c>
  {
    /* Calibration Error */
    Error_Handler();
 8001438:	f000 f9ec 	bl	8001814 <Error_Handler>
  }

  if (HAL_ADCEx_Calibration_Start(&hadc2, ADC_CALIB_OFFSET, ADC_SINGLE_ENDED) != HAL_OK)
 800143c:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8001440:	2100      	movs	r1, #0
 8001442:	488a      	ldr	r0, [pc, #552]	@ (800166c <main+0x28c>)
 8001444:	f003 fde0 	bl	8005008 <HAL_ADCEx_Calibration_Start>
 8001448:	4603      	mov	r3, r0
 800144a:	2b00      	cmp	r3, #0
 800144c:	d001      	beq.n	8001452 <main+0x72>
    {
      /* Calibration Error */
      Error_Handler();
 800144e:	f000 f9e1 	bl	8001814 <Error_Handler>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 8001452:	213c      	movs	r1, #60	@ 0x3c
 8001454:	4886      	ldr	r0, [pc, #536]	@ (8001670 <main+0x290>)
 8001456:	f00a f8c5 	bl	800b5e4 <HAL_TIM_Encoder_Start>
  while (1)
  {
    /* USER CODE END WHILE */
	  counterValue = TIM2 -> CNT;
 800145a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800145e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001460:	64fb      	str	r3, [r7, #76]	@ 0x4c
	  if (counterValue != pastCounterValue){
 8001462:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8001464:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8001466:	429a      	cmp	r2, r3
 8001468:	d001      	beq.n	800146e <main+0x8e>
		  dadoEncoder = counterValue;
 800146a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800146c:	65bb      	str	r3, [r7, #88]	@ 0x58


	  }
	  pastCounterValue = counterValue;
 800146e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8001470:	65fb      	str	r3, [r7, #92]	@ 0x5c
    /* USER CODE BEGIN 3 */
		for(uint32_t i = 0;i<(sizeof(uhADCxConvertedValue)/sizeof(uint16_t));i++)
 8001472:	2300      	movs	r3, #0
 8001474:	657b      	str	r3, [r7, #84]	@ 0x54
 8001476:	e034      	b.n	80014e2 <main+0x102>
		{
			/*##-1- Start the conversion process #######################################*/
			if (HAL_ADC_Start(&hadc3) != HAL_OK)
 8001478:	487b      	ldr	r0, [pc, #492]	@ (8001668 <main+0x288>)
 800147a:	f002 fd85 	bl	8003f88 <HAL_ADC_Start>
 800147e:	4603      	mov	r3, r0
 8001480:	2b00      	cmp	r3, #0
 8001482:	d001      	beq.n	8001488 <main+0xa8>
			{
				/* Start Conversation Error */
				Error_Handler();
 8001484:	f000 f9c6 	bl	8001814 <Error_Handler>
			}
			/*##-2- Wait for the end of conversion #####################################*/
			/*  For simplicity reasons, this example is just waiting till the end of the
					conversion, but application may perform other tasks while conversion
					operation is ongoing. */
			if (HAL_ADC_PollForConversion(&hadc3,HAL_MAX_DELAY) != HAL_OK)
 8001488:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 800148c:	4876      	ldr	r0, [pc, #472]	@ (8001668 <main+0x288>)
 800148e:	f002 fe79 	bl	8004184 <HAL_ADC_PollForConversion>
 8001492:	4603      	mov	r3, r0
 8001494:	2b00      	cmp	r3, #0
 8001496:	d002      	beq.n	800149e <main+0xbe>
			{
				/* End Of Conversion flag not set on time */
				Error_Handler();
 8001498:	f000 f9bc 	bl	8001814 <Error_Handler>
 800149c:	e01e      	b.n	80014dc <main+0xfc>
			}
			else
			{
				/* ADC conversion completed */
				/*##-3- Get the converted value of regular channel  ########################*/
				uhADCxConvertedValue[i] = HAL_ADC_GetValue(&hadc3);
 800149e:	4872      	ldr	r0, [pc, #456]	@ (8001668 <main+0x288>)
 80014a0:	f002 ff64 	bl	800436c <HAL_ADC_GetValue>
 80014a4:	4603      	mov	r3, r0
 80014a6:	b299      	uxth	r1, r3
 80014a8:	4a72      	ldr	r2, [pc, #456]	@ (8001674 <main+0x294>)
 80014aa:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80014ac:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

				/* Convert the result from 16 bit value to the voltage dimension (mV unit) */
				/* Vref = 3.3 V */
				uhADCxInputVoltage[i] = ((uhADCxConvertedValue[i] * 3300) / 0xFFFF);
 80014b0:	4a70      	ldr	r2, [pc, #448]	@ (8001674 <main+0x294>)
 80014b2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80014b4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80014b8:	b29b      	uxth	r3, r3
 80014ba:	461a      	mov	r2, r3
 80014bc:	f640 43e4 	movw	r3, #3300	@ 0xce4
 80014c0:	fb02 f303 	mul.w	r3, r2, r3
 80014c4:	4a6c      	ldr	r2, [pc, #432]	@ (8001678 <main+0x298>)
 80014c6:	fb82 1203 	smull	r1, r2, r2, r3
 80014ca:	441a      	add	r2, r3
 80014cc:	13d2      	asrs	r2, r2, #15
 80014ce:	17db      	asrs	r3, r3, #31
 80014d0:	1ad3      	subs	r3, r2, r3
 80014d2:	4619      	mov	r1, r3
 80014d4:	4a69      	ldr	r2, [pc, #420]	@ (800167c <main+0x29c>)
 80014d6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80014d8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		for(uint32_t i = 0;i<(sizeof(uhADCxConvertedValue)/sizeof(uint16_t));i++)
 80014dc:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80014de:	3301      	adds	r3, #1
 80014e0:	657b      	str	r3, [r7, #84]	@ 0x54
 80014e2:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80014e4:	2b03      	cmp	r3, #3
 80014e6:	d9c7      	bls.n	8001478 <main+0x98>
			}
		}
		HAL_ADC_Stop(&hadc3);
 80014e8:	485f      	ldr	r0, [pc, #380]	@ (8001668 <main+0x288>)
 80014ea:	f002 fe17 	bl	800411c <HAL_ADC_Stop>


		for(uint32_t i = 0;i<(sizeof(adcConvertValue)/sizeof(uint16_t));i++)
 80014ee:	2300      	movs	r3, #0
 80014f0:	653b      	str	r3, [r7, #80]	@ 0x50
 80014f2:	e034      	b.n	800155e <main+0x17e>
		{
			/*##-1- Start the conversion process #######################################*/
			if (HAL_ADC_Start(&hadc2) != HAL_OK)
 80014f4:	485d      	ldr	r0, [pc, #372]	@ (800166c <main+0x28c>)
 80014f6:	f002 fd47 	bl	8003f88 <HAL_ADC_Start>
 80014fa:	4603      	mov	r3, r0
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d001      	beq.n	8001504 <main+0x124>
			{
				/* Start Conversation Error */
				Error_Handler();
 8001500:	f000 f988 	bl	8001814 <Error_Handler>
			}
			/*##-2- Wait for the end of conversion #####################################*/
			/*  For simplicity reasons, this example is just waiting till the end of the
				    conversion, but application may perform other tasks while conversion
					operation is ongoing. */
			if (HAL_ADC_PollForConversion(&hadc2,HAL_MAX_DELAY) != HAL_OK)
 8001504:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8001508:	4858      	ldr	r0, [pc, #352]	@ (800166c <main+0x28c>)
 800150a:	f002 fe3b 	bl	8004184 <HAL_ADC_PollForConversion>
 800150e:	4603      	mov	r3, r0
 8001510:	2b00      	cmp	r3, #0
 8001512:	d002      	beq.n	800151a <main+0x13a>
			{
				/* End Of Conversion flag not set on time */
				Error_Handler();
 8001514:	f000 f97e 	bl	8001814 <Error_Handler>
 8001518:	e01e      	b.n	8001558 <main+0x178>
			}
			else
			{
				/* ADC conversion completed */
				/*##-3- Get the converted value of regular channel  ########################*/
				adcConvertValue[i] = HAL_ADC_GetValue(&hadc2);
 800151a:	4854      	ldr	r0, [pc, #336]	@ (800166c <main+0x28c>)
 800151c:	f002 ff26 	bl	800436c <HAL_ADC_GetValue>
 8001520:	4603      	mov	r3, r0
 8001522:	b299      	uxth	r1, r3
 8001524:	4a56      	ldr	r2, [pc, #344]	@ (8001680 <main+0x2a0>)
 8001526:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001528:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]

				/* Convert the result from 16 bit value to the voltage dimension (mV unit) */
				/* Vref = 3.3 V */
				adcInputVoltage[i] = ((adcConvertValue[i] * 3300) / 0xFFFF);
 800152c:	4a54      	ldr	r2, [pc, #336]	@ (8001680 <main+0x2a0>)
 800152e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001530:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001534:	b29b      	uxth	r3, r3
 8001536:	461a      	mov	r2, r3
 8001538:	f640 43e4 	movw	r3, #3300	@ 0xce4
 800153c:	fb02 f303 	mul.w	r3, r2, r3
 8001540:	4a4d      	ldr	r2, [pc, #308]	@ (8001678 <main+0x298>)
 8001542:	fb82 1203 	smull	r1, r2, r2, r3
 8001546:	441a      	add	r2, r3
 8001548:	13d2      	asrs	r2, r2, #15
 800154a:	17db      	asrs	r3, r3, #31
 800154c:	1ad3      	subs	r3, r2, r3
 800154e:	4619      	mov	r1, r3
 8001550:	4a4c      	ldr	r2, [pc, #304]	@ (8001684 <main+0x2a4>)
 8001552:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001554:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		for(uint32_t i = 0;i<(sizeof(adcConvertValue)/sizeof(uint16_t));i++)
 8001558:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800155a:	3301      	adds	r3, #1
 800155c:	653b      	str	r3, [r7, #80]	@ 0x50
 800155e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8001560:	2b03      	cmp	r3, #3
 8001562:	d9c7      	bls.n	80014f4 <main+0x114>
			}
		}
		HAL_ADC_Stop(&hadc2);
 8001564:	4841      	ldr	r0, [pc, #260]	@ (800166c <main+0x28c>)
 8001566:	f002 fdd9 	bl	800411c <HAL_ADC_Stop>

		dadoadc1 = adcInputVoltage[0];
 800156a:	4b46      	ldr	r3, [pc, #280]	@ (8001684 <main+0x2a4>)
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	4a46      	ldr	r2, [pc, #280]	@ (8001688 <main+0x2a8>)
 8001570:	6013      	str	r3, [r2, #0]
		dadoadc2 = adcInputVoltage[1];
 8001572:	4b44      	ldr	r3, [pc, #272]	@ (8001684 <main+0x2a4>)
 8001574:	685b      	ldr	r3, [r3, #4]
 8001576:	4a45      	ldr	r2, [pc, #276]	@ (800168c <main+0x2ac>)
 8001578:	6013      	str	r3, [r2, #0]
		dadoadc3 = adcInputVoltage[2];
 800157a:	4b42      	ldr	r3, [pc, #264]	@ (8001684 <main+0x2a4>)
 800157c:	689b      	ldr	r3, [r3, #8]
 800157e:	4a44      	ldr	r2, [pc, #272]	@ (8001690 <main+0x2b0>)
 8001580:	6013      	str	r3, [r2, #0]
		dadoadc4 = adcInputVoltage[3];
 8001582:	4b40      	ldr	r3, [pc, #256]	@ (8001684 <main+0x2a4>)
 8001584:	68db      	ldr	r3, [r3, #12]
 8001586:	4a43      	ldr	r2, [pc, #268]	@ (8001694 <main+0x2b4>)
 8001588:	6013      	str	r3, [r2, #0]


		#define V30  (620)  // mV, V30: 0.62V,datasheet P278
		#define Avg_Slope (2) // mV/��C

		adc3_inp0  = uhADCxInputVoltage[0]; // mv
 800158a:	4b3c      	ldr	r3, [pc, #240]	@ (800167c <main+0x29c>)
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	4a42      	ldr	r2, [pc, #264]	@ (8001698 <main+0x2b8>)
 8001590:	6013      	str	r3, [r2, #0]
		vrefint    = uhADCxInputVoltage[1]; // type. 1200mV
 8001592:	4b3a      	ldr	r3, [pc, #232]	@ (800167c <main+0x29c>)
 8001594:	685b      	ldr	r3, [r3, #4]
 8001596:	4a41      	ldr	r2, [pc, #260]	@ (800169c <main+0x2bc>)
 8001598:	6013      	str	r3, [r2, #0]
		tempsensor = ((int32_t)uhADCxInputVoltage[2] - V30)/Avg_Slope + 30; // ��C
 800159a:	4b38      	ldr	r3, [pc, #224]	@ (800167c <main+0x29c>)
 800159c:	689b      	ldr	r3, [r3, #8]
 800159e:	f5a3 731b 	sub.w	r3, r3, #620	@ 0x26c
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	da00      	bge.n	80015a8 <main+0x1c8>
 80015a6:	3301      	adds	r3, #1
 80015a8:	105b      	asrs	r3, r3, #1
 80015aa:	331e      	adds	r3, #30
 80015ac:	461a      	mov	r2, r3
 80015ae:	4b3c      	ldr	r3, [pc, #240]	@ (80016a0 <main+0x2c0>)
 80015b0:	601a      	str	r2, [r3, #0]
		vbat       = uhADCxInputVoltage[3] * 4;
 80015b2:	4b32      	ldr	r3, [pc, #200]	@ (800167c <main+0x29c>)
 80015b4:	68db      	ldr	r3, [r3, #12]
 80015b6:	009b      	lsls	r3, r3, #2
 80015b8:	4a3a      	ldr	r2, [pc, #232]	@ (80016a4 <main+0x2c4>)
 80015ba:	6013      	str	r3, [r2, #0]

		uint8_t text[20];
		uint8_t dados[30];
		sprintf((char *)&text, "ADC1:%4dmV ADC2:%4dmV", dadoadc1, dadoadc2);
 80015bc:	4b32      	ldr	r3, [pc, #200]	@ (8001688 <main+0x2a8>)
 80015be:	681a      	ldr	r2, [r3, #0]
 80015c0:	4b32      	ldr	r3, [pc, #200]	@ (800168c <main+0x2ac>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 80015c8:	4937      	ldr	r1, [pc, #220]	@ (80016a8 <main+0x2c8>)
 80015ca:	f00f f92b 	bl	8010824 <siprintf>
		LCD_ShowString(4, 22, ST7735Ctx.Width, 16, 12, text);
 80015ce:	4b37      	ldr	r3, [pc, #220]	@ (80016ac <main+0x2cc>)
 80015d0:	681b      	ldr	r3, [r3, #0]
 80015d2:	b29a      	uxth	r2, r3
 80015d4:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80015d8:	9301      	str	r3, [sp, #4]
 80015da:	230c      	movs	r3, #12
 80015dc:	9300      	str	r3, [sp, #0]
 80015de:	2310      	movs	r3, #16
 80015e0:	2116      	movs	r1, #22
 80015e2:	2004      	movs	r0, #4
 80015e4:	f7ff fcde 	bl	8000fa4 <LCD_ShowString>
	    //sprintf((char *)&text, " PC2: %4dmV Vref: %4dmV", adc3_inp0, vrefint);
		sprintf((char *)&text, "ADC3:%4dmV ADC4:%4dmV", dadoadc3, dadoEncoder);
 80015e8:	4b29      	ldr	r3, [pc, #164]	@ (8001690 <main+0x2b0>)
 80015ea:	681a      	ldr	r2, [r3, #0]
 80015ec:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 80015f0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80015f2:	492f      	ldr	r1, [pc, #188]	@ (80016b0 <main+0x2d0>)
 80015f4:	f00f f916 	bl	8010824 <siprintf>
		LCD_ShowString(4, 40, ST7735Ctx.Width, 16, 12, text);
 80015f8:	4b2c      	ldr	r3, [pc, #176]	@ (80016ac <main+0x2cc>)
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	b29a      	uxth	r2, r3
 80015fe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001602:	9301      	str	r3, [sp, #4]
 8001604:	230c      	movs	r3, #12
 8001606:	9300      	str	r3, [sp, #0]
 8001608:	2310      	movs	r3, #16
 800160a:	2128      	movs	r1, #40	@ 0x28
 800160c:	2004      	movs	r0, #4
 800160e:	f7ff fcc9 	bl	8000fa4 <LCD_ShowString>
		sprintf((char *)&text, "temp: %3d 'C vbat: %4dmV", tempsensor, vbat);
 8001612:	4b23      	ldr	r3, [pc, #140]	@ (80016a0 <main+0x2c0>)
 8001614:	681a      	ldr	r2, [r3, #0]
 8001616:	4b23      	ldr	r3, [pc, #140]	@ (80016a4 <main+0x2c4>)
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 800161e:	4925      	ldr	r1, [pc, #148]	@ (80016b4 <main+0x2d4>)
 8001620:	f00f f900 	bl	8010824 <siprintf>
		LCD_ShowString(4, 58, ST7735Ctx.Width, 16, 12, text);
 8001624:	4b21      	ldr	r3, [pc, #132]	@ (80016ac <main+0x2cc>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	b29a      	uxth	r2, r3
 800162a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800162e:	9301      	str	r3, [sp, #4]
 8001630:	230c      	movs	r3, #12
 8001632:	9300      	str	r3, [sp, #0]
 8001634:	2310      	movs	r3, #16
 8001636:	213a      	movs	r1, #58	@ 0x3a
 8001638:	2004      	movs	r0, #4
 800163a:	f7ff fcb3 	bl	8000fa4 <LCD_ShowString>
		sprintf((char *)&dados, "ADC1:%4dmV\r\n",dadoadc1);
 800163e:	4b12      	ldr	r3, [pc, #72]	@ (8001688 <main+0x2a8>)
 8001640:	681a      	ldr	r2, [r3, #0]
 8001642:	1d3b      	adds	r3, r7, #4
 8001644:	491c      	ldr	r1, [pc, #112]	@ (80016b8 <main+0x2d8>)
 8001646:	4618      	mov	r0, r3
 8001648:	f00f f8ec 	bl	8010824 <siprintf>
		CDC_Transmit_FS(dados,strlen(dados));
 800164c:	1d3b      	adds	r3, r7, #4
 800164e:	4618      	mov	r0, r3
 8001650:	f7fe fe46 	bl	80002e0 <strlen>
 8001654:	4602      	mov	r2, r0
 8001656:	1d3b      	adds	r3, r7, #4
 8001658:	4611      	mov	r1, r2
 800165a:	4618      	mov	r0, r3
 800165c:	f00e fc62 	bl	800ff24 <CDC_Transmit_FS>

		//sprintf((char *)dadoencoder, "Dado do Encoder: %.2f", dadoEncoder);
		//LCD_ShowString(4, 40, ST7735Ctx.Width, 16, 12, dadoencoder);


		LED_Pisca(10);
 8001660:	200a      	movs	r0, #10
 8001662:	f7ff fea3 	bl	80013ac <LED_Pisca>
  {
 8001666:	e6f8      	b.n	800145a <main+0x7a>
 8001668:	24000264 	.word	0x24000264
 800166c:	24000200 	.word	0x24000200
 8001670:	24000940 	.word	0x24000940
 8001674:	24000308 	.word	0x24000308
 8001678:	80008001 	.word	0x80008001
 800167c:	24000310 	.word	0x24000310
 8001680:	24000330 	.word	0x24000330
 8001684:	24000338 	.word	0x24000338
 8001688:	24000348 	.word	0x24000348
 800168c:	2400034c 	.word	0x2400034c
 8001690:	24000350 	.word	0x24000350
 8001694:	24000354 	.word	0x24000354
 8001698:	24000320 	.word	0x24000320
 800169c:	2400032c 	.word	0x2400032c
 80016a0:	24000328 	.word	0x24000328
 80016a4:	24000324 	.word	0x24000324
 80016a8:	08011194 	.word	0x08011194
 80016ac:	240003e0 	.word	0x240003e0
 80016b0:	080111ac 	.word	0x080111ac
 80016b4:	080111c4 	.word	0x080111c4
 80016b8:	080111e0 	.word	0x080111e0

080016bc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80016bc:	b580      	push	{r7, lr}
 80016be:	b09c      	sub	sp, #112	@ 0x70
 80016c0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80016c2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80016c6:	224c      	movs	r2, #76	@ 0x4c
 80016c8:	2100      	movs	r1, #0
 80016ca:	4618      	mov	r0, r3
 80016cc:	f00f f8ca 	bl	8010864 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80016d0:	1d3b      	adds	r3, r7, #4
 80016d2:	2220      	movs	r2, #32
 80016d4:	2100      	movs	r1, #0
 80016d6:	4618      	mov	r0, r3
 80016d8:	f00f f8c4 	bl	8010864 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80016dc:	2002      	movs	r0, #2
 80016de:	f005 faff 	bl	8006ce0 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016e2:	2300      	movs	r3, #0
 80016e4:	603b      	str	r3, [r7, #0]
 80016e6:	4b30      	ldr	r3, [pc, #192]	@ (80017a8 <SystemClock_Config+0xec>)
 80016e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80016ea:	4a2f      	ldr	r2, [pc, #188]	@ (80017a8 <SystemClock_Config+0xec>)
 80016ec:	f023 0301 	bic.w	r3, r3, #1
 80016f0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80016f2:	4b2d      	ldr	r3, [pc, #180]	@ (80017a8 <SystemClock_Config+0xec>)
 80016f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80016f6:	f003 0301 	and.w	r3, r3, #1
 80016fa:	603b      	str	r3, [r7, #0]
 80016fc:	4b2b      	ldr	r3, [pc, #172]	@ (80017ac <SystemClock_Config+0xf0>)
 80016fe:	699b      	ldr	r3, [r3, #24]
 8001700:	4a2a      	ldr	r2, [pc, #168]	@ (80017ac <SystemClock_Config+0xf0>)
 8001702:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001706:	6193      	str	r3, [r2, #24]
 8001708:	4b28      	ldr	r3, [pc, #160]	@ (80017ac <SystemClock_Config+0xf0>)
 800170a:	699b      	ldr	r3, [r3, #24]
 800170c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001710:	603b      	str	r3, [r7, #0]
 8001712:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8001714:	bf00      	nop
 8001716:	4b25      	ldr	r3, [pc, #148]	@ (80017ac <SystemClock_Config+0xf0>)
 8001718:	699b      	ldr	r3, [r3, #24]
 800171a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800171e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001722:	d1f8      	bne.n	8001716 <SystemClock_Config+0x5a>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001724:	2301      	movs	r3, #1
 8001726:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001728:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800172c:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800172e:	2302      	movs	r3, #2
 8001730:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001732:	2302      	movs	r3, #2
 8001734:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 2;
 8001736:	2302      	movs	r3, #2
 8001738:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 16;
 800173a:	2310      	movs	r3, #16
 800173c:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 800173e:	2302      	movs	r3, #2
 8001740:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001742:	2304      	movs	r3, #4
 8001744:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001746:	2302      	movs	r3, #2
 8001748:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 800174a:	230c      	movs	r3, #12
 800174c:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800174e:	2300      	movs	r3, #0
 8001750:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8001752:	2300      	movs	r3, #0
 8001754:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001756:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800175a:	4618      	mov	r0, r3
 800175c:	f005 fb0a 	bl	8006d74 <HAL_RCC_OscConfig>
 8001760:	4603      	mov	r3, r0
 8001762:	2b00      	cmp	r3, #0
 8001764:	d001      	beq.n	800176a <SystemClock_Config+0xae>
  {
    Error_Handler();
 8001766:	f000 f855 	bl	8001814 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800176a:	233f      	movs	r3, #63	@ 0x3f
 800176c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800176e:	2303      	movs	r3, #3
 8001770:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8001772:	2300      	movs	r3, #0
 8001774:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 8001776:	2300      	movs	r3, #0
 8001778:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 800177a:	2340      	movs	r3, #64	@ 0x40
 800177c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 800177e:	2340      	movs	r3, #64	@ 0x40
 8001780:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8001782:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001786:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8001788:	2340      	movs	r3, #64	@ 0x40
 800178a:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800178c:	1d3b      	adds	r3, r7, #4
 800178e:	2101      	movs	r1, #1
 8001790:	4618      	mov	r0, r3
 8001792:	f005 ff49 	bl	8007628 <HAL_RCC_ClockConfig>
 8001796:	4603      	mov	r3, r0
 8001798:	2b00      	cmp	r3, #0
 800179a:	d001      	beq.n	80017a0 <SystemClock_Config+0xe4>
  {
    Error_Handler();
 800179c:	f000 f83a 	bl	8001814 <Error_Handler>
  }
}
 80017a0:	bf00      	nop
 80017a2:	3770      	adds	r7, #112	@ 0x70
 80017a4:	46bd      	mov	sp, r7
 80017a6:	bd80      	pop	{r7, pc}
 80017a8:	58000400 	.word	0x58000400
 80017ac:	58024800 	.word	0x58024800

080017b0 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 80017b0:	b580      	push	{r7, lr}
 80017b2:	b0b0      	sub	sp, #192	@ 0xc0
 80017b4:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80017b6:	463b      	mov	r3, r7
 80017b8:	22c0      	movs	r2, #192	@ 0xc0
 80017ba:	2100      	movs	r1, #0
 80017bc:	4618      	mov	r0, r3
 80017be:	f00f f851 	bl	8010864 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 80017c2:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 80017c6:	f04f 0300 	mov.w	r3, #0
 80017ca:	e9c7 2300 	strd	r2, r3, [r7]
  PeriphClkInitStruct.PLL3.PLL3M = 2;
 80017ce:	2302      	movs	r3, #2
 80017d0:	62bb      	str	r3, [r7, #40]	@ 0x28
  PeriphClkInitStruct.PLL3.PLL3N = 12;
 80017d2:	230c      	movs	r3, #12
 80017d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  PeriphClkInitStruct.PLL3.PLL3P = 2;
 80017d6:	2302      	movs	r3, #2
 80017d8:	633b      	str	r3, [r7, #48]	@ 0x30
  PeriphClkInitStruct.PLL3.PLL3Q = 2;
 80017da:	2302      	movs	r3, #2
 80017dc:	637b      	str	r3, [r7, #52]	@ 0x34
  PeriphClkInitStruct.PLL3.PLL3R = 2;
 80017de:	2302      	movs	r3, #2
 80017e0:	63bb      	str	r3, [r7, #56]	@ 0x38
  PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_3;
 80017e2:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 80017e6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 80017e8:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80017ec:	643b      	str	r3, [r7, #64]	@ 0x40
  PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 80017ee:	2300      	movs	r3, #0
 80017f0:	647b      	str	r3, [r7, #68]	@ 0x44
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL3;
 80017f2:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80017f6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80017fa:	463b      	mov	r3, r7
 80017fc:	4618      	mov	r0, r3
 80017fe:	f006 fa89 	bl	8007d14 <HAL_RCCEx_PeriphCLKConfig>
 8001802:	4603      	mov	r3, r0
 8001804:	2b00      	cmp	r3, #0
 8001806:	d001      	beq.n	800180c <PeriphCommonClock_Config+0x5c>
  {
    Error_Handler();
 8001808:	f000 f804 	bl	8001814 <Error_Handler>
  }
}
 800180c:	bf00      	nop
 800180e:	37c0      	adds	r7, #192	@ 0xc0
 8001810:	46bd      	mov	sp, r7
 8001812:	bd80      	pop	{r7, pc}

08001814 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001814:	b580      	push	{r7, lr}
 8001816:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  while(1)
		LED_Pisca(500);
 8001818:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800181c:	f7ff fdc6 	bl	80013ac <LED_Pisca>
 8001820:	e7fa      	b.n	8001818 <Error_Handler+0x4>
	...

08001824 <MX_SPI4_Init>:

SPI_HandleTypeDef hspi4;

/* SPI4 init function */
void MX_SPI4_Init(void)
{
 8001824:	b580      	push	{r7, lr}
 8001826:	af00      	add	r7, sp, #0
  /* USER CODE END SPI4_Init 0 */

  /* USER CODE BEGIN SPI4_Init 1 */

  /* USER CODE END SPI4_Init 1 */
  hspi4.Instance = SPI4;
 8001828:	4b28      	ldr	r3, [pc, #160]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800182a:	4a29      	ldr	r2, [pc, #164]	@ (80018d0 <MX_SPI4_Init+0xac>)
 800182c:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 800182e:	4b27      	ldr	r3, [pc, #156]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001830:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8001834:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_1LINE;
 8001836:	4b25      	ldr	r3, [pc, #148]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001838:	f44f 22c0 	mov.w	r2, #393216	@ 0x60000
 800183c:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_8BIT;
 800183e:	4b23      	ldr	r3, [pc, #140]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001840:	2207      	movs	r2, #7
 8001842:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001844:	4b21      	ldr	r3, [pc, #132]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001846:	2200      	movs	r2, #0
 8001848:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 800184a:	4b20      	ldr	r3, [pc, #128]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800184c:	2200      	movs	r2, #0
 800184e:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8001850:	4b1e      	ldr	r3, [pc, #120]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001852:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001856:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8001858:	4b1c      	ldr	r3, [pc, #112]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800185a:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 800185e:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001860:	4b1a      	ldr	r3, [pc, #104]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001862:	2200      	movs	r2, #0
 8001864:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 8001866:	4b19      	ldr	r3, [pc, #100]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001868:	2200      	movs	r2, #0
 800186a:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800186c:	4b17      	ldr	r3, [pc, #92]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800186e:	2200      	movs	r2, #0
 8001870:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi4.Init.CRCPolynomial = 0x0;
 8001872:	4b16      	ldr	r3, [pc, #88]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001874:	2200      	movs	r2, #0
 8001876:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi4.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8001878:	4b14      	ldr	r3, [pc, #80]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800187a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800187e:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi4.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 8001880:	4b12      	ldr	r3, [pc, #72]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001882:	2200      	movs	r2, #0
 8001884:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi4.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 8001886:	4b11      	ldr	r3, [pc, #68]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001888:	2200      	movs	r2, #0
 800188a:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi4.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 800188c:	4b0f      	ldr	r3, [pc, #60]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800188e:	2200      	movs	r2, #0
 8001890:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi4.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 8001892:	4b0e      	ldr	r3, [pc, #56]	@ (80018cc <MX_SPI4_Init+0xa8>)
 8001894:	2200      	movs	r2, #0
 8001896:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi4.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 8001898:	4b0c      	ldr	r3, [pc, #48]	@ (80018cc <MX_SPI4_Init+0xa8>)
 800189a:	2200      	movs	r2, #0
 800189c:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi4.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 800189e:	4b0b      	ldr	r3, [pc, #44]	@ (80018cc <MX_SPI4_Init+0xa8>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi4.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 80018a4:	4b09      	ldr	r3, [pc, #36]	@ (80018cc <MX_SPI4_Init+0xa8>)
 80018a6:	2200      	movs	r2, #0
 80018a8:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi4.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 80018aa:	4b08      	ldr	r3, [pc, #32]	@ (80018cc <MX_SPI4_Init+0xa8>)
 80018ac:	2200      	movs	r2, #0
 80018ae:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi4.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 80018b0:	4b06      	ldr	r3, [pc, #24]	@ (80018cc <MX_SPI4_Init+0xa8>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 80018b6:	4805      	ldr	r0, [pc, #20]	@ (80018cc <MX_SPI4_Init+0xa8>)
 80018b8:	f008 ff2a 	bl	800a710 <HAL_SPI_Init>
 80018bc:	4603      	mov	r3, r0
 80018be:	2b00      	cmp	r3, #0
 80018c0:	d001      	beq.n	80018c6 <MX_SPI4_Init+0xa2>
  {
    Error_Handler();
 80018c2:	f7ff ffa7 	bl	8001814 <Error_Handler>
  }
  /* USER CODE BEGIN SPI4_Init 2 */

  /* USER CODE END SPI4_Init 2 */

}
 80018c6:	bf00      	nop
 80018c8:	bd80      	pop	{r7, pc}
 80018ca:	bf00      	nop
 80018cc:	24000358 	.word	0x24000358
 80018d0:	40013400 	.word	0x40013400

080018d4 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 80018d4:	b580      	push	{r7, lr}
 80018d6:	b0ba      	sub	sp, #232	@ 0xe8
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018dc:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 80018e0:	2200      	movs	r2, #0
 80018e2:	601a      	str	r2, [r3, #0]
 80018e4:	605a      	str	r2, [r3, #4]
 80018e6:	609a      	str	r2, [r3, #8]
 80018e8:	60da      	str	r2, [r3, #12]
 80018ea:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80018ec:	f107 0310 	add.w	r3, r7, #16
 80018f0:	22c0      	movs	r2, #192	@ 0xc0
 80018f2:	2100      	movs	r1, #0
 80018f4:	4618      	mov	r0, r3
 80018f6:	f00e ffb5 	bl	8010864 <memset>
  if(spiHandle->Instance==SPI4)
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	4a26      	ldr	r2, [pc, #152]	@ (8001998 <HAL_SPI_MspInit+0xc4>)
 8001900:	4293      	cmp	r3, r2
 8001902:	d145      	bne.n	8001990 <HAL_SPI_MspInit+0xbc>

  /* USER CODE END SPI4_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI4;
 8001904:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001908:	f04f 0300 	mov.w	r3, #0
 800190c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_D2PCLK1;
 8001910:	2300      	movs	r3, #0
 8001912:	677b      	str	r3, [r7, #116]	@ 0x74
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001914:	f107 0310 	add.w	r3, r7, #16
 8001918:	4618      	mov	r0, r3
 800191a:	f006 f9fb 	bl	8007d14 <HAL_RCCEx_PeriphCLKConfig>
 800191e:	4603      	mov	r3, r0
 8001920:	2b00      	cmp	r3, #0
 8001922:	d001      	beq.n	8001928 <HAL_SPI_MspInit+0x54>
    {
      Error_Handler();
 8001924:	f7ff ff76 	bl	8001814 <Error_Handler>
    }

    /* SPI4 clock enable */
    __HAL_RCC_SPI4_CLK_ENABLE();
 8001928:	4b1c      	ldr	r3, [pc, #112]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 800192a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800192e:	4a1b      	ldr	r2, [pc, #108]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 8001930:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001934:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001938:	4b18      	ldr	r3, [pc, #96]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 800193a:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800193e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001942:	60fb      	str	r3, [r7, #12]
 8001944:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001946:	4b15      	ldr	r3, [pc, #84]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 8001948:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800194c:	4a13      	ldr	r2, [pc, #76]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 800194e:	f043 0310 	orr.w	r3, r3, #16
 8001952:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001956:	4b11      	ldr	r3, [pc, #68]	@ (800199c <HAL_SPI_MspInit+0xc8>)
 8001958:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800195c:	f003 0310 	and.w	r3, r3, #16
 8001960:	60bb      	str	r3, [r7, #8]
 8001962:	68bb      	ldr	r3, [r7, #8]
    /**SPI4 GPIO Configuration
    PE12     ------> SPI4_SCK
    PE14     ------> SPI4_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_14;
 8001964:	f44f 43a0 	mov.w	r3, #20480	@ 0x5000
 8001968:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800196c:	2302      	movs	r3, #2
 800196e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001972:	2300      	movs	r3, #0
 8001974:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8001978:	2301      	movs	r3, #1
 800197a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 800197e:	2305      	movs	r3, #5
 8001980:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001984:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8001988:	4619      	mov	r1, r3
 800198a:	4805      	ldr	r0, [pc, #20]	@ (80019a0 <HAL_SPI_MspInit+0xcc>)
 800198c:	f003 fd28 	bl	80053e0 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }
}
 8001990:	bf00      	nop
 8001992:	37e8      	adds	r7, #232	@ 0xe8
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}
 8001998:	40013400 	.word	0x40013400
 800199c:	58024400 	.word	0x58024400
 80019a0:	58021000 	.word	0x58021000

080019a4 <ST7735_RegisterBusIO>:
  * @param  pObj Component object pointer
  * @param  pIO  Component IO structure pointer
  * @retval Component status
  */
int32_t ST7735_RegisterBusIO (ST7735_Object_t *pObj, ST7735_IO_t *pIO)
{
 80019a4:	b580      	push	{r7, lr}
 80019a6:	b084      	sub	sp, #16
 80019a8:	af00      	add	r7, sp, #0
 80019aa:	6078      	str	r0, [r7, #4]
 80019ac:	6039      	str	r1, [r7, #0]
  int32_t ret;

  if(pObj == NULL)
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	2b00      	cmp	r3, #0
 80019b2:	d103      	bne.n	80019bc <ST7735_RegisterBusIO+0x18>
  {
    ret = ST7735_ERROR;
 80019b4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80019b8:	60fb      	str	r3, [r7, #12]
 80019ba:	e03a      	b.n	8001a32 <ST7735_RegisterBusIO+0x8e>
  }
  else
  {
    pObj->IO.Init      = pIO->Init;
 80019bc:	683b      	ldr	r3, [r7, #0]
 80019be:	681a      	ldr	r2, [r3, #0]
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	601a      	str	r2, [r3, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 80019c4:	683b      	ldr	r3, [r7, #0]
 80019c6:	685a      	ldr	r2, [r3, #4]
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	605a      	str	r2, [r3, #4]
    pObj->IO.Address   = pIO->Address;
 80019cc:	683b      	ldr	r3, [r7, #0]
 80019ce:	891a      	ldrh	r2, [r3, #8]
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	811a      	strh	r2, [r3, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 80019d4:	683b      	ldr	r3, [r7, #0]
 80019d6:	68da      	ldr	r2, [r3, #12]
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	60da      	str	r2, [r3, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 80019dc:	683b      	ldr	r3, [r7, #0]
 80019de:	691a      	ldr	r2, [r3, #16]
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	611a      	str	r2, [r3, #16]
    pObj->IO.SendData  = pIO->SendData;
 80019e4:	683b      	ldr	r3, [r7, #0]
 80019e6:	695a      	ldr	r2, [r3, #20]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	615a      	str	r2, [r3, #20]
    pObj->IO.RecvData  = pIO->RecvData;
 80019ec:	683b      	ldr	r3, [r7, #0]
 80019ee:	699a      	ldr	r2, [r3, #24]
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	619a      	str	r2, [r3, #24]
    pObj->IO.GetTick   = pIO->GetTick;
 80019f4:	683b      	ldr	r3, [r7, #0]
 80019f6:	69da      	ldr	r2, [r3, #28]
 80019f8:	687b      	ldr	r3, [r7, #4]
 80019fa:	61da      	str	r2, [r3, #28]

    pObj->Ctx.ReadReg   = ST7735_ReadRegWrap;
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	4a0f      	ldr	r2, [pc, #60]	@ (8001a3c <ST7735_RegisterBusIO+0x98>)
 8001a00:	625a      	str	r2, [r3, #36]	@ 0x24
    pObj->Ctx.WriteReg  = ST7735_WriteRegWrap;
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	4a0e      	ldr	r2, [pc, #56]	@ (8001a40 <ST7735_RegisterBusIO+0x9c>)
 8001a06:	621a      	str	r2, [r3, #32]
    pObj->Ctx.SendData  = ST7735_SendDataWrap;
 8001a08:	687b      	ldr	r3, [r7, #4]
 8001a0a:	4a0e      	ldr	r2, [pc, #56]	@ (8001a44 <ST7735_RegisterBusIO+0xa0>)
 8001a0c:	629a      	str	r2, [r3, #40]	@ 0x28
    pObj->Ctx.RecvData  = ST7735_RecvDataWrap;
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	4a0d      	ldr	r2, [pc, #52]	@ (8001a48 <ST7735_RegisterBusIO+0xa4>)
 8001a12:	62da      	str	r2, [r3, #44]	@ 0x2c
    pObj->Ctx.handle    = pObj;
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	687a      	ldr	r2, [r7, #4]
 8001a18:	631a      	str	r2, [r3, #48]	@ 0x30

    if(pObj->IO.Init != NULL)
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	681b      	ldr	r3, [r3, #0]
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d004      	beq.n	8001a2c <ST7735_RegisterBusIO+0x88>
    {
      ret = pObj->IO.Init();
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	681b      	ldr	r3, [r3, #0]
 8001a26:	4798      	blx	r3
 8001a28:	60f8      	str	r0, [r7, #12]
 8001a2a:	e002      	b.n	8001a32 <ST7735_RegisterBusIO+0x8e>
    }
    else
    {
      ret = ST7735_ERROR;
 8001a2c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001a30:	60fb      	str	r3, [r7, #12]
    }
  }

  return ret;
 8001a32:	68fb      	ldr	r3, [r7, #12]
}
 8001a34:	4618      	mov	r0, r3
 8001a36:	3710      	adds	r7, #16
 8001a38:	46bd      	mov	sp, r7
 8001a3a:	bd80      	pop	{r7, pc}
 8001a3c:	08002ead 	.word	0x08002ead
 8001a40:	08002ed5 	.word	0x08002ed5
 8001a44:	08002eff 	.word	0x08002eff
 8001a48:	08002f23 	.word	0x08002f23

08001a4c <ST7735_Init>:
  * @param  ColorCoding RGB mode
  * @param  Orientation Display orientation
  * @retval Component status
  */
int32_t ST7735_Init(ST7735_Object_t *pObj, uint32_t ColorCoding, ST7735_Ctx_t *pDriver)
{
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	b086      	sub	sp, #24
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	60f8      	str	r0, [r7, #12]
 8001a54:	60b9      	str	r1, [r7, #8]
 8001a56:	607a      	str	r2, [r7, #4]
  uint8_t tmp;
  int32_t ret;

  if(pObj == NULL)
 8001a58:	68fb      	ldr	r3, [r7, #12]
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d103      	bne.n	8001a66 <ST7735_Init+0x1a>
  {
    ret = ST7735_ERROR;
 8001a5e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001a62:	617b      	str	r3, [r7, #20]
 8001a64:	e3a6      	b.n	80021b4 <ST7735_Init+0x768>
  }
  else
  {
		/* Out of sleep mode, 0 args, delay 120ms */
    tmp = 0x00U;
 8001a66:	2300      	movs	r3, #0
 8001a68:	74fb      	strb	r3, [r7, #19]
    ret = st7735_write_reg(&pObj->Ctx, ST7735_SW_RESET, &tmp, 0);
 8001a6a:	68fb      	ldr	r3, [r7, #12]
 8001a6c:	f103 0020 	add.w	r0, r3, #32
 8001a70:	f107 0213 	add.w	r2, r7, #19
 8001a74:	2300      	movs	r3, #0
 8001a76:	2101      	movs	r1, #1
 8001a78:	f001 fa92 	bl	8002fa0 <st7735_write_reg>
 8001a7c:	6178      	str	r0, [r7, #20]
		(void)ST7735_IO_Delay(pObj, 120);
 8001a7e:	2178      	movs	r1, #120	@ 0x78
 8001a80:	68f8      	ldr	r0, [r7, #12]
 8001a82:	f001 fa60 	bl	8002f46 <ST7735_IO_Delay>
		
		tmp = 0x00U;
 8001a86:	2300      	movs	r3, #0
 8001a88:	74fb      	strb	r3, [r7, #19]
    ret = st7735_write_reg(&pObj->Ctx, ST7735_SW_RESET, &tmp, 0);
 8001a8a:	68fb      	ldr	r3, [r7, #12]
 8001a8c:	f103 0020 	add.w	r0, r3, #32
 8001a90:	f107 0213 	add.w	r2, r7, #19
 8001a94:	2300      	movs	r3, #0
 8001a96:	2101      	movs	r1, #1
 8001a98:	f001 fa82 	bl	8002fa0 <st7735_write_reg>
 8001a9c:	6178      	str	r0, [r7, #20]
		(void)ST7735_IO_Delay(pObj, 120);
 8001a9e:	2178      	movs	r1, #120	@ 0x78
 8001aa0:	68f8      	ldr	r0, [r7, #12]
 8001aa2:	f001 fa50 	bl	8002f46 <ST7735_IO_Delay>
		
    /* Out of sleep mode, 0 args, no delay */
    tmp = 0x00U;
 8001aa6:	2300      	movs	r3, #0
 8001aa8:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_SLEEP_OUT, &tmp, 1);
 8001aaa:	68fb      	ldr	r3, [r7, #12]
 8001aac:	f103 0020 	add.w	r0, r3, #32
 8001ab0:	f107 0213 	add.w	r2, r7, #19
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	2111      	movs	r1, #17
 8001ab8:	f001 fa72 	bl	8002fa0 <st7735_write_reg>
 8001abc:	4602      	mov	r2, r0
 8001abe:	697b      	ldr	r3, [r7, #20]
 8001ac0:	4413      	add	r3, r2
 8001ac2:	617b      	str	r3, [r7, #20]
    
		/* Frame rate ctrl - normal mode, 3 args:Rate = fosc/(1x2+40) * (LINE+2C+2D)*/
    ret += st7735_write_reg(&pObj->Ctx, ST7735_FRAME_RATE_CTRL1, &tmp, 0);
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	f103 0020 	add.w	r0, r3, #32
 8001aca:	f107 0213 	add.w	r2, r7, #19
 8001ace:	2300      	movs	r3, #0
 8001ad0:	21b1      	movs	r1, #177	@ 0xb1
 8001ad2:	f001 fa65 	bl	8002fa0 <st7735_write_reg>
 8001ad6:	4602      	mov	r2, r0
 8001ad8:	697b      	ldr	r3, [r7, #20]
 8001ada:	4413      	add	r3, r2
 8001adc:	617b      	str	r3, [r7, #20]
    tmp = 0x01U;
 8001ade:	2301      	movs	r3, #1
 8001ae0:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001ae2:	68fb      	ldr	r3, [r7, #12]
 8001ae4:	3320      	adds	r3, #32
 8001ae6:	f107 0113 	add.w	r1, r7, #19
 8001aea:	2201      	movs	r2, #1
 8001aec:	4618      	mov	r0, r3
 8001aee:	f001 fa6c 	bl	8002fca <st7735_send_data>
 8001af2:	4602      	mov	r2, r0
 8001af4:	697b      	ldr	r3, [r7, #20]
 8001af6:	4413      	add	r3, r2
 8001af8:	617b      	str	r3, [r7, #20]
    tmp = 0x2CU;
 8001afa:	232c      	movs	r3, #44	@ 0x2c
 8001afc:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001afe:	68fb      	ldr	r3, [r7, #12]
 8001b00:	3320      	adds	r3, #32
 8001b02:	f107 0113 	add.w	r1, r7, #19
 8001b06:	2201      	movs	r2, #1
 8001b08:	4618      	mov	r0, r3
 8001b0a:	f001 fa5e 	bl	8002fca <st7735_send_data>
 8001b0e:	4602      	mov	r2, r0
 8001b10:	697b      	ldr	r3, [r7, #20]
 8001b12:	4413      	add	r3, r2
 8001b14:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8001b16:	232d      	movs	r3, #45	@ 0x2d
 8001b18:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001b1a:	68fb      	ldr	r3, [r7, #12]
 8001b1c:	3320      	adds	r3, #32
 8001b1e:	f107 0113 	add.w	r1, r7, #19
 8001b22:	2201      	movs	r2, #1
 8001b24:	4618      	mov	r0, r3
 8001b26:	f001 fa50 	bl	8002fca <st7735_send_data>
 8001b2a:	4602      	mov	r2, r0
 8001b2c:	697b      	ldr	r3, [r7, #20]
 8001b2e:	4413      	add	r3, r2
 8001b30:	617b      	str	r3, [r7, #20]

    /* Frame rate control - idle mode, 3 args:Rate = fosc/(1x2+40) * (LINE+2C+2D) */
    tmp = 0x01U;
 8001b32:	2301      	movs	r3, #1
 8001b34:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_FRAME_RATE_CTRL2, &tmp, 1);
 8001b36:	68fb      	ldr	r3, [r7, #12]
 8001b38:	f103 0020 	add.w	r0, r3, #32
 8001b3c:	f107 0213 	add.w	r2, r7, #19
 8001b40:	2301      	movs	r3, #1
 8001b42:	21b2      	movs	r1, #178	@ 0xb2
 8001b44:	f001 fa2c 	bl	8002fa0 <st7735_write_reg>
 8001b48:	4602      	mov	r2, r0
 8001b4a:	697b      	ldr	r3, [r7, #20]
 8001b4c:	4413      	add	r3, r2
 8001b4e:	617b      	str	r3, [r7, #20]
    tmp = 0x2CU;
 8001b50:	232c      	movs	r3, #44	@ 0x2c
 8001b52:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	3320      	adds	r3, #32
 8001b58:	f107 0113 	add.w	r1, r7, #19
 8001b5c:	2201      	movs	r2, #1
 8001b5e:	4618      	mov	r0, r3
 8001b60:	f001 fa33 	bl	8002fca <st7735_send_data>
 8001b64:	4602      	mov	r2, r0
 8001b66:	697b      	ldr	r3, [r7, #20]
 8001b68:	4413      	add	r3, r2
 8001b6a:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8001b6c:	232d      	movs	r3, #45	@ 0x2d
 8001b6e:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001b70:	68fb      	ldr	r3, [r7, #12]
 8001b72:	3320      	adds	r3, #32
 8001b74:	f107 0113 	add.w	r1, r7, #19
 8001b78:	2201      	movs	r2, #1
 8001b7a:	4618      	mov	r0, r3
 8001b7c:	f001 fa25 	bl	8002fca <st7735_send_data>
 8001b80:	4602      	mov	r2, r0
 8001b82:	697b      	ldr	r3, [r7, #20]
 8001b84:	4413      	add	r3, r2
 8001b86:	617b      	str	r3, [r7, #20]

    /* Frame rate ctrl - partial mode, 6 args: Dot inversion mode, Line inversion mode */
    tmp = 0x01U;
 8001b88:	2301      	movs	r3, #1
 8001b8a:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_FRAME_RATE_CTRL3, &tmp, 1);
 8001b8c:	68fb      	ldr	r3, [r7, #12]
 8001b8e:	f103 0020 	add.w	r0, r3, #32
 8001b92:	f107 0213 	add.w	r2, r7, #19
 8001b96:	2301      	movs	r3, #1
 8001b98:	21b3      	movs	r1, #179	@ 0xb3
 8001b9a:	f001 fa01 	bl	8002fa0 <st7735_write_reg>
 8001b9e:	4602      	mov	r2, r0
 8001ba0:	697b      	ldr	r3, [r7, #20]
 8001ba2:	4413      	add	r3, r2
 8001ba4:	617b      	str	r3, [r7, #20]
    tmp = 0x2CU;
 8001ba6:	232c      	movs	r3, #44	@ 0x2c
 8001ba8:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001baa:	68fb      	ldr	r3, [r7, #12]
 8001bac:	3320      	adds	r3, #32
 8001bae:	f107 0113 	add.w	r1, r7, #19
 8001bb2:	2201      	movs	r2, #1
 8001bb4:	4618      	mov	r0, r3
 8001bb6:	f001 fa08 	bl	8002fca <st7735_send_data>
 8001bba:	4602      	mov	r2, r0
 8001bbc:	697b      	ldr	r3, [r7, #20]
 8001bbe:	4413      	add	r3, r2
 8001bc0:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8001bc2:	232d      	movs	r3, #45	@ 0x2d
 8001bc4:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001bc6:	68fb      	ldr	r3, [r7, #12]
 8001bc8:	3320      	adds	r3, #32
 8001bca:	f107 0113 	add.w	r1, r7, #19
 8001bce:	2201      	movs	r2, #1
 8001bd0:	4618      	mov	r0, r3
 8001bd2:	f001 f9fa 	bl	8002fca <st7735_send_data>
 8001bd6:	4602      	mov	r2, r0
 8001bd8:	697b      	ldr	r3, [r7, #20]
 8001bda:	4413      	add	r3, r2
 8001bdc:	617b      	str	r3, [r7, #20]
    tmp = 0x01U;
 8001bde:	2301      	movs	r3, #1
 8001be0:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001be2:	68fb      	ldr	r3, [r7, #12]
 8001be4:	3320      	adds	r3, #32
 8001be6:	f107 0113 	add.w	r1, r7, #19
 8001bea:	2201      	movs	r2, #1
 8001bec:	4618      	mov	r0, r3
 8001bee:	f001 f9ec 	bl	8002fca <st7735_send_data>
 8001bf2:	4602      	mov	r2, r0
 8001bf4:	697b      	ldr	r3, [r7, #20]
 8001bf6:	4413      	add	r3, r2
 8001bf8:	617b      	str	r3, [r7, #20]
    tmp = 0x2CU;
 8001bfa:	232c      	movs	r3, #44	@ 0x2c
 8001bfc:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001bfe:	68fb      	ldr	r3, [r7, #12]
 8001c00:	3320      	adds	r3, #32
 8001c02:	f107 0113 	add.w	r1, r7, #19
 8001c06:	2201      	movs	r2, #1
 8001c08:	4618      	mov	r0, r3
 8001c0a:	f001 f9de 	bl	8002fca <st7735_send_data>
 8001c0e:	4602      	mov	r2, r0
 8001c10:	697b      	ldr	r3, [r7, #20]
 8001c12:	4413      	add	r3, r2
 8001c14:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8001c16:	232d      	movs	r3, #45	@ 0x2d
 8001c18:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001c1a:	68fb      	ldr	r3, [r7, #12]
 8001c1c:	3320      	adds	r3, #32
 8001c1e:	f107 0113 	add.w	r1, r7, #19
 8001c22:	2201      	movs	r2, #1
 8001c24:	4618      	mov	r0, r3
 8001c26:	f001 f9d0 	bl	8002fca <st7735_send_data>
 8001c2a:	4602      	mov	r2, r0
 8001c2c:	697b      	ldr	r3, [r7, #20]
 8001c2e:	4413      	add	r3, r2
 8001c30:	617b      	str	r3, [r7, #20]

    /* Display inversion ctrl, 1 arg, no delay: No inversion */
    tmp = 0x07U;
 8001c32:	2307      	movs	r3, #7
 8001c34:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_FRAME_INVERSION_CTRL, &tmp, 1);
 8001c36:	68fb      	ldr	r3, [r7, #12]
 8001c38:	f103 0020 	add.w	r0, r3, #32
 8001c3c:	f107 0213 	add.w	r2, r7, #19
 8001c40:	2301      	movs	r3, #1
 8001c42:	21b4      	movs	r1, #180	@ 0xb4
 8001c44:	f001 f9ac 	bl	8002fa0 <st7735_write_reg>
 8001c48:	4602      	mov	r2, r0
 8001c4a:	697b      	ldr	r3, [r7, #20]
 8001c4c:	4413      	add	r3, r2
 8001c4e:	617b      	str	r3, [r7, #20]

    /* Power control, 3 args, no delay: -4.6V , AUTO mode */
    tmp = 0xA2U;
 8001c50:	23a2      	movs	r3, #162	@ 0xa2
 8001c52:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PWR_CTRL1, &tmp, 1);
 8001c54:	68fb      	ldr	r3, [r7, #12]
 8001c56:	f103 0020 	add.w	r0, r3, #32
 8001c5a:	f107 0213 	add.w	r2, r7, #19
 8001c5e:	2301      	movs	r3, #1
 8001c60:	21c0      	movs	r1, #192	@ 0xc0
 8001c62:	f001 f99d 	bl	8002fa0 <st7735_write_reg>
 8001c66:	4602      	mov	r2, r0
 8001c68:	697b      	ldr	r3, [r7, #20]
 8001c6a:	4413      	add	r3, r2
 8001c6c:	617b      	str	r3, [r7, #20]
    tmp = 0x02U;
 8001c6e:	2302      	movs	r3, #2
 8001c70:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001c72:	68fb      	ldr	r3, [r7, #12]
 8001c74:	3320      	adds	r3, #32
 8001c76:	f107 0113 	add.w	r1, r7, #19
 8001c7a:	2201      	movs	r2, #1
 8001c7c:	4618      	mov	r0, r3
 8001c7e:	f001 f9a4 	bl	8002fca <st7735_send_data>
 8001c82:	4602      	mov	r2, r0
 8001c84:	697b      	ldr	r3, [r7, #20]
 8001c86:	4413      	add	r3, r2
 8001c88:	617b      	str	r3, [r7, #20]
    tmp = 0x84U;
 8001c8a:	2384      	movs	r3, #132	@ 0x84
 8001c8c:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	3320      	adds	r3, #32
 8001c92:	f107 0113 	add.w	r1, r7, #19
 8001c96:	2201      	movs	r2, #1
 8001c98:	4618      	mov	r0, r3
 8001c9a:	f001 f996 	bl	8002fca <st7735_send_data>
 8001c9e:	4602      	mov	r2, r0
 8001ca0:	697b      	ldr	r3, [r7, #20]
 8001ca2:	4413      	add	r3, r2
 8001ca4:	617b      	str	r3, [r7, #20]

    /* Power control, 1 arg, no delay: VGH25 = 2.4C VGSEL = -10 VGH = 3 * AVDD */
    tmp = 0xC5U;
 8001ca6:	23c5      	movs	r3, #197	@ 0xc5
 8001ca8:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PWR_CTRL2, &tmp, 1);
 8001caa:	68fb      	ldr	r3, [r7, #12]
 8001cac:	f103 0020 	add.w	r0, r3, #32
 8001cb0:	f107 0213 	add.w	r2, r7, #19
 8001cb4:	2301      	movs	r3, #1
 8001cb6:	21c1      	movs	r1, #193	@ 0xc1
 8001cb8:	f001 f972 	bl	8002fa0 <st7735_write_reg>
 8001cbc:	4602      	mov	r2, r0
 8001cbe:	697b      	ldr	r3, [r7, #20]
 8001cc0:	4413      	add	r3, r2
 8001cc2:	617b      	str	r3, [r7, #20]

    /* Power control, 2 args, no delay: Opamp current small, Boost frequency */
    tmp = 0x0AU;
 8001cc4:	230a      	movs	r3, #10
 8001cc6:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PWR_CTRL3, &tmp, 1);
 8001cc8:	68fb      	ldr	r3, [r7, #12]
 8001cca:	f103 0020 	add.w	r0, r3, #32
 8001cce:	f107 0213 	add.w	r2, r7, #19
 8001cd2:	2301      	movs	r3, #1
 8001cd4:	21c2      	movs	r1, #194	@ 0xc2
 8001cd6:	f001 f963 	bl	8002fa0 <st7735_write_reg>
 8001cda:	4602      	mov	r2, r0
 8001cdc:	697b      	ldr	r3, [r7, #20]
 8001cde:	4413      	add	r3, r2
 8001ce0:	617b      	str	r3, [r7, #20]
    tmp = 0x00U;
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001ce6:	68fb      	ldr	r3, [r7, #12]
 8001ce8:	3320      	adds	r3, #32
 8001cea:	f107 0113 	add.w	r1, r7, #19
 8001cee:	2201      	movs	r2, #1
 8001cf0:	4618      	mov	r0, r3
 8001cf2:	f001 f96a 	bl	8002fca <st7735_send_data>
 8001cf6:	4602      	mov	r2, r0
 8001cf8:	697b      	ldr	r3, [r7, #20]
 8001cfa:	4413      	add	r3, r2
 8001cfc:	617b      	str	r3, [r7, #20]

    /* Power control, 2 args, no delay: BCLK/2, Opamp current small & Medium low */
    tmp = 0x8AU;
 8001cfe:	238a      	movs	r3, #138	@ 0x8a
 8001d00:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PWR_CTRL4, &tmp, 1);
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	f103 0020 	add.w	r0, r3, #32
 8001d08:	f107 0213 	add.w	r2, r7, #19
 8001d0c:	2301      	movs	r3, #1
 8001d0e:	21c3      	movs	r1, #195	@ 0xc3
 8001d10:	f001 f946 	bl	8002fa0 <st7735_write_reg>
 8001d14:	4602      	mov	r2, r0
 8001d16:	697b      	ldr	r3, [r7, #20]
 8001d18:	4413      	add	r3, r2
 8001d1a:	617b      	str	r3, [r7, #20]
    tmp = 0x2AU;
 8001d1c:	232a      	movs	r3, #42	@ 0x2a
 8001d1e:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001d20:	68fb      	ldr	r3, [r7, #12]
 8001d22:	3320      	adds	r3, #32
 8001d24:	f107 0113 	add.w	r1, r7, #19
 8001d28:	2201      	movs	r2, #1
 8001d2a:	4618      	mov	r0, r3
 8001d2c:	f001 f94d 	bl	8002fca <st7735_send_data>
 8001d30:	4602      	mov	r2, r0
 8001d32:	697b      	ldr	r3, [r7, #20]
 8001d34:	4413      	add	r3, r2
 8001d36:	617b      	str	r3, [r7, #20]

    /* Power control, 2 args, no delay */
    tmp = 0x8AU;
 8001d38:	238a      	movs	r3, #138	@ 0x8a
 8001d3a:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PWR_CTRL5, &tmp, 1);
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	f103 0020 	add.w	r0, r3, #32
 8001d42:	f107 0213 	add.w	r2, r7, #19
 8001d46:	2301      	movs	r3, #1
 8001d48:	21c4      	movs	r1, #196	@ 0xc4
 8001d4a:	f001 f929 	bl	8002fa0 <st7735_write_reg>
 8001d4e:	4602      	mov	r2, r0
 8001d50:	697b      	ldr	r3, [r7, #20]
 8001d52:	4413      	add	r3, r2
 8001d54:	617b      	str	r3, [r7, #20]
    tmp = 0xEEU;
 8001d56:	23ee      	movs	r3, #238	@ 0xee
 8001d58:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001d5a:	68fb      	ldr	r3, [r7, #12]
 8001d5c:	3320      	adds	r3, #32
 8001d5e:	f107 0113 	add.w	r1, r7, #19
 8001d62:	2201      	movs	r2, #1
 8001d64:	4618      	mov	r0, r3
 8001d66:	f001 f930 	bl	8002fca <st7735_send_data>
 8001d6a:	4602      	mov	r2, r0
 8001d6c:	697b      	ldr	r3, [r7, #20]
 8001d6e:	4413      	add	r3, r2
 8001d70:	617b      	str	r3, [r7, #20]

    /* Power control, 1 arg, no delay */
    tmp = 0x0EU;
 8001d72:	230e      	movs	r3, #14
 8001d74:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_VCOMH_VCOML_CTRL1, &tmp, 1);
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	f103 0020 	add.w	r0, r3, #32
 8001d7c:	f107 0213 	add.w	r2, r7, #19
 8001d80:	2301      	movs	r3, #1
 8001d82:	21c5      	movs	r1, #197	@ 0xc5
 8001d84:	f001 f90c 	bl	8002fa0 <st7735_write_reg>
 8001d88:	4602      	mov	r2, r0
 8001d8a:	697b      	ldr	r3, [r7, #20]
 8001d8c:	4413      	add	r3, r2
 8001d8e:	617b      	str	r3, [r7, #20]

		/* choose panel*/
		if (pDriver->Panel == HannStar_Panel) {
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	7b1b      	ldrb	r3, [r3, #12]
 8001d94:	2b00      	cmp	r3, #0
 8001d96:	d10d      	bne.n	8001db4 <ST7735_Init+0x368>
			ret += st7735_write_reg(&pObj->Ctx, ST7735_DISPLAY_INVERSION_ON, &tmp, 0);
 8001d98:	68fb      	ldr	r3, [r7, #12]
 8001d9a:	f103 0020 	add.w	r0, r3, #32
 8001d9e:	f107 0213 	add.w	r2, r7, #19
 8001da2:	2300      	movs	r3, #0
 8001da4:	2121      	movs	r1, #33	@ 0x21
 8001da6:	f001 f8fb 	bl	8002fa0 <st7735_write_reg>
 8001daa:	4602      	mov	r2, r0
 8001dac:	697b      	ldr	r3, [r7, #20]
 8001dae:	4413      	add	r3, r2
 8001db0:	617b      	str	r3, [r7, #20]
 8001db2:	e00c      	b.n	8001dce <ST7735_Init+0x382>
		} else {
			ret += st7735_write_reg(&pObj->Ctx, ST7735_DISPLAY_INVERSION_OFF, &tmp, 0);
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	f103 0020 	add.w	r0, r3, #32
 8001dba:	f107 0213 	add.w	r2, r7, #19
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	2120      	movs	r1, #32
 8001dc2:	f001 f8ed 	bl	8002fa0 <st7735_write_reg>
 8001dc6:	4602      	mov	r2, r0
 8001dc8:	697b      	ldr	r3, [r7, #20]
 8001dca:	4413      	add	r3, r2
 8001dcc:	617b      	str	r3, [r7, #20]
		}
    /* Set color mode, 1 arg, no delay */
    ret += st7735_write_reg(&pObj->Ctx, ST7735_COLOR_MODE, (uint8_t*)&ColorCoding, 1);
 8001dce:	68fb      	ldr	r3, [r7, #12]
 8001dd0:	f103 0020 	add.w	r0, r3, #32
 8001dd4:	f107 0208 	add.w	r2, r7, #8
 8001dd8:	2301      	movs	r3, #1
 8001dda:	213a      	movs	r1, #58	@ 0x3a
 8001ddc:	f001 f8e0 	bl	8002fa0 <st7735_write_reg>
 8001de0:	4602      	mov	r2, r0
 8001de2:	697b      	ldr	r3, [r7, #20]
 8001de4:	4413      	add	r3, r2
 8001de6:	617b      	str	r3, [r7, #20]

    /* Magical unicorn dust, 16 args, no delay */
    tmp = 0x02U;
 8001de8:	2302      	movs	r3, #2
 8001dea:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_PV_GAMMA_CTRL, &tmp, 1);
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	f103 0020 	add.w	r0, r3, #32
 8001df2:	f107 0213 	add.w	r2, r7, #19
 8001df6:	2301      	movs	r3, #1
 8001df8:	21e0      	movs	r1, #224	@ 0xe0
 8001dfa:	f001 f8d1 	bl	8002fa0 <st7735_write_reg>
 8001dfe:	4602      	mov	r2, r0
 8001e00:	697b      	ldr	r3, [r7, #20]
 8001e02:	4413      	add	r3, r2
 8001e04:	617b      	str	r3, [r7, #20]
    tmp = 0x1CU;
 8001e06:	231c      	movs	r3, #28
 8001e08:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	3320      	adds	r3, #32
 8001e0e:	f107 0113 	add.w	r1, r7, #19
 8001e12:	2201      	movs	r2, #1
 8001e14:	4618      	mov	r0, r3
 8001e16:	f001 f8d8 	bl	8002fca <st7735_send_data>
 8001e1a:	4602      	mov	r2, r0
 8001e1c:	697b      	ldr	r3, [r7, #20]
 8001e1e:	4413      	add	r3, r2
 8001e20:	617b      	str	r3, [r7, #20]
    tmp = 0x07U;
 8001e22:	2307      	movs	r3, #7
 8001e24:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e26:	68fb      	ldr	r3, [r7, #12]
 8001e28:	3320      	adds	r3, #32
 8001e2a:	f107 0113 	add.w	r1, r7, #19
 8001e2e:	2201      	movs	r2, #1
 8001e30:	4618      	mov	r0, r3
 8001e32:	f001 f8ca 	bl	8002fca <st7735_send_data>
 8001e36:	4602      	mov	r2, r0
 8001e38:	697b      	ldr	r3, [r7, #20]
 8001e3a:	4413      	add	r3, r2
 8001e3c:	617b      	str	r3, [r7, #20]
    tmp = 0x12U;
 8001e3e:	2312      	movs	r3, #18
 8001e40:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	3320      	adds	r3, #32
 8001e46:	f107 0113 	add.w	r1, r7, #19
 8001e4a:	2201      	movs	r2, #1
 8001e4c:	4618      	mov	r0, r3
 8001e4e:	f001 f8bc 	bl	8002fca <st7735_send_data>
 8001e52:	4602      	mov	r2, r0
 8001e54:	697b      	ldr	r3, [r7, #20]
 8001e56:	4413      	add	r3, r2
 8001e58:	617b      	str	r3, [r7, #20]
    tmp = 0x37U;
 8001e5a:	2337      	movs	r3, #55	@ 0x37
 8001e5c:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e5e:	68fb      	ldr	r3, [r7, #12]
 8001e60:	3320      	adds	r3, #32
 8001e62:	f107 0113 	add.w	r1, r7, #19
 8001e66:	2201      	movs	r2, #1
 8001e68:	4618      	mov	r0, r3
 8001e6a:	f001 f8ae 	bl	8002fca <st7735_send_data>
 8001e6e:	4602      	mov	r2, r0
 8001e70:	697b      	ldr	r3, [r7, #20]
 8001e72:	4413      	add	r3, r2
 8001e74:	617b      	str	r3, [r7, #20]
    tmp = 0x32U;
 8001e76:	2332      	movs	r3, #50	@ 0x32
 8001e78:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e7a:	68fb      	ldr	r3, [r7, #12]
 8001e7c:	3320      	adds	r3, #32
 8001e7e:	f107 0113 	add.w	r1, r7, #19
 8001e82:	2201      	movs	r2, #1
 8001e84:	4618      	mov	r0, r3
 8001e86:	f001 f8a0 	bl	8002fca <st7735_send_data>
 8001e8a:	4602      	mov	r2, r0
 8001e8c:	697b      	ldr	r3, [r7, #20]
 8001e8e:	4413      	add	r3, r2
 8001e90:	617b      	str	r3, [r7, #20]
    tmp = 0x29U;
 8001e92:	2329      	movs	r3, #41	@ 0x29
 8001e94:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001e96:	68fb      	ldr	r3, [r7, #12]
 8001e98:	3320      	adds	r3, #32
 8001e9a:	f107 0113 	add.w	r1, r7, #19
 8001e9e:	2201      	movs	r2, #1
 8001ea0:	4618      	mov	r0, r3
 8001ea2:	f001 f892 	bl	8002fca <st7735_send_data>
 8001ea6:	4602      	mov	r2, r0
 8001ea8:	697b      	ldr	r3, [r7, #20]
 8001eaa:	4413      	add	r3, r2
 8001eac:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8001eae:	232d      	movs	r3, #45	@ 0x2d
 8001eb0:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001eb2:	68fb      	ldr	r3, [r7, #12]
 8001eb4:	3320      	adds	r3, #32
 8001eb6:	f107 0113 	add.w	r1, r7, #19
 8001eba:	2201      	movs	r2, #1
 8001ebc:	4618      	mov	r0, r3
 8001ebe:	f001 f884 	bl	8002fca <st7735_send_data>
 8001ec2:	4602      	mov	r2, r0
 8001ec4:	697b      	ldr	r3, [r7, #20]
 8001ec6:	4413      	add	r3, r2
 8001ec8:	617b      	str	r3, [r7, #20]
    tmp = 0x29U;
 8001eca:	2329      	movs	r3, #41	@ 0x29
 8001ecc:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001ece:	68fb      	ldr	r3, [r7, #12]
 8001ed0:	3320      	adds	r3, #32
 8001ed2:	f107 0113 	add.w	r1, r7, #19
 8001ed6:	2201      	movs	r2, #1
 8001ed8:	4618      	mov	r0, r3
 8001eda:	f001 f876 	bl	8002fca <st7735_send_data>
 8001ede:	4602      	mov	r2, r0
 8001ee0:	697b      	ldr	r3, [r7, #20]
 8001ee2:	4413      	add	r3, r2
 8001ee4:	617b      	str	r3, [r7, #20]
    tmp = 0x25U;
 8001ee6:	2325      	movs	r3, #37	@ 0x25
 8001ee8:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001eea:	68fb      	ldr	r3, [r7, #12]
 8001eec:	3320      	adds	r3, #32
 8001eee:	f107 0113 	add.w	r1, r7, #19
 8001ef2:	2201      	movs	r2, #1
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	f001 f868 	bl	8002fca <st7735_send_data>
 8001efa:	4602      	mov	r2, r0
 8001efc:	697b      	ldr	r3, [r7, #20]
 8001efe:	4413      	add	r3, r2
 8001f00:	617b      	str	r3, [r7, #20]
    tmp = 0x2BU;
 8001f02:	232b      	movs	r3, #43	@ 0x2b
 8001f04:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f06:	68fb      	ldr	r3, [r7, #12]
 8001f08:	3320      	adds	r3, #32
 8001f0a:	f107 0113 	add.w	r1, r7, #19
 8001f0e:	2201      	movs	r2, #1
 8001f10:	4618      	mov	r0, r3
 8001f12:	f001 f85a 	bl	8002fca <st7735_send_data>
 8001f16:	4602      	mov	r2, r0
 8001f18:	697b      	ldr	r3, [r7, #20]
 8001f1a:	4413      	add	r3, r2
 8001f1c:	617b      	str	r3, [r7, #20]
    tmp = 0x39U;
 8001f1e:	2339      	movs	r3, #57	@ 0x39
 8001f20:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f22:	68fb      	ldr	r3, [r7, #12]
 8001f24:	3320      	adds	r3, #32
 8001f26:	f107 0113 	add.w	r1, r7, #19
 8001f2a:	2201      	movs	r2, #1
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	f001 f84c 	bl	8002fca <st7735_send_data>
 8001f32:	4602      	mov	r2, r0
 8001f34:	697b      	ldr	r3, [r7, #20]
 8001f36:	4413      	add	r3, r2
 8001f38:	617b      	str	r3, [r7, #20]
    tmp = 0x00U;
 8001f3a:	2300      	movs	r3, #0
 8001f3c:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f3e:	68fb      	ldr	r3, [r7, #12]
 8001f40:	3320      	adds	r3, #32
 8001f42:	f107 0113 	add.w	r1, r7, #19
 8001f46:	2201      	movs	r2, #1
 8001f48:	4618      	mov	r0, r3
 8001f4a:	f001 f83e 	bl	8002fca <st7735_send_data>
 8001f4e:	4602      	mov	r2, r0
 8001f50:	697b      	ldr	r3, [r7, #20]
 8001f52:	4413      	add	r3, r2
 8001f54:	617b      	str	r3, [r7, #20]
    tmp = 0x01U;
 8001f56:	2301      	movs	r3, #1
 8001f58:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f5a:	68fb      	ldr	r3, [r7, #12]
 8001f5c:	3320      	adds	r3, #32
 8001f5e:	f107 0113 	add.w	r1, r7, #19
 8001f62:	2201      	movs	r2, #1
 8001f64:	4618      	mov	r0, r3
 8001f66:	f001 f830 	bl	8002fca <st7735_send_data>
 8001f6a:	4602      	mov	r2, r0
 8001f6c:	697b      	ldr	r3, [r7, #20]
 8001f6e:	4413      	add	r3, r2
 8001f70:	617b      	str	r3, [r7, #20]
    tmp = 0x03U;
 8001f72:	2303      	movs	r3, #3
 8001f74:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	3320      	adds	r3, #32
 8001f7a:	f107 0113 	add.w	r1, r7, #19
 8001f7e:	2201      	movs	r2, #1
 8001f80:	4618      	mov	r0, r3
 8001f82:	f001 f822 	bl	8002fca <st7735_send_data>
 8001f86:	4602      	mov	r2, r0
 8001f88:	697b      	ldr	r3, [r7, #20]
 8001f8a:	4413      	add	r3, r2
 8001f8c:	617b      	str	r3, [r7, #20]
    tmp = 0x10U;
 8001f8e:	2310      	movs	r3, #16
 8001f90:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	3320      	adds	r3, #32
 8001f96:	f107 0113 	add.w	r1, r7, #19
 8001f9a:	2201      	movs	r2, #1
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	f001 f814 	bl	8002fca <st7735_send_data>
 8001fa2:	4602      	mov	r2, r0
 8001fa4:	697b      	ldr	r3, [r7, #20]
 8001fa6:	4413      	add	r3, r2
 8001fa8:	617b      	str	r3, [r7, #20]

    /* Sparkles and rainbows, 16 args, no delay */
    tmp = 0x03U;
 8001faa:	2303      	movs	r3, #3
 8001fac:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_NV_GAMMA_CTRL, &tmp, 1);
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	f103 0020 	add.w	r0, r3, #32
 8001fb4:	f107 0213 	add.w	r2, r7, #19
 8001fb8:	2301      	movs	r3, #1
 8001fba:	21e1      	movs	r1, #225	@ 0xe1
 8001fbc:	f000 fff0 	bl	8002fa0 <st7735_write_reg>
 8001fc0:	4602      	mov	r2, r0
 8001fc2:	697b      	ldr	r3, [r7, #20]
 8001fc4:	4413      	add	r3, r2
 8001fc6:	617b      	str	r3, [r7, #20]
    tmp = 0x1DU;
 8001fc8:	231d      	movs	r3, #29
 8001fca:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	3320      	adds	r3, #32
 8001fd0:	f107 0113 	add.w	r1, r7, #19
 8001fd4:	2201      	movs	r2, #1
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	f000 fff7 	bl	8002fca <st7735_send_data>
 8001fdc:	4602      	mov	r2, r0
 8001fde:	697b      	ldr	r3, [r7, #20]
 8001fe0:	4413      	add	r3, r2
 8001fe2:	617b      	str	r3, [r7, #20]
    tmp = 0x07U;
 8001fe4:	2307      	movs	r3, #7
 8001fe6:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	3320      	adds	r3, #32
 8001fec:	f107 0113 	add.w	r1, r7, #19
 8001ff0:	2201      	movs	r2, #1
 8001ff2:	4618      	mov	r0, r3
 8001ff4:	f000 ffe9 	bl	8002fca <st7735_send_data>
 8001ff8:	4602      	mov	r2, r0
 8001ffa:	697b      	ldr	r3, [r7, #20]
 8001ffc:	4413      	add	r3, r2
 8001ffe:	617b      	str	r3, [r7, #20]
    tmp = 0x06U;
 8002000:	2306      	movs	r3, #6
 8002002:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	3320      	adds	r3, #32
 8002008:	f107 0113 	add.w	r1, r7, #19
 800200c:	2201      	movs	r2, #1
 800200e:	4618      	mov	r0, r3
 8002010:	f000 ffdb 	bl	8002fca <st7735_send_data>
 8002014:	4602      	mov	r2, r0
 8002016:	697b      	ldr	r3, [r7, #20]
 8002018:	4413      	add	r3, r2
 800201a:	617b      	str	r3, [r7, #20]
    tmp = 0x2EU;
 800201c:	232e      	movs	r3, #46	@ 0x2e
 800201e:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	3320      	adds	r3, #32
 8002024:	f107 0113 	add.w	r1, r7, #19
 8002028:	2201      	movs	r2, #1
 800202a:	4618      	mov	r0, r3
 800202c:	f000 ffcd 	bl	8002fca <st7735_send_data>
 8002030:	4602      	mov	r2, r0
 8002032:	697b      	ldr	r3, [r7, #20]
 8002034:	4413      	add	r3, r2
 8002036:	617b      	str	r3, [r7, #20]
    tmp = 0x2CU;
 8002038:	232c      	movs	r3, #44	@ 0x2c
 800203a:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 800203c:	68fb      	ldr	r3, [r7, #12]
 800203e:	3320      	adds	r3, #32
 8002040:	f107 0113 	add.w	r1, r7, #19
 8002044:	2201      	movs	r2, #1
 8002046:	4618      	mov	r0, r3
 8002048:	f000 ffbf 	bl	8002fca <st7735_send_data>
 800204c:	4602      	mov	r2, r0
 800204e:	697b      	ldr	r3, [r7, #20]
 8002050:	4413      	add	r3, r2
 8002052:	617b      	str	r3, [r7, #20]
    tmp = 0x29U;
 8002054:	2329      	movs	r3, #41	@ 0x29
 8002056:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002058:	68fb      	ldr	r3, [r7, #12]
 800205a:	3320      	adds	r3, #32
 800205c:	f107 0113 	add.w	r1, r7, #19
 8002060:	2201      	movs	r2, #1
 8002062:	4618      	mov	r0, r3
 8002064:	f000 ffb1 	bl	8002fca <st7735_send_data>
 8002068:	4602      	mov	r2, r0
 800206a:	697b      	ldr	r3, [r7, #20]
 800206c:	4413      	add	r3, r2
 800206e:	617b      	str	r3, [r7, #20]
    tmp = 0x2DU;
 8002070:	232d      	movs	r3, #45	@ 0x2d
 8002072:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	3320      	adds	r3, #32
 8002078:	f107 0113 	add.w	r1, r7, #19
 800207c:	2201      	movs	r2, #1
 800207e:	4618      	mov	r0, r3
 8002080:	f000 ffa3 	bl	8002fca <st7735_send_data>
 8002084:	4602      	mov	r2, r0
 8002086:	697b      	ldr	r3, [r7, #20]
 8002088:	4413      	add	r3, r2
 800208a:	617b      	str	r3, [r7, #20]
    tmp = 0x2EU;
 800208c:	232e      	movs	r3, #46	@ 0x2e
 800208e:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	3320      	adds	r3, #32
 8002094:	f107 0113 	add.w	r1, r7, #19
 8002098:	2201      	movs	r2, #1
 800209a:	4618      	mov	r0, r3
 800209c:	f000 ff95 	bl	8002fca <st7735_send_data>
 80020a0:	4602      	mov	r2, r0
 80020a2:	697b      	ldr	r3, [r7, #20]
 80020a4:	4413      	add	r3, r2
 80020a6:	617b      	str	r3, [r7, #20]
    tmp = 0x2EU;
 80020a8:	232e      	movs	r3, #46	@ 0x2e
 80020aa:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	3320      	adds	r3, #32
 80020b0:	f107 0113 	add.w	r1, r7, #19
 80020b4:	2201      	movs	r2, #1
 80020b6:	4618      	mov	r0, r3
 80020b8:	f000 ff87 	bl	8002fca <st7735_send_data>
 80020bc:	4602      	mov	r2, r0
 80020be:	697b      	ldr	r3, [r7, #20]
 80020c0:	4413      	add	r3, r2
 80020c2:	617b      	str	r3, [r7, #20]
    tmp = 0x37U;
 80020c4:	2337      	movs	r3, #55	@ 0x37
 80020c6:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 80020c8:	68fb      	ldr	r3, [r7, #12]
 80020ca:	3320      	adds	r3, #32
 80020cc:	f107 0113 	add.w	r1, r7, #19
 80020d0:	2201      	movs	r2, #1
 80020d2:	4618      	mov	r0, r3
 80020d4:	f000 ff79 	bl	8002fca <st7735_send_data>
 80020d8:	4602      	mov	r2, r0
 80020da:	697b      	ldr	r3, [r7, #20]
 80020dc:	4413      	add	r3, r2
 80020de:	617b      	str	r3, [r7, #20]
    tmp = 0x3FU;
 80020e0:	233f      	movs	r3, #63	@ 0x3f
 80020e2:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	3320      	adds	r3, #32
 80020e8:	f107 0113 	add.w	r1, r7, #19
 80020ec:	2201      	movs	r2, #1
 80020ee:	4618      	mov	r0, r3
 80020f0:	f000 ff6b 	bl	8002fca <st7735_send_data>
 80020f4:	4602      	mov	r2, r0
 80020f6:	697b      	ldr	r3, [r7, #20]
 80020f8:	4413      	add	r3, r2
 80020fa:	617b      	str	r3, [r7, #20]
    tmp = 0x00U;
 80020fc:	2300      	movs	r3, #0
 80020fe:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	3320      	adds	r3, #32
 8002104:	f107 0113 	add.w	r1, r7, #19
 8002108:	2201      	movs	r2, #1
 800210a:	4618      	mov	r0, r3
 800210c:	f000 ff5d 	bl	8002fca <st7735_send_data>
 8002110:	4602      	mov	r2, r0
 8002112:	697b      	ldr	r3, [r7, #20]
 8002114:	4413      	add	r3, r2
 8002116:	617b      	str	r3, [r7, #20]
    tmp = 0x00U;
 8002118:	2300      	movs	r3, #0
 800211a:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 800211c:	68fb      	ldr	r3, [r7, #12]
 800211e:	3320      	adds	r3, #32
 8002120:	f107 0113 	add.w	r1, r7, #19
 8002124:	2201      	movs	r2, #1
 8002126:	4618      	mov	r0, r3
 8002128:	f000 ff4f 	bl	8002fca <st7735_send_data>
 800212c:	4602      	mov	r2, r0
 800212e:	697b      	ldr	r3, [r7, #20]
 8002130:	4413      	add	r3, r2
 8002132:	617b      	str	r3, [r7, #20]
    tmp = 0x02U;
 8002134:	2302      	movs	r3, #2
 8002136:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	3320      	adds	r3, #32
 800213c:	f107 0113 	add.w	r1, r7, #19
 8002140:	2201      	movs	r2, #1
 8002142:	4618      	mov	r0, r3
 8002144:	f000 ff41 	bl	8002fca <st7735_send_data>
 8002148:	4602      	mov	r2, r0
 800214a:	697b      	ldr	r3, [r7, #20]
 800214c:	4413      	add	r3, r2
 800214e:	617b      	str	r3, [r7, #20]
    tmp = 0x10U;
 8002150:	2310      	movs	r3, #16
 8002152:	74fb      	strb	r3, [r7, #19]
    ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002154:	68fb      	ldr	r3, [r7, #12]
 8002156:	3320      	adds	r3, #32
 8002158:	f107 0113 	add.w	r1, r7, #19
 800215c:	2201      	movs	r2, #1
 800215e:	4618      	mov	r0, r3
 8002160:	f000 ff33 	bl	8002fca <st7735_send_data>
 8002164:	4602      	mov	r2, r0
 8002166:	697b      	ldr	r3, [r7, #20]
 8002168:	4413      	add	r3, r2
 800216a:	617b      	str	r3, [r7, #20]

    /* Normal display on, no args, no delay */
    tmp  = 0x00U;
 800216c:	2300      	movs	r3, #0
 800216e:	74fb      	strb	r3, [r7, #19]
    ret += st7735_write_reg(&pObj->Ctx, ST7735_NORMAL_DISPLAY_OFF, &tmp, 1);
 8002170:	68fb      	ldr	r3, [r7, #12]
 8002172:	f103 0020 	add.w	r0, r3, #32
 8002176:	f107 0213 	add.w	r2, r7, #19
 800217a:	2301      	movs	r3, #1
 800217c:	2113      	movs	r1, #19
 800217e:	f000 ff0f 	bl	8002fa0 <st7735_write_reg>
 8002182:	4602      	mov	r2, r0
 8002184:	697b      	ldr	r3, [r7, #20]
 8002186:	4413      	add	r3, r2
 8002188:	617b      	str	r3, [r7, #20]

    /* Main screen turn on, no delay */
    ret += st7735_write_reg(&pObj->Ctx, ST7735_DISPLAY_ON, &tmp, 1);
 800218a:	68fb      	ldr	r3, [r7, #12]
 800218c:	f103 0020 	add.w	r0, r3, #32
 8002190:	f107 0213 	add.w	r2, r7, #19
 8002194:	2301      	movs	r3, #1
 8002196:	2129      	movs	r1, #41	@ 0x29
 8002198:	f000 ff02 	bl	8002fa0 <st7735_write_reg>
 800219c:	4602      	mov	r2, r0
 800219e:	697b      	ldr	r3, [r7, #20]
 80021a0:	4413      	add	r3, r2
 80021a2:	617b      	str	r3, [r7, #20]

    /* Set the display Orientation and the default display window */
    ret += ST7735_SetOrientation(pObj, pDriver);
 80021a4:	6879      	ldr	r1, [r7, #4]
 80021a6:	68f8      	ldr	r0, [r7, #12]
 80021a8:	f000 f944 	bl	8002434 <ST7735_SetOrientation>
 80021ac:	4602      	mov	r2, r0
 80021ae:	697b      	ldr	r3, [r7, #20]
 80021b0:	4413      	add	r3, r2
 80021b2:	617b      	str	r3, [r7, #20]
  }

  if(ret != ST7735_OK)
 80021b4:	697b      	ldr	r3, [r7, #20]
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	d002      	beq.n	80021c0 <ST7735_Init+0x774>
  {
    ret = ST7735_ERROR;
 80021ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80021be:	617b      	str	r3, [r7, #20]
  }

  return ret;
 80021c0:	697b      	ldr	r3, [r7, #20]
}
 80021c2:	4618      	mov	r0, r3
 80021c4:	3718      	adds	r7, #24
 80021c6:	46bd      	mov	sp, r7
 80021c8:	bd80      	pop	{r7, pc}

080021ca <ST7735_DeInit>:
  * @brief  De-Initialize the st7735 LCD Component.
  * @param  pObj Component object
  * @retval Component status
  */
int32_t ST7735_DeInit(ST7735_Object_t *pObj)
{
 80021ca:	b480      	push	{r7}
 80021cc:	b083      	sub	sp, #12
 80021ce:	af00      	add	r7, sp, #0
 80021d0:	6078      	str	r0, [r7, #4]
  (void)(pObj);

  return ST7735_OK;
 80021d2:	2300      	movs	r3, #0
}
 80021d4:	4618      	mov	r0, r3
 80021d6:	370c      	adds	r7, #12
 80021d8:	46bd      	mov	sp, r7
 80021da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021de:	4770      	bx	lr

080021e0 <ST7735_ReadID>:
  * @param  pObj Component object
  * @param  Id Component ID
  * @retval The component status
  */
int32_t ST7735_ReadID(ST7735_Object_t *pObj, uint32_t *Id)
{
 80021e0:	b580      	push	{r7, lr}
 80021e2:	b084      	sub	sp, #16
 80021e4:	af00      	add	r7, sp, #0
 80021e6:	6078      	str	r0, [r7, #4]
 80021e8:	6039      	str	r1, [r7, #0]
  int32_t ret;
  uint8_t tmp[3];

  if(st7735_read_reg(&pObj->Ctx, ST7735_READ_ID1, &tmp[0]) != ST7735_OK)
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	3320      	adds	r3, #32
 80021ee:	f107 0208 	add.w	r2, r7, #8
 80021f2:	21da      	movs	r1, #218	@ 0xda
 80021f4:	4618      	mov	r0, r3
 80021f6:	f000 fec0 	bl	8002f7a <st7735_read_reg>
 80021fa:	4603      	mov	r3, r0
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d003      	beq.n	8002208 <ST7735_ReadID+0x28>
  {
    ret = ST7735_ERROR;
 8002200:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002204:	60fb      	str	r3, [r7, #12]
 8002206:	e02d      	b.n	8002264 <ST7735_ReadID+0x84>
  }
  else if(st7735_read_reg(&pObj->Ctx, ST7735_READ_ID2, &tmp[1]) != ST7735_OK)
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	f103 0020 	add.w	r0, r3, #32
 800220e:	f107 0308 	add.w	r3, r7, #8
 8002212:	3301      	adds	r3, #1
 8002214:	461a      	mov	r2, r3
 8002216:	21db      	movs	r1, #219	@ 0xdb
 8002218:	f000 feaf 	bl	8002f7a <st7735_read_reg>
 800221c:	4603      	mov	r3, r0
 800221e:	2b00      	cmp	r3, #0
 8002220:	d003      	beq.n	800222a <ST7735_ReadID+0x4a>
  {
    ret = ST7735_ERROR;
 8002222:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002226:	60fb      	str	r3, [r7, #12]
 8002228:	e01c      	b.n	8002264 <ST7735_ReadID+0x84>
  }	
	else if(st7735_read_reg(&pObj->Ctx, ST7735_READ_ID3, &tmp[2]) != ST7735_OK)
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	f103 0020 	add.w	r0, r3, #32
 8002230:	f107 0308 	add.w	r3, r7, #8
 8002234:	3302      	adds	r3, #2
 8002236:	461a      	mov	r2, r3
 8002238:	21dc      	movs	r1, #220	@ 0xdc
 800223a:	f000 fe9e 	bl	8002f7a <st7735_read_reg>
 800223e:	4603      	mov	r3, r0
 8002240:	2b00      	cmp	r3, #0
 8002242:	d003      	beq.n	800224c <ST7735_ReadID+0x6c>
  {
    ret = ST7735_ERROR;
 8002244:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002248:	60fb      	str	r3, [r7, #12]
 800224a:	e00b      	b.n	8002264 <ST7735_ReadID+0x84>
  }	
  else
  {
		
    *Id = ((uint32_t)tmp[2])<<0| ((uint32_t)tmp[1])<<8 | ((uint32_t)tmp[0])<<16;
 800224c:	7abb      	ldrb	r3, [r7, #10]
 800224e:	461a      	mov	r2, r3
 8002250:	7a7b      	ldrb	r3, [r7, #9]
 8002252:	021b      	lsls	r3, r3, #8
 8002254:	431a      	orrs	r2, r3
 8002256:	7a3b      	ldrb	r3, [r7, #8]
 8002258:	041b      	lsls	r3, r3, #16
 800225a:	431a      	orrs	r2, r3
 800225c:	683b      	ldr	r3, [r7, #0]
 800225e:	601a      	str	r2, [r3, #0]
		//*Id = __rbit(*Id);
    ret = ST7735_OK;
 8002260:	2300      	movs	r3, #0
 8002262:	60fb      	str	r3, [r7, #12]
  }

  return ret;
 8002264:	68fb      	ldr	r3, [r7, #12]
}
 8002266:	4618      	mov	r0, r3
 8002268:	3710      	adds	r7, #16
 800226a:	46bd      	mov	sp, r7
 800226c:	bd80      	pop	{r7, pc}
	...

08002270 <ST7735_DisplayOn>:
  * @brief  Enables the Display.
  * @param  pObj Component object
  * @retval The component status
  */
int32_t ST7735_DisplayOn(ST7735_Object_t *pObj)
{
 8002270:	b580      	push	{r7, lr}
 8002272:	b084      	sub	sp, #16
 8002274:	af00      	add	r7, sp, #0
 8002276:	6078      	str	r0, [r7, #4]
  int32_t ret;
  uint8_t tmp = 0;
 8002278:	2300      	movs	r3, #0
 800227a:	72fb      	strb	r3, [r7, #11]

  ret = st7735_write_reg(&pObj->Ctx, ST7735_NORMAL_DISPLAY_OFF, &tmp, 0);
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	f103 0020 	add.w	r0, r3, #32
 8002282:	f107 020b 	add.w	r2, r7, #11
 8002286:	2300      	movs	r3, #0
 8002288:	2113      	movs	r1, #19
 800228a:	f000 fe89 	bl	8002fa0 <st7735_write_reg>
 800228e:	60f8      	str	r0, [r7, #12]
  (void)ST7735_IO_Delay(pObj, 10);
 8002290:	210a      	movs	r1, #10
 8002292:	6878      	ldr	r0, [r7, #4]
 8002294:	f000 fe57 	bl	8002f46 <ST7735_IO_Delay>
  ret += st7735_write_reg(&pObj->Ctx, ST7735_DISPLAY_ON, &tmp, 0);
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	f103 0020 	add.w	r0, r3, #32
 800229e:	f107 020b 	add.w	r2, r7, #11
 80022a2:	2300      	movs	r3, #0
 80022a4:	2129      	movs	r1, #41	@ 0x29
 80022a6:	f000 fe7b 	bl	8002fa0 <st7735_write_reg>
 80022aa:	4602      	mov	r2, r0
 80022ac:	68fb      	ldr	r3, [r7, #12]
 80022ae:	4413      	add	r3, r2
 80022b0:	60fb      	str	r3, [r7, #12]
  (void)ST7735_IO_Delay(pObj, 10);
 80022b2:	210a      	movs	r1, #10
 80022b4:	6878      	ldr	r0, [r7, #4]
 80022b6:	f000 fe46 	bl	8002f46 <ST7735_IO_Delay>
  ret += st7735_write_reg(&pObj->Ctx, ST7735_MADCTL, &tmp, 0);
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	f103 0020 	add.w	r0, r3, #32
 80022c0:	f107 020b 	add.w	r2, r7, #11
 80022c4:	2300      	movs	r3, #0
 80022c6:	2136      	movs	r1, #54	@ 0x36
 80022c8:	f000 fe6a 	bl	8002fa0 <st7735_write_reg>
 80022cc:	4602      	mov	r2, r0
 80022ce:	68fb      	ldr	r3, [r7, #12]
 80022d0:	4413      	add	r3, r2
 80022d2:	60fb      	str	r3, [r7, #12]
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80022d4:	4b16      	ldr	r3, [pc, #88]	@ (8002330 <ST7735_DisplayOn+0xc0>)
 80022d6:	7b1b      	ldrb	r3, [r3, #12]
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d10a      	bne.n	80022f2 <ST7735_DisplayOn+0x82>
			(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_BGR :
 80022dc:	4b14      	ldr	r3, [pc, #80]	@ (8002330 <ST7735_DisplayOn+0xc0>)
 80022de:	689b      	ldr	r3, [r3, #8]
 80022e0:	4a14      	ldr	r2, [pc, #80]	@ (8002334 <ST7735_DisplayOn+0xc4>)
 80022e2:	00db      	lsls	r3, r3, #3
 80022e4:	4413      	add	r3, r2
 80022e6:	685b      	ldr	r3, [r3, #4]
 80022e8:	b2db      	uxtb	r3, r3
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80022ea:	f043 0308 	orr.w	r3, r3, #8
 80022ee:	b2db      	uxtb	r3, r3
 80022f0:	e006      	b.n	8002300 <ST7735_DisplayOn+0x90>
			(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_RGB;
 80022f2:	4b0f      	ldr	r3, [pc, #60]	@ (8002330 <ST7735_DisplayOn+0xc0>)
 80022f4:	689b      	ldr	r3, [r3, #8]
 80022f6:	4a0f      	ldr	r2, [pc, #60]	@ (8002334 <ST7735_DisplayOn+0xc4>)
 80022f8:	00db      	lsls	r3, r3, #3
 80022fa:	4413      	add	r3, r2
 80022fc:	685b      	ldr	r3, [r3, #4]
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80022fe:	b2db      	uxtb	r3, r3
 8002300:	72fb      	strb	r3, [r7, #11]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	3320      	adds	r3, #32
 8002306:	f107 010b 	add.w	r1, r7, #11
 800230a:	2201      	movs	r2, #1
 800230c:	4618      	mov	r0, r3
 800230e:	f000 fe5c 	bl	8002fca <st7735_send_data>
 8002312:	4602      	mov	r2, r0
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	4413      	add	r3, r2
 8002318:	60fb      	str	r3, [r7, #12]
  if(ret != ST7735_OK)
 800231a:	68fb      	ldr	r3, [r7, #12]
 800231c:	2b00      	cmp	r3, #0
 800231e:	d002      	beq.n	8002326 <ST7735_DisplayOn+0xb6>
  {
    ret = ST7735_ERROR;
 8002320:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002324:	60fb      	str	r3, [r7, #12]
  }

  return ret;
 8002326:	68fb      	ldr	r3, [r7, #12]
}
 8002328:	4618      	mov	r0, r3
 800232a:	3710      	adds	r7, #16
 800232c:	46bd      	mov	sp, r7
 800232e:	bd80      	pop	{r7, pc}
 8002330:	240003e0 	.word	0x240003e0
 8002334:	24000070 	.word	0x24000070

08002338 <ST7735_DisplayOff>:
  * @brief  Disables the Display.
  * @param  pObj Component object
  * @retval The component status
  */
int32_t ST7735_DisplayOff(ST7735_Object_t *pObj)
{
 8002338:	b580      	push	{r7, lr}
 800233a:	b084      	sub	sp, #16
 800233c:	af00      	add	r7, sp, #0
 800233e:	6078      	str	r0, [r7, #4]
  int32_t ret;
  uint8_t tmp = 0;
 8002340:	2300      	movs	r3, #0
 8002342:	72fb      	strb	r3, [r7, #11]

  ret = st7735_write_reg(&pObj->Ctx, ST7735_NORMAL_DISPLAY_OFF, &tmp, 0);
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	f103 0020 	add.w	r0, r3, #32
 800234a:	f107 020b 	add.w	r2, r7, #11
 800234e:	2300      	movs	r3, #0
 8002350:	2113      	movs	r1, #19
 8002352:	f000 fe25 	bl	8002fa0 <st7735_write_reg>
 8002356:	60f8      	str	r0, [r7, #12]
  (void)ST7735_IO_Delay(pObj, 10);
 8002358:	210a      	movs	r1, #10
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f000 fdf3 	bl	8002f46 <ST7735_IO_Delay>
  ret += st7735_write_reg(&pObj->Ctx, ST7735_DISPLAY_OFF, &tmp, 0);
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	f103 0020 	add.w	r0, r3, #32
 8002366:	f107 020b 	add.w	r2, r7, #11
 800236a:	2300      	movs	r3, #0
 800236c:	2128      	movs	r1, #40	@ 0x28
 800236e:	f000 fe17 	bl	8002fa0 <st7735_write_reg>
 8002372:	4602      	mov	r2, r0
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	4413      	add	r3, r2
 8002378:	60fb      	str	r3, [r7, #12]
  (void)ST7735_IO_Delay(pObj, 10);
 800237a:	210a      	movs	r1, #10
 800237c:	6878      	ldr	r0, [r7, #4]
 800237e:	f000 fde2 	bl	8002f46 <ST7735_IO_Delay>
  ret += st7735_write_reg(&pObj->Ctx, ST7735_MADCTL, &tmp, 0);
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	f103 0020 	add.w	r0, r3, #32
 8002388:	f107 020b 	add.w	r2, r7, #11
 800238c:	2300      	movs	r3, #0
 800238e:	2136      	movs	r1, #54	@ 0x36
 8002390:	f000 fe06 	bl	8002fa0 <st7735_write_reg>
 8002394:	4602      	mov	r2, r0
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	4413      	add	r3, r2
 800239a:	60fb      	str	r3, [r7, #12]
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 800239c:	4b16      	ldr	r3, [pc, #88]	@ (80023f8 <ST7735_DisplayOff+0xc0>)
 800239e:	7b1b      	ldrb	r3, [r3, #12]
 80023a0:	2b00      	cmp	r3, #0
 80023a2:	d10a      	bne.n	80023ba <ST7735_DisplayOff+0x82>
		(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_BGR :
 80023a4:	4b14      	ldr	r3, [pc, #80]	@ (80023f8 <ST7735_DisplayOff+0xc0>)
 80023a6:	689b      	ldr	r3, [r3, #8]
 80023a8:	4a14      	ldr	r2, [pc, #80]	@ (80023fc <ST7735_DisplayOff+0xc4>)
 80023aa:	00db      	lsls	r3, r3, #3
 80023ac:	4413      	add	r3, r2
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	b2db      	uxtb	r3, r3
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80023b2:	f043 0308 	orr.w	r3, r3, #8
 80023b6:	b2db      	uxtb	r3, r3
 80023b8:	e006      	b.n	80023c8 <ST7735_DisplayOff+0x90>
		(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_RGB;
 80023ba:	4b0f      	ldr	r3, [pc, #60]	@ (80023f8 <ST7735_DisplayOff+0xc0>)
 80023bc:	689b      	ldr	r3, [r3, #8]
 80023be:	4a0f      	ldr	r2, [pc, #60]	@ (80023fc <ST7735_DisplayOff+0xc4>)
 80023c0:	00db      	lsls	r3, r3, #3
 80023c2:	4413      	add	r3, r2
 80023c4:	685b      	ldr	r3, [r3, #4]
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80023c6:	b2db      	uxtb	r3, r3
 80023c8:	72fb      	strb	r3, [r7, #11]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	3320      	adds	r3, #32
 80023ce:	f107 010b 	add.w	r1, r7, #11
 80023d2:	2201      	movs	r2, #1
 80023d4:	4618      	mov	r0, r3
 80023d6:	f000 fdf8 	bl	8002fca <st7735_send_data>
 80023da:	4602      	mov	r2, r0
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	4413      	add	r3, r2
 80023e0:	60fb      	str	r3, [r7, #12]
  if(ret != ST7735_OK)
 80023e2:	68fb      	ldr	r3, [r7, #12]
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d002      	beq.n	80023ee <ST7735_DisplayOff+0xb6>
  {
    ret = ST7735_ERROR;
 80023e8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80023ec:	60fb      	str	r3, [r7, #12]
  }

  return ret;
 80023ee:	68fb      	ldr	r3, [r7, #12]
}
 80023f0:	4618      	mov	r0, r3
 80023f2:	3710      	adds	r7, #16
 80023f4:	46bd      	mov	sp, r7
 80023f6:	bd80      	pop	{r7, pc}
 80023f8:	240003e0 	.word	0x240003e0
 80023fc:	24000070 	.word	0x24000070

08002400 <ST7735_SetBrightness>:
  * @param  pObj Component object
  * @param  Brightness   display brightness to be set
  * @retval Component status
  */
int32_t ST7735_SetBrightness(ST7735_Object_t *pObj, uint32_t Brightness)
{
 8002400:	b480      	push	{r7}
 8002402:	b083      	sub	sp, #12
 8002404:	af00      	add	r7, sp, #0
 8002406:	6078      	str	r0, [r7, #4]
 8002408:	6039      	str	r1, [r7, #0]
  (void)(pObj);
  (void)(Brightness);
	
  /* Feature not supported */
  return ST7735_ERROR;
 800240a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800240e:	4618      	mov	r0, r3
 8002410:	370c      	adds	r7, #12
 8002412:	46bd      	mov	sp, r7
 8002414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002418:	4770      	bx	lr

0800241a <ST7735_GetBrightness>:
  * @param  pObj Component object
  * @param  Brightness   display brightness to be returned
  * @retval Component status
  */
int32_t ST7735_GetBrightness(ST7735_Object_t *pObj, uint32_t *Brightness)
{
 800241a:	b480      	push	{r7}
 800241c:	b083      	sub	sp, #12
 800241e:	af00      	add	r7, sp, #0
 8002420:	6078      	str	r0, [r7, #4]
 8002422:	6039      	str	r1, [r7, #0]
  (void)(pObj);
  (void)(Brightness);

  /* Feature not supported */
  return ST7735_ERROR;
 8002424:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8002428:	4618      	mov	r0, r3
 800242a:	370c      	adds	r7, #12
 800242c:	46bd      	mov	sp, r7
 800242e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002432:	4770      	bx	lr

08002434 <ST7735_SetOrientation>:
  * @param  Orientation ST7735_ORIENTATION_PORTRAIT, ST7735_ORIENTATION_PORTRAIT_ROT180
  *                     ST7735_ORIENTATION_LANDSCAPE or ST7735_ORIENTATION_LANDSCAPE_ROT180
  * @retval The component status
  */
int32_t ST7735_SetOrientation(ST7735_Object_t *pObj, ST7735_Ctx_t *pDriver)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	b086      	sub	sp, #24
 8002438:	af02      	add	r7, sp, #8
 800243a:	6078      	str	r0, [r7, #4]
 800243c:	6039      	str	r1, [r7, #0]
  int32_t ret;
  uint8_t tmp;

  if((pDriver->Orientation == ST7735_ORIENTATION_PORTRAIT) || (pDriver->Orientation == ST7735_ORIENTATION_PORTRAIT_ROT180))
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	689b      	ldr	r3, [r3, #8]
 8002442:	2b00      	cmp	r3, #0
 8002444:	d003      	beq.n	800244e <ST7735_SetOrientation+0x1a>
 8002446:	683b      	ldr	r3, [r7, #0]
 8002448:	689b      	ldr	r3, [r3, #8]
 800244a:	2b01      	cmp	r3, #1
 800244c:	d119      	bne.n	8002482 <ST7735_SetOrientation+0x4e>
  {
		if (pDriver->Type == ST7735_0_9_inch_screen) {
 800244e:	683b      	ldr	r3, [r7, #0]
 8002450:	7b5b      	ldrb	r3, [r3, #13]
 8002452:	2b01      	cmp	r3, #1
 8002454:	d106      	bne.n	8002464 <ST7735_SetOrientation+0x30>
			ST7735Ctx.Width  = ST7735_0_9_WIDTH;
 8002456:	4b3c      	ldr	r3, [pc, #240]	@ (8002548 <ST7735_SetOrientation+0x114>)
 8002458:	2250      	movs	r2, #80	@ 0x50
 800245a:	601a      	str	r2, [r3, #0]
			ST7735Ctx.Height = ST7735_0_9_HEIGHT;
 800245c:	4b3a      	ldr	r3, [pc, #232]	@ (8002548 <ST7735_SetOrientation+0x114>)
 800245e:	22a0      	movs	r2, #160	@ 0xa0
 8002460:	605a      	str	r2, [r3, #4]
		if (pDriver->Type == ST7735_0_9_inch_screen) {
 8002462:	e028      	b.n	80024b6 <ST7735_SetOrientation+0x82>
		} else if (pDriver->Type == ST7735_1_8_inch_screen || pDriver->Type == ST7735_1_8a_inch_screen){
 8002464:	683b      	ldr	r3, [r7, #0]
 8002466:	7b5b      	ldrb	r3, [r3, #13]
 8002468:	2b00      	cmp	r3, #0
 800246a:	d003      	beq.n	8002474 <ST7735_SetOrientation+0x40>
 800246c:	683b      	ldr	r3, [r7, #0]
 800246e:	7b5b      	ldrb	r3, [r3, #13]
 8002470:	2b02      	cmp	r3, #2
 8002472:	d120      	bne.n	80024b6 <ST7735_SetOrientation+0x82>
			ST7735Ctx.Width  = ST7735_1_8_WIDTH;
 8002474:	4b34      	ldr	r3, [pc, #208]	@ (8002548 <ST7735_SetOrientation+0x114>)
 8002476:	2280      	movs	r2, #128	@ 0x80
 8002478:	601a      	str	r2, [r3, #0]
			ST7735Ctx.Height = ST7735_1_8_HEIGHT;
 800247a:	4b33      	ldr	r3, [pc, #204]	@ (8002548 <ST7735_SetOrientation+0x114>)
 800247c:	22a0      	movs	r2, #160	@ 0xa0
 800247e:	605a      	str	r2, [r3, #4]
		if (pDriver->Type == ST7735_0_9_inch_screen) {
 8002480:	e019      	b.n	80024b6 <ST7735_SetOrientation+0x82>
		}
  }
  else
  {
		if (pDriver->Type == ST7735_0_9_inch_screen) {
 8002482:	683b      	ldr	r3, [r7, #0]
 8002484:	7b5b      	ldrb	r3, [r3, #13]
 8002486:	2b01      	cmp	r3, #1
 8002488:	d106      	bne.n	8002498 <ST7735_SetOrientation+0x64>
			ST7735Ctx.Width  = ST7735_0_9_HEIGHT;
 800248a:	4b2f      	ldr	r3, [pc, #188]	@ (8002548 <ST7735_SetOrientation+0x114>)
 800248c:	22a0      	movs	r2, #160	@ 0xa0
 800248e:	601a      	str	r2, [r3, #0]
			ST7735Ctx.Height = ST7735_0_9_WIDTH;
 8002490:	4b2d      	ldr	r3, [pc, #180]	@ (8002548 <ST7735_SetOrientation+0x114>)
 8002492:	2250      	movs	r2, #80	@ 0x50
 8002494:	605a      	str	r2, [r3, #4]
 8002496:	e00f      	b.n	80024b8 <ST7735_SetOrientation+0x84>
		} else if (pDriver->Type == ST7735_1_8_inch_screen || pDriver->Type == ST7735_1_8a_inch_screen){
 8002498:	683b      	ldr	r3, [r7, #0]
 800249a:	7b5b      	ldrb	r3, [r3, #13]
 800249c:	2b00      	cmp	r3, #0
 800249e:	d003      	beq.n	80024a8 <ST7735_SetOrientation+0x74>
 80024a0:	683b      	ldr	r3, [r7, #0]
 80024a2:	7b5b      	ldrb	r3, [r3, #13]
 80024a4:	2b02      	cmp	r3, #2
 80024a6:	d107      	bne.n	80024b8 <ST7735_SetOrientation+0x84>
			ST7735Ctx.Width  = ST7735_1_8_HEIGHT;
 80024a8:	4b27      	ldr	r3, [pc, #156]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024aa:	22a0      	movs	r2, #160	@ 0xa0
 80024ac:	601a      	str	r2, [r3, #0]
			ST7735Ctx.Height = ST7735_1_8_WIDTH;
 80024ae:	4b26      	ldr	r3, [pc, #152]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024b0:	2280      	movs	r2, #128	@ 0x80
 80024b2:	605a      	str	r2, [r3, #4]
 80024b4:	e000      	b.n	80024b8 <ST7735_SetOrientation+0x84>
		if (pDriver->Type == ST7735_0_9_inch_screen) {
 80024b6:	bf00      	nop
		}
  }
	
	ST7735Ctx.Orientation = pDriver->Orientation;
 80024b8:	683b      	ldr	r3, [r7, #0]
 80024ba:	689b      	ldr	r3, [r3, #8]
 80024bc:	4a22      	ldr	r2, [pc, #136]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024be:	6093      	str	r3, [r2, #8]
	ST7735Ctx.Panel = pDriver->Panel;
 80024c0:	683b      	ldr	r3, [r7, #0]
 80024c2:	7b1a      	ldrb	r2, [r3, #12]
 80024c4:	4b20      	ldr	r3, [pc, #128]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024c6:	731a      	strb	r2, [r3, #12]
	ST7735Ctx.Type = pDriver->Type;
 80024c8:	683b      	ldr	r3, [r7, #0]
 80024ca:	7b5a      	ldrb	r2, [r3, #13]
 80024cc:	4b1e      	ldr	r3, [pc, #120]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024ce:	735a      	strb	r2, [r3, #13]
	
  ret = ST7735_SetDisplayWindow(pObj, 0U, 0U, ST7735Ctx.Width, ST7735Ctx.Height);
 80024d0:	4b1d      	ldr	r3, [pc, #116]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024d2:	681a      	ldr	r2, [r3, #0]
 80024d4:	4b1c      	ldr	r3, [pc, #112]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024d6:	685b      	ldr	r3, [r3, #4]
 80024d8:	9300      	str	r3, [sp, #0]
 80024da:	4613      	mov	r3, r2
 80024dc:	2200      	movs	r2, #0
 80024de:	2100      	movs	r1, #0
 80024e0:	6878      	ldr	r0, [r7, #4]
 80024e2:	f000 fbdf 	bl	8002ca4 <ST7735_SetDisplayWindow>
 80024e6:	60f8      	str	r0, [r7, #12]

	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80024e8:	4b17      	ldr	r3, [pc, #92]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024ea:	7b1b      	ldrb	r3, [r3, #12]
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	d10a      	bne.n	8002506 <ST7735_SetOrientation+0xd2>
			(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_BGR :
 80024f0:	4b15      	ldr	r3, [pc, #84]	@ (8002548 <ST7735_SetOrientation+0x114>)
 80024f2:	689b      	ldr	r3, [r3, #8]
 80024f4:	4a15      	ldr	r2, [pc, #84]	@ (800254c <ST7735_SetOrientation+0x118>)
 80024f6:	00db      	lsls	r3, r3, #3
 80024f8:	4413      	add	r3, r2
 80024fa:	685b      	ldr	r3, [r3, #4]
 80024fc:	b2db      	uxtb	r3, r3
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80024fe:	f043 0308 	orr.w	r3, r3, #8
 8002502:	b2db      	uxtb	r3, r3
 8002504:	e006      	b.n	8002514 <ST7735_SetOrientation+0xe0>
			(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_RGB;
 8002506:	4b10      	ldr	r3, [pc, #64]	@ (8002548 <ST7735_SetOrientation+0x114>)
 8002508:	689b      	ldr	r3, [r3, #8]
 800250a:	4a10      	ldr	r2, [pc, #64]	@ (800254c <ST7735_SetOrientation+0x118>)
 800250c:	00db      	lsls	r3, r3, #3
 800250e:	4413      	add	r3, r2
 8002510:	685b      	ldr	r3, [r3, #4]
	tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 8002512:	b2db      	uxtb	r3, r3
 8002514:	72fb      	strb	r3, [r7, #11]
  ret += st7735_write_reg(&pObj->Ctx, ST7735_MADCTL, &tmp, 1);
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	f103 0020 	add.w	r0, r3, #32
 800251c:	f107 020b 	add.w	r2, r7, #11
 8002520:	2301      	movs	r3, #1
 8002522:	2136      	movs	r1, #54	@ 0x36
 8002524:	f000 fd3c 	bl	8002fa0 <st7735_write_reg>
 8002528:	4602      	mov	r2, r0
 800252a:	68fb      	ldr	r3, [r7, #12]
 800252c:	4413      	add	r3, r2
 800252e:	60fb      	str	r3, [r7, #12]

  

  if(ret != ST7735_OK)
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	2b00      	cmp	r3, #0
 8002534:	d002      	beq.n	800253c <ST7735_SetOrientation+0x108>
  {
    ret = ST7735_ERROR;
 8002536:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800253a:	60fb      	str	r3, [r7, #12]
  }

  return ret;
 800253c:	68fb      	ldr	r3, [r7, #12]
}
 800253e:	4618      	mov	r0, r3
 8002540:	3710      	adds	r7, #16
 8002542:	46bd      	mov	sp, r7
 8002544:	bd80      	pop	{r7, pc}
 8002546:	bf00      	nop
 8002548:	240003e0 	.word	0x240003e0
 800254c:	24000070 	.word	0x24000070

08002550 <ST7735_GetOrientation>:
  * @param  Orientation ST7735_ORIENTATION_PORTRAIT, ST7735_ORIENTATION_LANDSCAPE
  *                      or ST7735_ORIENTATION_LANDSCAPE_ROT180
  * @retval The component status
  */
int32_t ST7735_GetOrientation(ST7735_Object_t *pObj, uint32_t *Orientation)
{
 8002550:	b480      	push	{r7}
 8002552:	b083      	sub	sp, #12
 8002554:	af00      	add	r7, sp, #0
 8002556:	6078      	str	r0, [r7, #4]
 8002558:	6039      	str	r1, [r7, #0]

  *Orientation = ST7735Ctx.Orientation;
 800255a:	4b05      	ldr	r3, [pc, #20]	@ (8002570 <ST7735_GetOrientation+0x20>)
 800255c:	689a      	ldr	r2, [r3, #8]
 800255e:	683b      	ldr	r3, [r7, #0]
 8002560:	601a      	str	r2, [r3, #0]

  return ST7735_OK;
 8002562:	2300      	movs	r3, #0
}
 8002564:	4618      	mov	r0, r3
 8002566:	370c      	adds	r7, #12
 8002568:	46bd      	mov	sp, r7
 800256a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800256e:	4770      	bx	lr
 8002570:	240003e0 	.word	0x240003e0

08002574 <ST7735_SetCursor>:
  * @param  Xpos specifies the X position.
  * @param  Ypos specifies the Y position.
  * @retval The component status
  */
int32_t ST7735_SetCursor(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos)
{
 8002574:	b580      	push	{r7, lr}
 8002576:	b086      	sub	sp, #24
 8002578:	af00      	add	r7, sp, #0
 800257a:	60f8      	str	r0, [r7, #12]
 800257c:	60b9      	str	r1, [r7, #8]
 800257e:	607a      	str	r2, [r7, #4]
  int32_t ret;
  uint8_t tmp;
	
	/* Cursor calibration */
	if(ST7735Ctx.Orientation <= ST7735_ORIENTATION_PORTRAIT_ROT180) {
 8002580:	4b59      	ldr	r3, [pc, #356]	@ (80026e8 <ST7735_SetCursor+0x174>)
 8002582:	689b      	ldr	r3, [r3, #8]
 8002584:	2b01      	cmp	r3, #1
 8002586:	d821      	bhi.n	80025cc <ST7735_SetCursor+0x58>
		if (ST7735Ctx.Type == ST7735_0_9_inch_screen) {		//0.96 ST7735
 8002588:	4b57      	ldr	r3, [pc, #348]	@ (80026e8 <ST7735_SetCursor+0x174>)
 800258a:	7b5b      	ldrb	r3, [r3, #13]
 800258c:	2b01      	cmp	r3, #1
 800258e:	d10e      	bne.n	80025ae <ST7735_SetCursor+0x3a>
			if (ST7735Ctx.Panel == HannStar_Panel) {
 8002590:	4b55      	ldr	r3, [pc, #340]	@ (80026e8 <ST7735_SetCursor+0x174>)
 8002592:	7b1b      	ldrb	r3, [r3, #12]
 8002594:	2b00      	cmp	r3, #0
 8002596:	d106      	bne.n	80025a6 <ST7735_SetCursor+0x32>
				Xpos += 26;
 8002598:	68bb      	ldr	r3, [r7, #8]
 800259a:	331a      	adds	r3, #26
 800259c:	60bb      	str	r3, [r7, #8]
				Ypos += 1;
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	3301      	adds	r3, #1
 80025a2:	607b      	str	r3, [r7, #4]
 80025a4:	e033      	b.n	800260e <ST7735_SetCursor+0x9a>
			} else {		//BOE Panel
				Xpos += 24;
 80025a6:	68bb      	ldr	r3, [r7, #8]
 80025a8:	3318      	adds	r3, #24
 80025aa:	60bb      	str	r3, [r7, #8]
 80025ac:	e02f      	b.n	800260e <ST7735_SetCursor+0x9a>
				Ypos += 0;
			}
		}
    else if(ST7735Ctx.Type == ST7735_1_8a_inch_screen){
 80025ae:	4b4e      	ldr	r3, [pc, #312]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025b0:	7b5b      	ldrb	r3, [r3, #13]
 80025b2:	2b02      	cmp	r3, #2
 80025b4:	d12b      	bne.n	800260e <ST7735_SetCursor+0x9a>
      if (ST7735Ctx.Panel == BOE_Panel) {
 80025b6:	4b4c      	ldr	r3, [pc, #304]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025b8:	7b1b      	ldrb	r3, [r3, #12]
 80025ba:	2b01      	cmp	r3, #1
 80025bc:	d127      	bne.n	800260e <ST7735_SetCursor+0x9a>
				Xpos += 2;
 80025be:	68bb      	ldr	r3, [r7, #8]
 80025c0:	3302      	adds	r3, #2
 80025c2:	60bb      	str	r3, [r7, #8]
				Ypos += 1;
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	3301      	adds	r3, #1
 80025c8:	607b      	str	r3, [r7, #4]
 80025ca:	e020      	b.n	800260e <ST7735_SetCursor+0x9a>
			}
    }
	} else {
		if (ST7735Ctx.Type == ST7735_0_9_inch_screen) {
 80025cc:	4b46      	ldr	r3, [pc, #280]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025ce:	7b5b      	ldrb	r3, [r3, #13]
 80025d0:	2b01      	cmp	r3, #1
 80025d2:	d10e      	bne.n	80025f2 <ST7735_SetCursor+0x7e>
			if (ST7735Ctx.Panel == HannStar_Panel) {		//0.96 ST7735
 80025d4:	4b44      	ldr	r3, [pc, #272]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025d6:	7b1b      	ldrb	r3, [r3, #12]
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d106      	bne.n	80025ea <ST7735_SetCursor+0x76>
				Xpos += 1;
 80025dc:	68bb      	ldr	r3, [r7, #8]
 80025de:	3301      	adds	r3, #1
 80025e0:	60bb      	str	r3, [r7, #8]
				Ypos += 26;
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	331a      	adds	r3, #26
 80025e6:	607b      	str	r3, [r7, #4]
 80025e8:	e011      	b.n	800260e <ST7735_SetCursor+0x9a>
			} else {		//BOE Panel
				Xpos += 0;
				Ypos += 24;
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	3318      	adds	r3, #24
 80025ee:	607b      	str	r3, [r7, #4]
 80025f0:	e00d      	b.n	800260e <ST7735_SetCursor+0x9a>
			}
		}
    else if(ST7735Ctx.Type == ST7735_1_8a_inch_screen){
 80025f2:	4b3d      	ldr	r3, [pc, #244]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025f4:	7b5b      	ldrb	r3, [r3, #13]
 80025f6:	2b02      	cmp	r3, #2
 80025f8:	d109      	bne.n	800260e <ST7735_SetCursor+0x9a>
      if (ST7735Ctx.Panel == BOE_Panel) {
 80025fa:	4b3b      	ldr	r3, [pc, #236]	@ (80026e8 <ST7735_SetCursor+0x174>)
 80025fc:	7b1b      	ldrb	r3, [r3, #12]
 80025fe:	2b01      	cmp	r3, #1
 8002600:	d105      	bne.n	800260e <ST7735_SetCursor+0x9a>
				Xpos += 1;
 8002602:	68bb      	ldr	r3, [r7, #8]
 8002604:	3301      	adds	r3, #1
 8002606:	60bb      	str	r3, [r7, #8]
				Ypos += 2;
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	3302      	adds	r3, #2
 800260c:	607b      	str	r3, [r7, #4]
			}
    }
	}
	
  ret = st7735_write_reg(&pObj->Ctx, ST7735_CASET, &tmp, 0);
 800260e:	68fb      	ldr	r3, [r7, #12]
 8002610:	f103 0020 	add.w	r0, r3, #32
 8002614:	f107 0213 	add.w	r2, r7, #19
 8002618:	2300      	movs	r3, #0
 800261a:	212a      	movs	r1, #42	@ 0x2a
 800261c:	f000 fcc0 	bl	8002fa0 <st7735_write_reg>
 8002620:	6178      	str	r0, [r7, #20]
  tmp = (uint8_t)(Xpos >> 8U);
 8002622:	68bb      	ldr	r3, [r7, #8]
 8002624:	0a1b      	lsrs	r3, r3, #8
 8002626:	b2db      	uxtb	r3, r3
 8002628:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 800262a:	68fb      	ldr	r3, [r7, #12]
 800262c:	3320      	adds	r3, #32
 800262e:	f107 0113 	add.w	r1, r7, #19
 8002632:	2201      	movs	r2, #1
 8002634:	4618      	mov	r0, r3
 8002636:	f000 fcc8 	bl	8002fca <st7735_send_data>
 800263a:	4602      	mov	r2, r0
 800263c:	697b      	ldr	r3, [r7, #20]
 800263e:	4413      	add	r3, r2
 8002640:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Xpos & 0xFFU);
 8002642:	68bb      	ldr	r3, [r7, #8]
 8002644:	b2db      	uxtb	r3, r3
 8002646:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002648:	68fb      	ldr	r3, [r7, #12]
 800264a:	3320      	adds	r3, #32
 800264c:	f107 0113 	add.w	r1, r7, #19
 8002650:	2201      	movs	r2, #1
 8002652:	4618      	mov	r0, r3
 8002654:	f000 fcb9 	bl	8002fca <st7735_send_data>
 8002658:	4602      	mov	r2, r0
 800265a:	697b      	ldr	r3, [r7, #20]
 800265c:	4413      	add	r3, r2
 800265e:	617b      	str	r3, [r7, #20]

  ret += st7735_write_reg(&pObj->Ctx, ST7735_RASET, &tmp, 0);
 8002660:	68fb      	ldr	r3, [r7, #12]
 8002662:	f103 0020 	add.w	r0, r3, #32
 8002666:	f107 0213 	add.w	r2, r7, #19
 800266a:	2300      	movs	r3, #0
 800266c:	212b      	movs	r1, #43	@ 0x2b
 800266e:	f000 fc97 	bl	8002fa0 <st7735_write_reg>
 8002672:	4602      	mov	r2, r0
 8002674:	697b      	ldr	r3, [r7, #20]
 8002676:	4413      	add	r3, r2
 8002678:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Ypos >> 8U);
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	0a1b      	lsrs	r3, r3, #8
 800267e:	b2db      	uxtb	r3, r3
 8002680:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002682:	68fb      	ldr	r3, [r7, #12]
 8002684:	3320      	adds	r3, #32
 8002686:	f107 0113 	add.w	r1, r7, #19
 800268a:	2201      	movs	r2, #1
 800268c:	4618      	mov	r0, r3
 800268e:	f000 fc9c 	bl	8002fca <st7735_send_data>
 8002692:	4602      	mov	r2, r0
 8002694:	697b      	ldr	r3, [r7, #20]
 8002696:	4413      	add	r3, r2
 8002698:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Ypos & 0xFFU);
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	b2db      	uxtb	r3, r3
 800269e:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 80026a0:	68fb      	ldr	r3, [r7, #12]
 80026a2:	3320      	adds	r3, #32
 80026a4:	f107 0113 	add.w	r1, r7, #19
 80026a8:	2201      	movs	r2, #1
 80026aa:	4618      	mov	r0, r3
 80026ac:	f000 fc8d 	bl	8002fca <st7735_send_data>
 80026b0:	4602      	mov	r2, r0
 80026b2:	697b      	ldr	r3, [r7, #20]
 80026b4:	4413      	add	r3, r2
 80026b6:	617b      	str	r3, [r7, #20]
  ret += st7735_write_reg(&pObj->Ctx, ST7735_WRITE_RAM, &tmp, 0);
 80026b8:	68fb      	ldr	r3, [r7, #12]
 80026ba:	f103 0020 	add.w	r0, r3, #32
 80026be:	f107 0213 	add.w	r2, r7, #19
 80026c2:	2300      	movs	r3, #0
 80026c4:	212c      	movs	r1, #44	@ 0x2c
 80026c6:	f000 fc6b 	bl	8002fa0 <st7735_write_reg>
 80026ca:	4602      	mov	r2, r0
 80026cc:	697b      	ldr	r3, [r7, #20]
 80026ce:	4413      	add	r3, r2
 80026d0:	617b      	str	r3, [r7, #20]

  if(ret != ST7735_OK)
 80026d2:	697b      	ldr	r3, [r7, #20]
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	d002      	beq.n	80026de <ST7735_SetCursor+0x16a>
  {
    ret = ST7735_ERROR;
 80026d8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80026dc:	617b      	str	r3, [r7, #20]
  }

  return ret;
 80026de:	697b      	ldr	r3, [r7, #20]
}
 80026e0:	4618      	mov	r0, r3
 80026e2:	3718      	adds	r7, #24
 80026e4:	46bd      	mov	sp, r7
 80026e6:	bd80      	pop	{r7, pc}
 80026e8:	240003e0 	.word	0x240003e0

080026ec <ST7735_DrawBitmap>:
  * @param  Ypos Bmp Y position in the LCD
  * @param  pBmp Bmp picture address.
  * @retval The component status
  */
int32_t ST7735_DrawBitmap(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint8_t *pBmp)
{
 80026ec:	b580      	push	{r7, lr}
 80026ee:	b090      	sub	sp, #64	@ 0x40
 80026f0:	af02      	add	r7, sp, #8
 80026f2:	60f8      	str	r0, [r7, #12]
 80026f4:	60b9      	str	r1, [r7, #8]
 80026f6:	607a      	str	r2, [r7, #4]
 80026f8:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 80026fa:	2300      	movs	r3, #0
 80026fc:	637b      	str	r3, [r7, #52]	@ 0x34
  uint32_t index, size, width, height, y_pos;
  uint8_t pixel_val[2], tmp;
  uint8_t *pbmp;
  uint32_t counter = 0;
 80026fe:	2300      	movs	r3, #0
 8002700:	62fb      	str	r3, [r7, #44]	@ 0x2c

  /* Get bitmap data address offset */
  index = (uint32_t)pBmp[10] + ((uint32_t)pBmp[11] << 8) + ((uint32_t)pBmp[12] << 16)  + ((uint32_t)pBmp[13] << 24);
 8002702:	683b      	ldr	r3, [r7, #0]
 8002704:	330a      	adds	r3, #10
 8002706:	781b      	ldrb	r3, [r3, #0]
 8002708:	461a      	mov	r2, r3
 800270a:	683b      	ldr	r3, [r7, #0]
 800270c:	330b      	adds	r3, #11
 800270e:	781b      	ldrb	r3, [r3, #0]
 8002710:	021b      	lsls	r3, r3, #8
 8002712:	441a      	add	r2, r3
 8002714:	683b      	ldr	r3, [r7, #0]
 8002716:	330c      	adds	r3, #12
 8002718:	781b      	ldrb	r3, [r3, #0]
 800271a:	041b      	lsls	r3, r3, #16
 800271c:	441a      	add	r2, r3
 800271e:	683b      	ldr	r3, [r7, #0]
 8002720:	330d      	adds	r3, #13
 8002722:	781b      	ldrb	r3, [r3, #0]
 8002724:	061b      	lsls	r3, r3, #24
 8002726:	4413      	add	r3, r2
 8002728:	62bb      	str	r3, [r7, #40]	@ 0x28

  /* Read bitmap width */
  width = (uint32_t)pBmp[18] + ((uint32_t)pBmp[19] << 8) + ((uint32_t)pBmp[20] << 16)  + ((uint32_t)pBmp[21] << 24);
 800272a:	683b      	ldr	r3, [r7, #0]
 800272c:	3312      	adds	r3, #18
 800272e:	781b      	ldrb	r3, [r3, #0]
 8002730:	461a      	mov	r2, r3
 8002732:	683b      	ldr	r3, [r7, #0]
 8002734:	3313      	adds	r3, #19
 8002736:	781b      	ldrb	r3, [r3, #0]
 8002738:	021b      	lsls	r3, r3, #8
 800273a:	441a      	add	r2, r3
 800273c:	683b      	ldr	r3, [r7, #0]
 800273e:	3314      	adds	r3, #20
 8002740:	781b      	ldrb	r3, [r3, #0]
 8002742:	041b      	lsls	r3, r3, #16
 8002744:	441a      	add	r2, r3
 8002746:	683b      	ldr	r3, [r7, #0]
 8002748:	3315      	adds	r3, #21
 800274a:	781b      	ldrb	r3, [r3, #0]
 800274c:	061b      	lsls	r3, r3, #24
 800274e:	4413      	add	r3, r2
 8002750:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Read bitmap height */
  height = (uint32_t)pBmp[22] + ((uint32_t)pBmp[23] << 8) + ((uint32_t)pBmp[24] << 16)  + ((uint32_t)pBmp[25] << 24);
 8002752:	683b      	ldr	r3, [r7, #0]
 8002754:	3316      	adds	r3, #22
 8002756:	781b      	ldrb	r3, [r3, #0]
 8002758:	461a      	mov	r2, r3
 800275a:	683b      	ldr	r3, [r7, #0]
 800275c:	3317      	adds	r3, #23
 800275e:	781b      	ldrb	r3, [r3, #0]
 8002760:	021b      	lsls	r3, r3, #8
 8002762:	441a      	add	r2, r3
 8002764:	683b      	ldr	r3, [r7, #0]
 8002766:	3318      	adds	r3, #24
 8002768:	781b      	ldrb	r3, [r3, #0]
 800276a:	041b      	lsls	r3, r3, #16
 800276c:	441a      	add	r2, r3
 800276e:	683b      	ldr	r3, [r7, #0]
 8002770:	3319      	adds	r3, #25
 8002772:	781b      	ldrb	r3, [r3, #0]
 8002774:	061b      	lsls	r3, r3, #24
 8002776:	4413      	add	r3, r2
 8002778:	623b      	str	r3, [r7, #32]

  /* Read bitmap size */
  size = (uint32_t)pBmp[2] + ((uint32_t)pBmp[3] << 8) + ((uint32_t)pBmp[4] << 16)  + ((uint32_t)pBmp[5] << 24);
 800277a:	683b      	ldr	r3, [r7, #0]
 800277c:	3302      	adds	r3, #2
 800277e:	781b      	ldrb	r3, [r3, #0]
 8002780:	461a      	mov	r2, r3
 8002782:	683b      	ldr	r3, [r7, #0]
 8002784:	3303      	adds	r3, #3
 8002786:	781b      	ldrb	r3, [r3, #0]
 8002788:	021b      	lsls	r3, r3, #8
 800278a:	441a      	add	r2, r3
 800278c:	683b      	ldr	r3, [r7, #0]
 800278e:	3304      	adds	r3, #4
 8002790:	781b      	ldrb	r3, [r3, #0]
 8002792:	041b      	lsls	r3, r3, #16
 8002794:	441a      	add	r2, r3
 8002796:	683b      	ldr	r3, [r7, #0]
 8002798:	3305      	adds	r3, #5
 800279a:	781b      	ldrb	r3, [r3, #0]
 800279c:	061b      	lsls	r3, r3, #24
 800279e:	4413      	add	r3, r2
 80027a0:	61fb      	str	r3, [r7, #28]
  size = size - index;
 80027a2:	69fa      	ldr	r2, [r7, #28]
 80027a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80027a6:	1ad3      	subs	r3, r2, r3
 80027a8:	61fb      	str	r3, [r7, #28]

  pbmp = pBmp + index;
 80027aa:	683a      	ldr	r2, [r7, #0]
 80027ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80027ae:	4413      	add	r3, r2
 80027b0:	633b      	str	r3, [r7, #48]	@ 0x30

  /* Remap Ypos, st7735 works with inverted X in case of bitmap */
  /* X = 0, cursor is on Top corner */
  y_pos = ST7735Ctx.Height - Ypos - height;
 80027b2:	4b51      	ldr	r3, [pc, #324]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80027b4:	685a      	ldr	r2, [r3, #4]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	1ad2      	subs	r2, r2, r3
 80027ba:	6a3b      	ldr	r3, [r7, #32]
 80027bc:	1ad3      	subs	r3, r2, r3
 80027be:	61bb      	str	r3, [r7, #24]

  if(ST7735_SetDisplayWindow(pObj, Xpos, y_pos, width, height) != ST7735_OK)
 80027c0:	6a3b      	ldr	r3, [r7, #32]
 80027c2:	9300      	str	r3, [sp, #0]
 80027c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80027c6:	69ba      	ldr	r2, [r7, #24]
 80027c8:	68b9      	ldr	r1, [r7, #8]
 80027ca:	68f8      	ldr	r0, [r7, #12]
 80027cc:	f000 fa6a 	bl	8002ca4 <ST7735_SetDisplayWindow>
 80027d0:	4603      	mov	r3, r0
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	d003      	beq.n	80027de <ST7735_DrawBitmap+0xf2>
  {
    ret = ST7735_ERROR;
 80027d6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80027da:	637b      	str	r3, [r7, #52]	@ 0x34
 80027dc:	e087      	b.n	80028ee <ST7735_DrawBitmap+0x202>
  }
  else
  {
    /* Set GRAM write direction and BGR = 0 */
    tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80027de:	4b46      	ldr	r3, [pc, #280]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80027e0:	7b1b      	ldrb	r3, [r3, #12]
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d109      	bne.n	80027fa <ST7735_DrawBitmap+0x10e>
					(uint8_t)OrientationTab[ST7735Ctx.Orientation][0] | LCD_BGR :
 80027e6:	4b44      	ldr	r3, [pc, #272]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80027e8:	689b      	ldr	r3, [r3, #8]
 80027ea:	4a44      	ldr	r2, [pc, #272]	@ (80028fc <ST7735_DrawBitmap+0x210>)
 80027ec:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80027f0:	b2db      	uxtb	r3, r3
    tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80027f2:	f043 0308 	orr.w	r3, r3, #8
 80027f6:	b2db      	uxtb	r3, r3
 80027f8:	e005      	b.n	8002806 <ST7735_DrawBitmap+0x11a>
					(uint8_t)OrientationTab[ST7735Ctx.Orientation][0] | LCD_RGB;
 80027fa:	4b3f      	ldr	r3, [pc, #252]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80027fc:	689b      	ldr	r3, [r3, #8]
 80027fe:	4a3f      	ldr	r2, [pc, #252]	@ (80028fc <ST7735_DrawBitmap+0x210>)
 8002800:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
    tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 8002804:	b2db      	uxtb	r3, r3
 8002806:	74fb      	strb	r3, [r7, #19]

    if(st7735_write_reg(&pObj->Ctx, ST7735_MADCTL, &tmp, 1) != ST7735_OK)
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	f103 0020 	add.w	r0, r3, #32
 800280e:	f107 0213 	add.w	r2, r7, #19
 8002812:	2301      	movs	r3, #1
 8002814:	2136      	movs	r1, #54	@ 0x36
 8002816:	f000 fbc3 	bl	8002fa0 <st7735_write_reg>
 800281a:	4603      	mov	r3, r0
 800281c:	2b00      	cmp	r3, #0
 800281e:	d003      	beq.n	8002828 <ST7735_DrawBitmap+0x13c>
    {
      ret = ST7735_ERROR;
 8002820:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002824:	637b      	str	r3, [r7, #52]	@ 0x34
 8002826:	e062      	b.n	80028ee <ST7735_DrawBitmap+0x202>
    }/* Set Cursor */
    else if(ST7735_SetCursor(pObj, Xpos, y_pos) != ST7735_OK)
 8002828:	69ba      	ldr	r2, [r7, #24]
 800282a:	68b9      	ldr	r1, [r7, #8]
 800282c:	68f8      	ldr	r0, [r7, #12]
 800282e:	f7ff fea1 	bl	8002574 <ST7735_SetCursor>
 8002832:	4603      	mov	r3, r0
 8002834:	2b00      	cmp	r3, #0
 8002836:	d003      	beq.n	8002840 <ST7735_DrawBitmap+0x154>
    {
      ret = ST7735_ERROR;
 8002838:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800283c:	637b      	str	r3, [r7, #52]	@ 0x34
 800283e:	e056      	b.n	80028ee <ST7735_DrawBitmap+0x202>
    }
    else
    {
      do
      {
        pixel_val[0] = *(pbmp + 1);
 8002840:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002842:	785b      	ldrb	r3, [r3, #1]
 8002844:	753b      	strb	r3, [r7, #20]
        pixel_val[1] = *(pbmp);
 8002846:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002848:	781b      	ldrb	r3, [r3, #0]
 800284a:	757b      	strb	r3, [r7, #21]
        if(st7735_send_data(&pObj->Ctx, pixel_val, 2U) != ST7735_OK)
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	3320      	adds	r3, #32
 8002850:	f107 0114 	add.w	r1, r7, #20
 8002854:	2202      	movs	r2, #2
 8002856:	4618      	mov	r0, r3
 8002858:	f000 fbb7 	bl	8002fca <st7735_send_data>
 800285c:	4603      	mov	r3, r0
 800285e:	2b00      	cmp	r3, #0
 8002860:	d003      	beq.n	800286a <ST7735_DrawBitmap+0x17e>
        {
          ret = ST7735_ERROR;
 8002862:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002866:	637b      	str	r3, [r7, #52]	@ 0x34
          break;
 8002868:	e009      	b.n	800287e <ST7735_DrawBitmap+0x192>
        }
        counter +=2U;
 800286a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800286c:	3302      	adds	r3, #2
 800286e:	62fb      	str	r3, [r7, #44]	@ 0x2c
        pbmp += 2;
 8002870:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002872:	3302      	adds	r3, #2
 8002874:	633b      	str	r3, [r7, #48]	@ 0x30
      }while(counter < size);
 8002876:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8002878:	69fb      	ldr	r3, [r7, #28]
 800287a:	429a      	cmp	r2, r3
 800287c:	d3e0      	bcc.n	8002840 <ST7735_DrawBitmap+0x154>

			tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 800287e:	4b1e      	ldr	r3, [pc, #120]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 8002880:	7b1b      	ldrb	r3, [r3, #12]
 8002882:	2b00      	cmp	r3, #0
 8002884:	d10a      	bne.n	800289c <ST7735_DrawBitmap+0x1b0>
						(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_BGR :
 8002886:	4b1c      	ldr	r3, [pc, #112]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 8002888:	689b      	ldr	r3, [r3, #8]
 800288a:	4a1c      	ldr	r2, [pc, #112]	@ (80028fc <ST7735_DrawBitmap+0x210>)
 800288c:	00db      	lsls	r3, r3, #3
 800288e:	4413      	add	r3, r2
 8002890:	685b      	ldr	r3, [r3, #4]
 8002892:	b2db      	uxtb	r3, r3
			tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 8002894:	f043 0308 	orr.w	r3, r3, #8
 8002898:	b2db      	uxtb	r3, r3
 800289a:	e006      	b.n	80028aa <ST7735_DrawBitmap+0x1be>
						(uint8_t)OrientationTab[ST7735Ctx.Orientation][1] | LCD_RGB;
 800289c:	4b16      	ldr	r3, [pc, #88]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 800289e:	689b      	ldr	r3, [r3, #8]
 80028a0:	4a16      	ldr	r2, [pc, #88]	@ (80028fc <ST7735_DrawBitmap+0x210>)
 80028a2:	00db      	lsls	r3, r3, #3
 80028a4:	4413      	add	r3, r2
 80028a6:	685b      	ldr	r3, [r3, #4]
			tmp = ST7735Ctx.Panel == HannStar_Panel ? 
 80028a8:	b2db      	uxtb	r3, r3
 80028aa:	74fb      	strb	r3, [r7, #19]
      if(st7735_write_reg(&pObj->Ctx, ST7735_MADCTL, &tmp, 1) != ST7735_OK)
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	f103 0020 	add.w	r0, r3, #32
 80028b2:	f107 0213 	add.w	r2, r7, #19
 80028b6:	2301      	movs	r3, #1
 80028b8:	2136      	movs	r1, #54	@ 0x36
 80028ba:	f000 fb71 	bl	8002fa0 <st7735_write_reg>
 80028be:	4603      	mov	r3, r0
 80028c0:	2b00      	cmp	r3, #0
 80028c2:	d003      	beq.n	80028cc <ST7735_DrawBitmap+0x1e0>
      {
        ret = ST7735_ERROR;
 80028c4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80028c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80028ca:	e010      	b.n	80028ee <ST7735_DrawBitmap+0x202>
      }
      else
      {
        if(ST7735_SetDisplayWindow(pObj, 0U, 0U, ST7735Ctx.Width, ST7735Ctx.Height) != ST7735_OK)
 80028cc:	4b0a      	ldr	r3, [pc, #40]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80028ce:	681a      	ldr	r2, [r3, #0]
 80028d0:	4b09      	ldr	r3, [pc, #36]	@ (80028f8 <ST7735_DrawBitmap+0x20c>)
 80028d2:	685b      	ldr	r3, [r3, #4]
 80028d4:	9300      	str	r3, [sp, #0]
 80028d6:	4613      	mov	r3, r2
 80028d8:	2200      	movs	r2, #0
 80028da:	2100      	movs	r1, #0
 80028dc:	68f8      	ldr	r0, [r7, #12]
 80028de:	f000 f9e1 	bl	8002ca4 <ST7735_SetDisplayWindow>
 80028e2:	4603      	mov	r3, r0
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	d002      	beq.n	80028ee <ST7735_DrawBitmap+0x202>
        {
          ret = ST7735_ERROR;
 80028e8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80028ec:	637b      	str	r3, [r7, #52]	@ 0x34
        }
      }
    }
  }

  return ret;
 80028ee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
}
 80028f0:	4618      	mov	r0, r3
 80028f2:	3738      	adds	r7, #56	@ 0x38
 80028f4:	46bd      	mov	sp, r7
 80028f6:	bd80      	pop	{r7, pc}
 80028f8:	240003e0 	.word	0x240003e0
 80028fc:	24000070 	.word	0x24000070

08002900 <ST7735_FillRGBRect>:
  * @param  Width  specifies the rectangle width.
  * @param  Height Specifies the rectangle height
  * @retval The component status
  */
int32_t ST7735_FillRGBRect(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint8_t *pData, uint32_t Width, uint32_t Height)
{
 8002900:	b580      	push	{r7, lr}
 8002902:	b088      	sub	sp, #32
 8002904:	af00      	add	r7, sp, #0
 8002906:	60f8      	str	r0, [r7, #12]
 8002908:	60b9      	str	r1, [r7, #8]
 800290a:	607a      	str	r2, [r7, #4]
 800290c:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 800290e:	2300      	movs	r3, #0
 8002910:	61fb      	str	r3, [r7, #28]
  static uint8_t pdata[640];
  uint8_t *rgb_data = pData;
 8002912:	683b      	ldr	r3, [r7, #0]
 8002914:	61bb      	str	r3, [r7, #24]
  uint32_t i, j;

  if(((Xpos + Width) > ST7735Ctx.Width) || ((Ypos + Height) > ST7735Ctx.Height))
 8002916:	68ba      	ldr	r2, [r7, #8]
 8002918:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800291a:	441a      	add	r2, r3
 800291c:	4b2b      	ldr	r3, [pc, #172]	@ (80029cc <ST7735_FillRGBRect+0xcc>)
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	429a      	cmp	r2, r3
 8002922:	d806      	bhi.n	8002932 <ST7735_FillRGBRect+0x32>
 8002924:	687a      	ldr	r2, [r7, #4]
 8002926:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002928:	441a      	add	r2, r3
 800292a:	4b28      	ldr	r3, [pc, #160]	@ (80029cc <ST7735_FillRGBRect+0xcc>)
 800292c:	685b      	ldr	r3, [r3, #4]
 800292e:	429a      	cmp	r2, r3
 8002930:	d903      	bls.n	800293a <ST7735_FillRGBRect+0x3a>
  {
    ret = ST7735_ERROR;
 8002932:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002936:	61fb      	str	r3, [r7, #28]
 8002938:	e042      	b.n	80029c0 <ST7735_FillRGBRect+0xc0>
  }/* Set Cursor */
  else
  {
    for(j = 0; j < Height; j++)
 800293a:	2300      	movs	r3, #0
 800293c:	613b      	str	r3, [r7, #16]
 800293e:	e03b      	b.n	80029b8 <ST7735_FillRGBRect+0xb8>
    {
      if(ST7735_SetCursor(pObj, Xpos, Ypos+j) != ST7735_OK)
 8002940:	687a      	ldr	r2, [r7, #4]
 8002942:	693b      	ldr	r3, [r7, #16]
 8002944:	4413      	add	r3, r2
 8002946:	461a      	mov	r2, r3
 8002948:	68b9      	ldr	r1, [r7, #8]
 800294a:	68f8      	ldr	r0, [r7, #12]
 800294c:	f7ff fe12 	bl	8002574 <ST7735_SetCursor>
 8002950:	4603      	mov	r3, r0
 8002952:	2b00      	cmp	r3, #0
 8002954:	d003      	beq.n	800295e <ST7735_FillRGBRect+0x5e>
      {
        ret = ST7735_ERROR;
 8002956:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800295a:	61fb      	str	r3, [r7, #28]
 800295c:	e029      	b.n	80029b2 <ST7735_FillRGBRect+0xb2>
      }
      else
      {
        for(i = 0; i < Width; i++)
 800295e:	2300      	movs	r3, #0
 8002960:	617b      	str	r3, [r7, #20]
 8002962:	e013      	b.n	800298c <ST7735_FillRGBRect+0x8c>
        {
          pdata[2U*i] = (uint8_t)(*(rgb_data));
 8002964:	697b      	ldr	r3, [r7, #20]
 8002966:	005b      	lsls	r3, r3, #1
 8002968:	69ba      	ldr	r2, [r7, #24]
 800296a:	7811      	ldrb	r1, [r2, #0]
 800296c:	4a18      	ldr	r2, [pc, #96]	@ (80029d0 <ST7735_FillRGBRect+0xd0>)
 800296e:	54d1      	strb	r1, [r2, r3]
          pdata[(2U*i) + 1U] = (uint8_t)(*(rgb_data + 1));
 8002970:	69bb      	ldr	r3, [r7, #24]
 8002972:	1c5a      	adds	r2, r3, #1
 8002974:	697b      	ldr	r3, [r7, #20]
 8002976:	005b      	lsls	r3, r3, #1
 8002978:	3301      	adds	r3, #1
 800297a:	7811      	ldrb	r1, [r2, #0]
 800297c:	4a14      	ldr	r2, [pc, #80]	@ (80029d0 <ST7735_FillRGBRect+0xd0>)
 800297e:	54d1      	strb	r1, [r2, r3]
          rgb_data +=2;
 8002980:	69bb      	ldr	r3, [r7, #24]
 8002982:	3302      	adds	r3, #2
 8002984:	61bb      	str	r3, [r7, #24]
        for(i = 0; i < Width; i++)
 8002986:	697b      	ldr	r3, [r7, #20]
 8002988:	3301      	adds	r3, #1
 800298a:	617b      	str	r3, [r7, #20]
 800298c:	697a      	ldr	r2, [r7, #20]
 800298e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002990:	429a      	cmp	r2, r3
 8002992:	d3e7      	bcc.n	8002964 <ST7735_FillRGBRect+0x64>
        }
        if(st7735_send_data(&pObj->Ctx, (uint8_t*)&pdata[0], 2U*Width) != ST7735_OK)
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	f103 0020 	add.w	r0, r3, #32
 800299a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800299c:	005b      	lsls	r3, r3, #1
 800299e:	461a      	mov	r2, r3
 80029a0:	490b      	ldr	r1, [pc, #44]	@ (80029d0 <ST7735_FillRGBRect+0xd0>)
 80029a2:	f000 fb12 	bl	8002fca <st7735_send_data>
 80029a6:	4603      	mov	r3, r0
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d002      	beq.n	80029b2 <ST7735_FillRGBRect+0xb2>
        {
          ret = ST7735_ERROR;
 80029ac:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80029b0:	61fb      	str	r3, [r7, #28]
    for(j = 0; j < Height; j++)
 80029b2:	693b      	ldr	r3, [r7, #16]
 80029b4:	3301      	adds	r3, #1
 80029b6:	613b      	str	r3, [r7, #16]
 80029b8:	693a      	ldr	r2, [r7, #16]
 80029ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80029bc:	429a      	cmp	r2, r3
 80029be:	d3bf      	bcc.n	8002940 <ST7735_FillRGBRect+0x40>
        }
      }
    }
  }

  return ret;
 80029c0:	69fb      	ldr	r3, [r7, #28]
}
 80029c2:	4618      	mov	r0, r3
 80029c4:	3720      	adds	r7, #32
 80029c6:	46bd      	mov	sp, r7
 80029c8:	bd80      	pop	{r7, pc}
 80029ca:	bf00      	nop
 80029cc:	240003e0 	.word	0x240003e0
 80029d0:	240003f0 	.word	0x240003f0

080029d4 <ST7735_DrawHLine>:
  * @param  Length specifies the Line length.
  * @param  Color  Specifies the RGB color in RGB565 format
  * @retval The component status
  */
int32_t ST7735_DrawHLine(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t Length, uint32_t Color)
{
 80029d4:	b580      	push	{r7, lr}
 80029d6:	b086      	sub	sp, #24
 80029d8:	af00      	add	r7, sp, #0
 80029da:	60f8      	str	r0, [r7, #12]
 80029dc:	60b9      	str	r1, [r7, #8]
 80029de:	607a      	str	r2, [r7, #4]
 80029e0:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 80029e2:	2300      	movs	r3, #0
 80029e4:	617b      	str	r3, [r7, #20]
  uint32_t i;
  static uint8_t pdata[640];
	
  if((Xpos + Length) > ST7735Ctx.Width)
 80029e6:	68ba      	ldr	r2, [r7, #8]
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	441a      	add	r2, r3
 80029ec:	4b1f      	ldr	r3, [pc, #124]	@ (8002a6c <ST7735_DrawHLine+0x98>)
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	429a      	cmp	r2, r3
 80029f2:	d903      	bls.n	80029fc <ST7735_DrawHLine+0x28>
  {
    ret = ST7735_ERROR;
 80029f4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80029f8:	617b      	str	r3, [r7, #20]
 80029fa:	e032      	b.n	8002a62 <ST7735_DrawHLine+0x8e>
  }/* Set Cursor */
  else if(ST7735_SetCursor(pObj, Xpos, Ypos) != ST7735_OK)
 80029fc:	687a      	ldr	r2, [r7, #4]
 80029fe:	68b9      	ldr	r1, [r7, #8]
 8002a00:	68f8      	ldr	r0, [r7, #12]
 8002a02:	f7ff fdb7 	bl	8002574 <ST7735_SetCursor>
 8002a06:	4603      	mov	r3, r0
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d003      	beq.n	8002a14 <ST7735_DrawHLine+0x40>
  {
    ret = ST7735_ERROR;
 8002a0c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002a10:	617b      	str	r3, [r7, #20]
 8002a12:	e026      	b.n	8002a62 <ST7735_DrawHLine+0x8e>
  }
  else
  {
    for(i = 0; i < Length; i++)
 8002a14:	2300      	movs	r3, #0
 8002a16:	613b      	str	r3, [r7, #16]
 8002a18:	e010      	b.n	8002a3c <ST7735_DrawHLine+0x68>
    {
      /* Exchange LSB and MSB to fit LCD specification */
      pdata[2U*i] = (uint8_t)(Color >> 8);
 8002a1a:	6a3b      	ldr	r3, [r7, #32]
 8002a1c:	0a1a      	lsrs	r2, r3, #8
 8002a1e:	693b      	ldr	r3, [r7, #16]
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	b2d1      	uxtb	r1, r2
 8002a24:	4a12      	ldr	r2, [pc, #72]	@ (8002a70 <ST7735_DrawHLine+0x9c>)
 8002a26:	54d1      	strb	r1, [r2, r3]
      pdata[(2U*i) + 1U] = (uint8_t)(Color);
 8002a28:	693b      	ldr	r3, [r7, #16]
 8002a2a:	005b      	lsls	r3, r3, #1
 8002a2c:	3301      	adds	r3, #1
 8002a2e:	6a3a      	ldr	r2, [r7, #32]
 8002a30:	b2d1      	uxtb	r1, r2
 8002a32:	4a0f      	ldr	r2, [pc, #60]	@ (8002a70 <ST7735_DrawHLine+0x9c>)
 8002a34:	54d1      	strb	r1, [r2, r3]
    for(i = 0; i < Length; i++)
 8002a36:	693b      	ldr	r3, [r7, #16]
 8002a38:	3301      	adds	r3, #1
 8002a3a:	613b      	str	r3, [r7, #16]
 8002a3c:	693a      	ldr	r2, [r7, #16]
 8002a3e:	683b      	ldr	r3, [r7, #0]
 8002a40:	429a      	cmp	r2, r3
 8002a42:	d3ea      	bcc.n	8002a1a <ST7735_DrawHLine+0x46>
			
//      pdata[(2U*i) + 1U] = (uint8_t)(Color >> 8);
//      pdata[2U*i] = (uint8_t)(Color);			
    }
    if(st7735_send_data(&pObj->Ctx, (uint8_t*)&pdata[0], 2U*Length) != ST7735_OK)
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	f103 0020 	add.w	r0, r3, #32
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	005b      	lsls	r3, r3, #1
 8002a4e:	461a      	mov	r2, r3
 8002a50:	4907      	ldr	r1, [pc, #28]	@ (8002a70 <ST7735_DrawHLine+0x9c>)
 8002a52:	f000 faba 	bl	8002fca <st7735_send_data>
 8002a56:	4603      	mov	r3, r0
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	d002      	beq.n	8002a62 <ST7735_DrawHLine+0x8e>
    {
      ret = ST7735_ERROR;
 8002a5c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002a60:	617b      	str	r3, [r7, #20]
    }
  }

  return ret;
 8002a62:	697b      	ldr	r3, [r7, #20]
}
 8002a64:	4618      	mov	r0, r3
 8002a66:	3718      	adds	r7, #24
 8002a68:	46bd      	mov	sp, r7
 8002a6a:	bd80      	pop	{r7, pc}
 8002a6c:	240003e0 	.word	0x240003e0
 8002a70:	24000670 	.word	0x24000670

08002a74 <ST7735_DrawVLine>:
  * @param  Ypos     specifies the Y position.
  * @param  Length   specifies the Line length.
  * @retval The component status
  */
int32_t ST7735_DrawVLine(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t Length, uint32_t Color)
{
 8002a74:	b580      	push	{r7, lr}
 8002a76:	b086      	sub	sp, #24
 8002a78:	af00      	add	r7, sp, #0
 8002a7a:	60f8      	str	r0, [r7, #12]
 8002a7c:	60b9      	str	r1, [r7, #8]
 8002a7e:	607a      	str	r2, [r7, #4]
 8002a80:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 8002a82:	2300      	movs	r3, #0
 8002a84:	617b      	str	r3, [r7, #20]
  uint32_t counter;

  if((Ypos + Length) > ST7735Ctx.Height)
 8002a86:	687a      	ldr	r2, [r7, #4]
 8002a88:	683b      	ldr	r3, [r7, #0]
 8002a8a:	441a      	add	r2, r3
 8002a8c:	4b12      	ldr	r3, [pc, #72]	@ (8002ad8 <ST7735_DrawVLine+0x64>)
 8002a8e:	685b      	ldr	r3, [r3, #4]
 8002a90:	429a      	cmp	r2, r3
 8002a92:	d903      	bls.n	8002a9c <ST7735_DrawVLine+0x28>
  {
    ret = ST7735_ERROR;
 8002a94:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002a98:	617b      	str	r3, [r7, #20]
 8002a9a:	e018      	b.n	8002ace <ST7735_DrawVLine+0x5a>
  }
  else
  {
    for(counter = 0; counter < Length; counter++)
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	613b      	str	r3, [r7, #16]
 8002aa0:	e011      	b.n	8002ac6 <ST7735_DrawVLine+0x52>
    {
      if(ST7735_SetPixel(pObj, Xpos, Ypos + counter, Color) != ST7735_OK)
 8002aa2:	687a      	ldr	r2, [r7, #4]
 8002aa4:	693b      	ldr	r3, [r7, #16]
 8002aa6:	441a      	add	r2, r3
 8002aa8:	6a3b      	ldr	r3, [r7, #32]
 8002aaa:	68b9      	ldr	r1, [r7, #8]
 8002aac:	68f8      	ldr	r0, [r7, #12]
 8002aae:	f000 f841 	bl	8002b34 <ST7735_SetPixel>
 8002ab2:	4603      	mov	r3, r0
 8002ab4:	2b00      	cmp	r3, #0
 8002ab6:	d003      	beq.n	8002ac0 <ST7735_DrawVLine+0x4c>
      {
        ret = ST7735_ERROR;
 8002ab8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002abc:	617b      	str	r3, [r7, #20]
        break;
 8002abe:	e006      	b.n	8002ace <ST7735_DrawVLine+0x5a>
    for(counter = 0; counter < Length; counter++)
 8002ac0:	693b      	ldr	r3, [r7, #16]
 8002ac2:	3301      	adds	r3, #1
 8002ac4:	613b      	str	r3, [r7, #16]
 8002ac6:	693a      	ldr	r2, [r7, #16]
 8002ac8:	683b      	ldr	r3, [r7, #0]
 8002aca:	429a      	cmp	r2, r3
 8002acc:	d3e9      	bcc.n	8002aa2 <ST7735_DrawVLine+0x2e>
      }
    }
  }

  return ret;
 8002ace:	697b      	ldr	r3, [r7, #20]
}
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	3718      	adds	r7, #24
 8002ad4:	46bd      	mov	sp, r7
 8002ad6:	bd80      	pop	{r7, pc}
 8002ad8:	240003e0 	.word	0x240003e0

08002adc <ST7735_FillRect>:
  * @param  Height Rectangle height
  * @param  Color Draw color
  * @retval Component status
  */
int32_t ST7735_FillRect(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t Width, uint32_t Height, uint32_t Color)
{
 8002adc:	b580      	push	{r7, lr}
 8002ade:	b08a      	sub	sp, #40	@ 0x28
 8002ae0:	af02      	add	r7, sp, #8
 8002ae2:	60f8      	str	r0, [r7, #12]
 8002ae4:	60b9      	str	r1, [r7, #8]
 8002ae6:	607a      	str	r2, [r7, #4]
 8002ae8:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 8002aea:	2300      	movs	r3, #0
 8002aec:	61fb      	str	r3, [r7, #28]
  uint32_t i, y_pos = Ypos;
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	617b      	str	r3, [r7, #20]

  for(i = 0; i < Height; i++)
 8002af2:	2300      	movs	r3, #0
 8002af4:	61bb      	str	r3, [r7, #24]
 8002af6:	e014      	b.n	8002b22 <ST7735_FillRect+0x46>
  {
    if(ST7735_DrawHLine(pObj, Xpos, y_pos, Width, Color) != ST7735_OK)
 8002af8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8002afa:	9300      	str	r3, [sp, #0]
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	697a      	ldr	r2, [r7, #20]
 8002b00:	68b9      	ldr	r1, [r7, #8]
 8002b02:	68f8      	ldr	r0, [r7, #12]
 8002b04:	f7ff ff66 	bl	80029d4 <ST7735_DrawHLine>
 8002b08:	4603      	mov	r3, r0
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d003      	beq.n	8002b16 <ST7735_FillRect+0x3a>
    {
      ret = ST7735_ERROR;
 8002b0e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002b12:	61fb      	str	r3, [r7, #28]
      break;
 8002b14:	e009      	b.n	8002b2a <ST7735_FillRect+0x4e>
    }
    y_pos++;
 8002b16:	697b      	ldr	r3, [r7, #20]
 8002b18:	3301      	adds	r3, #1
 8002b1a:	617b      	str	r3, [r7, #20]
  for(i = 0; i < Height; i++)
 8002b1c:	69bb      	ldr	r3, [r7, #24]
 8002b1e:	3301      	adds	r3, #1
 8002b20:	61bb      	str	r3, [r7, #24]
 8002b22:	69ba      	ldr	r2, [r7, #24]
 8002b24:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002b26:	429a      	cmp	r2, r3
 8002b28:	d3e6      	bcc.n	8002af8 <ST7735_FillRect+0x1c>
  }

  return ret;
 8002b2a:	69fb      	ldr	r3, [r7, #28]
}
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3720      	adds	r7, #32
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bd80      	pop	{r7, pc}

08002b34 <ST7735_SetPixel>:
  * @param  Ypos specifies the Y position.
  * @param  Color the RGB pixel color in RGB565 format
  * @retval The component status
  */
int32_t ST7735_SetPixel(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t Color)
{
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b086      	sub	sp, #24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	607a      	str	r2, [r7, #4]
 8002b40:	603b      	str	r3, [r7, #0]
  int32_t ret = ST7735_OK;
 8002b42:	2300      	movs	r3, #0
 8002b44:	617b      	str	r3, [r7, #20]
  uint16_t color;

  /* Exchange LSB and MSB to fit LCD specification */
  color = (uint16_t)((uint16_t)Color << 8);
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	b29b      	uxth	r3, r3
 8002b4a:	021b      	lsls	r3, r3, #8
 8002b4c:	b29b      	uxth	r3, r3
 8002b4e:	827b      	strh	r3, [r7, #18]
  color |= (uint16_t)((uint16_t)(Color >> 8));
 8002b50:	683b      	ldr	r3, [r7, #0]
 8002b52:	0a1b      	lsrs	r3, r3, #8
 8002b54:	b29a      	uxth	r2, r3
 8002b56:	8a7b      	ldrh	r3, [r7, #18]
 8002b58:	4313      	orrs	r3, r2
 8002b5a:	b29b      	uxth	r3, r3
 8002b5c:	827b      	strh	r3, [r7, #18]

  if((Xpos >= ST7735Ctx.Width) || (Ypos >= ST7735Ctx.Height))
 8002b5e:	4b16      	ldr	r3, [pc, #88]	@ (8002bb8 <ST7735_SetPixel+0x84>)
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	68ba      	ldr	r2, [r7, #8]
 8002b64:	429a      	cmp	r2, r3
 8002b66:	d204      	bcs.n	8002b72 <ST7735_SetPixel+0x3e>
 8002b68:	4b13      	ldr	r3, [pc, #76]	@ (8002bb8 <ST7735_SetPixel+0x84>)
 8002b6a:	685b      	ldr	r3, [r3, #4]
 8002b6c:	687a      	ldr	r2, [r7, #4]
 8002b6e:	429a      	cmp	r2, r3
 8002b70:	d303      	bcc.n	8002b7a <ST7735_SetPixel+0x46>
  {
    ret = ST7735_ERROR;
 8002b72:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002b76:	617b      	str	r3, [r7, #20]
 8002b78:	e019      	b.n	8002bae <ST7735_SetPixel+0x7a>
  }/* Set Cursor */
  else if(ST7735_SetCursor(pObj, Xpos, Ypos) != ST7735_OK)
 8002b7a:	687a      	ldr	r2, [r7, #4]
 8002b7c:	68b9      	ldr	r1, [r7, #8]
 8002b7e:	68f8      	ldr	r0, [r7, #12]
 8002b80:	f7ff fcf8 	bl	8002574 <ST7735_SetCursor>
 8002b84:	4603      	mov	r3, r0
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d003      	beq.n	8002b92 <ST7735_SetPixel+0x5e>
  {
    ret = ST7735_ERROR;
 8002b8a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002b8e:	617b      	str	r3, [r7, #20]
 8002b90:	e00d      	b.n	8002bae <ST7735_SetPixel+0x7a>
  }
  else
  {
    /* Write RAM data */
    if(st7735_send_data(&pObj->Ctx, (uint8_t*)&color, 2) != ST7735_OK)
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	3320      	adds	r3, #32
 8002b96:	f107 0112 	add.w	r1, r7, #18
 8002b9a:	2202      	movs	r2, #2
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	f000 fa14 	bl	8002fca <st7735_send_data>
 8002ba2:	4603      	mov	r3, r0
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d002      	beq.n	8002bae <ST7735_SetPixel+0x7a>
    {
      ret = ST7735_ERROR;
 8002ba8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002bac:	617b      	str	r3, [r7, #20]
    }
  }

  return ret;
 8002bae:	697b      	ldr	r3, [r7, #20]
}
 8002bb0:	4618      	mov	r0, r3
 8002bb2:	3718      	adds	r7, #24
 8002bb4:	46bd      	mov	sp, r7
 8002bb6:	bd80      	pop	{r7, pc}
 8002bb8:	240003e0 	.word	0x240003e0

08002bbc <ST7735_GetPixel>:
  * @param  Ypos specifies the Y position.
  * @param  Color the RGB pixel color in RGB565 format
  * @retval The component status
  */
int32_t ST7735_GetPixel(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t *Color)
{
 8002bbc:	b580      	push	{r7, lr}
 8002bbe:	b086      	sub	sp, #24
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	60f8      	str	r0, [r7, #12]
 8002bc4:	60b9      	str	r1, [r7, #8]
 8002bc6:	607a      	str	r2, [r7, #4]
 8002bc8:	603b      	str	r3, [r7, #0]
  uint8_t pixel_lsb, pixel_msb;
  uint8_t tmp;


  /* Set Cursor */
  ret = ST7735_SetCursor(pObj, Xpos, Ypos);
 8002bca:	687a      	ldr	r2, [r7, #4]
 8002bcc:	68b9      	ldr	r1, [r7, #8]
 8002bce:	68f8      	ldr	r0, [r7, #12]
 8002bd0:	f7ff fcd0 	bl	8002574 <ST7735_SetCursor>
 8002bd4:	6178      	str	r0, [r7, #20]

  /* Prepare to read LCD RAM */
  ret += st7735_read_reg(&pObj->Ctx, ST7735_READ_RAM, &tmp);   /* RAM read data command */
 8002bd6:	68fb      	ldr	r3, [r7, #12]
 8002bd8:	3320      	adds	r3, #32
 8002bda:	f107 0211 	add.w	r2, r7, #17
 8002bde:	212e      	movs	r1, #46	@ 0x2e
 8002be0:	4618      	mov	r0, r3
 8002be2:	f000 f9ca 	bl	8002f7a <st7735_read_reg>
 8002be6:	4602      	mov	r2, r0
 8002be8:	697b      	ldr	r3, [r7, #20]
 8002bea:	4413      	add	r3, r2
 8002bec:	617b      	str	r3, [r7, #20]

  /* Dummy read */
  ret += st7735_recv_data(&pObj->Ctx, &tmp, 1);
 8002bee:	68fb      	ldr	r3, [r7, #12]
 8002bf0:	3320      	adds	r3, #32
 8002bf2:	f107 0111 	add.w	r1, r7, #17
 8002bf6:	2201      	movs	r2, #1
 8002bf8:	4618      	mov	r0, r3
 8002bfa:	f000 f9f8 	bl	8002fee <st7735_recv_data>
 8002bfe:	4602      	mov	r2, r0
 8002c00:	697b      	ldr	r3, [r7, #20]
 8002c02:	4413      	add	r3, r2
 8002c04:	617b      	str	r3, [r7, #20]

  /* Read first part of the RGB888 data */
  ret += st7735_recv_data(&pObj->Ctx, &pixel_lsb, 1);
 8002c06:	68fb      	ldr	r3, [r7, #12]
 8002c08:	3320      	adds	r3, #32
 8002c0a:	f107 0113 	add.w	r1, r7, #19
 8002c0e:	2201      	movs	r2, #1
 8002c10:	4618      	mov	r0, r3
 8002c12:	f000 f9ec 	bl	8002fee <st7735_recv_data>
 8002c16:	4602      	mov	r2, r0
 8002c18:	697b      	ldr	r3, [r7, #20]
 8002c1a:	4413      	add	r3, r2
 8002c1c:	617b      	str	r3, [r7, #20]
  /* Read first part of the RGB888 data */
  ret += st7735_recv_data(&pObj->Ctx, &pixel_msb, 1);
 8002c1e:	68fb      	ldr	r3, [r7, #12]
 8002c20:	3320      	adds	r3, #32
 8002c22:	f107 0112 	add.w	r1, r7, #18
 8002c26:	2201      	movs	r2, #1
 8002c28:	4618      	mov	r0, r3
 8002c2a:	f000 f9e0 	bl	8002fee <st7735_recv_data>
 8002c2e:	4602      	mov	r2, r0
 8002c30:	697b      	ldr	r3, [r7, #20]
 8002c32:	4413      	add	r3, r2
 8002c34:	617b      	str	r3, [r7, #20]

  *Color = ((uint32_t)(pixel_lsb)) + ((uint32_t)(pixel_msb) << 8);
 8002c36:	7cfb      	ldrb	r3, [r7, #19]
 8002c38:	461a      	mov	r2, r3
 8002c3a:	7cbb      	ldrb	r3, [r7, #18]
 8002c3c:	021b      	lsls	r3, r3, #8
 8002c3e:	441a      	add	r2, r3
 8002c40:	683b      	ldr	r3, [r7, #0]
 8002c42:	601a      	str	r2, [r3, #0]

  if(ret != ST7735_OK)
 8002c44:	697b      	ldr	r3, [r7, #20]
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d002      	beq.n	8002c50 <ST7735_GetPixel+0x94>
  {
    ret = ST7735_ERROR;
 8002c4a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002c4e:	617b      	str	r3, [r7, #20]
  }

  return ret;
 8002c50:	697b      	ldr	r3, [r7, #20]
}
 8002c52:	4618      	mov	r0, r3
 8002c54:	3718      	adds	r7, #24
 8002c56:	46bd      	mov	sp, r7
 8002c58:	bd80      	pop	{r7, pc}
	...

08002c5c <ST7735_GetXSize>:
  * @brief  Get the LCD pixel Width.
  * @param  pObj Component object
  * @retval The Lcd Pixel Width
  */
int32_t ST7735_GetXSize(ST7735_Object_t *pObj, uint32_t *XSize)
{
 8002c5c:	b480      	push	{r7}
 8002c5e:	b083      	sub	sp, #12
 8002c60:	af00      	add	r7, sp, #0
 8002c62:	6078      	str	r0, [r7, #4]
 8002c64:	6039      	str	r1, [r7, #0]
  (void)pObj;

  *XSize = ST7735Ctx.Width;
 8002c66:	4b05      	ldr	r3, [pc, #20]	@ (8002c7c <ST7735_GetXSize+0x20>)
 8002c68:	681a      	ldr	r2, [r3, #0]
 8002c6a:	683b      	ldr	r3, [r7, #0]
 8002c6c:	601a      	str	r2, [r3, #0]

  return ST7735_OK;
 8002c6e:	2300      	movs	r3, #0
}
 8002c70:	4618      	mov	r0, r3
 8002c72:	370c      	adds	r7, #12
 8002c74:	46bd      	mov	sp, r7
 8002c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c7a:	4770      	bx	lr
 8002c7c:	240003e0 	.word	0x240003e0

08002c80 <ST7735_GetYSize>:
  * @brief  Get the LCD pixel Height.
  * @param  pObj Component object
  * @retval The Lcd Pixel Height
  */
int32_t ST7735_GetYSize(ST7735_Object_t *pObj, uint32_t *YSize)
{
 8002c80:	b480      	push	{r7}
 8002c82:	b083      	sub	sp, #12
 8002c84:	af00      	add	r7, sp, #0
 8002c86:	6078      	str	r0, [r7, #4]
 8002c88:	6039      	str	r1, [r7, #0]
  (void)pObj;

  *YSize = ST7735Ctx.Height;
 8002c8a:	4b05      	ldr	r3, [pc, #20]	@ (8002ca0 <ST7735_GetYSize+0x20>)
 8002c8c:	685a      	ldr	r2, [r3, #4]
 8002c8e:	683b      	ldr	r3, [r7, #0]
 8002c90:	601a      	str	r2, [r3, #0]

  return ST7735_OK;
 8002c92:	2300      	movs	r3, #0
}
 8002c94:	4618      	mov	r0, r3
 8002c96:	370c      	adds	r7, #12
 8002c98:	46bd      	mov	sp, r7
 8002c9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c9e:	4770      	bx	lr
 8002ca0:	240003e0 	.word	0x240003e0

08002ca4 <ST7735_SetDisplayWindow>:
  * @param  Height display window height.
  * @param  Width  display window width.
  * @retval Component status
  */
static int32_t ST7735_SetDisplayWindow(ST7735_Object_t *pObj, uint32_t Xpos, uint32_t Ypos, uint32_t Width, uint32_t Height)
{
 8002ca4:	b580      	push	{r7, lr}
 8002ca6:	b086      	sub	sp, #24
 8002ca8:	af00      	add	r7, sp, #0
 8002caa:	60f8      	str	r0, [r7, #12]
 8002cac:	60b9      	str	r1, [r7, #8]
 8002cae:	607a      	str	r2, [r7, #4]
 8002cb0:	603b      	str	r3, [r7, #0]
  int32_t ret;
  uint8_t tmp;

	/* Cursor calibration */
	if(ST7735Ctx.Orientation <= ST7735_ORIENTATION_PORTRAIT_ROT180) {
 8002cb2:	4b7d      	ldr	r3, [pc, #500]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002cb4:	689b      	ldr	r3, [r3, #8]
 8002cb6:	2b01      	cmp	r3, #1
 8002cb8:	d821      	bhi.n	8002cfe <ST7735_SetDisplayWindow+0x5a>
		if (ST7735Ctx.Type == ST7735_0_9_inch_screen) {		//0.96 ST7735
 8002cba:	4b7b      	ldr	r3, [pc, #492]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002cbc:	7b5b      	ldrb	r3, [r3, #13]
 8002cbe:	2b01      	cmp	r3, #1
 8002cc0:	d10e      	bne.n	8002ce0 <ST7735_SetDisplayWindow+0x3c>
			if (ST7735Ctx.Panel == HannStar_Panel) {
 8002cc2:	4b79      	ldr	r3, [pc, #484]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002cc4:	7b1b      	ldrb	r3, [r3, #12]
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d106      	bne.n	8002cd8 <ST7735_SetDisplayWindow+0x34>
				Xpos += 26;
 8002cca:	68bb      	ldr	r3, [r7, #8]
 8002ccc:	331a      	adds	r3, #26
 8002cce:	60bb      	str	r3, [r7, #8]
				Ypos += 1;
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	3301      	adds	r3, #1
 8002cd4:	607b      	str	r3, [r7, #4]
 8002cd6:	e036      	b.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
			} else {		//BOE Panel
				Xpos += 24;
 8002cd8:	68bb      	ldr	r3, [r7, #8]
 8002cda:	3318      	adds	r3, #24
 8002cdc:	60bb      	str	r3, [r7, #8]
 8002cde:	e032      	b.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
				Ypos += 0;
			}
		}
    else if(ST7735Ctx.Type == ST7735_1_8a_inch_screen){
 8002ce0:	4b71      	ldr	r3, [pc, #452]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002ce2:	7b5b      	ldrb	r3, [r3, #13]
 8002ce4:	2b02      	cmp	r3, #2
 8002ce6:	d12e      	bne.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
      if (ST7735Ctx.Panel == BOE_Panel) {
 8002ce8:	4b6f      	ldr	r3, [pc, #444]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002cea:	7b1b      	ldrb	r3, [r3, #12]
 8002cec:	2b01      	cmp	r3, #1
 8002cee:	d12a      	bne.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
				Xpos += 2;
 8002cf0:	68bb      	ldr	r3, [r7, #8]
 8002cf2:	3302      	adds	r3, #2
 8002cf4:	60bb      	str	r3, [r7, #8]
				Ypos += 1;
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	3301      	adds	r3, #1
 8002cfa:	607b      	str	r3, [r7, #4]
 8002cfc:	e023      	b.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
			}
    }
	} else {
		if (ST7735Ctx.Type == ST7735_0_9_inch_screen) {
 8002cfe:	4b6a      	ldr	r3, [pc, #424]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002d00:	7b5b      	ldrb	r3, [r3, #13]
 8002d02:	2b01      	cmp	r3, #1
 8002d04:	d111      	bne.n	8002d2a <ST7735_SetDisplayWindow+0x86>
			if (ST7735Ctx.Panel == HannStar_Panel) {		//0.96 ST7735
 8002d06:	4b68      	ldr	r3, [pc, #416]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002d08:	7b1b      	ldrb	r3, [r3, #12]
 8002d0a:	2b00      	cmp	r3, #0
 8002d0c:	d106      	bne.n	8002d1c <ST7735_SetDisplayWindow+0x78>
				Xpos += 1;
 8002d0e:	68bb      	ldr	r3, [r7, #8]
 8002d10:	3301      	adds	r3, #1
 8002d12:	60bb      	str	r3, [r7, #8]
				Ypos += 26;
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	331a      	adds	r3, #26
 8002d18:	607b      	str	r3, [r7, #4]
 8002d1a:	e014      	b.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
			} else {		//BOE Panel
				Xpos += 1;
 8002d1c:	68bb      	ldr	r3, [r7, #8]
 8002d1e:	3301      	adds	r3, #1
 8002d20:	60bb      	str	r3, [r7, #8]
				Ypos += 24;
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	3318      	adds	r3, #24
 8002d26:	607b      	str	r3, [r7, #4]
 8002d28:	e00d      	b.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
			}
		}
    else if(ST7735Ctx.Type == ST7735_1_8a_inch_screen){
 8002d2a:	4b5f      	ldr	r3, [pc, #380]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002d2c:	7b5b      	ldrb	r3, [r3, #13]
 8002d2e:	2b02      	cmp	r3, #2
 8002d30:	d109      	bne.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
      if (ST7735Ctx.Panel == BOE_Panel) {
 8002d32:	4b5d      	ldr	r3, [pc, #372]	@ (8002ea8 <ST7735_SetDisplayWindow+0x204>)
 8002d34:	7b1b      	ldrb	r3, [r3, #12]
 8002d36:	2b01      	cmp	r3, #1
 8002d38:	d105      	bne.n	8002d46 <ST7735_SetDisplayWindow+0xa2>
				Xpos += 1;
 8002d3a:	68bb      	ldr	r3, [r7, #8]
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	60bb      	str	r3, [r7, #8]
				Ypos += 2;
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	3302      	adds	r3, #2
 8002d44:	607b      	str	r3, [r7, #4]
			}
    }
	}
	
  /* Column addr set, 4 args, no delay: XSTART = Xpos, XEND = (Xpos + Width - 1) */
  ret = st7735_write_reg(&pObj->Ctx, ST7735_CASET, &tmp, 0);
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	f103 0020 	add.w	r0, r3, #32
 8002d4c:	f107 0213 	add.w	r2, r7, #19
 8002d50:	2300      	movs	r3, #0
 8002d52:	212a      	movs	r1, #42	@ 0x2a
 8002d54:	f000 f924 	bl	8002fa0 <st7735_write_reg>
 8002d58:	6178      	str	r0, [r7, #20]
  tmp = (uint8_t)(Xpos >> 8U);
 8002d5a:	68bb      	ldr	r3, [r7, #8]
 8002d5c:	0a1b      	lsrs	r3, r3, #8
 8002d5e:	b2db      	uxtb	r3, r3
 8002d60:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	3320      	adds	r3, #32
 8002d66:	f107 0113 	add.w	r1, r7, #19
 8002d6a:	2201      	movs	r2, #1
 8002d6c:	4618      	mov	r0, r3
 8002d6e:	f000 f92c 	bl	8002fca <st7735_send_data>
 8002d72:	4602      	mov	r2, r0
 8002d74:	697b      	ldr	r3, [r7, #20]
 8002d76:	4413      	add	r3, r2
 8002d78:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Xpos & 0xFFU);
 8002d7a:	68bb      	ldr	r3, [r7, #8]
 8002d7c:	b2db      	uxtb	r3, r3
 8002d7e:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002d80:	68fb      	ldr	r3, [r7, #12]
 8002d82:	3320      	adds	r3, #32
 8002d84:	f107 0113 	add.w	r1, r7, #19
 8002d88:	2201      	movs	r2, #1
 8002d8a:	4618      	mov	r0, r3
 8002d8c:	f000 f91d 	bl	8002fca <st7735_send_data>
 8002d90:	4602      	mov	r2, r0
 8002d92:	697b      	ldr	r3, [r7, #20]
 8002d94:	4413      	add	r3, r2
 8002d96:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)((Xpos + Width - 1U) >> 8U);
 8002d98:	68ba      	ldr	r2, [r7, #8]
 8002d9a:	683b      	ldr	r3, [r7, #0]
 8002d9c:	4413      	add	r3, r2
 8002d9e:	3b01      	subs	r3, #1
 8002da0:	0a1b      	lsrs	r3, r3, #8
 8002da2:	b2db      	uxtb	r3, r3
 8002da4:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	3320      	adds	r3, #32
 8002daa:	f107 0113 	add.w	r1, r7, #19
 8002dae:	2201      	movs	r2, #1
 8002db0:	4618      	mov	r0, r3
 8002db2:	f000 f90a 	bl	8002fca <st7735_send_data>
 8002db6:	4602      	mov	r2, r0
 8002db8:	697b      	ldr	r3, [r7, #20]
 8002dba:	4413      	add	r3, r2
 8002dbc:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)((Xpos + Width - 1U) & 0xFFU);
 8002dbe:	68bb      	ldr	r3, [r7, #8]
 8002dc0:	b2da      	uxtb	r2, r3
 8002dc2:	683b      	ldr	r3, [r7, #0]
 8002dc4:	b2db      	uxtb	r3, r3
 8002dc6:	4413      	add	r3, r2
 8002dc8:	b2db      	uxtb	r3, r3
 8002dca:	3b01      	subs	r3, #1
 8002dcc:	b2db      	uxtb	r3, r3
 8002dce:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002dd0:	68fb      	ldr	r3, [r7, #12]
 8002dd2:	3320      	adds	r3, #32
 8002dd4:	f107 0113 	add.w	r1, r7, #19
 8002dd8:	2201      	movs	r2, #1
 8002dda:	4618      	mov	r0, r3
 8002ddc:	f000 f8f5 	bl	8002fca <st7735_send_data>
 8002de0:	4602      	mov	r2, r0
 8002de2:	697b      	ldr	r3, [r7, #20]
 8002de4:	4413      	add	r3, r2
 8002de6:	617b      	str	r3, [r7, #20]

  /* Row addr set, 4 args, no delay: YSTART = Ypos, YEND = (Ypos + Height - 1) */
  ret += st7735_write_reg(&pObj->Ctx, ST7735_RASET, &tmp, 0);
 8002de8:	68fb      	ldr	r3, [r7, #12]
 8002dea:	f103 0020 	add.w	r0, r3, #32
 8002dee:	f107 0213 	add.w	r2, r7, #19
 8002df2:	2300      	movs	r3, #0
 8002df4:	212b      	movs	r1, #43	@ 0x2b
 8002df6:	f000 f8d3 	bl	8002fa0 <st7735_write_reg>
 8002dfa:	4602      	mov	r2, r0
 8002dfc:	697b      	ldr	r3, [r7, #20]
 8002dfe:	4413      	add	r3, r2
 8002e00:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Ypos >> 8U);
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	0a1b      	lsrs	r3, r3, #8
 8002e06:	b2db      	uxtb	r3, r3
 8002e08:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	3320      	adds	r3, #32
 8002e0e:	f107 0113 	add.w	r1, r7, #19
 8002e12:	2201      	movs	r2, #1
 8002e14:	4618      	mov	r0, r3
 8002e16:	f000 f8d8 	bl	8002fca <st7735_send_data>
 8002e1a:	4602      	mov	r2, r0
 8002e1c:	697b      	ldr	r3, [r7, #20]
 8002e1e:	4413      	add	r3, r2
 8002e20:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)(Ypos & 0xFFU);
 8002e22:	687b      	ldr	r3, [r7, #4]
 8002e24:	b2db      	uxtb	r3, r3
 8002e26:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	3320      	adds	r3, #32
 8002e2c:	f107 0113 	add.w	r1, r7, #19
 8002e30:	2201      	movs	r2, #1
 8002e32:	4618      	mov	r0, r3
 8002e34:	f000 f8c9 	bl	8002fca <st7735_send_data>
 8002e38:	4602      	mov	r2, r0
 8002e3a:	697b      	ldr	r3, [r7, #20]
 8002e3c:	4413      	add	r3, r2
 8002e3e:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)((Ypos + Height - 1U) >> 8U);
 8002e40:	687a      	ldr	r2, [r7, #4]
 8002e42:	6a3b      	ldr	r3, [r7, #32]
 8002e44:	4413      	add	r3, r2
 8002e46:	3b01      	subs	r3, #1
 8002e48:	0a1b      	lsrs	r3, r3, #8
 8002e4a:	b2db      	uxtb	r3, r3
 8002e4c:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	3320      	adds	r3, #32
 8002e52:	f107 0113 	add.w	r1, r7, #19
 8002e56:	2201      	movs	r2, #1
 8002e58:	4618      	mov	r0, r3
 8002e5a:	f000 f8b6 	bl	8002fca <st7735_send_data>
 8002e5e:	4602      	mov	r2, r0
 8002e60:	697b      	ldr	r3, [r7, #20]
 8002e62:	4413      	add	r3, r2
 8002e64:	617b      	str	r3, [r7, #20]
  tmp = (uint8_t)((Ypos + Height - 1U) & 0xFFU);
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	b2da      	uxtb	r2, r3
 8002e6a:	6a3b      	ldr	r3, [r7, #32]
 8002e6c:	b2db      	uxtb	r3, r3
 8002e6e:	4413      	add	r3, r2
 8002e70:	b2db      	uxtb	r3, r3
 8002e72:	3b01      	subs	r3, #1
 8002e74:	b2db      	uxtb	r3, r3
 8002e76:	74fb      	strb	r3, [r7, #19]
  ret += st7735_send_data(&pObj->Ctx, &tmp, 1);
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	3320      	adds	r3, #32
 8002e7c:	f107 0113 	add.w	r1, r7, #19
 8002e80:	2201      	movs	r2, #1
 8002e82:	4618      	mov	r0, r3
 8002e84:	f000 f8a1 	bl	8002fca <st7735_send_data>
 8002e88:	4602      	mov	r2, r0
 8002e8a:	697b      	ldr	r3, [r7, #20]
 8002e8c:	4413      	add	r3, r2
 8002e8e:	617b      	str	r3, [r7, #20]

  if(ret != ST7735_OK)
 8002e90:	697b      	ldr	r3, [r7, #20]
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d002      	beq.n	8002e9c <ST7735_SetDisplayWindow+0x1f8>
  {
    ret = ST7735_ERROR;
 8002e96:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8002e9a:	617b      	str	r3, [r7, #20]
  }

  return ret;
 8002e9c:	697b      	ldr	r3, [r7, #20]
}
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	3718      	adds	r7, #24
 8002ea2:	46bd      	mov	sp, r7
 8002ea4:	bd80      	pop	{r7, pc}
 8002ea6:	bf00      	nop
 8002ea8:	240003e0 	.word	0x240003e0

08002eac <ST7735_ReadRegWrap>:
  * @param  Reg  The target register address to write
  * @param  pData  The target register value to be written
  * @retval Component error status
  */
static int32_t ST7735_ReadRegWrap(void *Handle, uint8_t Reg, uint8_t* pData)
{
 8002eac:	b580      	push	{r7, lr}
 8002eae:	b086      	sub	sp, #24
 8002eb0:	af00      	add	r7, sp, #0
 8002eb2:	60f8      	str	r0, [r7, #12]
 8002eb4:	460b      	mov	r3, r1
 8002eb6:	607a      	str	r2, [r7, #4]
 8002eb8:	72fb      	strb	r3, [r7, #11]
  ST7735_Object_t *pObj = (ST7735_Object_t *)Handle;
 8002eba:	68fb      	ldr	r3, [r7, #12]
 8002ebc:	617b      	str	r3, [r7, #20]

  return pObj->IO.ReadReg(Reg, pData);
 8002ebe:	697b      	ldr	r3, [r7, #20]
 8002ec0:	691b      	ldr	r3, [r3, #16]
 8002ec2:	7afa      	ldrb	r2, [r7, #11]
 8002ec4:	6879      	ldr	r1, [r7, #4]
 8002ec6:	4610      	mov	r0, r2
 8002ec8:	4798      	blx	r3
 8002eca:	4603      	mov	r3, r0
}
 8002ecc:	4618      	mov	r0, r3
 8002ece:	3718      	adds	r7, #24
 8002ed0:	46bd      	mov	sp, r7
 8002ed2:	bd80      	pop	{r7, pc}

08002ed4 <ST7735_WriteRegWrap>:
  * @param  pData  The target register value to be written
  * @param  Length  buffer size to be written
  * @retval Component error status
  */
static int32_t ST7735_WriteRegWrap(void *Handle, uint8_t Reg, uint8_t *pData, uint32_t Length)
{
 8002ed4:	b580      	push	{r7, lr}
 8002ed6:	b086      	sub	sp, #24
 8002ed8:	af00      	add	r7, sp, #0
 8002eda:	60f8      	str	r0, [r7, #12]
 8002edc:	607a      	str	r2, [r7, #4]
 8002ede:	603b      	str	r3, [r7, #0]
 8002ee0:	460b      	mov	r3, r1
 8002ee2:	72fb      	strb	r3, [r7, #11]
  ST7735_Object_t *pObj = (ST7735_Object_t *)Handle;
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	617b      	str	r3, [r7, #20]

  return pObj->IO.WriteReg(Reg, pData, Length);
 8002ee8:	697b      	ldr	r3, [r7, #20]
 8002eea:	68db      	ldr	r3, [r3, #12]
 8002eec:	7af8      	ldrb	r0, [r7, #11]
 8002eee:	683a      	ldr	r2, [r7, #0]
 8002ef0:	6879      	ldr	r1, [r7, #4]
 8002ef2:	4798      	blx	r3
 8002ef4:	4603      	mov	r3, r0
}
 8002ef6:	4618      	mov	r0, r3
 8002ef8:	3718      	adds	r7, #24
 8002efa:	46bd      	mov	sp, r7
 8002efc:	bd80      	pop	{r7, pc}

08002efe <ST7735_SendDataWrap>:
  * @param  handle  Component object handle
  * @param  pData  The target register value to be written
  * @retval Component error status
  */
static int32_t ST7735_SendDataWrap(void *Handle, uint8_t *pData, uint32_t Length)
{
 8002efe:	b580      	push	{r7, lr}
 8002f00:	b086      	sub	sp, #24
 8002f02:	af00      	add	r7, sp, #0
 8002f04:	60f8      	str	r0, [r7, #12]
 8002f06:	60b9      	str	r1, [r7, #8]
 8002f08:	607a      	str	r2, [r7, #4]
  ST7735_Object_t *pObj = (ST7735_Object_t *)Handle;
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	617b      	str	r3, [r7, #20]

  return pObj->IO.SendData(pData, Length);
 8002f0e:	697b      	ldr	r3, [r7, #20]
 8002f10:	695b      	ldr	r3, [r3, #20]
 8002f12:	6879      	ldr	r1, [r7, #4]
 8002f14:	68b8      	ldr	r0, [r7, #8]
 8002f16:	4798      	blx	r3
 8002f18:	4603      	mov	r3, r0
}
 8002f1a:	4618      	mov	r0, r3
 8002f1c:	3718      	adds	r7, #24
 8002f1e:	46bd      	mov	sp, r7
 8002f20:	bd80      	pop	{r7, pc}

08002f22 <ST7735_RecvDataWrap>:
  * @param  handle  Component object handle
  * @param  pData  The target register value to be written
  * @retval Component error status
  */
static int32_t ST7735_RecvDataWrap(void *Handle, uint8_t *pData, uint32_t Length)
{
 8002f22:	b580      	push	{r7, lr}
 8002f24:	b086      	sub	sp, #24
 8002f26:	af00      	add	r7, sp, #0
 8002f28:	60f8      	str	r0, [r7, #12]
 8002f2a:	60b9      	str	r1, [r7, #8]
 8002f2c:	607a      	str	r2, [r7, #4]
  ST7735_Object_t *pObj = (ST7735_Object_t *)Handle;
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	617b      	str	r3, [r7, #20]

  return pObj->IO.RecvData(pData, Length);
 8002f32:	697b      	ldr	r3, [r7, #20]
 8002f34:	699b      	ldr	r3, [r3, #24]
 8002f36:	6879      	ldr	r1, [r7, #4]
 8002f38:	68b8      	ldr	r0, [r7, #8]
 8002f3a:	4798      	blx	r3
 8002f3c:	4603      	mov	r3, r0
}
 8002f3e:	4618      	mov	r0, r3
 8002f40:	3718      	adds	r7, #24
 8002f42:	46bd      	mov	sp, r7
 8002f44:	bd80      	pop	{r7, pc}

08002f46 <ST7735_IO_Delay>:
  * @brief  ST7735 delay
  * @param  Delay  Delay in ms
  * @retval Component error status
  */
static int32_t ST7735_IO_Delay(ST7735_Object_t *pObj, uint32_t Delay)
{
 8002f46:	b580      	push	{r7, lr}
 8002f48:	b084      	sub	sp, #16
 8002f4a:	af00      	add	r7, sp, #0
 8002f4c:	6078      	str	r0, [r7, #4]
 8002f4e:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  tickstart = pObj->IO.GetTick();
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	69db      	ldr	r3, [r3, #28]
 8002f54:	4798      	blx	r3
 8002f56:	4603      	mov	r3, r0
 8002f58:	60fb      	str	r3, [r7, #12]
  while((pObj->IO.GetTick() - tickstart) < Delay)
 8002f5a:	bf00      	nop
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	69db      	ldr	r3, [r3, #28]
 8002f60:	4798      	blx	r3
 8002f62:	4603      	mov	r3, r0
 8002f64:	461a      	mov	r2, r3
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	1ad3      	subs	r3, r2, r3
 8002f6a:	683a      	ldr	r2, [r7, #0]
 8002f6c:	429a      	cmp	r2, r3
 8002f6e:	d8f5      	bhi.n	8002f5c <ST7735_IO_Delay+0x16>
  {
  }
  return ST7735_OK;
 8002f70:	2300      	movs	r3, #0
}
 8002f72:	4618      	mov	r0, r3
 8002f74:	3710      	adds	r7, #16
 8002f76:	46bd      	mov	sp, r7
 8002f78:	bd80      	pop	{r7, pc}

08002f7a <st7735_read_reg>:
  * @param  reg   Register to read
  * @param  pdata data to read from the register
  * @retval Component status
  */
int32_t st7735_read_reg(st7735_ctx_t *ctx, uint8_t reg, uint8_t *pdata)
{
 8002f7a:	b580      	push	{r7, lr}
 8002f7c:	b084      	sub	sp, #16
 8002f7e:	af00      	add	r7, sp, #0
 8002f80:	60f8      	str	r0, [r7, #12]
 8002f82:	460b      	mov	r3, r1
 8002f84:	607a      	str	r2, [r7, #4]
 8002f86:	72fb      	strb	r3, [r7, #11]
  return ctx->ReadReg(ctx->handle, reg, pdata);
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	685b      	ldr	r3, [r3, #4]
 8002f8c:	68fa      	ldr	r2, [r7, #12]
 8002f8e:	6910      	ldr	r0, [r2, #16]
 8002f90:	7af9      	ldrb	r1, [r7, #11]
 8002f92:	687a      	ldr	r2, [r7, #4]
 8002f94:	4798      	blx	r3
 8002f96:	4603      	mov	r3, r0
}
 8002f98:	4618      	mov	r0, r3
 8002f9a:	3710      	adds	r7, #16
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}

08002fa0 <st7735_write_reg>:
  * @param  pdata  data to write to the register
  * @param  length length of data to write to the register
  * @retval Component status
  */
int32_t st7735_write_reg(st7735_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint32_t length)
{
 8002fa0:	b590      	push	{r4, r7, lr}
 8002fa2:	b085      	sub	sp, #20
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	60f8      	str	r0, [r7, #12]
 8002fa8:	607a      	str	r2, [r7, #4]
 8002faa:	603b      	str	r3, [r7, #0]
 8002fac:	460b      	mov	r3, r1
 8002fae:	72fb      	strb	r3, [r7, #11]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8002fb0:	68fb      	ldr	r3, [r7, #12]
 8002fb2:	681c      	ldr	r4, [r3, #0]
 8002fb4:	68fb      	ldr	r3, [r7, #12]
 8002fb6:	6918      	ldr	r0, [r3, #16]
 8002fb8:	7af9      	ldrb	r1, [r7, #11]
 8002fba:	683b      	ldr	r3, [r7, #0]
 8002fbc:	687a      	ldr	r2, [r7, #4]
 8002fbe:	47a0      	blx	r4
 8002fc0:	4603      	mov	r3, r0
}
 8002fc2:	4618      	mov	r0, r3
 8002fc4:	3714      	adds	r7, #20
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	bd90      	pop	{r4, r7, pc}

08002fca <st7735_send_data>:
  * @param  pdata  data to write
  * @param  length length of data to write
  * @retval Component status
  */
int32_t st7735_send_data(st7735_ctx_t *ctx, uint8_t *pdata, uint32_t length)
{
 8002fca:	b580      	push	{r7, lr}
 8002fcc:	b084      	sub	sp, #16
 8002fce:	af00      	add	r7, sp, #0
 8002fd0:	60f8      	str	r0, [r7, #12]
 8002fd2:	60b9      	str	r1, [r7, #8]
 8002fd4:	607a      	str	r2, [r7, #4]
  return ctx->SendData(ctx->handle, pdata, length);
 8002fd6:	68fb      	ldr	r3, [r7, #12]
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	68fa      	ldr	r2, [r7, #12]
 8002fdc:	6910      	ldr	r0, [r2, #16]
 8002fde:	687a      	ldr	r2, [r7, #4]
 8002fe0:	68b9      	ldr	r1, [r7, #8]
 8002fe2:	4798      	blx	r3
 8002fe4:	4603      	mov	r3, r0
}
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	3710      	adds	r7, #16
 8002fea:	46bd      	mov	sp, r7
 8002fec:	bd80      	pop	{r7, pc}

08002fee <st7735_recv_data>:
  * @param  pdata  data to read
  * @param  length length of data to read
  * @retval Component status
  */
int32_t st7735_recv_data(st7735_ctx_t *ctx, uint8_t *pdata, uint32_t length)
{
 8002fee:	b580      	push	{r7, lr}
 8002ff0:	b084      	sub	sp, #16
 8002ff2:	af00      	add	r7, sp, #0
 8002ff4:	60f8      	str	r0, [r7, #12]
 8002ff6:	60b9      	str	r1, [r7, #8]
 8002ff8:	607a      	str	r2, [r7, #4]
  return ctx->RecvData(ctx->handle, pdata, length);
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	68db      	ldr	r3, [r3, #12]
 8002ffe:	68fa      	ldr	r2, [r7, #12]
 8003000:	6910      	ldr	r0, [r2, #16]
 8003002:	687a      	ldr	r2, [r7, #4]
 8003004:	68b9      	ldr	r1, [r7, #8]
 8003006:	4798      	blx	r3
 8003008:	4603      	mov	r3, r0
}
 800300a:	4618      	mov	r0, r3
 800300c:	3710      	adds	r7, #16
 800300e:	46bd      	mov	sp, r7
 8003010:	bd80      	pop	{r7, pc}
	...

08003014 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003014:	b580      	push	{r7, lr}
 8003016:	b082      	sub	sp, #8
 8003018:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800301a:	4b13      	ldr	r3, [pc, #76]	@ (8003068 <HAL_MspInit+0x54>)
 800301c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003020:	4a11      	ldr	r2, [pc, #68]	@ (8003068 <HAL_MspInit+0x54>)
 8003022:	f043 0302 	orr.w	r3, r3, #2
 8003026:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 800302a:	4b0f      	ldr	r3, [pc, #60]	@ (8003068 <HAL_MspInit+0x54>)
 800302c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003030:	f003 0302 	and.w	r3, r3, #2
 8003034:	607b      	str	r3, [r7, #4]
 8003036:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** Enable the VREF clock
  */
  __HAL_RCC_VREF_CLK_ENABLE();
 8003038:	4b0b      	ldr	r3, [pc, #44]	@ (8003068 <HAL_MspInit+0x54>)
 800303a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800303e:	4a0a      	ldr	r2, [pc, #40]	@ (8003068 <HAL_MspInit+0x54>)
 8003040:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003044:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8003048:	4b07      	ldr	r3, [pc, #28]	@ (8003068 <HAL_MspInit+0x54>)
 800304a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800304e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003052:	603b      	str	r3, [r7, #0]
 8003054:	683b      	ldr	r3, [r7, #0]

  /** Disable the Internal Voltage Reference buffer
  */
  HAL_SYSCFG_DisableVREFBUF();
 8003056:	f000 fb9d 	bl	8003794 <HAL_SYSCFG_DisableVREFBUF>

  /** Configure the internal voltage reference buffer high impedance mode
  */
  HAL_SYSCFG_VREFBUF_HighImpedanceConfig(SYSCFG_VREFBUF_HIGH_IMPEDANCE_ENABLE);
 800305a:	2002      	movs	r0, #2
 800305c:	f000 fb86 	bl	800376c <HAL_SYSCFG_VREFBUF_HighImpedanceConfig>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003060:	bf00      	nop
 8003062:	3708      	adds	r7, #8
 8003064:	46bd      	mov	sp, r7
 8003066:	bd80      	pop	{r7, pc}
 8003068:	58024400 	.word	0x58024400

0800306c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800306c:	b480      	push	{r7}
 800306e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8003070:	bf00      	nop
 8003072:	e7fd      	b.n	8003070 <NMI_Handler+0x4>

08003074 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003074:	b480      	push	{r7}
 8003076:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003078:	bf00      	nop
 800307a:	e7fd      	b.n	8003078 <HardFault_Handler+0x4>

0800307c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800307c:	b480      	push	{r7}
 800307e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003080:	bf00      	nop
 8003082:	e7fd      	b.n	8003080 <MemManage_Handler+0x4>

08003084 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003084:	b480      	push	{r7}
 8003086:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003088:	bf00      	nop
 800308a:	e7fd      	b.n	8003088 <BusFault_Handler+0x4>

0800308c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800308c:	b480      	push	{r7}
 800308e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003090:	bf00      	nop
 8003092:	e7fd      	b.n	8003090 <UsageFault_Handler+0x4>

08003094 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003094:	b480      	push	{r7}
 8003096:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003098:	bf00      	nop
 800309a:	46bd      	mov	sp, r7
 800309c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030a0:	4770      	bx	lr

080030a2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80030a2:	b480      	push	{r7}
 80030a4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80030a6:	bf00      	nop
 80030a8:	46bd      	mov	sp, r7
 80030aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ae:	4770      	bx	lr

080030b0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80030b0:	b480      	push	{r7}
 80030b2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80030b4:	bf00      	nop
 80030b6:	46bd      	mov	sp, r7
 80030b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030bc:	4770      	bx	lr

080030be <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80030be:	b580      	push	{r7, lr}
 80030c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80030c2:	f000 fb03 	bl	80036cc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80030c6:	bf00      	nop
 80030c8:	bd80      	pop	{r7, pc}
	...

080030cc <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80030cc:	b580      	push	{r7, lr}
 80030ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80030d0:	4802      	ldr	r0, [pc, #8]	@ (80030dc <TIM2_IRQHandler+0x10>)
 80030d2:	f008 fb15 	bl	800b700 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80030d6:	bf00      	nop
 80030d8:	bd80      	pop	{r7, pc}
 80030da:	bf00      	nop
 80030dc:	24000940 	.word	0x24000940

080030e0 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 80030e0:	b580      	push	{r7, lr}
 80030e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 80030e4:	4802      	ldr	r0, [pc, #8]	@ (80030f0 <OTG_FS_IRQHandler+0x10>)
 80030e6:	f002 fc9d 	bl	8005a24 <HAL_PCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 80030ea:	bf00      	nop
 80030ec:	bd80      	pop	{r7, pc}
 80030ee:	bf00      	nop
 80030f0:	24001e70 	.word	0x24001e70

080030f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80030f4:	b580      	push	{r7, lr}
 80030f6:	b086      	sub	sp, #24
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80030fc:	4a14      	ldr	r2, [pc, #80]	@ (8003150 <_sbrk+0x5c>)
 80030fe:	4b15      	ldr	r3, [pc, #84]	@ (8003154 <_sbrk+0x60>)
 8003100:	1ad3      	subs	r3, r2, r3
 8003102:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003104:	697b      	ldr	r3, [r7, #20]
 8003106:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003108:	4b13      	ldr	r3, [pc, #76]	@ (8003158 <_sbrk+0x64>)
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d102      	bne.n	8003116 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003110:	4b11      	ldr	r3, [pc, #68]	@ (8003158 <_sbrk+0x64>)
 8003112:	4a12      	ldr	r2, [pc, #72]	@ (800315c <_sbrk+0x68>)
 8003114:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003116:	4b10      	ldr	r3, [pc, #64]	@ (8003158 <_sbrk+0x64>)
 8003118:	681a      	ldr	r2, [r3, #0]
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	4413      	add	r3, r2
 800311e:	693a      	ldr	r2, [r7, #16]
 8003120:	429a      	cmp	r2, r3
 8003122:	d207      	bcs.n	8003134 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003124:	f00d fba6 	bl	8010874 <__errno>
 8003128:	4603      	mov	r3, r0
 800312a:	220c      	movs	r2, #12
 800312c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800312e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8003132:	e009      	b.n	8003148 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003134:	4b08      	ldr	r3, [pc, #32]	@ (8003158 <_sbrk+0x64>)
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800313a:	4b07      	ldr	r3, [pc, #28]	@ (8003158 <_sbrk+0x64>)
 800313c:	681a      	ldr	r2, [r3, #0]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	4413      	add	r3, r2
 8003142:	4a05      	ldr	r2, [pc, #20]	@ (8003158 <_sbrk+0x64>)
 8003144:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8003146:	68fb      	ldr	r3, [r7, #12]
}
 8003148:	4618      	mov	r0, r3
 800314a:	3718      	adds	r7, #24
 800314c:	46bd      	mov	sp, r7
 800314e:	bd80      	pop	{r7, pc}
 8003150:	24080000 	.word	0x24080000
 8003154:	00000400 	.word	0x00000400
 8003158:	240008f0 	.word	0x240008f0
 800315c:	240026c0 	.word	0x240026c0

08003160 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8003160:	b480      	push	{r7}
 8003162:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8003164:	4b37      	ldr	r3, [pc, #220]	@ (8003244 <SystemInit+0xe4>)
 8003166:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800316a:	4a36      	ldr	r2, [pc, #216]	@ (8003244 <SystemInit+0xe4>)
 800316c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003170:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8003174:	4b34      	ldr	r3, [pc, #208]	@ (8003248 <SystemInit+0xe8>)
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f003 030f 	and.w	r3, r3, #15
 800317c:	2b06      	cmp	r3, #6
 800317e:	d807      	bhi.n	8003190 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8003180:	4b31      	ldr	r3, [pc, #196]	@ (8003248 <SystemInit+0xe8>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f023 030f 	bic.w	r3, r3, #15
 8003188:	4a2f      	ldr	r2, [pc, #188]	@ (8003248 <SystemInit+0xe8>)
 800318a:	f043 0307 	orr.w	r3, r3, #7
 800318e:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8003190:	4b2e      	ldr	r3, [pc, #184]	@ (800324c <SystemInit+0xec>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	4a2d      	ldr	r2, [pc, #180]	@ (800324c <SystemInit+0xec>)
 8003196:	f043 0301 	orr.w	r3, r3, #1
 800319a:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800319c:	4b2b      	ldr	r3, [pc, #172]	@ (800324c <SystemInit+0xec>)
 800319e:	2200      	movs	r2, #0
 80031a0:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80031a2:	4b2a      	ldr	r3, [pc, #168]	@ (800324c <SystemInit+0xec>)
 80031a4:	681a      	ldr	r2, [r3, #0]
 80031a6:	4929      	ldr	r1, [pc, #164]	@ (800324c <SystemInit+0xec>)
 80031a8:	4b29      	ldr	r3, [pc, #164]	@ (8003250 <SystemInit+0xf0>)
 80031aa:	4013      	ands	r3, r2
 80031ac:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80031ae:	4b26      	ldr	r3, [pc, #152]	@ (8003248 <SystemInit+0xe8>)
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	f003 0308 	and.w	r3, r3, #8
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d007      	beq.n	80031ca <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80031ba:	4b23      	ldr	r3, [pc, #140]	@ (8003248 <SystemInit+0xe8>)
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	f023 030f 	bic.w	r3, r3, #15
 80031c2:	4a21      	ldr	r2, [pc, #132]	@ (8003248 <SystemInit+0xe8>)
 80031c4:	f043 0307 	orr.w	r3, r3, #7
 80031c8:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80031ca:	4b20      	ldr	r3, [pc, #128]	@ (800324c <SystemInit+0xec>)
 80031cc:	2200      	movs	r2, #0
 80031ce:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 80031d0:	4b1e      	ldr	r3, [pc, #120]	@ (800324c <SystemInit+0xec>)
 80031d2:	2200      	movs	r2, #0
 80031d4:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80031d6:	4b1d      	ldr	r3, [pc, #116]	@ (800324c <SystemInit+0xec>)
 80031d8:	2200      	movs	r2, #0
 80031da:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80031dc:	4b1b      	ldr	r3, [pc, #108]	@ (800324c <SystemInit+0xec>)
 80031de:	4a1d      	ldr	r2, [pc, #116]	@ (8003254 <SystemInit+0xf4>)
 80031e0:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80031e2:	4b1a      	ldr	r3, [pc, #104]	@ (800324c <SystemInit+0xec>)
 80031e4:	4a1c      	ldr	r2, [pc, #112]	@ (8003258 <SystemInit+0xf8>)
 80031e6:	62da      	str	r2, [r3, #44]	@ 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80031e8:	4b18      	ldr	r3, [pc, #96]	@ (800324c <SystemInit+0xec>)
 80031ea:	4a1c      	ldr	r2, [pc, #112]	@ (800325c <SystemInit+0xfc>)
 80031ec:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80031ee:	4b17      	ldr	r3, [pc, #92]	@ (800324c <SystemInit+0xec>)
 80031f0:	2200      	movs	r2, #0
 80031f2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80031f4:	4b15      	ldr	r3, [pc, #84]	@ (800324c <SystemInit+0xec>)
 80031f6:	4a19      	ldr	r2, [pc, #100]	@ (800325c <SystemInit+0xfc>)
 80031f8:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80031fa:	4b14      	ldr	r3, [pc, #80]	@ (800324c <SystemInit+0xec>)
 80031fc:	2200      	movs	r2, #0
 80031fe:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 8003200:	4b12      	ldr	r3, [pc, #72]	@ (800324c <SystemInit+0xec>)
 8003202:	4a16      	ldr	r2, [pc, #88]	@ (800325c <SystemInit+0xfc>)
 8003204:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8003206:	4b11      	ldr	r3, [pc, #68]	@ (800324c <SystemInit+0xec>)
 8003208:	2200      	movs	r2, #0
 800320a:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800320c:	4b0f      	ldr	r3, [pc, #60]	@ (800324c <SystemInit+0xec>)
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	4a0e      	ldr	r2, [pc, #56]	@ (800324c <SystemInit+0xec>)
 8003212:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8003216:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8003218:	4b0c      	ldr	r3, [pc, #48]	@ (800324c <SystemInit+0xec>)
 800321a:	2200      	movs	r2, #0
 800321c:	661a      	str	r2, [r3, #96]	@ 0x60

#if (STM32H7_DEV_ID == 0x450UL)
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 800321e:	4b10      	ldr	r3, [pc, #64]	@ (8003260 <SystemInit+0x100>)
 8003220:	681a      	ldr	r2, [r3, #0]
 8003222:	4b10      	ldr	r3, [pc, #64]	@ (8003264 <SystemInit+0x104>)
 8003224:	4013      	ands	r3, r2
 8003226:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800322a:	d202      	bcs.n	8003232 <SystemInit+0xd2>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 800322c:	4b0e      	ldr	r3, [pc, #56]	@ (8003268 <SystemInit+0x108>)
 800322e:	2201      	movs	r2, #1
 8003230:	601a      	str	r2, [r3, #0]
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 8003232:	4b0e      	ldr	r3, [pc, #56]	@ (800326c <SystemInit+0x10c>)
 8003234:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8003238:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 800323a:	bf00      	nop
 800323c:	46bd      	mov	sp, r7
 800323e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003242:	4770      	bx	lr
 8003244:	e000ed00 	.word	0xe000ed00
 8003248:	52002000 	.word	0x52002000
 800324c:	58024400 	.word	0x58024400
 8003250:	eaf6ed7f 	.word	0xeaf6ed7f
 8003254:	02020200 	.word	0x02020200
 8003258:	01ff0000 	.word	0x01ff0000
 800325c:	01010280 	.word	0x01010280
 8003260:	5c001000 	.word	0x5c001000
 8003264:	ffff0000 	.word	0xffff0000
 8003268:	51008108 	.word	0x51008108
 800326c:	52004000 	.word	0x52004000

08003270 <MX_TIM1_Init>:
TIM_HandleTypeDef htim1;
TIM_HandleTypeDef htim2;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8003270:	b580      	push	{r7, lr}
 8003272:	b096      	sub	sp, #88	@ 0x58
 8003274:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003276:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800327a:	2200      	movs	r2, #0
 800327c:	601a      	str	r2, [r3, #0]
 800327e:	605a      	str	r2, [r3, #4]
 8003280:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003282:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8003286:	2200      	movs	r2, #0
 8003288:	601a      	str	r2, [r3, #0]
 800328a:	605a      	str	r2, [r3, #4]
 800328c:	609a      	str	r2, [r3, #8]
 800328e:	60da      	str	r2, [r3, #12]
 8003290:	611a      	str	r2, [r3, #16]
 8003292:	615a      	str	r2, [r3, #20]
 8003294:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8003296:	1d3b      	adds	r3, r7, #4
 8003298:	222c      	movs	r2, #44	@ 0x2c
 800329a:	2100      	movs	r1, #0
 800329c:	4618      	mov	r0, r3
 800329e:	f00d fae1 	bl	8010864 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80032a2:	4b39      	ldr	r3, [pc, #228]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032a4:	4a39      	ldr	r2, [pc, #228]	@ (800338c <MX_TIM1_Init+0x11c>)
 80032a6:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 12-1;
 80032a8:	4b37      	ldr	r3, [pc, #220]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032aa:	220b      	movs	r2, #11
 80032ac:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80032ae:	4b36      	ldr	r3, [pc, #216]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032b0:	2200      	movs	r2, #0
 80032b2:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 1000-1;
 80032b4:	4b34      	ldr	r3, [pc, #208]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032b6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80032ba:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80032bc:	4b32      	ldr	r3, [pc, #200]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032be:	2200      	movs	r2, #0
 80032c0:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80032c2:	4b31      	ldr	r3, [pc, #196]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032c4:	2200      	movs	r2, #0
 80032c6:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80032c8:	4b2f      	ldr	r3, [pc, #188]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032ca:	2200      	movs	r2, #0
 80032cc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80032ce:	482e      	ldr	r0, [pc, #184]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032d0:	f008 f88b 	bl	800b3ea <HAL_TIM_PWM_Init>
 80032d4:	4603      	mov	r3, r0
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d001      	beq.n	80032de <MX_TIM1_Init+0x6e>
  {
    Error_Handler();
 80032da:	f7fe fa9b 	bl	8001814 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80032de:	2300      	movs	r3, #0
 80032e0:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 80032e2:	2300      	movs	r3, #0
 80032e4:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80032e6:	2300      	movs	r3, #0
 80032e8:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80032ea:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 80032ee:	4619      	mov	r1, r3
 80032f0:	4825      	ldr	r0, [pc, #148]	@ (8003388 <MX_TIM1_Init+0x118>)
 80032f2:	f009 f8b7 	bl	800c464 <HAL_TIMEx_MasterConfigSynchronization>
 80032f6:	4603      	mov	r3, r0
 80032f8:	2b00      	cmp	r3, #0
 80032fa:	d001      	beq.n	8003300 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 80032fc:	f7fe fa8a 	bl	8001814 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003300:	2360      	movs	r3, #96	@ 0x60
 8003302:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8003304:	2300      	movs	r3, #0
 8003306:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003308:	2300      	movs	r3, #0
 800330a:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_LOW;
 800330c:	2308      	movs	r3, #8
 800330e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003310:	2300      	movs	r3, #0
 8003312:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8003314:	2300      	movs	r3, #0
 8003316:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8003318:	2300      	movs	r3, #0
 800331a:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800331c:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8003320:	2204      	movs	r2, #4
 8003322:	4619      	mov	r1, r3
 8003324:	4818      	ldr	r0, [pc, #96]	@ (8003388 <MX_TIM1_Init+0x118>)
 8003326:	f008 faf3 	bl	800b910 <HAL_TIM_PWM_ConfigChannel>
 800332a:	4603      	mov	r3, r0
 800332c:	2b00      	cmp	r3, #0
 800332e:	d001      	beq.n	8003334 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8003330:	f7fe fa70 	bl	8001814 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8003334:	2300      	movs	r3, #0
 8003336:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8003338:	2300      	movs	r3, #0
 800333a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800333c:	2300      	movs	r3, #0
 800333e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8003340:	2300      	movs	r3, #0
 8003342:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8003344:	2300      	movs	r3, #0
 8003346:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8003348:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800334c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 800334e:	2300      	movs	r3, #0
 8003350:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8003352:	2300      	movs	r3, #0
 8003354:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8003356:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800335a:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 800335c:	2300      	movs	r3, #0
 800335e:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8003360:	2300      	movs	r3, #0
 8003362:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8003364:	1d3b      	adds	r3, r7, #4
 8003366:	4619      	mov	r1, r3
 8003368:	4807      	ldr	r0, [pc, #28]	@ (8003388 <MX_TIM1_Init+0x118>)
 800336a:	f009 f909 	bl	800c580 <HAL_TIMEx_ConfigBreakDeadTime>
 800336e:	4603      	mov	r3, r0
 8003370:	2b00      	cmp	r3, #0
 8003372:	d001      	beq.n	8003378 <MX_TIM1_Init+0x108>
  {
    Error_Handler();
 8003374:	f7fe fa4e 	bl	8001814 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8003378:	4803      	ldr	r0, [pc, #12]	@ (8003388 <MX_TIM1_Init+0x118>)
 800337a:	f000 f8cf 	bl	800351c <HAL_TIM_MspPostInit>

}
 800337e:	bf00      	nop
 8003380:	3758      	adds	r7, #88	@ 0x58
 8003382:	46bd      	mov	sp, r7
 8003384:	bd80      	pop	{r7, pc}
 8003386:	bf00      	nop
 8003388:	240008f4 	.word	0x240008f4
 800338c:	40010000 	.word	0x40010000

08003390 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8003390:	b580      	push	{r7, lr}
 8003392:	b08c      	sub	sp, #48	@ 0x30
 8003394:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8003396:	f107 030c 	add.w	r3, r7, #12
 800339a:	2224      	movs	r2, #36	@ 0x24
 800339c:	2100      	movs	r1, #0
 800339e:	4618      	mov	r0, r3
 80033a0:	f00d fa60 	bl	8010864 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80033a4:	463b      	mov	r3, r7
 80033a6:	2200      	movs	r2, #0
 80033a8:	601a      	str	r2, [r3, #0]
 80033aa:	605a      	str	r2, [r3, #4]
 80033ac:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80033ae:	4b21      	ldr	r3, [pc, #132]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033b0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80033b4:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80033b6:	4b1f      	ldr	r3, [pc, #124]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033b8:	2200      	movs	r2, #0
 80033ba:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80033bc:	4b1d      	ldr	r3, [pc, #116]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033be:	2200      	movs	r2, #0
 80033c0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80033c2:	4b1c      	ldr	r3, [pc, #112]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80033c8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80033ca:	4b1a      	ldr	r3, [pc, #104]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033cc:	2200      	movs	r2, #0
 80033ce:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80033d0:	4b18      	ldr	r3, [pc, #96]	@ (8003434 <MX_TIM2_Init+0xa4>)
 80033d2:	2200      	movs	r2, #0
 80033d4:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80033d6:	2303      	movs	r3, #3
 80033d8:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 80033da:	2302      	movs	r3, #2
 80033dc:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80033de:	2301      	movs	r3, #1
 80033e0:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80033e2:	2300      	movs	r3, #0
 80033e4:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 5;
 80033e6:	2305      	movs	r3, #5
 80033e8:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80033ea:	2300      	movs	r3, #0
 80033ec:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80033ee:	2301      	movs	r3, #1
 80033f0:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80033f2:	2300      	movs	r3, #0
 80033f4:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80033f6:	2300      	movs	r3, #0
 80033f8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 80033fa:	f107 030c 	add.w	r3, r7, #12
 80033fe:	4619      	mov	r1, r3
 8003400:	480c      	ldr	r0, [pc, #48]	@ (8003434 <MX_TIM2_Init+0xa4>)
 8003402:	f008 f849 	bl	800b498 <HAL_TIM_Encoder_Init>
 8003406:	4603      	mov	r3, r0
 8003408:	2b00      	cmp	r3, #0
 800340a:	d001      	beq.n	8003410 <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 800340c:	f7fe fa02 	bl	8001814 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003410:	2300      	movs	r3, #0
 8003412:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003414:	2300      	movs	r3, #0
 8003416:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003418:	463b      	mov	r3, r7
 800341a:	4619      	mov	r1, r3
 800341c:	4805      	ldr	r0, [pc, #20]	@ (8003434 <MX_TIM2_Init+0xa4>)
 800341e:	f009 f821 	bl	800c464 <HAL_TIMEx_MasterConfigSynchronization>
 8003422:	4603      	mov	r3, r0
 8003424:	2b00      	cmp	r3, #0
 8003426:	d001      	beq.n	800342c <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8003428:	f7fe f9f4 	bl	8001814 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800342c:	bf00      	nop
 800342e:	3730      	adds	r7, #48	@ 0x30
 8003430:	46bd      	mov	sp, r7
 8003432:	bd80      	pop	{r7, pc}
 8003434:	24000940 	.word	0x24000940

08003438 <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8003438:	b480      	push	{r7}
 800343a:	b085      	sub	sp, #20
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM1)
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	4a0b      	ldr	r2, [pc, #44]	@ (8003474 <HAL_TIM_PWM_MspInit+0x3c>)
 8003446:	4293      	cmp	r3, r2
 8003448:	d10e      	bne.n	8003468 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800344a:	4b0b      	ldr	r3, [pc, #44]	@ (8003478 <HAL_TIM_PWM_MspInit+0x40>)
 800344c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8003450:	4a09      	ldr	r2, [pc, #36]	@ (8003478 <HAL_TIM_PWM_MspInit+0x40>)
 8003452:	f043 0301 	orr.w	r3, r3, #1
 8003456:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 800345a:	4b07      	ldr	r3, [pc, #28]	@ (8003478 <HAL_TIM_PWM_MspInit+0x40>)
 800345c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8003460:	f003 0301 	and.w	r3, r3, #1
 8003464:	60fb      	str	r3, [r7, #12]
 8003466:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8003468:	bf00      	nop
 800346a:	3714      	adds	r7, #20
 800346c:	46bd      	mov	sp, r7
 800346e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003472:	4770      	bx	lr
 8003474:	40010000 	.word	0x40010000
 8003478:	58024400 	.word	0x58024400

0800347c <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 800347c:	b580      	push	{r7, lr}
 800347e:	b08a      	sub	sp, #40	@ 0x28
 8003480:	af00      	add	r7, sp, #0
 8003482:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003484:	f107 0314 	add.w	r3, r7, #20
 8003488:	2200      	movs	r2, #0
 800348a:	601a      	str	r2, [r3, #0]
 800348c:	605a      	str	r2, [r3, #4]
 800348e:	609a      	str	r2, [r3, #8]
 8003490:	60da      	str	r2, [r3, #12]
 8003492:	611a      	str	r2, [r3, #16]
  if(tim_encoderHandle->Instance==TIM2)
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	681b      	ldr	r3, [r3, #0]
 8003498:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800349c:	d135      	bne.n	800350a <HAL_TIM_Encoder_MspInit+0x8e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800349e:	4b1d      	ldr	r3, [pc, #116]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034a0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80034a4:	4a1b      	ldr	r2, [pc, #108]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034a6:	f043 0301 	orr.w	r3, r3, #1
 80034aa:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 80034ae:	4b19      	ldr	r3, [pc, #100]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034b0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 80034b4:	f003 0301 	and.w	r3, r3, #1
 80034b8:	613b      	str	r3, [r7, #16]
 80034ba:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80034bc:	4b15      	ldr	r3, [pc, #84]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034be:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80034c2:	4a14      	ldr	r2, [pc, #80]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034c4:	f043 0301 	orr.w	r3, r3, #1
 80034c8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80034cc:	4b11      	ldr	r3, [pc, #68]	@ (8003514 <HAL_TIM_Encoder_MspInit+0x98>)
 80034ce:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80034d2:	f003 0301 	and.w	r3, r3, #1
 80034d6:	60fb      	str	r3, [r7, #12]
 80034d8:	68fb      	ldr	r3, [r7, #12]
    /**TIM2 GPIO Configuration
    PA0     ------> TIM2_CH1
    PA1     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80034da:	2303      	movs	r3, #3
 80034dc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034de:	2302      	movs	r3, #2
 80034e0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034e2:	2300      	movs	r3, #0
 80034e4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80034e6:	2300      	movs	r3, #0
 80034e8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80034ea:	2301      	movs	r3, #1
 80034ec:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80034ee:	f107 0314 	add.w	r3, r7, #20
 80034f2:	4619      	mov	r1, r3
 80034f4:	4808      	ldr	r0, [pc, #32]	@ (8003518 <HAL_TIM_Encoder_MspInit+0x9c>)
 80034f6:	f001 ff73 	bl	80053e0 <HAL_GPIO_Init>

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80034fa:	2200      	movs	r2, #0
 80034fc:	2100      	movs	r1, #0
 80034fe:	201c      	movs	r0, #28
 8003500:	f001 fec1 	bl	8005286 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8003504:	201c      	movs	r0, #28
 8003506:	f001 fed8 	bl	80052ba <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 800350a:	bf00      	nop
 800350c:	3728      	adds	r7, #40	@ 0x28
 800350e:	46bd      	mov	sp, r7
 8003510:	bd80      	pop	{r7, pc}
 8003512:	bf00      	nop
 8003514:	58024400 	.word	0x58024400
 8003518:	58020000 	.word	0x58020000

0800351c <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800351c:	b580      	push	{r7, lr}
 800351e:	b088      	sub	sp, #32
 8003520:	af00      	add	r7, sp, #0
 8003522:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003524:	f107 030c 	add.w	r3, r7, #12
 8003528:	2200      	movs	r2, #0
 800352a:	601a      	str	r2, [r3, #0]
 800352c:	605a      	str	r2, [r3, #4]
 800352e:	609a      	str	r2, [r3, #8]
 8003530:	60da      	str	r2, [r3, #12]
 8003532:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM1)
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4a13      	ldr	r2, [pc, #76]	@ (8003588 <HAL_TIM_MspPostInit+0x6c>)
 800353a:	4293      	cmp	r3, r2
 800353c:	d11f      	bne.n	800357e <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800353e:	4b13      	ldr	r3, [pc, #76]	@ (800358c <HAL_TIM_MspPostInit+0x70>)
 8003540:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8003544:	4a11      	ldr	r2, [pc, #68]	@ (800358c <HAL_TIM_MspPostInit+0x70>)
 8003546:	f043 0310 	orr.w	r3, r3, #16
 800354a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800354e:	4b0f      	ldr	r3, [pc, #60]	@ (800358c <HAL_TIM_MspPostInit+0x70>)
 8003550:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8003554:	f003 0310 	and.w	r3, r3, #16
 8003558:	60bb      	str	r3, [r7, #8]
 800355a:	68bb      	ldr	r3, [r7, #8]
    /**TIM1 GPIO Configuration
    PE10     ------> TIM1_CH2N
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800355c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003560:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003562:	2302      	movs	r3, #2
 8003564:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003566:	2300      	movs	r3, #0
 8003568:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800356a:	2300      	movs	r3, #0
 800356c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 800356e:	2301      	movs	r3, #1
 8003570:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8003572:	f107 030c 	add.w	r3, r7, #12
 8003576:	4619      	mov	r1, r3
 8003578:	4805      	ldr	r0, [pc, #20]	@ (8003590 <HAL_TIM_MspPostInit+0x74>)
 800357a:	f001 ff31 	bl	80053e0 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 800357e:	bf00      	nop
 8003580:	3720      	adds	r7, #32
 8003582:	46bd      	mov	sp, r7
 8003584:	bd80      	pop	{r7, pc}
 8003586:	bf00      	nop
 8003588:	40010000 	.word	0x40010000
 800358c:	58024400 	.word	0x58024400
 8003590:	58021000 	.word	0x58021000

08003594 <Reset_Handler>:
 8003594:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80035cc <LoopFillZerobss+0xe>
 8003598:	f7ff fde2 	bl	8003160 <SystemInit>
 800359c:	480c      	ldr	r0, [pc, #48]	@ (80035d0 <LoopFillZerobss+0x12>)
 800359e:	490d      	ldr	r1, [pc, #52]	@ (80035d4 <LoopFillZerobss+0x16>)
 80035a0:	4a0d      	ldr	r2, [pc, #52]	@ (80035d8 <LoopFillZerobss+0x1a>)
 80035a2:	2300      	movs	r3, #0
 80035a4:	e002      	b.n	80035ac <LoopCopyDataInit>

080035a6 <CopyDataInit>:
 80035a6:	58d4      	ldr	r4, [r2, r3]
 80035a8:	50c4      	str	r4, [r0, r3]
 80035aa:	3304      	adds	r3, #4

080035ac <LoopCopyDataInit>:
 80035ac:	18c4      	adds	r4, r0, r3
 80035ae:	428c      	cmp	r4, r1
 80035b0:	d3f9      	bcc.n	80035a6 <CopyDataInit>
 80035b2:	4a0a      	ldr	r2, [pc, #40]	@ (80035dc <LoopFillZerobss+0x1e>)
 80035b4:	4c0a      	ldr	r4, [pc, #40]	@ (80035e0 <LoopFillZerobss+0x22>)
 80035b6:	2300      	movs	r3, #0
 80035b8:	e001      	b.n	80035be <LoopFillZerobss>

080035ba <FillZerobss>:
 80035ba:	6013      	str	r3, [r2, #0]
 80035bc:	3204      	adds	r2, #4

080035be <LoopFillZerobss>:
 80035be:	42a2      	cmp	r2, r4
 80035c0:	d3fb      	bcc.n	80035ba <FillZerobss>
 80035c2:	f00d f95d 	bl	8010880 <__libc_init_array>
 80035c6:	f7fd ff0b 	bl	80013e0 <main>
 80035ca:	4770      	bx	lr
 80035cc:	24080000 	.word	0x24080000
 80035d0:	24000000 	.word	0x24000000
 80035d4:	240001e4 	.word	0x240001e4
 80035d8:	0801817c 	.word	0x0801817c
 80035dc:	240001e4 	.word	0x240001e4
 80035e0:	240026bc 	.word	0x240026bc

080035e4 <ADC3_IRQHandler>:
 80035e4:	e7fe      	b.n	80035e4 <ADC3_IRQHandler>
	...

080035e8 <HAL_Init>:
 80035e8:	b580      	push	{r7, lr}
 80035ea:	b082      	sub	sp, #8
 80035ec:	af00      	add	r7, sp, #0
 80035ee:	2003      	movs	r0, #3
 80035f0:	f001 fe3e 	bl	8005270 <HAL_NVIC_SetPriorityGrouping>
 80035f4:	f004 f9ce 	bl	8007994 <HAL_RCC_GetSysClockFreq>
 80035f8:	4602      	mov	r2, r0
 80035fa:	4b15      	ldr	r3, [pc, #84]	@ (8003650 <HAL_Init+0x68>)
 80035fc:	699b      	ldr	r3, [r3, #24]
 80035fe:	0a1b      	lsrs	r3, r3, #8
 8003600:	f003 030f 	and.w	r3, r3, #15
 8003604:	4913      	ldr	r1, [pc, #76]	@ (8003654 <HAL_Init+0x6c>)
 8003606:	5ccb      	ldrb	r3, [r1, r3]
 8003608:	f003 031f 	and.w	r3, r3, #31
 800360c:	fa22 f303 	lsr.w	r3, r2, r3
 8003610:	607b      	str	r3, [r7, #4]
 8003612:	4b0f      	ldr	r3, [pc, #60]	@ (8003650 <HAL_Init+0x68>)
 8003614:	699b      	ldr	r3, [r3, #24]
 8003616:	f003 030f 	and.w	r3, r3, #15
 800361a:	4a0e      	ldr	r2, [pc, #56]	@ (8003654 <HAL_Init+0x6c>)
 800361c:	5cd3      	ldrb	r3, [r2, r3]
 800361e:	f003 031f 	and.w	r3, r3, #31
 8003622:	687a      	ldr	r2, [r7, #4]
 8003624:	fa22 f303 	lsr.w	r3, r2, r3
 8003628:	4a0b      	ldr	r2, [pc, #44]	@ (8003658 <HAL_Init+0x70>)
 800362a:	6013      	str	r3, [r2, #0]
 800362c:	4a0b      	ldr	r2, [pc, #44]	@ (800365c <HAL_Init+0x74>)
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	6013      	str	r3, [r2, #0]
 8003632:	2000      	movs	r0, #0
 8003634:	f000 f814 	bl	8003660 <HAL_InitTick>
 8003638:	4603      	mov	r3, r0
 800363a:	2b00      	cmp	r3, #0
 800363c:	d001      	beq.n	8003642 <HAL_Init+0x5a>
 800363e:	2301      	movs	r3, #1
 8003640:	e002      	b.n	8003648 <HAL_Init+0x60>
 8003642:	f7ff fce7 	bl	8003014 <HAL_MspInit>
 8003646:	2300      	movs	r3, #0
 8003648:	4618      	mov	r0, r3
 800364a:	3708      	adds	r7, #8
 800364c:	46bd      	mov	sp, r7
 800364e:	bd80      	pop	{r7, pc}
 8003650:	58024400 	.word	0x58024400
 8003654:	08018128 	.word	0x08018128
 8003658:	24000094 	.word	0x24000094
 800365c:	24000090 	.word	0x24000090

08003660 <HAL_InitTick>:
 8003660:	b580      	push	{r7, lr}
 8003662:	b082      	sub	sp, #8
 8003664:	af00      	add	r7, sp, #0
 8003666:	6078      	str	r0, [r7, #4]
 8003668:	4b15      	ldr	r3, [pc, #84]	@ (80036c0 <HAL_InitTick+0x60>)
 800366a:	781b      	ldrb	r3, [r3, #0]
 800366c:	2b00      	cmp	r3, #0
 800366e:	d101      	bne.n	8003674 <HAL_InitTick+0x14>
 8003670:	2301      	movs	r3, #1
 8003672:	e021      	b.n	80036b8 <HAL_InitTick+0x58>
 8003674:	4b13      	ldr	r3, [pc, #76]	@ (80036c4 <HAL_InitTick+0x64>)
 8003676:	681a      	ldr	r2, [r3, #0]
 8003678:	4b11      	ldr	r3, [pc, #68]	@ (80036c0 <HAL_InitTick+0x60>)
 800367a:	781b      	ldrb	r3, [r3, #0]
 800367c:	4619      	mov	r1, r3
 800367e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8003682:	fbb3 f3f1 	udiv	r3, r3, r1
 8003686:	fbb2 f3f3 	udiv	r3, r2, r3
 800368a:	4618      	mov	r0, r3
 800368c:	f001 fe23 	bl	80052d6 <HAL_SYSTICK_Config>
 8003690:	4603      	mov	r3, r0
 8003692:	2b00      	cmp	r3, #0
 8003694:	d001      	beq.n	800369a <HAL_InitTick+0x3a>
 8003696:	2301      	movs	r3, #1
 8003698:	e00e      	b.n	80036b8 <HAL_InitTick+0x58>
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	2b0f      	cmp	r3, #15
 800369e:	d80a      	bhi.n	80036b6 <HAL_InitTick+0x56>
 80036a0:	2200      	movs	r2, #0
 80036a2:	6879      	ldr	r1, [r7, #4]
 80036a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80036a8:	f001 fded 	bl	8005286 <HAL_NVIC_SetPriority>
 80036ac:	4a06      	ldr	r2, [pc, #24]	@ (80036c8 <HAL_InitTick+0x68>)
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	6013      	str	r3, [r2, #0]
 80036b2:	2300      	movs	r3, #0
 80036b4:	e000      	b.n	80036b8 <HAL_InitTick+0x58>
 80036b6:	2301      	movs	r3, #1
 80036b8:	4618      	mov	r0, r3
 80036ba:	3708      	adds	r7, #8
 80036bc:	46bd      	mov	sp, r7
 80036be:	bd80      	pop	{r7, pc}
 80036c0:	2400009c 	.word	0x2400009c
 80036c4:	24000090 	.word	0x24000090
 80036c8:	24000098 	.word	0x24000098

080036cc <HAL_IncTick>:
 80036cc:	b480      	push	{r7}
 80036ce:	af00      	add	r7, sp, #0
 80036d0:	4b06      	ldr	r3, [pc, #24]	@ (80036ec <HAL_IncTick+0x20>)
 80036d2:	781b      	ldrb	r3, [r3, #0]
 80036d4:	461a      	mov	r2, r3
 80036d6:	4b06      	ldr	r3, [pc, #24]	@ (80036f0 <HAL_IncTick+0x24>)
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	4413      	add	r3, r2
 80036dc:	4a04      	ldr	r2, [pc, #16]	@ (80036f0 <HAL_IncTick+0x24>)
 80036de:	6013      	str	r3, [r2, #0]
 80036e0:	bf00      	nop
 80036e2:	46bd      	mov	sp, r7
 80036e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036e8:	4770      	bx	lr
 80036ea:	bf00      	nop
 80036ec:	2400009c 	.word	0x2400009c
 80036f0:	2400098c 	.word	0x2400098c

080036f4 <HAL_GetTick>:
 80036f4:	b480      	push	{r7}
 80036f6:	af00      	add	r7, sp, #0
 80036f8:	4b03      	ldr	r3, [pc, #12]	@ (8003708 <HAL_GetTick+0x14>)
 80036fa:	681b      	ldr	r3, [r3, #0]
 80036fc:	4618      	mov	r0, r3
 80036fe:	46bd      	mov	sp, r7
 8003700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003704:	4770      	bx	lr
 8003706:	bf00      	nop
 8003708:	2400098c 	.word	0x2400098c

0800370c <HAL_Delay>:
 800370c:	b580      	push	{r7, lr}
 800370e:	b084      	sub	sp, #16
 8003710:	af00      	add	r7, sp, #0
 8003712:	6078      	str	r0, [r7, #4]
 8003714:	f7ff ffee 	bl	80036f4 <HAL_GetTick>
 8003718:	60b8      	str	r0, [r7, #8]
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	60fb      	str	r3, [r7, #12]
 800371e:	68fb      	ldr	r3, [r7, #12]
 8003720:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8003724:	d005      	beq.n	8003732 <HAL_Delay+0x26>
 8003726:	4b0a      	ldr	r3, [pc, #40]	@ (8003750 <HAL_Delay+0x44>)
 8003728:	781b      	ldrb	r3, [r3, #0]
 800372a:	461a      	mov	r2, r3
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	4413      	add	r3, r2
 8003730:	60fb      	str	r3, [r7, #12]
 8003732:	bf00      	nop
 8003734:	f7ff ffde 	bl	80036f4 <HAL_GetTick>
 8003738:	4602      	mov	r2, r0
 800373a:	68bb      	ldr	r3, [r7, #8]
 800373c:	1ad3      	subs	r3, r2, r3
 800373e:	68fa      	ldr	r2, [r7, #12]
 8003740:	429a      	cmp	r2, r3
 8003742:	d8f7      	bhi.n	8003734 <HAL_Delay+0x28>
 8003744:	bf00      	nop
 8003746:	bf00      	nop
 8003748:	3710      	adds	r7, #16
 800374a:	46bd      	mov	sp, r7
 800374c:	bd80      	pop	{r7, pc}
 800374e:	bf00      	nop
 8003750:	2400009c 	.word	0x2400009c

08003754 <HAL_GetREVID>:
 8003754:	b480      	push	{r7}
 8003756:	af00      	add	r7, sp, #0
 8003758:	4b03      	ldr	r3, [pc, #12]	@ (8003768 <HAL_GetREVID+0x14>)
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	0c1b      	lsrs	r3, r3, #16
 800375e:	4618      	mov	r0, r3
 8003760:	46bd      	mov	sp, r7
 8003762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003766:	4770      	bx	lr
 8003768:	5c001000 	.word	0x5c001000

0800376c <HAL_SYSCFG_VREFBUF_HighImpedanceConfig>:
 800376c:	b480      	push	{r7}
 800376e:	b083      	sub	sp, #12
 8003770:	af00      	add	r7, sp, #0
 8003772:	6078      	str	r0, [r7, #4]
 8003774:	4b06      	ldr	r3, [pc, #24]	@ (8003790 <HAL_SYSCFG_VREFBUF_HighImpedanceConfig+0x24>)
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	f023 0202 	bic.w	r2, r3, #2
 800377c:	4904      	ldr	r1, [pc, #16]	@ (8003790 <HAL_SYSCFG_VREFBUF_HighImpedanceConfig+0x24>)
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	4313      	orrs	r3, r2
 8003782:	600b      	str	r3, [r1, #0]
 8003784:	bf00      	nop
 8003786:	370c      	adds	r7, #12
 8003788:	46bd      	mov	sp, r7
 800378a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800378e:	4770      	bx	lr
 8003790:	58003c00 	.word	0x58003c00

08003794 <HAL_SYSCFG_DisableVREFBUF>:
 8003794:	b480      	push	{r7}
 8003796:	af00      	add	r7, sp, #0
 8003798:	4b05      	ldr	r3, [pc, #20]	@ (80037b0 <HAL_SYSCFG_DisableVREFBUF+0x1c>)
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	4a04      	ldr	r2, [pc, #16]	@ (80037b0 <HAL_SYSCFG_DisableVREFBUF+0x1c>)
 800379e:	f023 0301 	bic.w	r3, r3, #1
 80037a2:	6013      	str	r3, [r2, #0]
 80037a4:	bf00      	nop
 80037a6:	46bd      	mov	sp, r7
 80037a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ac:	4770      	bx	lr
 80037ae:	bf00      	nop
 80037b0:	58003c00 	.word	0x58003c00

080037b4 <HAL_SYSCFG_AnalogSwitchConfig>:
 80037b4:	b480      	push	{r7}
 80037b6:	b083      	sub	sp, #12
 80037b8:	af00      	add	r7, sp, #0
 80037ba:	6078      	str	r0, [r7, #4]
 80037bc:	6039      	str	r1, [r7, #0]
 80037be:	4b07      	ldr	r3, [pc, #28]	@ (80037dc <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 80037c0:	685a      	ldr	r2, [r3, #4]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	43db      	mvns	r3, r3
 80037c6:	401a      	ands	r2, r3
 80037c8:	4904      	ldr	r1, [pc, #16]	@ (80037dc <HAL_SYSCFG_AnalogSwitchConfig+0x28>)
 80037ca:	683b      	ldr	r3, [r7, #0]
 80037cc:	4313      	orrs	r3, r2
 80037ce:	604b      	str	r3, [r1, #4]
 80037d0:	bf00      	nop
 80037d2:	370c      	adds	r7, #12
 80037d4:	46bd      	mov	sp, r7
 80037d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037da:	4770      	bx	lr
 80037dc:	58000400 	.word	0x58000400

080037e0 <LL_ADC_SetCommonClock>:
 80037e0:	b480      	push	{r7}
 80037e2:	b083      	sub	sp, #12
 80037e4:	af00      	add	r7, sp, #0
 80037e6:	6078      	str	r0, [r7, #4]
 80037e8:	6039      	str	r1, [r7, #0]
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	689b      	ldr	r3, [r3, #8]
 80037ee:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80037f2:	683b      	ldr	r3, [r7, #0]
 80037f4:	431a      	orrs	r2, r3
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	609a      	str	r2, [r3, #8]
 80037fa:	bf00      	nop
 80037fc:	370c      	adds	r7, #12
 80037fe:	46bd      	mov	sp, r7
 8003800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003804:	4770      	bx	lr

08003806 <LL_ADC_SetCommonPathInternalCh>:
 8003806:	b480      	push	{r7}
 8003808:	b083      	sub	sp, #12
 800380a:	af00      	add	r7, sp, #0
 800380c:	6078      	str	r0, [r7, #4]
 800380e:	6039      	str	r1, [r7, #0]
 8003810:	687b      	ldr	r3, [r7, #4]
 8003812:	689b      	ldr	r3, [r3, #8]
 8003814:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8003818:	683b      	ldr	r3, [r7, #0]
 800381a:	431a      	orrs	r2, r3
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	609a      	str	r2, [r3, #8]
 8003820:	bf00      	nop
 8003822:	370c      	adds	r7, #12
 8003824:	46bd      	mov	sp, r7
 8003826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800382a:	4770      	bx	lr

0800382c <LL_ADC_GetCommonPathInternalCh>:
 800382c:	b480      	push	{r7}
 800382e:	b083      	sub	sp, #12
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	689b      	ldr	r3, [r3, #8]
 8003838:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 800383c:	4618      	mov	r0, r3
 800383e:	370c      	adds	r7, #12
 8003840:	46bd      	mov	sp, r7
 8003842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003846:	4770      	bx	lr

08003848 <LL_ADC_SetOffset>:
 8003848:	b480      	push	{r7}
 800384a:	b087      	sub	sp, #28
 800384c:	af00      	add	r7, sp, #0
 800384e:	60f8      	str	r0, [r7, #12]
 8003850:	60b9      	str	r1, [r7, #8]
 8003852:	607a      	str	r2, [r7, #4]
 8003854:	603b      	str	r3, [r7, #0]
 8003856:	68fb      	ldr	r3, [r7, #12]
 8003858:	3360      	adds	r3, #96	@ 0x60
 800385a:	461a      	mov	r2, r3
 800385c:	68bb      	ldr	r3, [r7, #8]
 800385e:	009b      	lsls	r3, r3, #2
 8003860:	4413      	add	r3, r2
 8003862:	617b      	str	r3, [r7, #20]
 8003864:	697b      	ldr	r3, [r7, #20]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	f003 4200 	and.w	r2, r3, #2147483648	@ 0x80000000
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	f003 41f8 	and.w	r1, r3, #2080374784	@ 0x7c000000
 8003872:	683b      	ldr	r3, [r7, #0]
 8003874:	430b      	orrs	r3, r1
 8003876:	431a      	orrs	r2, r3
 8003878:	697b      	ldr	r3, [r7, #20]
 800387a:	601a      	str	r2, [r3, #0]
 800387c:	bf00      	nop
 800387e:	371c      	adds	r7, #28
 8003880:	46bd      	mov	sp, r7
 8003882:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003886:	4770      	bx	lr

08003888 <LL_ADC_SetDataRightShift>:
 8003888:	b480      	push	{r7}
 800388a:	b085      	sub	sp, #20
 800388c:	af00      	add	r7, sp, #0
 800388e:	60f8      	str	r0, [r7, #12]
 8003890:	60b9      	str	r1, [r7, #8]
 8003892:	607a      	str	r2, [r7, #4]
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	691b      	ldr	r3, [r3, #16]
 8003898:	f423 42f0 	bic.w	r2, r3, #30720	@ 0x7800
 800389c:	68bb      	ldr	r3, [r7, #8]
 800389e:	f003 031f 	and.w	r3, r3, #31
 80038a2:	6879      	ldr	r1, [r7, #4]
 80038a4:	fa01 f303 	lsl.w	r3, r1, r3
 80038a8:	431a      	orrs	r2, r3
 80038aa:	68fb      	ldr	r3, [r7, #12]
 80038ac:	611a      	str	r2, [r3, #16]
 80038ae:	bf00      	nop
 80038b0:	3714      	adds	r7, #20
 80038b2:	46bd      	mov	sp, r7
 80038b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b8:	4770      	bx	lr

080038ba <LL_ADC_SetOffsetSignedSaturation>:
 80038ba:	b480      	push	{r7}
 80038bc:	b087      	sub	sp, #28
 80038be:	af00      	add	r7, sp, #0
 80038c0:	60f8      	str	r0, [r7, #12]
 80038c2:	60b9      	str	r1, [r7, #8]
 80038c4:	607a      	str	r2, [r7, #4]
 80038c6:	68fb      	ldr	r3, [r7, #12]
 80038c8:	3360      	adds	r3, #96	@ 0x60
 80038ca:	461a      	mov	r2, r3
 80038cc:	68bb      	ldr	r3, [r7, #8]
 80038ce:	009b      	lsls	r3, r3, #2
 80038d0:	4413      	add	r3, r2
 80038d2:	617b      	str	r3, [r7, #20]
 80038d4:	697b      	ldr	r3, [r7, #20]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	431a      	orrs	r2, r3
 80038e0:	697b      	ldr	r3, [r7, #20]
 80038e2:	601a      	str	r2, [r3, #0]
 80038e4:	bf00      	nop
 80038e6:	371c      	adds	r7, #28
 80038e8:	46bd      	mov	sp, r7
 80038ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038ee:	4770      	bx	lr

080038f0 <LL_ADC_REG_IsTriggerSourceSWStart>:
 80038f0:	b480      	push	{r7}
 80038f2:	b083      	sub	sp, #12
 80038f4:	af00      	add	r7, sp, #0
 80038f6:	6078      	str	r0, [r7, #4]
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	68db      	ldr	r3, [r3, #12]
 80038fc:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8003900:	2b00      	cmp	r3, #0
 8003902:	d101      	bne.n	8003908 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8003904:	2301      	movs	r3, #1
 8003906:	e000      	b.n	800390a <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8003908:	2300      	movs	r3, #0
 800390a:	4618      	mov	r0, r3
 800390c:	370c      	adds	r7, #12
 800390e:	46bd      	mov	sp, r7
 8003910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003914:	4770      	bx	lr

08003916 <LL_ADC_REG_SetSequencerRanks>:
 8003916:	b480      	push	{r7}
 8003918:	b087      	sub	sp, #28
 800391a:	af00      	add	r7, sp, #0
 800391c:	60f8      	str	r0, [r7, #12]
 800391e:	60b9      	str	r1, [r7, #8]
 8003920:	607a      	str	r2, [r7, #4]
 8003922:	68fb      	ldr	r3, [r7, #12]
 8003924:	3330      	adds	r3, #48	@ 0x30
 8003926:	461a      	mov	r2, r3
 8003928:	68bb      	ldr	r3, [r7, #8]
 800392a:	0a1b      	lsrs	r3, r3, #8
 800392c:	009b      	lsls	r3, r3, #2
 800392e:	f003 030c 	and.w	r3, r3, #12
 8003932:	4413      	add	r3, r2
 8003934:	617b      	str	r3, [r7, #20]
 8003936:	697b      	ldr	r3, [r7, #20]
 8003938:	681a      	ldr	r2, [r3, #0]
 800393a:	68bb      	ldr	r3, [r7, #8]
 800393c:	f003 031f 	and.w	r3, r3, #31
 8003940:	211f      	movs	r1, #31
 8003942:	fa01 f303 	lsl.w	r3, r1, r3
 8003946:	43db      	mvns	r3, r3
 8003948:	401a      	ands	r2, r3
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	0e9b      	lsrs	r3, r3, #26
 800394e:	f003 011f 	and.w	r1, r3, #31
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	f003 031f 	and.w	r3, r3, #31
 8003958:	fa01 f303 	lsl.w	r3, r1, r3
 800395c:	431a      	orrs	r2, r3
 800395e:	697b      	ldr	r3, [r7, #20]
 8003960:	601a      	str	r2, [r3, #0]
 8003962:	bf00      	nop
 8003964:	371c      	adds	r7, #28
 8003966:	46bd      	mov	sp, r7
 8003968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800396c:	4770      	bx	lr

0800396e <LL_ADC_SetChannelSamplingTime>:
 800396e:	b480      	push	{r7}
 8003970:	b087      	sub	sp, #28
 8003972:	af00      	add	r7, sp, #0
 8003974:	60f8      	str	r0, [r7, #12]
 8003976:	60b9      	str	r1, [r7, #8]
 8003978:	607a      	str	r2, [r7, #4]
 800397a:	68fb      	ldr	r3, [r7, #12]
 800397c:	3314      	adds	r3, #20
 800397e:	461a      	mov	r2, r3
 8003980:	68bb      	ldr	r3, [r7, #8]
 8003982:	0e5b      	lsrs	r3, r3, #25
 8003984:	009b      	lsls	r3, r3, #2
 8003986:	f003 0304 	and.w	r3, r3, #4
 800398a:	4413      	add	r3, r2
 800398c:	617b      	str	r3, [r7, #20]
 800398e:	697b      	ldr	r3, [r7, #20]
 8003990:	681a      	ldr	r2, [r3, #0]
 8003992:	68bb      	ldr	r3, [r7, #8]
 8003994:	0d1b      	lsrs	r3, r3, #20
 8003996:	f003 031f 	and.w	r3, r3, #31
 800399a:	2107      	movs	r1, #7
 800399c:	fa01 f303 	lsl.w	r3, r1, r3
 80039a0:	43db      	mvns	r3, r3
 80039a2:	401a      	ands	r2, r3
 80039a4:	68bb      	ldr	r3, [r7, #8]
 80039a6:	0d1b      	lsrs	r3, r3, #20
 80039a8:	f003 031f 	and.w	r3, r3, #31
 80039ac:	6879      	ldr	r1, [r7, #4]
 80039ae:	fa01 f303 	lsl.w	r3, r1, r3
 80039b2:	431a      	orrs	r2, r3
 80039b4:	697b      	ldr	r3, [r7, #20]
 80039b6:	601a      	str	r2, [r3, #0]
 80039b8:	bf00      	nop
 80039ba:	371c      	adds	r7, #28
 80039bc:	46bd      	mov	sp, r7
 80039be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039c2:	4770      	bx	lr

080039c4 <LL_ADC_SetChannelSingleDiff>:
 80039c4:	b480      	push	{r7}
 80039c6:	b085      	sub	sp, #20
 80039c8:	af00      	add	r7, sp, #0
 80039ca:	60f8      	str	r0, [r7, #12]
 80039cc:	60b9      	str	r1, [r7, #8]
 80039ce:	607a      	str	r2, [r7, #4]
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	f8d3 20c0 	ldr.w	r2, [r3, #192]	@ 0xc0
 80039d6:	68bb      	ldr	r3, [r7, #8]
 80039d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80039dc:	43db      	mvns	r3, r3
 80039de:	401a      	ands	r2, r3
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	f003 0318 	and.w	r3, r3, #24
 80039e6:	4908      	ldr	r1, [pc, #32]	@ (8003a08 <LL_ADC_SetChannelSingleDiff+0x44>)
 80039e8:	40d9      	lsrs	r1, r3
 80039ea:	68bb      	ldr	r3, [r7, #8]
 80039ec:	400b      	ands	r3, r1
 80039ee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80039f2:	431a      	orrs	r2, r3
 80039f4:	68fb      	ldr	r3, [r7, #12]
 80039f6:	f8c3 20c0 	str.w	r2, [r3, #192]	@ 0xc0
 80039fa:	bf00      	nop
 80039fc:	3714      	adds	r7, #20
 80039fe:	46bd      	mov	sp, r7
 8003a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a04:	4770      	bx	lr
 8003a06:	bf00      	nop
 8003a08:	000fffff 	.word	0x000fffff

08003a0c <LL_ADC_GetMultimode>:
 8003a0c:	b480      	push	{r7}
 8003a0e:	b083      	sub	sp, #12
 8003a10:	af00      	add	r7, sp, #0
 8003a12:	6078      	str	r0, [r7, #4]
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	689b      	ldr	r3, [r3, #8]
 8003a18:	f003 031f 	and.w	r3, r3, #31
 8003a1c:	4618      	mov	r0, r3
 8003a1e:	370c      	adds	r7, #12
 8003a20:	46bd      	mov	sp, r7
 8003a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a26:	4770      	bx	lr

08003a28 <LL_ADC_GetMultiDMATransfer>:
 8003a28:	b480      	push	{r7}
 8003a2a:	b083      	sub	sp, #12
 8003a2c:	af00      	add	r7, sp, #0
 8003a2e:	6078      	str	r0, [r7, #4]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	689b      	ldr	r3, [r3, #8]
 8003a34:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8003a38:	4618      	mov	r0, r3
 8003a3a:	370c      	adds	r7, #12
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a42:	4770      	bx	lr

08003a44 <LL_ADC_DisableDeepPowerDown>:
 8003a44:	b480      	push	{r7}
 8003a46:	b083      	sub	sp, #12
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	689a      	ldr	r2, [r3, #8]
 8003a50:	4b04      	ldr	r3, [pc, #16]	@ (8003a64 <LL_ADC_DisableDeepPowerDown+0x20>)
 8003a52:	4013      	ands	r3, r2
 8003a54:	687a      	ldr	r2, [r7, #4]
 8003a56:	6093      	str	r3, [r2, #8]
 8003a58:	bf00      	nop
 8003a5a:	370c      	adds	r7, #12
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a62:	4770      	bx	lr
 8003a64:	5fffffc0 	.word	0x5fffffc0

08003a68 <LL_ADC_IsDeepPowerDownEnabled>:
 8003a68:	b480      	push	{r7}
 8003a6a:	b083      	sub	sp, #12
 8003a6c:	af00      	add	r7, sp, #0
 8003a6e:	6078      	str	r0, [r7, #4]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	689b      	ldr	r3, [r3, #8]
 8003a74:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8003a78:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8003a7c:	d101      	bne.n	8003a82 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8003a7e:	2301      	movs	r3, #1
 8003a80:	e000      	b.n	8003a84 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8003a82:	2300      	movs	r3, #0
 8003a84:	4618      	mov	r0, r3
 8003a86:	370c      	adds	r7, #12
 8003a88:	46bd      	mov	sp, r7
 8003a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8e:	4770      	bx	lr

08003a90 <LL_ADC_EnableInternalRegulator>:
 8003a90:	b480      	push	{r7}
 8003a92:	b083      	sub	sp, #12
 8003a94:	af00      	add	r7, sp, #0
 8003a96:	6078      	str	r0, [r7, #4]
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	689a      	ldr	r2, [r3, #8]
 8003a9c:	4b05      	ldr	r3, [pc, #20]	@ (8003ab4 <LL_ADC_EnableInternalRegulator+0x24>)
 8003a9e:	4013      	ands	r3, r2
 8003aa0:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	609a      	str	r2, [r3, #8]
 8003aa8:	bf00      	nop
 8003aaa:	370c      	adds	r7, #12
 8003aac:	46bd      	mov	sp, r7
 8003aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab2:	4770      	bx	lr
 8003ab4:	6fffffc0 	.word	0x6fffffc0

08003ab8 <LL_ADC_IsInternalRegulatorEnabled>:
 8003ab8:	b480      	push	{r7}
 8003aba:	b083      	sub	sp, #12
 8003abc:	af00      	add	r7, sp, #0
 8003abe:	6078      	str	r0, [r7, #4]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	689b      	ldr	r3, [r3, #8]
 8003ac4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003ac8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003acc:	d101      	bne.n	8003ad2 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8003ace:	2301      	movs	r3, #1
 8003ad0:	e000      	b.n	8003ad4 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8003ad2:	2300      	movs	r3, #0
 8003ad4:	4618      	mov	r0, r3
 8003ad6:	370c      	adds	r7, #12
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ade:	4770      	bx	lr

08003ae0 <LL_ADC_Enable>:
 8003ae0:	b480      	push	{r7}
 8003ae2:	b083      	sub	sp, #12
 8003ae4:	af00      	add	r7, sp, #0
 8003ae6:	6078      	str	r0, [r7, #4]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	689a      	ldr	r2, [r3, #8]
 8003aec:	4b05      	ldr	r3, [pc, #20]	@ (8003b04 <LL_ADC_Enable+0x24>)
 8003aee:	4013      	ands	r3, r2
 8003af0:	f043 0201 	orr.w	r2, r3, #1
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	609a      	str	r2, [r3, #8]
 8003af8:	bf00      	nop
 8003afa:	370c      	adds	r7, #12
 8003afc:	46bd      	mov	sp, r7
 8003afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b02:	4770      	bx	lr
 8003b04:	7fffffc0 	.word	0x7fffffc0

08003b08 <LL_ADC_Disable>:
 8003b08:	b480      	push	{r7}
 8003b0a:	b083      	sub	sp, #12
 8003b0c:	af00      	add	r7, sp, #0
 8003b0e:	6078      	str	r0, [r7, #4]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	689a      	ldr	r2, [r3, #8]
 8003b14:	4b05      	ldr	r3, [pc, #20]	@ (8003b2c <LL_ADC_Disable+0x24>)
 8003b16:	4013      	ands	r3, r2
 8003b18:	f043 0202 	orr.w	r2, r3, #2
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	609a      	str	r2, [r3, #8]
 8003b20:	bf00      	nop
 8003b22:	370c      	adds	r7, #12
 8003b24:	46bd      	mov	sp, r7
 8003b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b2a:	4770      	bx	lr
 8003b2c:	7fffffc0 	.word	0x7fffffc0

08003b30 <LL_ADC_IsEnabled>:
 8003b30:	b480      	push	{r7}
 8003b32:	b083      	sub	sp, #12
 8003b34:	af00      	add	r7, sp, #0
 8003b36:	6078      	str	r0, [r7, #4]
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	689b      	ldr	r3, [r3, #8]
 8003b3c:	f003 0301 	and.w	r3, r3, #1
 8003b40:	2b01      	cmp	r3, #1
 8003b42:	d101      	bne.n	8003b48 <LL_ADC_IsEnabled+0x18>
 8003b44:	2301      	movs	r3, #1
 8003b46:	e000      	b.n	8003b4a <LL_ADC_IsEnabled+0x1a>
 8003b48:	2300      	movs	r3, #0
 8003b4a:	4618      	mov	r0, r3
 8003b4c:	370c      	adds	r7, #12
 8003b4e:	46bd      	mov	sp, r7
 8003b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b54:	4770      	bx	lr

08003b56 <LL_ADC_IsDisableOngoing>:
 8003b56:	b480      	push	{r7}
 8003b58:	b083      	sub	sp, #12
 8003b5a:	af00      	add	r7, sp, #0
 8003b5c:	6078      	str	r0, [r7, #4]
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	689b      	ldr	r3, [r3, #8]
 8003b62:	f003 0302 	and.w	r3, r3, #2
 8003b66:	2b02      	cmp	r3, #2
 8003b68:	d101      	bne.n	8003b6e <LL_ADC_IsDisableOngoing+0x18>
 8003b6a:	2301      	movs	r3, #1
 8003b6c:	e000      	b.n	8003b70 <LL_ADC_IsDisableOngoing+0x1a>
 8003b6e:	2300      	movs	r3, #0
 8003b70:	4618      	mov	r0, r3
 8003b72:	370c      	adds	r7, #12
 8003b74:	46bd      	mov	sp, r7
 8003b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b7a:	4770      	bx	lr

08003b7c <LL_ADC_REG_StartConversion>:
 8003b7c:	b480      	push	{r7}
 8003b7e:	b083      	sub	sp, #12
 8003b80:	af00      	add	r7, sp, #0
 8003b82:	6078      	str	r0, [r7, #4]
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	689a      	ldr	r2, [r3, #8]
 8003b88:	4b05      	ldr	r3, [pc, #20]	@ (8003ba0 <LL_ADC_REG_StartConversion+0x24>)
 8003b8a:	4013      	ands	r3, r2
 8003b8c:	f043 0204 	orr.w	r2, r3, #4
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	609a      	str	r2, [r3, #8]
 8003b94:	bf00      	nop
 8003b96:	370c      	adds	r7, #12
 8003b98:	46bd      	mov	sp, r7
 8003b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b9e:	4770      	bx	lr
 8003ba0:	7fffffc0 	.word	0x7fffffc0

08003ba4 <LL_ADC_REG_StopConversion>:
 8003ba4:	b480      	push	{r7}
 8003ba6:	b083      	sub	sp, #12
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	6078      	str	r0, [r7, #4]
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	689a      	ldr	r2, [r3, #8]
 8003bb0:	4b05      	ldr	r3, [pc, #20]	@ (8003bc8 <LL_ADC_REG_StopConversion+0x24>)
 8003bb2:	4013      	ands	r3, r2
 8003bb4:	f043 0210 	orr.w	r2, r3, #16
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	609a      	str	r2, [r3, #8]
 8003bbc:	bf00      	nop
 8003bbe:	370c      	adds	r7, #12
 8003bc0:	46bd      	mov	sp, r7
 8003bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc6:	4770      	bx	lr
 8003bc8:	7fffffc0 	.word	0x7fffffc0

08003bcc <LL_ADC_REG_IsConversionOngoing>:
 8003bcc:	b480      	push	{r7}
 8003bce:	b083      	sub	sp, #12
 8003bd0:	af00      	add	r7, sp, #0
 8003bd2:	6078      	str	r0, [r7, #4]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	689b      	ldr	r3, [r3, #8]
 8003bd8:	f003 0304 	and.w	r3, r3, #4
 8003bdc:	2b04      	cmp	r3, #4
 8003bde:	d101      	bne.n	8003be4 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003be0:	2301      	movs	r3, #1
 8003be2:	e000      	b.n	8003be6 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003be4:	2300      	movs	r3, #0
 8003be6:	4618      	mov	r0, r3
 8003be8:	370c      	adds	r7, #12
 8003bea:	46bd      	mov	sp, r7
 8003bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf0:	4770      	bx	lr
	...

08003bf4 <LL_ADC_INJ_StopConversion>:
 8003bf4:	b480      	push	{r7}
 8003bf6:	b083      	sub	sp, #12
 8003bf8:	af00      	add	r7, sp, #0
 8003bfa:	6078      	str	r0, [r7, #4]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	689a      	ldr	r2, [r3, #8]
 8003c00:	4b05      	ldr	r3, [pc, #20]	@ (8003c18 <LL_ADC_INJ_StopConversion+0x24>)
 8003c02:	4013      	ands	r3, r2
 8003c04:	f043 0220 	orr.w	r2, r3, #32
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	609a      	str	r2, [r3, #8]
 8003c0c:	bf00      	nop
 8003c0e:	370c      	adds	r7, #12
 8003c10:	46bd      	mov	sp, r7
 8003c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c16:	4770      	bx	lr
 8003c18:	7fffffc0 	.word	0x7fffffc0

08003c1c <LL_ADC_INJ_IsConversionOngoing>:
 8003c1c:	b480      	push	{r7}
 8003c1e:	b083      	sub	sp, #12
 8003c20:	af00      	add	r7, sp, #0
 8003c22:	6078      	str	r0, [r7, #4]
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	689b      	ldr	r3, [r3, #8]
 8003c28:	f003 0308 	and.w	r3, r3, #8
 8003c2c:	2b08      	cmp	r3, #8
 8003c2e:	d101      	bne.n	8003c34 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8003c30:	2301      	movs	r3, #1
 8003c32:	e000      	b.n	8003c36 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8003c34:	2300      	movs	r3, #0
 8003c36:	4618      	mov	r0, r3
 8003c38:	370c      	adds	r7, #12
 8003c3a:	46bd      	mov	sp, r7
 8003c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c40:	4770      	bx	lr
	...

08003c44 <HAL_ADC_Init>:
 8003c44:	b590      	push	{r4, r7, lr}
 8003c46:	b089      	sub	sp, #36	@ 0x24
 8003c48:	af00      	add	r7, sp, #0
 8003c4a:	6078      	str	r0, [r7, #4]
 8003c4c:	2300      	movs	r3, #0
 8003c4e:	77fb      	strb	r3, [r7, #31]
 8003c50:	2300      	movs	r3, #0
 8003c52:	60bb      	str	r3, [r7, #8]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d101      	bne.n	8003c5e <HAL_ADC_Init+0x1a>
 8003c5a:	2301      	movs	r3, #1
 8003c5c:	e18f      	b.n	8003f7e <HAL_ADC_Init+0x33a>
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	68db      	ldr	r3, [r3, #12]
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d109      	bne.n	8003c80 <HAL_ADC_Init+0x3c>
 8003c6c:	6878      	ldr	r0, [r7, #4]
 8003c6e:	f7fc fcbb 	bl	80005e8 <HAL_ADC_MspInit>
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	2200      	movs	r2, #0
 8003c76:	659a      	str	r2, [r3, #88]	@ 0x58
 8003c78:	687b      	ldr	r3, [r7, #4]
 8003c7a:	2200      	movs	r2, #0
 8003c7c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	4618      	mov	r0, r3
 8003c86:	f7ff feef 	bl	8003a68 <LL_ADC_IsDeepPowerDownEnabled>
 8003c8a:	4603      	mov	r3, r0
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d004      	beq.n	8003c9a <HAL_ADC_Init+0x56>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	4618      	mov	r0, r3
 8003c96:	f7ff fed5 	bl	8003a44 <LL_ADC_DisableDeepPowerDown>
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	4618      	mov	r0, r3
 8003ca0:	f7ff ff0a 	bl	8003ab8 <LL_ADC_IsInternalRegulatorEnabled>
 8003ca4:	4603      	mov	r3, r0
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d114      	bne.n	8003cd4 <HAL_ADC_Init+0x90>
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	4618      	mov	r0, r3
 8003cb0:	f7ff feee 	bl	8003a90 <LL_ADC_EnableInternalRegulator>
 8003cb4:	4b87      	ldr	r3, [pc, #540]	@ (8003ed4 <HAL_ADC_Init+0x290>)
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	099b      	lsrs	r3, r3, #6
 8003cba:	4a87      	ldr	r2, [pc, #540]	@ (8003ed8 <HAL_ADC_Init+0x294>)
 8003cbc:	fba2 2303 	umull	r2, r3, r2, r3
 8003cc0:	099b      	lsrs	r3, r3, #6
 8003cc2:	3301      	adds	r3, #1
 8003cc4:	60bb      	str	r3, [r7, #8]
 8003cc6:	e002      	b.n	8003cce <HAL_ADC_Init+0x8a>
 8003cc8:	68bb      	ldr	r3, [r7, #8]
 8003cca:	3b01      	subs	r3, #1
 8003ccc:	60bb      	str	r3, [r7, #8]
 8003cce:	68bb      	ldr	r3, [r7, #8]
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	d1f9      	bne.n	8003cc8 <HAL_ADC_Init+0x84>
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	4618      	mov	r0, r3
 8003cda:	f7ff feed 	bl	8003ab8 <LL_ADC_IsInternalRegulatorEnabled>
 8003cde:	4603      	mov	r3, r0
 8003ce0:	2b00      	cmp	r3, #0
 8003ce2:	d10d      	bne.n	8003d00 <HAL_ADC_Init+0xbc>
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003ce8:	f043 0210 	orr.w	r2, r3, #16
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	655a      	str	r2, [r3, #84]	@ 0x54
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003cf4:	f043 0201 	orr.w	r2, r3, #1
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	659a      	str	r2, [r3, #88]	@ 0x58
 8003cfc:	2301      	movs	r3, #1
 8003cfe:	77fb      	strb	r3, [r7, #31]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	4618      	mov	r0, r3
 8003d06:	f7ff ff61 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 8003d0a:	6178      	str	r0, [r7, #20]
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d10:	f003 0310 	and.w	r3, r3, #16
 8003d14:	2b00      	cmp	r3, #0
 8003d16:	f040 8129 	bne.w	8003f6c <HAL_ADC_Init+0x328>
 8003d1a:	697b      	ldr	r3, [r7, #20]
 8003d1c:	2b00      	cmp	r3, #0
 8003d1e:	f040 8125 	bne.w	8003f6c <HAL_ADC_Init+0x328>
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d26:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 8003d2a:	f043 0202 	orr.w	r2, r3, #2
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	655a      	str	r2, [r3, #84]	@ 0x54
 8003d32:	687b      	ldr	r3, [r7, #4]
 8003d34:	681b      	ldr	r3, [r3, #0]
 8003d36:	4618      	mov	r0, r3
 8003d38:	f7ff fefa 	bl	8003b30 <LL_ADC_IsEnabled>
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	d136      	bne.n	8003db0 <HAL_ADC_Init+0x16c>
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	4a65      	ldr	r2, [pc, #404]	@ (8003edc <HAL_ADC_Init+0x298>)
 8003d48:	4293      	cmp	r3, r2
 8003d4a:	d004      	beq.n	8003d56 <HAL_ADC_Init+0x112>
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	4a63      	ldr	r2, [pc, #396]	@ (8003ee0 <HAL_ADC_Init+0x29c>)
 8003d52:	4293      	cmp	r3, r2
 8003d54:	d10e      	bne.n	8003d74 <HAL_ADC_Init+0x130>
 8003d56:	4861      	ldr	r0, [pc, #388]	@ (8003edc <HAL_ADC_Init+0x298>)
 8003d58:	f7ff feea 	bl	8003b30 <LL_ADC_IsEnabled>
 8003d5c:	4604      	mov	r4, r0
 8003d5e:	4860      	ldr	r0, [pc, #384]	@ (8003ee0 <HAL_ADC_Init+0x29c>)
 8003d60:	f7ff fee6 	bl	8003b30 <LL_ADC_IsEnabled>
 8003d64:	4603      	mov	r3, r0
 8003d66:	4323      	orrs	r3, r4
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	bf0c      	ite	eq
 8003d6c:	2301      	moveq	r3, #1
 8003d6e:	2300      	movne	r3, #0
 8003d70:	b2db      	uxtb	r3, r3
 8003d72:	e008      	b.n	8003d86 <HAL_ADC_Init+0x142>
 8003d74:	485b      	ldr	r0, [pc, #364]	@ (8003ee4 <HAL_ADC_Init+0x2a0>)
 8003d76:	f7ff fedb 	bl	8003b30 <LL_ADC_IsEnabled>
 8003d7a:	4603      	mov	r3, r0
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	bf0c      	ite	eq
 8003d80:	2301      	moveq	r3, #1
 8003d82:	2300      	movne	r3, #0
 8003d84:	b2db      	uxtb	r3, r3
 8003d86:	2b00      	cmp	r3, #0
 8003d88:	d012      	beq.n	8003db0 <HAL_ADC_Init+0x16c>
 8003d8a:	687b      	ldr	r3, [r7, #4]
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	4a53      	ldr	r2, [pc, #332]	@ (8003edc <HAL_ADC_Init+0x298>)
 8003d90:	4293      	cmp	r3, r2
 8003d92:	d004      	beq.n	8003d9e <HAL_ADC_Init+0x15a>
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	681b      	ldr	r3, [r3, #0]
 8003d98:	4a51      	ldr	r2, [pc, #324]	@ (8003ee0 <HAL_ADC_Init+0x29c>)
 8003d9a:	4293      	cmp	r3, r2
 8003d9c:	d101      	bne.n	8003da2 <HAL_ADC_Init+0x15e>
 8003d9e:	4a52      	ldr	r2, [pc, #328]	@ (8003ee8 <HAL_ADC_Init+0x2a4>)
 8003da0:	e000      	b.n	8003da4 <HAL_ADC_Init+0x160>
 8003da2:	4a52      	ldr	r2, [pc, #328]	@ (8003eec <HAL_ADC_Init+0x2a8>)
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	685b      	ldr	r3, [r3, #4]
 8003da8:	4619      	mov	r1, r3
 8003daa:	4610      	mov	r0, r2
 8003dac:	f7ff fd18 	bl	80037e0 <LL_ADC_SetCommonClock>
 8003db0:	f7ff fcd0 	bl	8003754 <HAL_GetREVID>
 8003db4:	4603      	mov	r3, r0
 8003db6:	f241 0203 	movw	r2, #4099	@ 0x1003
 8003dba:	4293      	cmp	r3, r2
 8003dbc:	d914      	bls.n	8003de8 <HAL_ADC_Init+0x1a4>
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	689b      	ldr	r3, [r3, #8]
 8003dc2:	2b10      	cmp	r3, #16
 8003dc4:	d110      	bne.n	8003de8 <HAL_ADC_Init+0x1a4>
 8003dc6:	687b      	ldr	r3, [r7, #4]
 8003dc8:	7d5b      	ldrb	r3, [r3, #21]
 8003dca:	035a      	lsls	r2, r3, #13
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003dd0:	431a      	orrs	r2, r3
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	689b      	ldr	r3, [r3, #8]
 8003dd6:	431a      	orrs	r2, r3
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	7f1b      	ldrb	r3, [r3, #28]
 8003ddc:	041b      	lsls	r3, r3, #16
 8003dde:	4313      	orrs	r3, r2
 8003de0:	f043 030c 	orr.w	r3, r3, #12
 8003de4:	61bb      	str	r3, [r7, #24]
 8003de6:	e00d      	b.n	8003e04 <HAL_ADC_Init+0x1c0>
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	7d5b      	ldrb	r3, [r3, #21]
 8003dec:	035a      	lsls	r2, r3, #13
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003df2:	431a      	orrs	r2, r3
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	689b      	ldr	r3, [r3, #8]
 8003df8:	431a      	orrs	r2, r3
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	7f1b      	ldrb	r3, [r3, #28]
 8003dfe:	041b      	lsls	r3, r3, #16
 8003e00:	4313      	orrs	r3, r2
 8003e02:	61bb      	str	r3, [r7, #24]
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	7f1b      	ldrb	r3, [r3, #28]
 8003e08:	2b01      	cmp	r3, #1
 8003e0a:	d106      	bne.n	8003e1a <HAL_ADC_Init+0x1d6>
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	6a1b      	ldr	r3, [r3, #32]
 8003e10:	3b01      	subs	r3, #1
 8003e12:	045b      	lsls	r3, r3, #17
 8003e14:	69ba      	ldr	r2, [r7, #24]
 8003e16:	4313      	orrs	r3, r2
 8003e18:	61bb      	str	r3, [r7, #24]
 8003e1a:	687b      	ldr	r3, [r7, #4]
 8003e1c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e1e:	2b00      	cmp	r3, #0
 8003e20:	d009      	beq.n	8003e36 <HAL_ADC_Init+0x1f2>
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e26:	f403 7278 	and.w	r2, r3, #992	@ 0x3e0
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e2e:	4313      	orrs	r3, r2
 8003e30:	69ba      	ldr	r2, [r7, #24]
 8003e32:	4313      	orrs	r3, r2
 8003e34:	61bb      	str	r3, [r7, #24]
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	68da      	ldr	r2, [r3, #12]
 8003e3c:	4b2c      	ldr	r3, [pc, #176]	@ (8003ef0 <HAL_ADC_Init+0x2ac>)
 8003e3e:	4013      	ands	r3, r2
 8003e40:	687a      	ldr	r2, [r7, #4]
 8003e42:	6812      	ldr	r2, [r2, #0]
 8003e44:	69b9      	ldr	r1, [r7, #24]
 8003e46:	430b      	orrs	r3, r1
 8003e48:	60d3      	str	r3, [r2, #12]
 8003e4a:	687b      	ldr	r3, [r7, #4]
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	4618      	mov	r0, r3
 8003e50:	f7ff febc 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 8003e54:	6138      	str	r0, [r7, #16]
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	4618      	mov	r0, r3
 8003e5c:	f7ff fede 	bl	8003c1c <LL_ADC_INJ_IsConversionOngoing>
 8003e60:	60f8      	str	r0, [r7, #12]
 8003e62:	693b      	ldr	r3, [r7, #16]
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	d15f      	bne.n	8003f28 <HAL_ADC_Init+0x2e4>
 8003e68:	68fb      	ldr	r3, [r7, #12]
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d15c      	bne.n	8003f28 <HAL_ADC_Init+0x2e4>
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	7d1b      	ldrb	r3, [r3, #20]
 8003e72:	039a      	lsls	r2, r3, #14
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003e78:	4313      	orrs	r3, r2
 8003e7a:	61bb      	str	r3, [r7, #24]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	68da      	ldr	r2, [r3, #12]
 8003e82:	4b1c      	ldr	r3, [pc, #112]	@ (8003ef4 <HAL_ADC_Init+0x2b0>)
 8003e84:	4013      	ands	r3, r2
 8003e86:	687a      	ldr	r2, [r7, #4]
 8003e88:	6812      	ldr	r2, [r2, #0]
 8003e8a:	69b9      	ldr	r1, [r7, #24]
 8003e8c:	430b      	orrs	r3, r1
 8003e8e:	60d3      	str	r3, [r2, #12]
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8003e96:	2b01      	cmp	r3, #1
 8003e98:	d130      	bne.n	8003efc <HAL_ADC_Init+0x2b8>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003e9e:	2b00      	cmp	r3, #0
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	681b      	ldr	r3, [r3, #0]
 8003ea4:	691a      	ldr	r2, [r3, #16]
 8003ea6:	4b14      	ldr	r3, [pc, #80]	@ (8003ef8 <HAL_ADC_Init+0x2b4>)
 8003ea8:	4013      	ands	r3, r2
 8003eaa:	687a      	ldr	r2, [r7, #4]
 8003eac:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8003eae:	3a01      	subs	r2, #1
 8003eb0:	0411      	lsls	r1, r2, #16
 8003eb2:	687a      	ldr	r2, [r7, #4]
 8003eb4:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8003eb6:	4311      	orrs	r1, r2
 8003eb8:	687a      	ldr	r2, [r7, #4]
 8003eba:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 8003ebc:	4311      	orrs	r1, r2
 8003ebe:	687a      	ldr	r2, [r7, #4]
 8003ec0:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8003ec2:	430a      	orrs	r2, r1
 8003ec4:	431a      	orrs	r2, r3
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	681b      	ldr	r3, [r3, #0]
 8003eca:	f042 0201 	orr.w	r2, r2, #1
 8003ece:	611a      	str	r2, [r3, #16]
 8003ed0:	e01c      	b.n	8003f0c <HAL_ADC_Init+0x2c8>
 8003ed2:	bf00      	nop
 8003ed4:	24000090 	.word	0x24000090
 8003ed8:	053e2d63 	.word	0x053e2d63
 8003edc:	40022000 	.word	0x40022000
 8003ee0:	40022100 	.word	0x40022100
 8003ee4:	58026000 	.word	0x58026000
 8003ee8:	40022300 	.word	0x40022300
 8003eec:	58026300 	.word	0x58026300
 8003ef0:	fff0c003 	.word	0xfff0c003
 8003ef4:	ffffbffc 	.word	0xffffbffc
 8003ef8:	fc00f81e 	.word	0xfc00f81e
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	681b      	ldr	r3, [r3, #0]
 8003f00:	691a      	ldr	r2, [r3, #16]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	681b      	ldr	r3, [r3, #0]
 8003f06:	f022 0201 	bic.w	r2, r2, #1
 8003f0a:	611a      	str	r2, [r3, #16]
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	681b      	ldr	r3, [r3, #0]
 8003f10:	691b      	ldr	r3, [r3, #16]
 8003f12:	f023 4170 	bic.w	r1, r3, #4026531840	@ 0xf0000000
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	430a      	orrs	r2, r1
 8003f20:	611a      	str	r2, [r3, #16]
 8003f22:	6878      	ldr	r0, [r7, #4]
 8003f24:	f000 ff32 	bl	8004d8c <ADC_ConfigureBoostMode>
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	68db      	ldr	r3, [r3, #12]
 8003f2c:	2b01      	cmp	r3, #1
 8003f2e:	d10c      	bne.n	8003f4a <HAL_ADC_Init+0x306>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f36:	f023 010f 	bic.w	r1, r3, #15
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	699b      	ldr	r3, [r3, #24]
 8003f3e:	1e5a      	subs	r2, r3, #1
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	430a      	orrs	r2, r1
 8003f46:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f48:	e007      	b.n	8003f5a <HAL_ADC_Init+0x316>
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	681b      	ldr	r3, [r3, #0]
 8003f54:	f022 020f 	bic.w	r2, r2, #15
 8003f58:	631a      	str	r2, [r3, #48]	@ 0x30
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003f5e:	f023 0303 	bic.w	r3, r3, #3
 8003f62:	f043 0201 	orr.w	r2, r3, #1
 8003f66:	687b      	ldr	r3, [r7, #4]
 8003f68:	655a      	str	r2, [r3, #84]	@ 0x54
 8003f6a:	e007      	b.n	8003f7c <HAL_ADC_Init+0x338>
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003f70:	f043 0210 	orr.w	r2, r3, #16
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	655a      	str	r2, [r3, #84]	@ 0x54
 8003f78:	2301      	movs	r3, #1
 8003f7a:	77fb      	strb	r3, [r7, #31]
 8003f7c:	7ffb      	ldrb	r3, [r7, #31]
 8003f7e:	4618      	mov	r0, r3
 8003f80:	3724      	adds	r7, #36	@ 0x24
 8003f82:	46bd      	mov	sp, r7
 8003f84:	bd90      	pop	{r4, r7, pc}
 8003f86:	bf00      	nop

08003f88 <HAL_ADC_Start>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b086      	sub	sp, #24
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	4a5c      	ldr	r2, [pc, #368]	@ (8004108 <HAL_ADC_Start+0x180>)
 8003f96:	4293      	cmp	r3, r2
 8003f98:	d004      	beq.n	8003fa4 <HAL_ADC_Start+0x1c>
 8003f9a:	687b      	ldr	r3, [r7, #4]
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	4a5b      	ldr	r2, [pc, #364]	@ (800410c <HAL_ADC_Start+0x184>)
 8003fa0:	4293      	cmp	r3, r2
 8003fa2:	d101      	bne.n	8003fa8 <HAL_ADC_Start+0x20>
 8003fa4:	4b5a      	ldr	r3, [pc, #360]	@ (8004110 <HAL_ADC_Start+0x188>)
 8003fa6:	e000      	b.n	8003faa <HAL_ADC_Start+0x22>
 8003fa8:	4b5a      	ldr	r3, [pc, #360]	@ (8004114 <HAL_ADC_Start+0x18c>)
 8003faa:	4618      	mov	r0, r3
 8003fac:	f7ff fd2e 	bl	8003a0c <LL_ADC_GetMultimode>
 8003fb0:	6138      	str	r0, [r7, #16]
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	f7ff fe08 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 8003fbc:	4603      	mov	r3, r0
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	f040 809a 	bne.w	80040f8 <HAL_ADC_Start+0x170>
 8003fc4:	687b      	ldr	r3, [r7, #4]
 8003fc6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8003fca:	2b01      	cmp	r3, #1
 8003fcc:	d101      	bne.n	8003fd2 <HAL_ADC_Start+0x4a>
 8003fce:	2302      	movs	r3, #2
 8003fd0:	e095      	b.n	80040fe <HAL_ADC_Start+0x176>
 8003fd2:	687b      	ldr	r3, [r7, #4]
 8003fd4:	2201      	movs	r2, #1
 8003fd6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003fda:	6878      	ldr	r0, [r7, #4]
 8003fdc:	f000 fdec 	bl	8004bb8 <ADC_Enable>
 8003fe0:	4603      	mov	r3, r0
 8003fe2:	75fb      	strb	r3, [r7, #23]
 8003fe4:	7dfb      	ldrb	r3, [r7, #23]
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	f040 8081 	bne.w	80040ee <HAL_ADC_Start+0x166>
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8003ff0:	4b49      	ldr	r3, [pc, #292]	@ (8004118 <HAL_ADC_Start+0x190>)
 8003ff2:	4013      	ands	r3, r2
 8003ff4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003ff8:	687b      	ldr	r3, [r7, #4]
 8003ffa:	655a      	str	r2, [r3, #84]	@ 0x54
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	4a42      	ldr	r2, [pc, #264]	@ (800410c <HAL_ADC_Start+0x184>)
 8004002:	4293      	cmp	r3, r2
 8004004:	d002      	beq.n	800400c <HAL_ADC_Start+0x84>
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	e000      	b.n	800400e <HAL_ADC_Start+0x86>
 800400c:	4b3e      	ldr	r3, [pc, #248]	@ (8004108 <HAL_ADC_Start+0x180>)
 800400e:	687a      	ldr	r2, [r7, #4]
 8004010:	6812      	ldr	r2, [r2, #0]
 8004012:	4293      	cmp	r3, r2
 8004014:	d002      	beq.n	800401c <HAL_ADC_Start+0x94>
 8004016:	693b      	ldr	r3, [r7, #16]
 8004018:	2b00      	cmp	r3, #0
 800401a:	d105      	bne.n	8004028 <HAL_ADC_Start+0xa0>
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004020:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8004024:	687b      	ldr	r3, [r7, #4]
 8004026:	655a      	str	r2, [r3, #84]	@ 0x54
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800402c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004030:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004034:	d106      	bne.n	8004044 <HAL_ADC_Start+0xbc>
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800403a:	f023 0206 	bic.w	r2, r3, #6
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	659a      	str	r2, [r3, #88]	@ 0x58
 8004042:	e002      	b.n	800404a <HAL_ADC_Start+0xc2>
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	2200      	movs	r2, #0
 8004048:	659a      	str	r2, [r3, #88]	@ 0x58
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	221c      	movs	r2, #28
 8004050:	601a      	str	r2, [r3, #0]
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	2200      	movs	r2, #0
 8004056:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	681b      	ldr	r3, [r3, #0]
 800405e:	4a2b      	ldr	r2, [pc, #172]	@ (800410c <HAL_ADC_Start+0x184>)
 8004060:	4293      	cmp	r3, r2
 8004062:	d002      	beq.n	800406a <HAL_ADC_Start+0xe2>
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	e000      	b.n	800406c <HAL_ADC_Start+0xe4>
 800406a:	4b27      	ldr	r3, [pc, #156]	@ (8004108 <HAL_ADC_Start+0x180>)
 800406c:	687a      	ldr	r2, [r7, #4]
 800406e:	6812      	ldr	r2, [r2, #0]
 8004070:	4293      	cmp	r3, r2
 8004072:	d008      	beq.n	8004086 <HAL_ADC_Start+0xfe>
 8004074:	693b      	ldr	r3, [r7, #16]
 8004076:	2b00      	cmp	r3, #0
 8004078:	d005      	beq.n	8004086 <HAL_ADC_Start+0xfe>
 800407a:	693b      	ldr	r3, [r7, #16]
 800407c:	2b05      	cmp	r3, #5
 800407e:	d002      	beq.n	8004086 <HAL_ADC_Start+0xfe>
 8004080:	693b      	ldr	r3, [r7, #16]
 8004082:	2b09      	cmp	r3, #9
 8004084:	d114      	bne.n	80040b0 <HAL_ADC_Start+0x128>
 8004086:	687b      	ldr	r3, [r7, #4]
 8004088:	681b      	ldr	r3, [r3, #0]
 800408a:	68db      	ldr	r3, [r3, #12]
 800408c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004090:	2b00      	cmp	r3, #0
 8004092:	d007      	beq.n	80040a4 <HAL_ADC_Start+0x11c>
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004098:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 800409c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	655a      	str	r2, [r3, #84]	@ 0x54
 80040a4:	687b      	ldr	r3, [r7, #4]
 80040a6:	681b      	ldr	r3, [r3, #0]
 80040a8:	4618      	mov	r0, r3
 80040aa:	f7ff fd67 	bl	8003b7c <LL_ADC_REG_StartConversion>
 80040ae:	e025      	b.n	80040fc <HAL_ADC_Start+0x174>
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040b4:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80040b8:	687b      	ldr	r3, [r7, #4]
 80040ba:	655a      	str	r2, [r3, #84]	@ 0x54
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	4a12      	ldr	r2, [pc, #72]	@ (800410c <HAL_ADC_Start+0x184>)
 80040c2:	4293      	cmp	r3, r2
 80040c4:	d002      	beq.n	80040cc <HAL_ADC_Start+0x144>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	e000      	b.n	80040ce <HAL_ADC_Start+0x146>
 80040cc:	4b0e      	ldr	r3, [pc, #56]	@ (8004108 <HAL_ADC_Start+0x180>)
 80040ce:	60fb      	str	r3, [r7, #12]
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	68db      	ldr	r3, [r3, #12]
 80040d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d00f      	beq.n	80040fc <HAL_ADC_Start+0x174>
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80040e0:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80040e4:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80040ec:	e006      	b.n	80040fc <HAL_ADC_Start+0x174>
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	2200      	movs	r2, #0
 80040f2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80040f6:	e001      	b.n	80040fc <HAL_ADC_Start+0x174>
 80040f8:	2302      	movs	r3, #2
 80040fa:	75fb      	strb	r3, [r7, #23]
 80040fc:	7dfb      	ldrb	r3, [r7, #23]
 80040fe:	4618      	mov	r0, r3
 8004100:	3718      	adds	r7, #24
 8004102:	46bd      	mov	sp, r7
 8004104:	bd80      	pop	{r7, pc}
 8004106:	bf00      	nop
 8004108:	40022000 	.word	0x40022000
 800410c:	40022100 	.word	0x40022100
 8004110:	40022300 	.word	0x40022300
 8004114:	58026300 	.word	0x58026300
 8004118:	fffff0fe 	.word	0xfffff0fe

0800411c <HAL_ADC_Stop>:
 800411c:	b580      	push	{r7, lr}
 800411e:	b084      	sub	sp, #16
 8004120:	af00      	add	r7, sp, #0
 8004122:	6078      	str	r0, [r7, #4]
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800412a:	2b01      	cmp	r3, #1
 800412c:	d101      	bne.n	8004132 <HAL_ADC_Stop+0x16>
 800412e:	2302      	movs	r3, #2
 8004130:	e021      	b.n	8004176 <HAL_ADC_Stop+0x5a>
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	2201      	movs	r2, #1
 8004136:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800413a:	2103      	movs	r1, #3
 800413c:	6878      	ldr	r0, [r7, #4]
 800413e:	f000 fc7f 	bl	8004a40 <ADC_ConversionStop>
 8004142:	4603      	mov	r3, r0
 8004144:	73fb      	strb	r3, [r7, #15]
 8004146:	7bfb      	ldrb	r3, [r7, #15]
 8004148:	2b00      	cmp	r3, #0
 800414a:	d10f      	bne.n	800416c <HAL_ADC_Stop+0x50>
 800414c:	6878      	ldr	r0, [r7, #4]
 800414e:	f000 fdbd 	bl	8004ccc <ADC_Disable>
 8004152:	4603      	mov	r3, r0
 8004154:	73fb      	strb	r3, [r7, #15]
 8004156:	7bfb      	ldrb	r3, [r7, #15]
 8004158:	2b00      	cmp	r3, #0
 800415a:	d107      	bne.n	800416c <HAL_ADC_Stop+0x50>
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8004160:	4b07      	ldr	r3, [pc, #28]	@ (8004180 <HAL_ADC_Stop+0x64>)
 8004162:	4013      	ands	r3, r2
 8004164:	f043 0201 	orr.w	r2, r3, #1
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	655a      	str	r2, [r3, #84]	@ 0x54
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	2200      	movs	r2, #0
 8004170:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004174:	7bfb      	ldrb	r3, [r7, #15]
 8004176:	4618      	mov	r0, r3
 8004178:	3710      	adds	r7, #16
 800417a:	46bd      	mov	sp, r7
 800417c:	bd80      	pop	{r7, pc}
 800417e:	bf00      	nop
 8004180:	ffffeefe 	.word	0xffffeefe

08004184 <HAL_ADC_PollForConversion>:
 8004184:	b580      	push	{r7, lr}
 8004186:	b088      	sub	sp, #32
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
 800418c:	6039      	str	r1, [r7, #0]
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	4a72      	ldr	r2, [pc, #456]	@ (800435c <HAL_ADC_PollForConversion+0x1d8>)
 8004194:	4293      	cmp	r3, r2
 8004196:	d004      	beq.n	80041a2 <HAL_ADC_PollForConversion+0x1e>
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	4a70      	ldr	r2, [pc, #448]	@ (8004360 <HAL_ADC_PollForConversion+0x1dc>)
 800419e:	4293      	cmp	r3, r2
 80041a0:	d101      	bne.n	80041a6 <HAL_ADC_PollForConversion+0x22>
 80041a2:	4b70      	ldr	r3, [pc, #448]	@ (8004364 <HAL_ADC_PollForConversion+0x1e0>)
 80041a4:	e000      	b.n	80041a8 <HAL_ADC_PollForConversion+0x24>
 80041a6:	4b70      	ldr	r3, [pc, #448]	@ (8004368 <HAL_ADC_PollForConversion+0x1e4>)
 80041a8:	4618      	mov	r0, r3
 80041aa:	f7ff fc2f 	bl	8003a0c <LL_ADC_GetMultimode>
 80041ae:	6178      	str	r0, [r7, #20]
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	691b      	ldr	r3, [r3, #16]
 80041b4:	2b08      	cmp	r3, #8
 80041b6:	d102      	bne.n	80041be <HAL_ADC_PollForConversion+0x3a>
 80041b8:	2308      	movs	r3, #8
 80041ba:	61fb      	str	r3, [r7, #28]
 80041bc:	e037      	b.n	800422e <HAL_ADC_PollForConversion+0xaa>
 80041be:	697b      	ldr	r3, [r7, #20]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d005      	beq.n	80041d0 <HAL_ADC_PollForConversion+0x4c>
 80041c4:	697b      	ldr	r3, [r7, #20]
 80041c6:	2b05      	cmp	r3, #5
 80041c8:	d002      	beq.n	80041d0 <HAL_ADC_PollForConversion+0x4c>
 80041ca:	697b      	ldr	r3, [r7, #20]
 80041cc:	2b09      	cmp	r3, #9
 80041ce:	d111      	bne.n	80041f4 <HAL_ADC_PollForConversion+0x70>
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	68db      	ldr	r3, [r3, #12]
 80041d6:	f003 0301 	and.w	r3, r3, #1
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d007      	beq.n	80041ee <HAL_ADC_PollForConversion+0x6a>
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80041e2:	f043 0220 	orr.w	r2, r3, #32
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	655a      	str	r2, [r3, #84]	@ 0x54
 80041ea:	2301      	movs	r3, #1
 80041ec:	e0b1      	b.n	8004352 <HAL_ADC_PollForConversion+0x1ce>
 80041ee:	2304      	movs	r3, #4
 80041f0:	61fb      	str	r3, [r7, #28]
 80041f2:	e01c      	b.n	800422e <HAL_ADC_PollForConversion+0xaa>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	4a58      	ldr	r2, [pc, #352]	@ (800435c <HAL_ADC_PollForConversion+0x1d8>)
 80041fa:	4293      	cmp	r3, r2
 80041fc:	d004      	beq.n	8004208 <HAL_ADC_PollForConversion+0x84>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	4a57      	ldr	r2, [pc, #348]	@ (8004360 <HAL_ADC_PollForConversion+0x1dc>)
 8004204:	4293      	cmp	r3, r2
 8004206:	d101      	bne.n	800420c <HAL_ADC_PollForConversion+0x88>
 8004208:	4b56      	ldr	r3, [pc, #344]	@ (8004364 <HAL_ADC_PollForConversion+0x1e0>)
 800420a:	e000      	b.n	800420e <HAL_ADC_PollForConversion+0x8a>
 800420c:	4b56      	ldr	r3, [pc, #344]	@ (8004368 <HAL_ADC_PollForConversion+0x1e4>)
 800420e:	4618      	mov	r0, r3
 8004210:	f7ff fc0a 	bl	8003a28 <LL_ADC_GetMultiDMATransfer>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d007      	beq.n	800422a <HAL_ADC_PollForConversion+0xa6>
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800421e:	f043 0220 	orr.w	r2, r3, #32
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	655a      	str	r2, [r3, #84]	@ 0x54
 8004226:	2301      	movs	r3, #1
 8004228:	e093      	b.n	8004352 <HAL_ADC_PollForConversion+0x1ce>
 800422a:	2304      	movs	r3, #4
 800422c:	61fb      	str	r3, [r7, #28]
 800422e:	f7ff fa61 	bl	80036f4 <HAL_GetTick>
 8004232:	6138      	str	r0, [r7, #16]
 8004234:	e021      	b.n	800427a <HAL_ADC_PollForConversion+0xf6>
 8004236:	683b      	ldr	r3, [r7, #0]
 8004238:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800423c:	d01d      	beq.n	800427a <HAL_ADC_PollForConversion+0xf6>
 800423e:	f7ff fa59 	bl	80036f4 <HAL_GetTick>
 8004242:	4602      	mov	r2, r0
 8004244:	693b      	ldr	r3, [r7, #16]
 8004246:	1ad3      	subs	r3, r2, r3
 8004248:	683a      	ldr	r2, [r7, #0]
 800424a:	429a      	cmp	r2, r3
 800424c:	d302      	bcc.n	8004254 <HAL_ADC_PollForConversion+0xd0>
 800424e:	683b      	ldr	r3, [r7, #0]
 8004250:	2b00      	cmp	r3, #0
 8004252:	d112      	bne.n	800427a <HAL_ADC_PollForConversion+0xf6>
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	681a      	ldr	r2, [r3, #0]
 800425a:	69fb      	ldr	r3, [r7, #28]
 800425c:	4013      	ands	r3, r2
 800425e:	2b00      	cmp	r3, #0
 8004260:	d10b      	bne.n	800427a <HAL_ADC_PollForConversion+0xf6>
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004266:	f043 0204 	orr.w	r2, r3, #4
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	655a      	str	r2, [r3, #84]	@ 0x54
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	2200      	movs	r2, #0
 8004272:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004276:	2303      	movs	r3, #3
 8004278:	e06b      	b.n	8004352 <HAL_ADC_PollForConversion+0x1ce>
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	681a      	ldr	r2, [r3, #0]
 8004280:	69fb      	ldr	r3, [r7, #28]
 8004282:	4013      	ands	r3, r2
 8004284:	2b00      	cmp	r3, #0
 8004286:	d0d6      	beq.n	8004236 <HAL_ADC_PollForConversion+0xb2>
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800428c:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	655a      	str	r2, [r3, #84]	@ 0x54
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	4618      	mov	r0, r3
 800429a:	f7ff fb29 	bl	80038f0 <LL_ADC_REG_IsTriggerSourceSWStart>
 800429e:	4603      	mov	r3, r0
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d01c      	beq.n	80042de <HAL_ADC_PollForConversion+0x15a>
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	7d5b      	ldrb	r3, [r3, #21]
 80042a8:	2b00      	cmp	r3, #0
 80042aa:	d118      	bne.n	80042de <HAL_ADC_PollForConversion+0x15a>
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	f003 0308 	and.w	r3, r3, #8
 80042b6:	2b08      	cmp	r3, #8
 80042b8:	d111      	bne.n	80042de <HAL_ADC_PollForConversion+0x15a>
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80042be:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	655a      	str	r2, [r3, #84]	@ 0x54
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80042ca:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80042ce:	2b00      	cmp	r3, #0
 80042d0:	d105      	bne.n	80042de <HAL_ADC_PollForConversion+0x15a>
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80042d6:	f043 0201 	orr.w	r2, r3, #1
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	655a      	str	r2, [r3, #84]	@ 0x54
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	4a1f      	ldr	r2, [pc, #124]	@ (8004360 <HAL_ADC_PollForConversion+0x1dc>)
 80042e4:	4293      	cmp	r3, r2
 80042e6:	d002      	beq.n	80042ee <HAL_ADC_PollForConversion+0x16a>
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	e000      	b.n	80042f0 <HAL_ADC_PollForConversion+0x16c>
 80042ee:	4b1b      	ldr	r3, [pc, #108]	@ (800435c <HAL_ADC_PollForConversion+0x1d8>)
 80042f0:	687a      	ldr	r2, [r7, #4]
 80042f2:	6812      	ldr	r2, [r2, #0]
 80042f4:	4293      	cmp	r3, r2
 80042f6:	d008      	beq.n	800430a <HAL_ADC_PollForConversion+0x186>
 80042f8:	697b      	ldr	r3, [r7, #20]
 80042fa:	2b00      	cmp	r3, #0
 80042fc:	d005      	beq.n	800430a <HAL_ADC_PollForConversion+0x186>
 80042fe:	697b      	ldr	r3, [r7, #20]
 8004300:	2b05      	cmp	r3, #5
 8004302:	d002      	beq.n	800430a <HAL_ADC_PollForConversion+0x186>
 8004304:	697b      	ldr	r3, [r7, #20]
 8004306:	2b09      	cmp	r3, #9
 8004308:	d104      	bne.n	8004314 <HAL_ADC_PollForConversion+0x190>
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	68db      	ldr	r3, [r3, #12]
 8004310:	61bb      	str	r3, [r7, #24]
 8004312:	e00c      	b.n	800432e <HAL_ADC_PollForConversion+0x1aa>
 8004314:	687b      	ldr	r3, [r7, #4]
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	4a11      	ldr	r2, [pc, #68]	@ (8004360 <HAL_ADC_PollForConversion+0x1dc>)
 800431a:	4293      	cmp	r3, r2
 800431c:	d002      	beq.n	8004324 <HAL_ADC_PollForConversion+0x1a0>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	e000      	b.n	8004326 <HAL_ADC_PollForConversion+0x1a2>
 8004324:	4b0d      	ldr	r3, [pc, #52]	@ (800435c <HAL_ADC_PollForConversion+0x1d8>)
 8004326:	60fb      	str	r3, [r7, #12]
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	68db      	ldr	r3, [r3, #12]
 800432c:	61bb      	str	r3, [r7, #24]
 800432e:	69fb      	ldr	r3, [r7, #28]
 8004330:	2b08      	cmp	r3, #8
 8004332:	d104      	bne.n	800433e <HAL_ADC_PollForConversion+0x1ba>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	2208      	movs	r2, #8
 800433a:	601a      	str	r2, [r3, #0]
 800433c:	e008      	b.n	8004350 <HAL_ADC_PollForConversion+0x1cc>
 800433e:	69bb      	ldr	r3, [r7, #24]
 8004340:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004344:	2b00      	cmp	r3, #0
 8004346:	d103      	bne.n	8004350 <HAL_ADC_PollForConversion+0x1cc>
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	220c      	movs	r2, #12
 800434e:	601a      	str	r2, [r3, #0]
 8004350:	2300      	movs	r3, #0
 8004352:	4618      	mov	r0, r3
 8004354:	3720      	adds	r7, #32
 8004356:	46bd      	mov	sp, r7
 8004358:	bd80      	pop	{r7, pc}
 800435a:	bf00      	nop
 800435c:	40022000 	.word	0x40022000
 8004360:	40022100 	.word	0x40022100
 8004364:	40022300 	.word	0x40022300
 8004368:	58026300 	.word	0x58026300

0800436c <HAL_ADC_GetValue>:
 800436c:	b480      	push	{r7}
 800436e:	b083      	sub	sp, #12
 8004370:	af00      	add	r7, sp, #0
 8004372:	6078      	str	r0, [r7, #4]
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800437a:	4618      	mov	r0, r3
 800437c:	370c      	adds	r7, #12
 800437e:	46bd      	mov	sp, r7
 8004380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004384:	4770      	bx	lr
	...

08004388 <HAL_ADC_ConfigChannel>:
 8004388:	b590      	push	{r4, r7, lr}
 800438a:	b0a1      	sub	sp, #132	@ 0x84
 800438c:	af00      	add	r7, sp, #0
 800438e:	6078      	str	r0, [r7, #4]
 8004390:	6039      	str	r1, [r7, #0]
 8004392:	2300      	movs	r3, #0
 8004394:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004398:	2300      	movs	r3, #0
 800439a:	60bb      	str	r3, [r7, #8]
 800439c:	683b      	ldr	r3, [r7, #0]
 800439e:	68db      	ldr	r3, [r3, #12]
 80043a0:	4a65      	ldr	r2, [pc, #404]	@ (8004538 <HAL_ADC_ConfigChannel+0x1b0>)
 80043a2:	4293      	cmp	r3, r2
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80043aa:	2b01      	cmp	r3, #1
 80043ac:	d101      	bne.n	80043b2 <HAL_ADC_ConfigChannel+0x2a>
 80043ae:	2302      	movs	r3, #2
 80043b0:	e32e      	b.n	8004a10 <HAL_ADC_ConfigChannel+0x688>
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	2201      	movs	r2, #1
 80043b6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	4618      	mov	r0, r3
 80043c0:	f7ff fc04 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 80043c4:	4603      	mov	r3, r0
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	f040 8313 	bne.w	80049f2 <HAL_ADC_ConfigChannel+0x66a>
 80043cc:	683b      	ldr	r3, [r7, #0]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	db2c      	blt.n	800442e <HAL_ADC_ConfigChannel+0xa6>
 80043d4:	683b      	ldr	r3, [r7, #0]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80043dc:	2b00      	cmp	r3, #0
 80043de:	d108      	bne.n	80043f2 <HAL_ADC_ConfigChannel+0x6a>
 80043e0:	683b      	ldr	r3, [r7, #0]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	0e9b      	lsrs	r3, r3, #26
 80043e6:	f003 031f 	and.w	r3, r3, #31
 80043ea:	2201      	movs	r2, #1
 80043ec:	fa02 f303 	lsl.w	r3, r2, r3
 80043f0:	e016      	b.n	8004420 <HAL_ADC_ConfigChannel+0x98>
 80043f2:	683b      	ldr	r3, [r7, #0]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	667b      	str	r3, [r7, #100]	@ 0x64
 80043f8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80043fa:	fa93 f3a3 	rbit	r3, r3
 80043fe:	663b      	str	r3, [r7, #96]	@ 0x60
 8004400:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004402:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004404:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004406:	2b00      	cmp	r3, #0
 8004408:	d101      	bne.n	800440e <HAL_ADC_ConfigChannel+0x86>
 800440a:	2320      	movs	r3, #32
 800440c:	e003      	b.n	8004416 <HAL_ADC_ConfigChannel+0x8e>
 800440e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8004410:	fab3 f383 	clz	r3, r3
 8004414:	b2db      	uxtb	r3, r3
 8004416:	f003 031f 	and.w	r3, r3, #31
 800441a:	2201      	movs	r2, #1
 800441c:	fa02 f303 	lsl.w	r3, r2, r3
 8004420:	687a      	ldr	r2, [r7, #4]
 8004422:	6812      	ldr	r2, [r2, #0]
 8004424:	69d1      	ldr	r1, [r2, #28]
 8004426:	687a      	ldr	r2, [r7, #4]
 8004428:	6812      	ldr	r2, [r2, #0]
 800442a:	430b      	orrs	r3, r1
 800442c:	61d3      	str	r3, [r2, #28]
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	6818      	ldr	r0, [r3, #0]
 8004432:	683b      	ldr	r3, [r7, #0]
 8004434:	6859      	ldr	r1, [r3, #4]
 8004436:	683b      	ldr	r3, [r7, #0]
 8004438:	681b      	ldr	r3, [r3, #0]
 800443a:	461a      	mov	r2, r3
 800443c:	f7ff fa6b 	bl	8003916 <LL_ADC_REG_SetSequencerRanks>
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	4618      	mov	r0, r3
 8004446:	f7ff fbc1 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 800444a:	67b8      	str	r0, [r7, #120]	@ 0x78
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	4618      	mov	r0, r3
 8004452:	f7ff fbe3 	bl	8003c1c <LL_ADC_INJ_IsConversionOngoing>
 8004456:	6778      	str	r0, [r7, #116]	@ 0x74
 8004458:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800445a:	2b00      	cmp	r3, #0
 800445c:	f040 80b8 	bne.w	80045d0 <HAL_ADC_ConfigChannel+0x248>
 8004460:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8004462:	2b00      	cmp	r3, #0
 8004464:	f040 80b4 	bne.w	80045d0 <HAL_ADC_ConfigChannel+0x248>
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	6818      	ldr	r0, [r3, #0]
 800446c:	683b      	ldr	r3, [r7, #0]
 800446e:	6819      	ldr	r1, [r3, #0]
 8004470:	683b      	ldr	r3, [r7, #0]
 8004472:	689b      	ldr	r3, [r3, #8]
 8004474:	461a      	mov	r2, r3
 8004476:	f7ff fa7a 	bl	800396e <LL_ADC_SetChannelSamplingTime>
 800447a:	4b30      	ldr	r3, [pc, #192]	@ (800453c <HAL_ADC_ConfigChannel+0x1b4>)
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	f003 4370 	and.w	r3, r3, #4026531840	@ 0xf0000000
 8004482:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004486:	d10b      	bne.n	80044a0 <HAL_ADC_ConfigChannel+0x118>
 8004488:	683b      	ldr	r3, [r7, #0]
 800448a:	695a      	ldr	r2, [r3, #20]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	68db      	ldr	r3, [r3, #12]
 8004492:	089b      	lsrs	r3, r3, #2
 8004494:	f003 0307 	and.w	r3, r3, #7
 8004498:	005b      	lsls	r3, r3, #1
 800449a:	fa02 f303 	lsl.w	r3, r2, r3
 800449e:	e01d      	b.n	80044dc <HAL_ADC_ConfigChannel+0x154>
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	68db      	ldr	r3, [r3, #12]
 80044a6:	f003 0310 	and.w	r3, r3, #16
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d10b      	bne.n	80044c6 <HAL_ADC_ConfigChannel+0x13e>
 80044ae:	683b      	ldr	r3, [r7, #0]
 80044b0:	695a      	ldr	r2, [r3, #20]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	68db      	ldr	r3, [r3, #12]
 80044b8:	089b      	lsrs	r3, r3, #2
 80044ba:	f003 0307 	and.w	r3, r3, #7
 80044be:	005b      	lsls	r3, r3, #1
 80044c0:	fa02 f303 	lsl.w	r3, r2, r3
 80044c4:	e00a      	b.n	80044dc <HAL_ADC_ConfigChannel+0x154>
 80044c6:	683b      	ldr	r3, [r7, #0]
 80044c8:	695a      	ldr	r2, [r3, #20]
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	68db      	ldr	r3, [r3, #12]
 80044d0:	089b      	lsrs	r3, r3, #2
 80044d2:	f003 0304 	and.w	r3, r3, #4
 80044d6:	005b      	lsls	r3, r3, #1
 80044d8:	fa02 f303 	lsl.w	r3, r2, r3
 80044dc:	673b      	str	r3, [r7, #112]	@ 0x70
 80044de:	683b      	ldr	r3, [r7, #0]
 80044e0:	691b      	ldr	r3, [r3, #16]
 80044e2:	2b04      	cmp	r3, #4
 80044e4:	d02c      	beq.n	8004540 <HAL_ADC_ConfigChannel+0x1b8>
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	6818      	ldr	r0, [r3, #0]
 80044ea:	683b      	ldr	r3, [r7, #0]
 80044ec:	6919      	ldr	r1, [r3, #16]
 80044ee:	683b      	ldr	r3, [r7, #0]
 80044f0:	681a      	ldr	r2, [r3, #0]
 80044f2:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80044f4:	f7ff f9a8 	bl	8003848 <LL_ADC_SetOffset>
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	6818      	ldr	r0, [r3, #0]
 80044fc:	683b      	ldr	r3, [r7, #0]
 80044fe:	6919      	ldr	r1, [r3, #16]
 8004500:	683b      	ldr	r3, [r7, #0]
 8004502:	7e5b      	ldrb	r3, [r3, #25]
 8004504:	2b01      	cmp	r3, #1
 8004506:	d102      	bne.n	800450e <HAL_ADC_ConfigChannel+0x186>
 8004508:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 800450c:	e000      	b.n	8004510 <HAL_ADC_ConfigChannel+0x188>
 800450e:	2300      	movs	r3, #0
 8004510:	461a      	mov	r2, r3
 8004512:	f7ff f9d2 	bl	80038ba <LL_ADC_SetOffsetSignedSaturation>
 8004516:	687b      	ldr	r3, [r7, #4]
 8004518:	6818      	ldr	r0, [r3, #0]
 800451a:	683b      	ldr	r3, [r7, #0]
 800451c:	6919      	ldr	r1, [r3, #16]
 800451e:	683b      	ldr	r3, [r7, #0]
 8004520:	7e1b      	ldrb	r3, [r3, #24]
 8004522:	2b01      	cmp	r3, #1
 8004524:	d102      	bne.n	800452c <HAL_ADC_ConfigChannel+0x1a4>
 8004526:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800452a:	e000      	b.n	800452e <HAL_ADC_ConfigChannel+0x1a6>
 800452c:	2300      	movs	r3, #0
 800452e:	461a      	mov	r2, r3
 8004530:	f7ff f9aa 	bl	8003888 <LL_ADC_SetDataRightShift>
 8004534:	e04c      	b.n	80045d0 <HAL_ADC_ConfigChannel+0x248>
 8004536:	bf00      	nop
 8004538:	47ff0000 	.word	0x47ff0000
 800453c:	5c001000 	.word	0x5c001000
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004546:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800454a:	683b      	ldr	r3, [r7, #0]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	069b      	lsls	r3, r3, #26
 8004550:	429a      	cmp	r2, r3
 8004552:	d107      	bne.n	8004564 <HAL_ADC_ConfigChannel+0x1dc>
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	6e1a      	ldr	r2, [r3, #96]	@ 0x60
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8004562:	661a      	str	r2, [r3, #96]	@ 0x60
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800456a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800456e:	683b      	ldr	r3, [r7, #0]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	069b      	lsls	r3, r3, #26
 8004574:	429a      	cmp	r2, r3
 8004576:	d107      	bne.n	8004588 <HAL_ADC_ConfigChannel+0x200>
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
 800457e:	687b      	ldr	r3, [r7, #4]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 8004586:	665a      	str	r2, [r3, #100]	@ 0x64
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800458e:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8004592:	683b      	ldr	r3, [r7, #0]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	069b      	lsls	r3, r3, #26
 8004598:	429a      	cmp	r2, r3
 800459a:	d107      	bne.n	80045ac <HAL_ADC_ConfigChannel+0x224>
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 80045aa:	669a      	str	r2, [r3, #104]	@ 0x68
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80045b2:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80045b6:	683b      	ldr	r3, [r7, #0]
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	069b      	lsls	r3, r3, #26
 80045bc:	429a      	cmp	r2, r3
 80045be:	d107      	bne.n	80045d0 <HAL_ADC_ConfigChannel+0x248>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	6eda      	ldr	r2, [r3, #108]	@ 0x6c
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
 80045ce:	66da      	str	r2, [r3, #108]	@ 0x6c
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	4618      	mov	r0, r3
 80045d6:	f7ff faab 	bl	8003b30 <LL_ADC_IsEnabled>
 80045da:	4603      	mov	r3, r0
 80045dc:	2b00      	cmp	r3, #0
 80045de:	f040 8211 	bne.w	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	6818      	ldr	r0, [r3, #0]
 80045e6:	683b      	ldr	r3, [r7, #0]
 80045e8:	6819      	ldr	r1, [r3, #0]
 80045ea:	683b      	ldr	r3, [r7, #0]
 80045ec:	68db      	ldr	r3, [r3, #12]
 80045ee:	461a      	mov	r2, r3
 80045f0:	f7ff f9e8 	bl	80039c4 <LL_ADC_SetChannelSingleDiff>
 80045f4:	683b      	ldr	r3, [r7, #0]
 80045f6:	68db      	ldr	r3, [r3, #12]
 80045f8:	4aa1      	ldr	r2, [pc, #644]	@ (8004880 <HAL_ADC_ConfigChannel+0x4f8>)
 80045fa:	4293      	cmp	r3, r2
 80045fc:	f040 812e 	bne.w	800485c <HAL_ADC_ConfigChannel+0x4d4>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6818      	ldr	r0, [r3, #0]
 8004604:	683b      	ldr	r3, [r7, #0]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800460c:	2b00      	cmp	r3, #0
 800460e:	d10b      	bne.n	8004628 <HAL_ADC_ConfigChannel+0x2a0>
 8004610:	683b      	ldr	r3, [r7, #0]
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	0e9b      	lsrs	r3, r3, #26
 8004616:	3301      	adds	r3, #1
 8004618:	f003 031f 	and.w	r3, r3, #31
 800461c:	2b09      	cmp	r3, #9
 800461e:	bf94      	ite	ls
 8004620:	2301      	movls	r3, #1
 8004622:	2300      	movhi	r3, #0
 8004624:	b2db      	uxtb	r3, r3
 8004626:	e019      	b.n	800465c <HAL_ADC_ConfigChannel+0x2d4>
 8004628:	683b      	ldr	r3, [r7, #0]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800462e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8004630:	fa93 f3a3 	rbit	r3, r3
 8004634:	657b      	str	r3, [r7, #84]	@ 0x54
 8004636:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8004638:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800463a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800463c:	2b00      	cmp	r3, #0
 800463e:	d101      	bne.n	8004644 <HAL_ADC_ConfigChannel+0x2bc>
 8004640:	2320      	movs	r3, #32
 8004642:	e003      	b.n	800464c <HAL_ADC_ConfigChannel+0x2c4>
 8004644:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004646:	fab3 f383 	clz	r3, r3
 800464a:	b2db      	uxtb	r3, r3
 800464c:	3301      	adds	r3, #1
 800464e:	f003 031f 	and.w	r3, r3, #31
 8004652:	2b09      	cmp	r3, #9
 8004654:	bf94      	ite	ls
 8004656:	2301      	movls	r3, #1
 8004658:	2300      	movhi	r3, #0
 800465a:	b2db      	uxtb	r3, r3
 800465c:	2b00      	cmp	r3, #0
 800465e:	d079      	beq.n	8004754 <HAL_ADC_ConfigChannel+0x3cc>
 8004660:	683b      	ldr	r3, [r7, #0]
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004668:	2b00      	cmp	r3, #0
 800466a:	d107      	bne.n	800467c <HAL_ADC_ConfigChannel+0x2f4>
 800466c:	683b      	ldr	r3, [r7, #0]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	0e9b      	lsrs	r3, r3, #26
 8004672:	3301      	adds	r3, #1
 8004674:	069b      	lsls	r3, r3, #26
 8004676:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800467a:	e015      	b.n	80046a8 <HAL_ADC_ConfigChannel+0x320>
 800467c:	683b      	ldr	r3, [r7, #0]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004682:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004684:	fa93 f3a3 	rbit	r3, r3
 8004688:	64bb      	str	r3, [r7, #72]	@ 0x48
 800468a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800468c:	653b      	str	r3, [r7, #80]	@ 0x50
 800468e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004690:	2b00      	cmp	r3, #0
 8004692:	d101      	bne.n	8004698 <HAL_ADC_ConfigChannel+0x310>
 8004694:	2320      	movs	r3, #32
 8004696:	e003      	b.n	80046a0 <HAL_ADC_ConfigChannel+0x318>
 8004698:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800469a:	fab3 f383 	clz	r3, r3
 800469e:	b2db      	uxtb	r3, r3
 80046a0:	3301      	adds	r3, #1
 80046a2:	069b      	lsls	r3, r3, #26
 80046a4:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 80046a8:	683b      	ldr	r3, [r7, #0]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	d109      	bne.n	80046c8 <HAL_ADC_ConfigChannel+0x340>
 80046b4:	683b      	ldr	r3, [r7, #0]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	0e9b      	lsrs	r3, r3, #26
 80046ba:	3301      	adds	r3, #1
 80046bc:	f003 031f 	and.w	r3, r3, #31
 80046c0:	2101      	movs	r1, #1
 80046c2:	fa01 f303 	lsl.w	r3, r1, r3
 80046c6:	e017      	b.n	80046f8 <HAL_ADC_ConfigChannel+0x370>
 80046c8:	683b      	ldr	r3, [r7, #0]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	643b      	str	r3, [r7, #64]	@ 0x40
 80046ce:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80046d0:	fa93 f3a3 	rbit	r3, r3
 80046d4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80046d6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80046d8:	647b      	str	r3, [r7, #68]	@ 0x44
 80046da:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d101      	bne.n	80046e4 <HAL_ADC_ConfigChannel+0x35c>
 80046e0:	2320      	movs	r3, #32
 80046e2:	e003      	b.n	80046ec <HAL_ADC_ConfigChannel+0x364>
 80046e4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 80046e6:	fab3 f383 	clz	r3, r3
 80046ea:	b2db      	uxtb	r3, r3
 80046ec:	3301      	adds	r3, #1
 80046ee:	f003 031f 	and.w	r3, r3, #31
 80046f2:	2101      	movs	r1, #1
 80046f4:	fa01 f303 	lsl.w	r3, r1, r3
 80046f8:	ea42 0103 	orr.w	r1, r2, r3
 80046fc:	683b      	ldr	r3, [r7, #0]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004704:	2b00      	cmp	r3, #0
 8004706:	d10a      	bne.n	800471e <HAL_ADC_ConfigChannel+0x396>
 8004708:	683b      	ldr	r3, [r7, #0]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	0e9b      	lsrs	r3, r3, #26
 800470e:	3301      	adds	r3, #1
 8004710:	f003 021f 	and.w	r2, r3, #31
 8004714:	4613      	mov	r3, r2
 8004716:	005b      	lsls	r3, r3, #1
 8004718:	4413      	add	r3, r2
 800471a:	051b      	lsls	r3, r3, #20
 800471c:	e018      	b.n	8004750 <HAL_ADC_ConfigChannel+0x3c8>
 800471e:	683b      	ldr	r3, [r7, #0]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	637b      	str	r3, [r7, #52]	@ 0x34
 8004724:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004726:	fa93 f3a3 	rbit	r3, r3
 800472a:	633b      	str	r3, [r7, #48]	@ 0x30
 800472c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800472e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8004730:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8004732:	2b00      	cmp	r3, #0
 8004734:	d101      	bne.n	800473a <HAL_ADC_ConfigChannel+0x3b2>
 8004736:	2320      	movs	r3, #32
 8004738:	e003      	b.n	8004742 <HAL_ADC_ConfigChannel+0x3ba>
 800473a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800473c:	fab3 f383 	clz	r3, r3
 8004740:	b2db      	uxtb	r3, r3
 8004742:	3301      	adds	r3, #1
 8004744:	f003 021f 	and.w	r2, r3, #31
 8004748:	4613      	mov	r3, r2
 800474a:	005b      	lsls	r3, r3, #1
 800474c:	4413      	add	r3, r2
 800474e:	051b      	lsls	r3, r3, #20
 8004750:	430b      	orrs	r3, r1
 8004752:	e07e      	b.n	8004852 <HAL_ADC_ConfigChannel+0x4ca>
 8004754:	683b      	ldr	r3, [r7, #0]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800475c:	2b00      	cmp	r3, #0
 800475e:	d107      	bne.n	8004770 <HAL_ADC_ConfigChannel+0x3e8>
 8004760:	683b      	ldr	r3, [r7, #0]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	0e9b      	lsrs	r3, r3, #26
 8004766:	3301      	adds	r3, #1
 8004768:	069b      	lsls	r3, r3, #26
 800476a:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800476e:	e015      	b.n	800479c <HAL_ADC_ConfigChannel+0x414>
 8004770:	683b      	ldr	r3, [r7, #0]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004776:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004778:	fa93 f3a3 	rbit	r3, r3
 800477c:	627b      	str	r3, [r7, #36]	@ 0x24
 800477e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004780:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004782:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004784:	2b00      	cmp	r3, #0
 8004786:	d101      	bne.n	800478c <HAL_ADC_ConfigChannel+0x404>
 8004788:	2320      	movs	r3, #32
 800478a:	e003      	b.n	8004794 <HAL_ADC_ConfigChannel+0x40c>
 800478c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800478e:	fab3 f383 	clz	r3, r3
 8004792:	b2db      	uxtb	r3, r3
 8004794:	3301      	adds	r3, #1
 8004796:	069b      	lsls	r3, r3, #26
 8004798:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800479c:	683b      	ldr	r3, [r7, #0]
 800479e:	681b      	ldr	r3, [r3, #0]
 80047a0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80047a4:	2b00      	cmp	r3, #0
 80047a6:	d109      	bne.n	80047bc <HAL_ADC_ConfigChannel+0x434>
 80047a8:	683b      	ldr	r3, [r7, #0]
 80047aa:	681b      	ldr	r3, [r3, #0]
 80047ac:	0e9b      	lsrs	r3, r3, #26
 80047ae:	3301      	adds	r3, #1
 80047b0:	f003 031f 	and.w	r3, r3, #31
 80047b4:	2101      	movs	r1, #1
 80047b6:	fa01 f303 	lsl.w	r3, r1, r3
 80047ba:	e017      	b.n	80047ec <HAL_ADC_ConfigChannel+0x464>
 80047bc:	683b      	ldr	r3, [r7, #0]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	61fb      	str	r3, [r7, #28]
 80047c2:	69fb      	ldr	r3, [r7, #28]
 80047c4:	fa93 f3a3 	rbit	r3, r3
 80047c8:	61bb      	str	r3, [r7, #24]
 80047ca:	69bb      	ldr	r3, [r7, #24]
 80047cc:	623b      	str	r3, [r7, #32]
 80047ce:	6a3b      	ldr	r3, [r7, #32]
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	d101      	bne.n	80047d8 <HAL_ADC_ConfigChannel+0x450>
 80047d4:	2320      	movs	r3, #32
 80047d6:	e003      	b.n	80047e0 <HAL_ADC_ConfigChannel+0x458>
 80047d8:	6a3b      	ldr	r3, [r7, #32]
 80047da:	fab3 f383 	clz	r3, r3
 80047de:	b2db      	uxtb	r3, r3
 80047e0:	3301      	adds	r3, #1
 80047e2:	f003 031f 	and.w	r3, r3, #31
 80047e6:	2101      	movs	r1, #1
 80047e8:	fa01 f303 	lsl.w	r3, r1, r3
 80047ec:	ea42 0103 	orr.w	r1, r2, r3
 80047f0:	683b      	ldr	r3, [r7, #0]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d10d      	bne.n	8004818 <HAL_ADC_ConfigChannel+0x490>
 80047fc:	683b      	ldr	r3, [r7, #0]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	0e9b      	lsrs	r3, r3, #26
 8004802:	3301      	adds	r3, #1
 8004804:	f003 021f 	and.w	r2, r3, #31
 8004808:	4613      	mov	r3, r2
 800480a:	005b      	lsls	r3, r3, #1
 800480c:	4413      	add	r3, r2
 800480e:	3b1e      	subs	r3, #30
 8004810:	051b      	lsls	r3, r3, #20
 8004812:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8004816:	e01b      	b.n	8004850 <HAL_ADC_ConfigChannel+0x4c8>
 8004818:	683b      	ldr	r3, [r7, #0]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	613b      	str	r3, [r7, #16]
 800481e:	693b      	ldr	r3, [r7, #16]
 8004820:	fa93 f3a3 	rbit	r3, r3
 8004824:	60fb      	str	r3, [r7, #12]
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	617b      	str	r3, [r7, #20]
 800482a:	697b      	ldr	r3, [r7, #20]
 800482c:	2b00      	cmp	r3, #0
 800482e:	d101      	bne.n	8004834 <HAL_ADC_ConfigChannel+0x4ac>
 8004830:	2320      	movs	r3, #32
 8004832:	e003      	b.n	800483c <HAL_ADC_ConfigChannel+0x4b4>
 8004834:	697b      	ldr	r3, [r7, #20]
 8004836:	fab3 f383 	clz	r3, r3
 800483a:	b2db      	uxtb	r3, r3
 800483c:	3301      	adds	r3, #1
 800483e:	f003 021f 	and.w	r2, r3, #31
 8004842:	4613      	mov	r3, r2
 8004844:	005b      	lsls	r3, r3, #1
 8004846:	4413      	add	r3, r2
 8004848:	3b1e      	subs	r3, #30
 800484a:	051b      	lsls	r3, r3, #20
 800484c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8004850:	430b      	orrs	r3, r1
 8004852:	683a      	ldr	r2, [r7, #0]
 8004854:	6892      	ldr	r2, [r2, #8]
 8004856:	4619      	mov	r1, r3
 8004858:	f7ff f889 	bl	800396e <LL_ADC_SetChannelSamplingTime>
 800485c:	683b      	ldr	r3, [r7, #0]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	2b00      	cmp	r3, #0
 8004862:	f280 80cf 	bge.w	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 8004866:	687b      	ldr	r3, [r7, #4]
 8004868:	681b      	ldr	r3, [r3, #0]
 800486a:	4a06      	ldr	r2, [pc, #24]	@ (8004884 <HAL_ADC_ConfigChannel+0x4fc>)
 800486c:	4293      	cmp	r3, r2
 800486e:	d004      	beq.n	800487a <HAL_ADC_ConfigChannel+0x4f2>
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	4a04      	ldr	r2, [pc, #16]	@ (8004888 <HAL_ADC_ConfigChannel+0x500>)
 8004876:	4293      	cmp	r3, r2
 8004878:	d10a      	bne.n	8004890 <HAL_ADC_ConfigChannel+0x508>
 800487a:	4b04      	ldr	r3, [pc, #16]	@ (800488c <HAL_ADC_ConfigChannel+0x504>)
 800487c:	e009      	b.n	8004892 <HAL_ADC_ConfigChannel+0x50a>
 800487e:	bf00      	nop
 8004880:	47ff0000 	.word	0x47ff0000
 8004884:	40022000 	.word	0x40022000
 8004888:	40022100 	.word	0x40022100
 800488c:	40022300 	.word	0x40022300
 8004890:	4b61      	ldr	r3, [pc, #388]	@ (8004a18 <HAL_ADC_ConfigChannel+0x690>)
 8004892:	4618      	mov	r0, r3
 8004894:	f7fe ffca 	bl	800382c <LL_ADC_GetCommonPathInternalCh>
 8004898:	66f8      	str	r0, [r7, #108]	@ 0x6c
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	4a5f      	ldr	r2, [pc, #380]	@ (8004a1c <HAL_ADC_ConfigChannel+0x694>)
 80048a0:	4293      	cmp	r3, r2
 80048a2:	d004      	beq.n	80048ae <HAL_ADC_ConfigChannel+0x526>
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	4a5d      	ldr	r2, [pc, #372]	@ (8004a20 <HAL_ADC_ConfigChannel+0x698>)
 80048aa:	4293      	cmp	r3, r2
 80048ac:	d10e      	bne.n	80048cc <HAL_ADC_ConfigChannel+0x544>
 80048ae:	485b      	ldr	r0, [pc, #364]	@ (8004a1c <HAL_ADC_ConfigChannel+0x694>)
 80048b0:	f7ff f93e 	bl	8003b30 <LL_ADC_IsEnabled>
 80048b4:	4604      	mov	r4, r0
 80048b6:	485a      	ldr	r0, [pc, #360]	@ (8004a20 <HAL_ADC_ConfigChannel+0x698>)
 80048b8:	f7ff f93a 	bl	8003b30 <LL_ADC_IsEnabled>
 80048bc:	4603      	mov	r3, r0
 80048be:	4323      	orrs	r3, r4
 80048c0:	2b00      	cmp	r3, #0
 80048c2:	bf0c      	ite	eq
 80048c4:	2301      	moveq	r3, #1
 80048c6:	2300      	movne	r3, #0
 80048c8:	b2db      	uxtb	r3, r3
 80048ca:	e008      	b.n	80048de <HAL_ADC_ConfigChannel+0x556>
 80048cc:	4855      	ldr	r0, [pc, #340]	@ (8004a24 <HAL_ADC_ConfigChannel+0x69c>)
 80048ce:	f7ff f92f 	bl	8003b30 <LL_ADC_IsEnabled>
 80048d2:	4603      	mov	r3, r0
 80048d4:	2b00      	cmp	r3, #0
 80048d6:	bf0c      	ite	eq
 80048d8:	2301      	moveq	r3, #1
 80048da:	2300      	movne	r3, #0
 80048dc:	b2db      	uxtb	r3, r3
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d07d      	beq.n	80049de <HAL_ADC_ConfigChannel+0x656>
 80048e2:	683b      	ldr	r3, [r7, #0]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	4a50      	ldr	r2, [pc, #320]	@ (8004a28 <HAL_ADC_ConfigChannel+0x6a0>)
 80048e8:	4293      	cmp	r3, r2
 80048ea:	d130      	bne.n	800494e <HAL_ADC_ConfigChannel+0x5c6>
 80048ec:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80048ee:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d12b      	bne.n	800494e <HAL_ADC_ConfigChannel+0x5c6>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	4a4a      	ldr	r2, [pc, #296]	@ (8004a24 <HAL_ADC_ConfigChannel+0x69c>)
 80048fc:	4293      	cmp	r3, r2
 80048fe:	f040 8081 	bne.w	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	4a45      	ldr	r2, [pc, #276]	@ (8004a1c <HAL_ADC_ConfigChannel+0x694>)
 8004908:	4293      	cmp	r3, r2
 800490a:	d004      	beq.n	8004916 <HAL_ADC_ConfigChannel+0x58e>
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	4a43      	ldr	r2, [pc, #268]	@ (8004a20 <HAL_ADC_ConfigChannel+0x698>)
 8004912:	4293      	cmp	r3, r2
 8004914:	d101      	bne.n	800491a <HAL_ADC_ConfigChannel+0x592>
 8004916:	4a45      	ldr	r2, [pc, #276]	@ (8004a2c <HAL_ADC_ConfigChannel+0x6a4>)
 8004918:	e000      	b.n	800491c <HAL_ADC_ConfigChannel+0x594>
 800491a:	4a3f      	ldr	r2, [pc, #252]	@ (8004a18 <HAL_ADC_ConfigChannel+0x690>)
 800491c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800491e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8004922:	4619      	mov	r1, r3
 8004924:	4610      	mov	r0, r2
 8004926:	f7fe ff6e 	bl	8003806 <LL_ADC_SetCommonPathInternalCh>
 800492a:	4b41      	ldr	r3, [pc, #260]	@ (8004a30 <HAL_ADC_ConfigChannel+0x6a8>)
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	099b      	lsrs	r3, r3, #6
 8004930:	4a40      	ldr	r2, [pc, #256]	@ (8004a34 <HAL_ADC_ConfigChannel+0x6ac>)
 8004932:	fba2 2303 	umull	r2, r3, r2, r3
 8004936:	099b      	lsrs	r3, r3, #6
 8004938:	3301      	adds	r3, #1
 800493a:	005b      	lsls	r3, r3, #1
 800493c:	60bb      	str	r3, [r7, #8]
 800493e:	e002      	b.n	8004946 <HAL_ADC_ConfigChannel+0x5be>
 8004940:	68bb      	ldr	r3, [r7, #8]
 8004942:	3b01      	subs	r3, #1
 8004944:	60bb      	str	r3, [r7, #8]
 8004946:	68bb      	ldr	r3, [r7, #8]
 8004948:	2b00      	cmp	r3, #0
 800494a:	d1f9      	bne.n	8004940 <HAL_ADC_ConfigChannel+0x5b8>
 800494c:	e05a      	b.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 800494e:	683b      	ldr	r3, [r7, #0]
 8004950:	681b      	ldr	r3, [r3, #0]
 8004952:	4a39      	ldr	r2, [pc, #228]	@ (8004a38 <HAL_ADC_ConfigChannel+0x6b0>)
 8004954:	4293      	cmp	r3, r2
 8004956:	d11e      	bne.n	8004996 <HAL_ADC_ConfigChannel+0x60e>
 8004958:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800495a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800495e:	2b00      	cmp	r3, #0
 8004960:	d119      	bne.n	8004996 <HAL_ADC_ConfigChannel+0x60e>
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	4a2f      	ldr	r2, [pc, #188]	@ (8004a24 <HAL_ADC_ConfigChannel+0x69c>)
 8004968:	4293      	cmp	r3, r2
 800496a:	d14b      	bne.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	4a2a      	ldr	r2, [pc, #168]	@ (8004a1c <HAL_ADC_ConfigChannel+0x694>)
 8004972:	4293      	cmp	r3, r2
 8004974:	d004      	beq.n	8004980 <HAL_ADC_ConfigChannel+0x5f8>
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	4a29      	ldr	r2, [pc, #164]	@ (8004a20 <HAL_ADC_ConfigChannel+0x698>)
 800497c:	4293      	cmp	r3, r2
 800497e:	d101      	bne.n	8004984 <HAL_ADC_ConfigChannel+0x5fc>
 8004980:	4a2a      	ldr	r2, [pc, #168]	@ (8004a2c <HAL_ADC_ConfigChannel+0x6a4>)
 8004982:	e000      	b.n	8004986 <HAL_ADC_ConfigChannel+0x5fe>
 8004984:	4a24      	ldr	r2, [pc, #144]	@ (8004a18 <HAL_ADC_ConfigChannel+0x690>)
 8004986:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8004988:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800498c:	4619      	mov	r1, r3
 800498e:	4610      	mov	r0, r2
 8004990:	f7fe ff39 	bl	8003806 <LL_ADC_SetCommonPathInternalCh>
 8004994:	e036      	b.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 8004996:	683b      	ldr	r3, [r7, #0]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	4a28      	ldr	r2, [pc, #160]	@ (8004a3c <HAL_ADC_ConfigChannel+0x6b4>)
 800499c:	4293      	cmp	r3, r2
 800499e:	d131      	bne.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80049a0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80049a2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d12c      	bne.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	4a1d      	ldr	r2, [pc, #116]	@ (8004a24 <HAL_ADC_ConfigChannel+0x69c>)
 80049b0:	4293      	cmp	r3, r2
 80049b2:	d127      	bne.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	4a18      	ldr	r2, [pc, #96]	@ (8004a1c <HAL_ADC_ConfigChannel+0x694>)
 80049ba:	4293      	cmp	r3, r2
 80049bc:	d004      	beq.n	80049c8 <HAL_ADC_ConfigChannel+0x640>
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	4a17      	ldr	r2, [pc, #92]	@ (8004a20 <HAL_ADC_ConfigChannel+0x698>)
 80049c4:	4293      	cmp	r3, r2
 80049c6:	d101      	bne.n	80049cc <HAL_ADC_ConfigChannel+0x644>
 80049c8:	4a18      	ldr	r2, [pc, #96]	@ (8004a2c <HAL_ADC_ConfigChannel+0x6a4>)
 80049ca:	e000      	b.n	80049ce <HAL_ADC_ConfigChannel+0x646>
 80049cc:	4a12      	ldr	r2, [pc, #72]	@ (8004a18 <HAL_ADC_ConfigChannel+0x690>)
 80049ce:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80049d0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80049d4:	4619      	mov	r1, r3
 80049d6:	4610      	mov	r0, r2
 80049d8:	f7fe ff15 	bl	8003806 <LL_ADC_SetCommonPathInternalCh>
 80049dc:	e012      	b.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80049e2:	f043 0220 	orr.w	r2, r3, #32
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	655a      	str	r2, [r3, #84]	@ 0x54
 80049ea:	2301      	movs	r3, #1
 80049ec:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 80049f0:	e008      	b.n	8004a04 <HAL_ADC_ConfigChannel+0x67c>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80049f6:	f043 0220 	orr.w	r2, r3, #32
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	655a      	str	r2, [r3, #84]	@ 0x54
 80049fe:	2301      	movs	r3, #1
 8004a00:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	2200      	movs	r2, #0
 8004a08:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004a0c:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 8004a10:	4618      	mov	r0, r3
 8004a12:	3784      	adds	r7, #132	@ 0x84
 8004a14:	46bd      	mov	sp, r7
 8004a16:	bd90      	pop	{r4, r7, pc}
 8004a18:	58026300 	.word	0x58026300
 8004a1c:	40022000 	.word	0x40022000
 8004a20:	40022100 	.word	0x40022100
 8004a24:	58026000 	.word	0x58026000
 8004a28:	cb840000 	.word	0xcb840000
 8004a2c:	40022300 	.word	0x40022300
 8004a30:	24000090 	.word	0x24000090
 8004a34:	053e2d63 	.word	0x053e2d63
 8004a38:	c7520000 	.word	0xc7520000
 8004a3c:	cfb80000 	.word	0xcfb80000

08004a40 <ADC_ConversionStop>:
 8004a40:	b580      	push	{r7, lr}
 8004a42:	b088      	sub	sp, #32
 8004a44:	af00      	add	r7, sp, #0
 8004a46:	6078      	str	r0, [r7, #4]
 8004a48:	6039      	str	r1, [r7, #0]
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	61fb      	str	r3, [r7, #28]
 8004a4e:	683b      	ldr	r3, [r7, #0]
 8004a50:	61bb      	str	r3, [r7, #24]
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	4618      	mov	r0, r3
 8004a58:	f7ff f8b8 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 8004a5c:	6138      	str	r0, [r7, #16]
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	4618      	mov	r0, r3
 8004a64:	f7ff f8da 	bl	8003c1c <LL_ADC_INJ_IsConversionOngoing>
 8004a68:	60f8      	str	r0, [r7, #12]
 8004a6a:	693b      	ldr	r3, [r7, #16]
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	d103      	bne.n	8004a78 <ADC_ConversionStop+0x38>
 8004a70:	68fb      	ldr	r3, [r7, #12]
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	f000 8098 	beq.w	8004ba8 <ADC_ConversionStop+0x168>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	68db      	ldr	r3, [r3, #12]
 8004a7e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004a82:	2b00      	cmp	r3, #0
 8004a84:	d02a      	beq.n	8004adc <ADC_ConversionStop+0x9c>
 8004a86:	687b      	ldr	r3, [r7, #4]
 8004a88:	7d5b      	ldrb	r3, [r3, #21]
 8004a8a:	2b01      	cmp	r3, #1
 8004a8c:	d126      	bne.n	8004adc <ADC_ConversionStop+0x9c>
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	7d1b      	ldrb	r3, [r3, #20]
 8004a92:	2b01      	cmp	r3, #1
 8004a94:	d122      	bne.n	8004adc <ADC_ConversionStop+0x9c>
 8004a96:	2301      	movs	r3, #1
 8004a98:	61bb      	str	r3, [r7, #24]
 8004a9a:	e014      	b.n	8004ac6 <ADC_ConversionStop+0x86>
 8004a9c:	69fb      	ldr	r3, [r7, #28]
 8004a9e:	4a45      	ldr	r2, [pc, #276]	@ (8004bb4 <ADC_ConversionStop+0x174>)
 8004aa0:	4293      	cmp	r3, r2
 8004aa2:	d90d      	bls.n	8004ac0 <ADC_ConversionStop+0x80>
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004aa8:	f043 0210 	orr.w	r2, r3, #16
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	655a      	str	r2, [r3, #84]	@ 0x54
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004ab4:	f043 0201 	orr.w	r2, r3, #1
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	659a      	str	r2, [r3, #88]	@ 0x58
 8004abc:	2301      	movs	r3, #1
 8004abe:	e074      	b.n	8004baa <ADC_ConversionStop+0x16a>
 8004ac0:	69fb      	ldr	r3, [r7, #28]
 8004ac2:	3301      	adds	r3, #1
 8004ac4:	61fb      	str	r3, [r7, #28]
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ad0:	2b40      	cmp	r3, #64	@ 0x40
 8004ad2:	d1e3      	bne.n	8004a9c <ADC_ConversionStop+0x5c>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	2240      	movs	r2, #64	@ 0x40
 8004ada:	601a      	str	r2, [r3, #0]
 8004adc:	69bb      	ldr	r3, [r7, #24]
 8004ade:	2b02      	cmp	r3, #2
 8004ae0:	d014      	beq.n	8004b0c <ADC_ConversionStop+0xcc>
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	4618      	mov	r0, r3
 8004ae8:	f7ff f870 	bl	8003bcc <LL_ADC_REG_IsConversionOngoing>
 8004aec:	4603      	mov	r3, r0
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d00c      	beq.n	8004b0c <ADC_ConversionStop+0xcc>
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	4618      	mov	r0, r3
 8004af8:	f7ff f82d 	bl	8003b56 <LL_ADC_IsDisableOngoing>
 8004afc:	4603      	mov	r3, r0
 8004afe:	2b00      	cmp	r3, #0
 8004b00:	d104      	bne.n	8004b0c <ADC_ConversionStop+0xcc>
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	681b      	ldr	r3, [r3, #0]
 8004b06:	4618      	mov	r0, r3
 8004b08:	f7ff f84c 	bl	8003ba4 <LL_ADC_REG_StopConversion>
 8004b0c:	69bb      	ldr	r3, [r7, #24]
 8004b0e:	2b01      	cmp	r3, #1
 8004b10:	d014      	beq.n	8004b3c <ADC_ConversionStop+0xfc>
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	681b      	ldr	r3, [r3, #0]
 8004b16:	4618      	mov	r0, r3
 8004b18:	f7ff f880 	bl	8003c1c <LL_ADC_INJ_IsConversionOngoing>
 8004b1c:	4603      	mov	r3, r0
 8004b1e:	2b00      	cmp	r3, #0
 8004b20:	d00c      	beq.n	8004b3c <ADC_ConversionStop+0xfc>
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	681b      	ldr	r3, [r3, #0]
 8004b26:	4618      	mov	r0, r3
 8004b28:	f7ff f815 	bl	8003b56 <LL_ADC_IsDisableOngoing>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d104      	bne.n	8004b3c <ADC_ConversionStop+0xfc>
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	4618      	mov	r0, r3
 8004b38:	f7ff f85c 	bl	8003bf4 <LL_ADC_INJ_StopConversion>
 8004b3c:	69bb      	ldr	r3, [r7, #24]
 8004b3e:	2b02      	cmp	r3, #2
 8004b40:	d005      	beq.n	8004b4e <ADC_ConversionStop+0x10e>
 8004b42:	69bb      	ldr	r3, [r7, #24]
 8004b44:	2b03      	cmp	r3, #3
 8004b46:	d105      	bne.n	8004b54 <ADC_ConversionStop+0x114>
 8004b48:	230c      	movs	r3, #12
 8004b4a:	617b      	str	r3, [r7, #20]
 8004b4c:	e005      	b.n	8004b5a <ADC_ConversionStop+0x11a>
 8004b4e:	2308      	movs	r3, #8
 8004b50:	617b      	str	r3, [r7, #20]
 8004b52:	e002      	b.n	8004b5a <ADC_ConversionStop+0x11a>
 8004b54:	2304      	movs	r3, #4
 8004b56:	617b      	str	r3, [r7, #20]
 8004b58:	bf00      	nop
 8004b5a:	f7fe fdcb 	bl	80036f4 <HAL_GetTick>
 8004b5e:	60b8      	str	r0, [r7, #8]
 8004b60:	e01b      	b.n	8004b9a <ADC_ConversionStop+0x15a>
 8004b62:	f7fe fdc7 	bl	80036f4 <HAL_GetTick>
 8004b66:	4602      	mov	r2, r0
 8004b68:	68bb      	ldr	r3, [r7, #8]
 8004b6a:	1ad3      	subs	r3, r2, r3
 8004b6c:	2b05      	cmp	r3, #5
 8004b6e:	d914      	bls.n	8004b9a <ADC_ConversionStop+0x15a>
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	689a      	ldr	r2, [r3, #8]
 8004b76:	697b      	ldr	r3, [r7, #20]
 8004b78:	4013      	ands	r3, r2
 8004b7a:	2b00      	cmp	r3, #0
 8004b7c:	d00d      	beq.n	8004b9a <ADC_ConversionStop+0x15a>
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004b82:	f043 0210 	orr.w	r2, r3, #16
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	655a      	str	r2, [r3, #84]	@ 0x54
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004b8e:	f043 0201 	orr.w	r2, r3, #1
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	659a      	str	r2, [r3, #88]	@ 0x58
 8004b96:	2301      	movs	r3, #1
 8004b98:	e007      	b.n	8004baa <ADC_ConversionStop+0x16a>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	681b      	ldr	r3, [r3, #0]
 8004b9e:	689a      	ldr	r2, [r3, #8]
 8004ba0:	697b      	ldr	r3, [r7, #20]
 8004ba2:	4013      	ands	r3, r2
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d1dc      	bne.n	8004b62 <ADC_ConversionStop+0x122>
 8004ba8:	2300      	movs	r3, #0
 8004baa:	4618      	mov	r0, r3
 8004bac:	3720      	adds	r7, #32
 8004bae:	46bd      	mov	sp, r7
 8004bb0:	bd80      	pop	{r7, pc}
 8004bb2:	bf00      	nop
 8004bb4:	000cdbff 	.word	0x000cdbff

08004bb8 <ADC_Enable>:
 8004bb8:	b580      	push	{r7, lr}
 8004bba:	b084      	sub	sp, #16
 8004bbc:	af00      	add	r7, sp, #0
 8004bbe:	6078      	str	r0, [r7, #4]
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	4618      	mov	r0, r3
 8004bc6:	f7fe ffb3 	bl	8003b30 <LL_ADC_IsEnabled>
 8004bca:	4603      	mov	r3, r0
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d16e      	bne.n	8004cae <ADC_Enable+0xf6>
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	689a      	ldr	r2, [r3, #8]
 8004bd6:	4b38      	ldr	r3, [pc, #224]	@ (8004cb8 <ADC_Enable+0x100>)
 8004bd8:	4013      	ands	r3, r2
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	d00d      	beq.n	8004bfa <ADC_Enable+0x42>
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004be2:	f043 0210 	orr.w	r2, r3, #16
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	655a      	str	r2, [r3, #84]	@ 0x54
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004bee:	f043 0201 	orr.w	r2, r3, #1
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	659a      	str	r2, [r3, #88]	@ 0x58
 8004bf6:	2301      	movs	r3, #1
 8004bf8:	e05a      	b.n	8004cb0 <ADC_Enable+0xf8>
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	4618      	mov	r0, r3
 8004c00:	f7fe ff6e 	bl	8003ae0 <LL_ADC_Enable>
 8004c04:	f7fe fd76 	bl	80036f4 <HAL_GetTick>
 8004c08:	60f8      	str	r0, [r7, #12]
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	4a2b      	ldr	r2, [pc, #172]	@ (8004cbc <ADC_Enable+0x104>)
 8004c10:	4293      	cmp	r3, r2
 8004c12:	d004      	beq.n	8004c1e <ADC_Enable+0x66>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a29      	ldr	r2, [pc, #164]	@ (8004cc0 <ADC_Enable+0x108>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d101      	bne.n	8004c22 <ADC_Enable+0x6a>
 8004c1e:	4b29      	ldr	r3, [pc, #164]	@ (8004cc4 <ADC_Enable+0x10c>)
 8004c20:	e000      	b.n	8004c24 <ADC_Enable+0x6c>
 8004c22:	4b29      	ldr	r3, [pc, #164]	@ (8004cc8 <ADC_Enable+0x110>)
 8004c24:	4618      	mov	r0, r3
 8004c26:	f7fe fef1 	bl	8003a0c <LL_ADC_GetMultimode>
 8004c2a:	60b8      	str	r0, [r7, #8]
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	681b      	ldr	r3, [r3, #0]
 8004c30:	4a23      	ldr	r2, [pc, #140]	@ (8004cc0 <ADC_Enable+0x108>)
 8004c32:	4293      	cmp	r3, r2
 8004c34:	d002      	beq.n	8004c3c <ADC_Enable+0x84>
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	e000      	b.n	8004c3e <ADC_Enable+0x86>
 8004c3c:	4b1f      	ldr	r3, [pc, #124]	@ (8004cbc <ADC_Enable+0x104>)
 8004c3e:	687a      	ldr	r2, [r7, #4]
 8004c40:	6812      	ldr	r2, [r2, #0]
 8004c42:	4293      	cmp	r3, r2
 8004c44:	d02c      	beq.n	8004ca0 <ADC_Enable+0xe8>
 8004c46:	68bb      	ldr	r3, [r7, #8]
 8004c48:	2b00      	cmp	r3, #0
 8004c4a:	d130      	bne.n	8004cae <ADC_Enable+0xf6>
 8004c4c:	e028      	b.n	8004ca0 <ADC_Enable+0xe8>
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	4618      	mov	r0, r3
 8004c54:	f7fe ff6c 	bl	8003b30 <LL_ADC_IsEnabled>
 8004c58:	4603      	mov	r3, r0
 8004c5a:	2b00      	cmp	r3, #0
 8004c5c:	d104      	bne.n	8004c68 <ADC_Enable+0xb0>
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	4618      	mov	r0, r3
 8004c64:	f7fe ff3c 	bl	8003ae0 <LL_ADC_Enable>
 8004c68:	f7fe fd44 	bl	80036f4 <HAL_GetTick>
 8004c6c:	4602      	mov	r2, r0
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	1ad3      	subs	r3, r2, r3
 8004c72:	2b02      	cmp	r3, #2
 8004c74:	d914      	bls.n	8004ca0 <ADC_Enable+0xe8>
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	f003 0301 	and.w	r3, r3, #1
 8004c80:	2b01      	cmp	r3, #1
 8004c82:	d00d      	beq.n	8004ca0 <ADC_Enable+0xe8>
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004c88:	f043 0210 	orr.w	r2, r3, #16
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	655a      	str	r2, [r3, #84]	@ 0x54
 8004c90:	687b      	ldr	r3, [r7, #4]
 8004c92:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004c94:	f043 0201 	orr.w	r2, r3, #1
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	659a      	str	r2, [r3, #88]	@ 0x58
 8004c9c:	2301      	movs	r3, #1
 8004c9e:	e007      	b.n	8004cb0 <ADC_Enable+0xf8>
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	f003 0301 	and.w	r3, r3, #1
 8004caa:	2b01      	cmp	r3, #1
 8004cac:	d1cf      	bne.n	8004c4e <ADC_Enable+0x96>
 8004cae:	2300      	movs	r3, #0
 8004cb0:	4618      	mov	r0, r3
 8004cb2:	3710      	adds	r7, #16
 8004cb4:	46bd      	mov	sp, r7
 8004cb6:	bd80      	pop	{r7, pc}
 8004cb8:	8000003f 	.word	0x8000003f
 8004cbc:	40022000 	.word	0x40022000
 8004cc0:	40022100 	.word	0x40022100
 8004cc4:	40022300 	.word	0x40022300
 8004cc8:	58026300 	.word	0x58026300

08004ccc <ADC_Disable>:
 8004ccc:	b580      	push	{r7, lr}
 8004cce:	b084      	sub	sp, #16
 8004cd0:	af00      	add	r7, sp, #0
 8004cd2:	6078      	str	r0, [r7, #4]
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	4618      	mov	r0, r3
 8004cda:	f7fe ff3c 	bl	8003b56 <LL_ADC_IsDisableOngoing>
 8004cde:	60f8      	str	r0, [r7, #12]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	4618      	mov	r0, r3
 8004ce6:	f7fe ff23 	bl	8003b30 <LL_ADC_IsEnabled>
 8004cea:	4603      	mov	r3, r0
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	d047      	beq.n	8004d80 <ADC_Disable+0xb4>
 8004cf0:	68fb      	ldr	r3, [r7, #12]
 8004cf2:	2b00      	cmp	r3, #0
 8004cf4:	d144      	bne.n	8004d80 <ADC_Disable+0xb4>
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	681b      	ldr	r3, [r3, #0]
 8004cfa:	689b      	ldr	r3, [r3, #8]
 8004cfc:	f003 030d 	and.w	r3, r3, #13
 8004d00:	2b01      	cmp	r3, #1
 8004d02:	d10c      	bne.n	8004d1e <ADC_Disable+0x52>
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	681b      	ldr	r3, [r3, #0]
 8004d08:	4618      	mov	r0, r3
 8004d0a:	f7fe fefd 	bl	8003b08 <LL_ADC_Disable>
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	2203      	movs	r2, #3
 8004d14:	601a      	str	r2, [r3, #0]
 8004d16:	f7fe fced 	bl	80036f4 <HAL_GetTick>
 8004d1a:	60b8      	str	r0, [r7, #8]
 8004d1c:	e029      	b.n	8004d72 <ADC_Disable+0xa6>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d22:	f043 0210 	orr.w	r2, r3, #16
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004d2e:	f043 0201 	orr.w	r2, r3, #1
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	659a      	str	r2, [r3, #88]	@ 0x58
 8004d36:	2301      	movs	r3, #1
 8004d38:	e023      	b.n	8004d82 <ADC_Disable+0xb6>
 8004d3a:	f7fe fcdb 	bl	80036f4 <HAL_GetTick>
 8004d3e:	4602      	mov	r2, r0
 8004d40:	68bb      	ldr	r3, [r7, #8]
 8004d42:	1ad3      	subs	r3, r2, r3
 8004d44:	2b02      	cmp	r3, #2
 8004d46:	d914      	bls.n	8004d72 <ADC_Disable+0xa6>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	689b      	ldr	r3, [r3, #8]
 8004d4e:	f003 0301 	and.w	r3, r3, #1
 8004d52:	2b00      	cmp	r3, #0
 8004d54:	d00d      	beq.n	8004d72 <ADC_Disable+0xa6>
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004d5a:	f043 0210 	orr.w	r2, r3, #16
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	655a      	str	r2, [r3, #84]	@ 0x54
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004d66:	f043 0201 	orr.w	r2, r3, #1
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	659a      	str	r2, [r3, #88]	@ 0x58
 8004d6e:	2301      	movs	r3, #1
 8004d70:	e007      	b.n	8004d82 <ADC_Disable+0xb6>
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	689b      	ldr	r3, [r3, #8]
 8004d78:	f003 0301 	and.w	r3, r3, #1
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	d1dc      	bne.n	8004d3a <ADC_Disable+0x6e>
 8004d80:	2300      	movs	r3, #0
 8004d82:	4618      	mov	r0, r3
 8004d84:	3710      	adds	r7, #16
 8004d86:	46bd      	mov	sp, r7
 8004d88:	bd80      	pop	{r7, pc}
	...

08004d8c <ADC_ConfigureBoostMode>:
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b084      	sub	sp, #16
 8004d90:	af00      	add	r7, sp, #0
 8004d92:	6078      	str	r0, [r7, #4]
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	681b      	ldr	r3, [r3, #0]
 8004d98:	4a7a      	ldr	r2, [pc, #488]	@ (8004f84 <ADC_ConfigureBoostMode+0x1f8>)
 8004d9a:	4293      	cmp	r3, r2
 8004d9c:	d004      	beq.n	8004da8 <ADC_ConfigureBoostMode+0x1c>
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	4a79      	ldr	r2, [pc, #484]	@ (8004f88 <ADC_ConfigureBoostMode+0x1fc>)
 8004da4:	4293      	cmp	r3, r2
 8004da6:	d109      	bne.n	8004dbc <ADC_ConfigureBoostMode+0x30>
 8004da8:	4b78      	ldr	r3, [pc, #480]	@ (8004f8c <ADC_ConfigureBoostMode+0x200>)
 8004daa:	689b      	ldr	r3, [r3, #8]
 8004dac:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004db0:	2b00      	cmp	r3, #0
 8004db2:	bf14      	ite	ne
 8004db4:	2301      	movne	r3, #1
 8004db6:	2300      	moveq	r3, #0
 8004db8:	b2db      	uxtb	r3, r3
 8004dba:	e008      	b.n	8004dce <ADC_ConfigureBoostMode+0x42>
 8004dbc:	4b74      	ldr	r3, [pc, #464]	@ (8004f90 <ADC_ConfigureBoostMode+0x204>)
 8004dbe:	689b      	ldr	r3, [r3, #8]
 8004dc0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	bf14      	ite	ne
 8004dc8:	2301      	movne	r3, #1
 8004dca:	2300      	moveq	r3, #0
 8004dcc:	b2db      	uxtb	r3, r3
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d01c      	beq.n	8004e0c <ADC_ConfigureBoostMode+0x80>
 8004dd2:	f002 ff59 	bl	8007c88 <HAL_RCC_GetHCLKFreq>
 8004dd6:	60f8      	str	r0, [r7, #12]
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	685b      	ldr	r3, [r3, #4]
 8004ddc:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004de0:	d010      	beq.n	8004e04 <ADC_ConfigureBoostMode+0x78>
 8004de2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8004de6:	d873      	bhi.n	8004ed0 <ADC_ConfigureBoostMode+0x144>
 8004de8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004dec:	d002      	beq.n	8004df4 <ADC_ConfigureBoostMode+0x68>
 8004dee:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8004df2:	d16d      	bne.n	8004ed0 <ADC_ConfigureBoostMode+0x144>
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	685b      	ldr	r3, [r3, #4]
 8004df8:	0c1b      	lsrs	r3, r3, #16
 8004dfa:	68fa      	ldr	r2, [r7, #12]
 8004dfc:	fbb2 f3f3 	udiv	r3, r2, r3
 8004e00:	60fb      	str	r3, [r7, #12]
 8004e02:	e068      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	089b      	lsrs	r3, r3, #2
 8004e08:	60fb      	str	r3, [r7, #12]
 8004e0a:	e064      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004e0c:	f44f 2000 	mov.w	r0, #524288	@ 0x80000
 8004e10:	f04f 0100 	mov.w	r1, #0
 8004e14:	f004 f988 	bl	8009128 <HAL_RCCEx_GetPeriphCLKFreq>
 8004e18:	60f8      	str	r0, [r7, #12]
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	685b      	ldr	r3, [r3, #4]
 8004e1e:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 8004e22:	d051      	beq.n	8004ec8 <ADC_ConfigureBoostMode+0x13c>
 8004e24:	f5b3 1f30 	cmp.w	r3, #2883584	@ 0x2c0000
 8004e28:	d854      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e2a:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 8004e2e:	d047      	beq.n	8004ec0 <ADC_ConfigureBoostMode+0x134>
 8004e30:	f5b3 1f20 	cmp.w	r3, #2621440	@ 0x280000
 8004e34:	d84e      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e36:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 8004e3a:	d03d      	beq.n	8004eb8 <ADC_ConfigureBoostMode+0x12c>
 8004e3c:	f5b3 1f10 	cmp.w	r3, #2359296	@ 0x240000
 8004e40:	d848      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e42:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004e46:	d033      	beq.n	8004eb0 <ADC_ConfigureBoostMode+0x124>
 8004e48:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8004e4c:	d842      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e4e:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8004e52:	d029      	beq.n	8004ea8 <ADC_ConfigureBoostMode+0x11c>
 8004e54:	f5b3 1fe0 	cmp.w	r3, #1835008	@ 0x1c0000
 8004e58:	d83c      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e5a:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004e5e:	d01a      	beq.n	8004e96 <ADC_ConfigureBoostMode+0x10a>
 8004e60:	f5b3 1fc0 	cmp.w	r3, #1572864	@ 0x180000
 8004e64:	d836      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e66:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8004e6a:	d014      	beq.n	8004e96 <ADC_ConfigureBoostMode+0x10a>
 8004e6c:	f5b3 1fa0 	cmp.w	r3, #1310720	@ 0x140000
 8004e70:	d830      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e72:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004e76:	d00e      	beq.n	8004e96 <ADC_ConfigureBoostMode+0x10a>
 8004e78:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8004e7c:	d82a      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e7e:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004e82:	d008      	beq.n	8004e96 <ADC_ConfigureBoostMode+0x10a>
 8004e84:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004e88:	d824      	bhi.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e8a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8004e8e:	d002      	beq.n	8004e96 <ADC_ConfigureBoostMode+0x10a>
 8004e90:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8004e94:	d11e      	bne.n	8004ed4 <ADC_ConfigureBoostMode+0x148>
 8004e96:	687b      	ldr	r3, [r7, #4]
 8004e98:	685b      	ldr	r3, [r3, #4]
 8004e9a:	0c9b      	lsrs	r3, r3, #18
 8004e9c:	005b      	lsls	r3, r3, #1
 8004e9e:	68fa      	ldr	r2, [r7, #12]
 8004ea0:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ea4:	60fb      	str	r3, [r7, #12]
 8004ea6:	e016      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	091b      	lsrs	r3, r3, #4
 8004eac:	60fb      	str	r3, [r7, #12]
 8004eae:	e012      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004eb0:	68fb      	ldr	r3, [r7, #12]
 8004eb2:	095b      	lsrs	r3, r3, #5
 8004eb4:	60fb      	str	r3, [r7, #12]
 8004eb6:	e00e      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	099b      	lsrs	r3, r3, #6
 8004ebc:	60fb      	str	r3, [r7, #12]
 8004ebe:	e00a      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	09db      	lsrs	r3, r3, #7
 8004ec4:	60fb      	str	r3, [r7, #12]
 8004ec6:	e006      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	0a1b      	lsrs	r3, r3, #8
 8004ecc:	60fb      	str	r3, [r7, #12]
 8004ece:	e002      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004ed0:	bf00      	nop
 8004ed2:	e000      	b.n	8004ed6 <ADC_ConfigureBoostMode+0x14a>
 8004ed4:	bf00      	nop
 8004ed6:	f7fe fc3d 	bl	8003754 <HAL_GetREVID>
 8004eda:	4603      	mov	r3, r0
 8004edc:	f241 0203 	movw	r2, #4099	@ 0x1003
 8004ee0:	4293      	cmp	r3, r2
 8004ee2:	d815      	bhi.n	8004f10 <ADC_ConfigureBoostMode+0x184>
 8004ee4:	68fb      	ldr	r3, [r7, #12]
 8004ee6:	4a2b      	ldr	r2, [pc, #172]	@ (8004f94 <ADC_ConfigureBoostMode+0x208>)
 8004ee8:	4293      	cmp	r3, r2
 8004eea:	d908      	bls.n	8004efe <ADC_ConfigureBoostMode+0x172>
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	689a      	ldr	r2, [r3, #8]
 8004ef2:	687b      	ldr	r3, [r7, #4]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004efa:	609a      	str	r2, [r3, #8]
 8004efc:	e03e      	b.n	8004f7c <ADC_ConfigureBoostMode+0x1f0>
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	689a      	ldr	r2, [r3, #8]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004f0c:	609a      	str	r2, [r3, #8]
 8004f0e:	e035      	b.n	8004f7c <ADC_ConfigureBoostMode+0x1f0>
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	085b      	lsrs	r3, r3, #1
 8004f14:	60fb      	str	r3, [r7, #12]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	4a1f      	ldr	r2, [pc, #124]	@ (8004f98 <ADC_ConfigureBoostMode+0x20c>)
 8004f1a:	4293      	cmp	r3, r2
 8004f1c:	d808      	bhi.n	8004f30 <ADC_ConfigureBoostMode+0x1a4>
 8004f1e:	687b      	ldr	r3, [r7, #4]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	689a      	ldr	r2, [r3, #8]
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8004f2c:	609a      	str	r2, [r3, #8]
 8004f2e:	e025      	b.n	8004f7c <ADC_ConfigureBoostMode+0x1f0>
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	4a1a      	ldr	r2, [pc, #104]	@ (8004f9c <ADC_ConfigureBoostMode+0x210>)
 8004f34:	4293      	cmp	r3, r2
 8004f36:	d80a      	bhi.n	8004f4e <ADC_ConfigureBoostMode+0x1c2>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	689b      	ldr	r3, [r3, #8]
 8004f3e:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004f4a:	609a      	str	r2, [r3, #8]
 8004f4c:	e016      	b.n	8004f7c <ADC_ConfigureBoostMode+0x1f0>
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	4a13      	ldr	r2, [pc, #76]	@ (8004fa0 <ADC_ConfigureBoostMode+0x214>)
 8004f52:	4293      	cmp	r3, r2
 8004f54:	d80a      	bhi.n	8004f6c <ADC_ConfigureBoostMode+0x1e0>
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	689b      	ldr	r3, [r3, #8]
 8004f5c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004f68:	609a      	str	r2, [r3, #8]
 8004f6a:	e007      	b.n	8004f7c <ADC_ConfigureBoostMode+0x1f0>
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	689a      	ldr	r2, [r3, #8]
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	681b      	ldr	r3, [r3, #0]
 8004f76:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 8004f7a:	609a      	str	r2, [r3, #8]
 8004f7c:	bf00      	nop
 8004f7e:	3710      	adds	r7, #16
 8004f80:	46bd      	mov	sp, r7
 8004f82:	bd80      	pop	{r7, pc}
 8004f84:	40022000 	.word	0x40022000
 8004f88:	40022100 	.word	0x40022100
 8004f8c:	40022300 	.word	0x40022300
 8004f90:	58026300 	.word	0x58026300
 8004f94:	01312d00 	.word	0x01312d00
 8004f98:	005f5e10 	.word	0x005f5e10
 8004f9c:	00bebc20 	.word	0x00bebc20
 8004fa0:	017d7840 	.word	0x017d7840

08004fa4 <LL_ADC_StartCalibration>:
 8004fa4:	b480      	push	{r7}
 8004fa6:	b085      	sub	sp, #20
 8004fa8:	af00      	add	r7, sp, #0
 8004faa:	60f8      	str	r0, [r7, #12]
 8004fac:	60b9      	str	r1, [r7, #8]
 8004fae:	607a      	str	r2, [r7, #4]
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	689a      	ldr	r2, [r3, #8]
 8004fb4:	4b09      	ldr	r3, [pc, #36]	@ (8004fdc <LL_ADC_StartCalibration+0x38>)
 8004fb6:	4013      	ands	r3, r2
 8004fb8:	68ba      	ldr	r2, [r7, #8]
 8004fba:	f402 3180 	and.w	r1, r2, #65536	@ 0x10000
 8004fbe:	687a      	ldr	r2, [r7, #4]
 8004fc0:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8004fc4:	430a      	orrs	r2, r1
 8004fc6:	4313      	orrs	r3, r2
 8004fc8:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	609a      	str	r2, [r3, #8]
 8004fd0:	bf00      	nop
 8004fd2:	3714      	adds	r7, #20
 8004fd4:	46bd      	mov	sp, r7
 8004fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fda:	4770      	bx	lr
 8004fdc:	3ffeffc0 	.word	0x3ffeffc0

08004fe0 <LL_ADC_IsCalibrationOnGoing>:
 8004fe0:	b480      	push	{r7}
 8004fe2:	b083      	sub	sp, #12
 8004fe4:	af00      	add	r7, sp, #0
 8004fe6:	6078      	str	r0, [r7, #4]
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	689b      	ldr	r3, [r3, #8]
 8004fec:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8004ff0:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8004ff4:	d101      	bne.n	8004ffa <LL_ADC_IsCalibrationOnGoing+0x1a>
 8004ff6:	2301      	movs	r3, #1
 8004ff8:	e000      	b.n	8004ffc <LL_ADC_IsCalibrationOnGoing+0x1c>
 8004ffa:	2300      	movs	r3, #0
 8004ffc:	4618      	mov	r0, r3
 8004ffe:	370c      	adds	r7, #12
 8005000:	46bd      	mov	sp, r7
 8005002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005006:	4770      	bx	lr

08005008 <HAL_ADCEx_Calibration_Start>:
 8005008:	b580      	push	{r7, lr}
 800500a:	b086      	sub	sp, #24
 800500c:	af00      	add	r7, sp, #0
 800500e:	60f8      	str	r0, [r7, #12]
 8005010:	60b9      	str	r1, [r7, #8]
 8005012:	607a      	str	r2, [r7, #4]
 8005014:	2300      	movs	r3, #0
 8005016:	613b      	str	r3, [r7, #16]
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800501e:	2b01      	cmp	r3, #1
 8005020:	d101      	bne.n	8005026 <HAL_ADCEx_Calibration_Start+0x1e>
 8005022:	2302      	movs	r3, #2
 8005024:	e04c      	b.n	80050c0 <HAL_ADCEx_Calibration_Start+0xb8>
 8005026:	68fb      	ldr	r3, [r7, #12]
 8005028:	2201      	movs	r2, #1
 800502a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800502e:	68f8      	ldr	r0, [r7, #12]
 8005030:	f7ff fe4c 	bl	8004ccc <ADC_Disable>
 8005034:	4603      	mov	r3, r0
 8005036:	75fb      	strb	r3, [r7, #23]
 8005038:	7dfb      	ldrb	r3, [r7, #23]
 800503a:	2b00      	cmp	r3, #0
 800503c:	d135      	bne.n	80050aa <HAL_ADCEx_Calibration_Start+0xa2>
 800503e:	68fb      	ldr	r3, [r7, #12]
 8005040:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8005042:	4b21      	ldr	r3, [pc, #132]	@ (80050c8 <HAL_ADCEx_Calibration_Start+0xc0>)
 8005044:	4013      	ands	r3, r2
 8005046:	f043 0202 	orr.w	r2, r3, #2
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	655a      	str	r2, [r3, #84]	@ 0x54
 800504e:	68fb      	ldr	r3, [r7, #12]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	687a      	ldr	r2, [r7, #4]
 8005054:	68b9      	ldr	r1, [r7, #8]
 8005056:	4618      	mov	r0, r3
 8005058:	f7ff ffa4 	bl	8004fa4 <LL_ADC_StartCalibration>
 800505c:	e014      	b.n	8005088 <HAL_ADCEx_Calibration_Start+0x80>
 800505e:	693b      	ldr	r3, [r7, #16]
 8005060:	3301      	adds	r3, #1
 8005062:	613b      	str	r3, [r7, #16]
 8005064:	693b      	ldr	r3, [r7, #16]
 8005066:	4a19      	ldr	r2, [pc, #100]	@ (80050cc <HAL_ADCEx_Calibration_Start+0xc4>)
 8005068:	4293      	cmp	r3, r2
 800506a:	d30d      	bcc.n	8005088 <HAL_ADCEx_Calibration_Start+0x80>
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005070:	f023 0312 	bic.w	r3, r3, #18
 8005074:	f043 0210 	orr.w	r2, r3, #16
 8005078:	68fb      	ldr	r3, [r7, #12]
 800507a:	655a      	str	r2, [r3, #84]	@ 0x54
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	2200      	movs	r2, #0
 8005080:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8005084:	2301      	movs	r3, #1
 8005086:	e01b      	b.n	80050c0 <HAL_ADCEx_Calibration_Start+0xb8>
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	4618      	mov	r0, r3
 800508e:	f7ff ffa7 	bl	8004fe0 <LL_ADC_IsCalibrationOnGoing>
 8005092:	4603      	mov	r3, r0
 8005094:	2b00      	cmp	r3, #0
 8005096:	d1e2      	bne.n	800505e <HAL_ADCEx_Calibration_Start+0x56>
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800509c:	f023 0303 	bic.w	r3, r3, #3
 80050a0:	f043 0201 	orr.w	r2, r3, #1
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	655a      	str	r2, [r3, #84]	@ 0x54
 80050a8:	e005      	b.n	80050b6 <HAL_ADCEx_Calibration_Start+0xae>
 80050aa:	68fb      	ldr	r3, [r7, #12]
 80050ac:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80050ae:	f043 0210 	orr.w	r2, r3, #16
 80050b2:	68fb      	ldr	r3, [r7, #12]
 80050b4:	655a      	str	r2, [r3, #84]	@ 0x54
 80050b6:	68fb      	ldr	r3, [r7, #12]
 80050b8:	2200      	movs	r2, #0
 80050ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80050be:	7dfb      	ldrb	r3, [r7, #23]
 80050c0:	4618      	mov	r0, r3
 80050c2:	3718      	adds	r7, #24
 80050c4:	46bd      	mov	sp, r7
 80050c6:	bd80      	pop	{r7, pc}
 80050c8:	ffffeefd 	.word	0xffffeefd
 80050cc:	25c3f800 	.word	0x25c3f800

080050d0 <__NVIC_SetPriorityGrouping>:
 80050d0:	b480      	push	{r7}
 80050d2:	b085      	sub	sp, #20
 80050d4:	af00      	add	r7, sp, #0
 80050d6:	6078      	str	r0, [r7, #4]
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	f003 0307 	and.w	r3, r3, #7
 80050de:	60fb      	str	r3, [r7, #12]
 80050e0:	4b0b      	ldr	r3, [pc, #44]	@ (8005110 <__NVIC_SetPriorityGrouping+0x40>)
 80050e2:	68db      	ldr	r3, [r3, #12]
 80050e4:	60bb      	str	r3, [r7, #8]
 80050e6:	68ba      	ldr	r2, [r7, #8]
 80050e8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80050ec:	4013      	ands	r3, r2
 80050ee:	60bb      	str	r3, [r7, #8]
 80050f0:	68fb      	ldr	r3, [r7, #12]
 80050f2:	021a      	lsls	r2, r3, #8
 80050f4:	68bb      	ldr	r3, [r7, #8]
 80050f6:	431a      	orrs	r2, r3
 80050f8:	4b06      	ldr	r3, [pc, #24]	@ (8005114 <__NVIC_SetPriorityGrouping+0x44>)
 80050fa:	4313      	orrs	r3, r2
 80050fc:	60bb      	str	r3, [r7, #8]
 80050fe:	4a04      	ldr	r2, [pc, #16]	@ (8005110 <__NVIC_SetPriorityGrouping+0x40>)
 8005100:	68bb      	ldr	r3, [r7, #8]
 8005102:	60d3      	str	r3, [r2, #12]
 8005104:	bf00      	nop
 8005106:	3714      	adds	r7, #20
 8005108:	46bd      	mov	sp, r7
 800510a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800510e:	4770      	bx	lr
 8005110:	e000ed00 	.word	0xe000ed00
 8005114:	05fa0000 	.word	0x05fa0000

08005118 <__NVIC_GetPriorityGrouping>:
 8005118:	b480      	push	{r7}
 800511a:	af00      	add	r7, sp, #0
 800511c:	4b04      	ldr	r3, [pc, #16]	@ (8005130 <__NVIC_GetPriorityGrouping+0x18>)
 800511e:	68db      	ldr	r3, [r3, #12]
 8005120:	0a1b      	lsrs	r3, r3, #8
 8005122:	f003 0307 	and.w	r3, r3, #7
 8005126:	4618      	mov	r0, r3
 8005128:	46bd      	mov	sp, r7
 800512a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800512e:	4770      	bx	lr
 8005130:	e000ed00 	.word	0xe000ed00

08005134 <__NVIC_EnableIRQ>:
 8005134:	b480      	push	{r7}
 8005136:	b083      	sub	sp, #12
 8005138:	af00      	add	r7, sp, #0
 800513a:	4603      	mov	r3, r0
 800513c:	80fb      	strh	r3, [r7, #6]
 800513e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005142:	2b00      	cmp	r3, #0
 8005144:	db0b      	blt.n	800515e <__NVIC_EnableIRQ+0x2a>
 8005146:	88fb      	ldrh	r3, [r7, #6]
 8005148:	f003 021f 	and.w	r2, r3, #31
 800514c:	4907      	ldr	r1, [pc, #28]	@ (800516c <__NVIC_EnableIRQ+0x38>)
 800514e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005152:	095b      	lsrs	r3, r3, #5
 8005154:	2001      	movs	r0, #1
 8005156:	fa00 f202 	lsl.w	r2, r0, r2
 800515a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800515e:	bf00      	nop
 8005160:	370c      	adds	r7, #12
 8005162:	46bd      	mov	sp, r7
 8005164:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005168:	4770      	bx	lr
 800516a:	bf00      	nop
 800516c:	e000e100 	.word	0xe000e100

08005170 <__NVIC_SetPriority>:
 8005170:	b480      	push	{r7}
 8005172:	b083      	sub	sp, #12
 8005174:	af00      	add	r7, sp, #0
 8005176:	4603      	mov	r3, r0
 8005178:	6039      	str	r1, [r7, #0]
 800517a:	80fb      	strh	r3, [r7, #6]
 800517c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005180:	2b00      	cmp	r3, #0
 8005182:	db0a      	blt.n	800519a <__NVIC_SetPriority+0x2a>
 8005184:	683b      	ldr	r3, [r7, #0]
 8005186:	b2da      	uxtb	r2, r3
 8005188:	490c      	ldr	r1, [pc, #48]	@ (80051bc <__NVIC_SetPriority+0x4c>)
 800518a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800518e:	0112      	lsls	r2, r2, #4
 8005190:	b2d2      	uxtb	r2, r2
 8005192:	440b      	add	r3, r1
 8005194:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8005198:	e00a      	b.n	80051b0 <__NVIC_SetPriority+0x40>
 800519a:	683b      	ldr	r3, [r7, #0]
 800519c:	b2da      	uxtb	r2, r3
 800519e:	4908      	ldr	r1, [pc, #32]	@ (80051c0 <__NVIC_SetPriority+0x50>)
 80051a0:	88fb      	ldrh	r3, [r7, #6]
 80051a2:	f003 030f 	and.w	r3, r3, #15
 80051a6:	3b04      	subs	r3, #4
 80051a8:	0112      	lsls	r2, r2, #4
 80051aa:	b2d2      	uxtb	r2, r2
 80051ac:	440b      	add	r3, r1
 80051ae:	761a      	strb	r2, [r3, #24]
 80051b0:	bf00      	nop
 80051b2:	370c      	adds	r7, #12
 80051b4:	46bd      	mov	sp, r7
 80051b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051ba:	4770      	bx	lr
 80051bc:	e000e100 	.word	0xe000e100
 80051c0:	e000ed00 	.word	0xe000ed00

080051c4 <NVIC_EncodePriority>:
 80051c4:	b480      	push	{r7}
 80051c6:	b089      	sub	sp, #36	@ 0x24
 80051c8:	af00      	add	r7, sp, #0
 80051ca:	60f8      	str	r0, [r7, #12]
 80051cc:	60b9      	str	r1, [r7, #8]
 80051ce:	607a      	str	r2, [r7, #4]
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	f003 0307 	and.w	r3, r3, #7
 80051d6:	61fb      	str	r3, [r7, #28]
 80051d8:	69fb      	ldr	r3, [r7, #28]
 80051da:	f1c3 0307 	rsb	r3, r3, #7
 80051de:	2b04      	cmp	r3, #4
 80051e0:	bf28      	it	cs
 80051e2:	2304      	movcs	r3, #4
 80051e4:	61bb      	str	r3, [r7, #24]
 80051e6:	69fb      	ldr	r3, [r7, #28]
 80051e8:	3304      	adds	r3, #4
 80051ea:	2b06      	cmp	r3, #6
 80051ec:	d902      	bls.n	80051f4 <NVIC_EncodePriority+0x30>
 80051ee:	69fb      	ldr	r3, [r7, #28]
 80051f0:	3b03      	subs	r3, #3
 80051f2:	e000      	b.n	80051f6 <NVIC_EncodePriority+0x32>
 80051f4:	2300      	movs	r3, #0
 80051f6:	617b      	str	r3, [r7, #20]
 80051f8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80051fc:	69bb      	ldr	r3, [r7, #24]
 80051fe:	fa02 f303 	lsl.w	r3, r2, r3
 8005202:	43da      	mvns	r2, r3
 8005204:	68bb      	ldr	r3, [r7, #8]
 8005206:	401a      	ands	r2, r3
 8005208:	697b      	ldr	r3, [r7, #20]
 800520a:	409a      	lsls	r2, r3
 800520c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8005210:	697b      	ldr	r3, [r7, #20]
 8005212:	fa01 f303 	lsl.w	r3, r1, r3
 8005216:	43d9      	mvns	r1, r3
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	400b      	ands	r3, r1
 800521c:	4313      	orrs	r3, r2
 800521e:	4618      	mov	r0, r3
 8005220:	3724      	adds	r7, #36	@ 0x24
 8005222:	46bd      	mov	sp, r7
 8005224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005228:	4770      	bx	lr
	...

0800522c <SysTick_Config>:
 800522c:	b580      	push	{r7, lr}
 800522e:	b082      	sub	sp, #8
 8005230:	af00      	add	r7, sp, #0
 8005232:	6078      	str	r0, [r7, #4]
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	3b01      	subs	r3, #1
 8005238:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800523c:	d301      	bcc.n	8005242 <SysTick_Config+0x16>
 800523e:	2301      	movs	r3, #1
 8005240:	e00f      	b.n	8005262 <SysTick_Config+0x36>
 8005242:	4a0a      	ldr	r2, [pc, #40]	@ (800526c <SysTick_Config+0x40>)
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	3b01      	subs	r3, #1
 8005248:	6053      	str	r3, [r2, #4]
 800524a:	210f      	movs	r1, #15
 800524c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005250:	f7ff ff8e 	bl	8005170 <__NVIC_SetPriority>
 8005254:	4b05      	ldr	r3, [pc, #20]	@ (800526c <SysTick_Config+0x40>)
 8005256:	2200      	movs	r2, #0
 8005258:	609a      	str	r2, [r3, #8]
 800525a:	4b04      	ldr	r3, [pc, #16]	@ (800526c <SysTick_Config+0x40>)
 800525c:	2207      	movs	r2, #7
 800525e:	601a      	str	r2, [r3, #0]
 8005260:	2300      	movs	r3, #0
 8005262:	4618      	mov	r0, r3
 8005264:	3708      	adds	r7, #8
 8005266:	46bd      	mov	sp, r7
 8005268:	bd80      	pop	{r7, pc}
 800526a:	bf00      	nop
 800526c:	e000e010 	.word	0xe000e010

08005270 <HAL_NVIC_SetPriorityGrouping>:
 8005270:	b580      	push	{r7, lr}
 8005272:	b082      	sub	sp, #8
 8005274:	af00      	add	r7, sp, #0
 8005276:	6078      	str	r0, [r7, #4]
 8005278:	6878      	ldr	r0, [r7, #4]
 800527a:	f7ff ff29 	bl	80050d0 <__NVIC_SetPriorityGrouping>
 800527e:	bf00      	nop
 8005280:	3708      	adds	r7, #8
 8005282:	46bd      	mov	sp, r7
 8005284:	bd80      	pop	{r7, pc}

08005286 <HAL_NVIC_SetPriority>:
 8005286:	b580      	push	{r7, lr}
 8005288:	b086      	sub	sp, #24
 800528a:	af00      	add	r7, sp, #0
 800528c:	4603      	mov	r3, r0
 800528e:	60b9      	str	r1, [r7, #8]
 8005290:	607a      	str	r2, [r7, #4]
 8005292:	81fb      	strh	r3, [r7, #14]
 8005294:	f7ff ff40 	bl	8005118 <__NVIC_GetPriorityGrouping>
 8005298:	6178      	str	r0, [r7, #20]
 800529a:	687a      	ldr	r2, [r7, #4]
 800529c:	68b9      	ldr	r1, [r7, #8]
 800529e:	6978      	ldr	r0, [r7, #20]
 80052a0:	f7ff ff90 	bl	80051c4 <NVIC_EncodePriority>
 80052a4:	4602      	mov	r2, r0
 80052a6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80052aa:	4611      	mov	r1, r2
 80052ac:	4618      	mov	r0, r3
 80052ae:	f7ff ff5f 	bl	8005170 <__NVIC_SetPriority>
 80052b2:	bf00      	nop
 80052b4:	3718      	adds	r7, #24
 80052b6:	46bd      	mov	sp, r7
 80052b8:	bd80      	pop	{r7, pc}

080052ba <HAL_NVIC_EnableIRQ>:
 80052ba:	b580      	push	{r7, lr}
 80052bc:	b082      	sub	sp, #8
 80052be:	af00      	add	r7, sp, #0
 80052c0:	4603      	mov	r3, r0
 80052c2:	80fb      	strh	r3, [r7, #6]
 80052c4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80052c8:	4618      	mov	r0, r3
 80052ca:	f7ff ff33 	bl	8005134 <__NVIC_EnableIRQ>
 80052ce:	bf00      	nop
 80052d0:	3708      	adds	r7, #8
 80052d2:	46bd      	mov	sp, r7
 80052d4:	bd80      	pop	{r7, pc}

080052d6 <HAL_SYSTICK_Config>:
 80052d6:	b580      	push	{r7, lr}
 80052d8:	b082      	sub	sp, #8
 80052da:	af00      	add	r7, sp, #0
 80052dc:	6078      	str	r0, [r7, #4]
 80052de:	6878      	ldr	r0, [r7, #4]
 80052e0:	f7ff ffa4 	bl	800522c <SysTick_Config>
 80052e4:	4603      	mov	r3, r0
 80052e6:	4618      	mov	r0, r3
 80052e8:	3708      	adds	r7, #8
 80052ea:	46bd      	mov	sp, r7
 80052ec:	bd80      	pop	{r7, pc}
	...

080052f0 <HAL_MPU_Disable>:
 80052f0:	b480      	push	{r7}
 80052f2:	af00      	add	r7, sp, #0
 80052f4:	f3bf 8f5f 	dmb	sy
 80052f8:	bf00      	nop
 80052fa:	4b07      	ldr	r3, [pc, #28]	@ (8005318 <HAL_MPU_Disable+0x28>)
 80052fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80052fe:	4a06      	ldr	r2, [pc, #24]	@ (8005318 <HAL_MPU_Disable+0x28>)
 8005300:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005304:	6253      	str	r3, [r2, #36]	@ 0x24
 8005306:	4b05      	ldr	r3, [pc, #20]	@ (800531c <HAL_MPU_Disable+0x2c>)
 8005308:	2200      	movs	r2, #0
 800530a:	605a      	str	r2, [r3, #4]
 800530c:	bf00      	nop
 800530e:	46bd      	mov	sp, r7
 8005310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005314:	4770      	bx	lr
 8005316:	bf00      	nop
 8005318:	e000ed00 	.word	0xe000ed00
 800531c:	e000ed90 	.word	0xe000ed90

08005320 <HAL_MPU_Enable>:
 8005320:	b480      	push	{r7}
 8005322:	b083      	sub	sp, #12
 8005324:	af00      	add	r7, sp, #0
 8005326:	6078      	str	r0, [r7, #4]
 8005328:	4a0b      	ldr	r2, [pc, #44]	@ (8005358 <HAL_MPU_Enable+0x38>)
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	f043 0301 	orr.w	r3, r3, #1
 8005330:	6053      	str	r3, [r2, #4]
 8005332:	4b0a      	ldr	r3, [pc, #40]	@ (800535c <HAL_MPU_Enable+0x3c>)
 8005334:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005336:	4a09      	ldr	r2, [pc, #36]	@ (800535c <HAL_MPU_Enable+0x3c>)
 8005338:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800533c:	6253      	str	r3, [r2, #36]	@ 0x24
 800533e:	f3bf 8f4f 	dsb	sy
 8005342:	bf00      	nop
 8005344:	f3bf 8f6f 	isb	sy
 8005348:	bf00      	nop
 800534a:	bf00      	nop
 800534c:	370c      	adds	r7, #12
 800534e:	46bd      	mov	sp, r7
 8005350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005354:	4770      	bx	lr
 8005356:	bf00      	nop
 8005358:	e000ed90 	.word	0xe000ed90
 800535c:	e000ed00 	.word	0xe000ed00

08005360 <HAL_MPU_ConfigRegion>:
 8005360:	b480      	push	{r7}
 8005362:	b083      	sub	sp, #12
 8005364:	af00      	add	r7, sp, #0
 8005366:	6078      	str	r0, [r7, #4]
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	785a      	ldrb	r2, [r3, #1]
 800536c:	4b1b      	ldr	r3, [pc, #108]	@ (80053dc <HAL_MPU_ConfigRegion+0x7c>)
 800536e:	609a      	str	r2, [r3, #8]
 8005370:	4b1a      	ldr	r3, [pc, #104]	@ (80053dc <HAL_MPU_ConfigRegion+0x7c>)
 8005372:	691b      	ldr	r3, [r3, #16]
 8005374:	4a19      	ldr	r2, [pc, #100]	@ (80053dc <HAL_MPU_ConfigRegion+0x7c>)
 8005376:	f023 0301 	bic.w	r3, r3, #1
 800537a:	6113      	str	r3, [r2, #16]
 800537c:	4a17      	ldr	r2, [pc, #92]	@ (80053dc <HAL_MPU_ConfigRegion+0x7c>)
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	685b      	ldr	r3, [r3, #4]
 8005382:	60d3      	str	r3, [r2, #12]
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	7b1b      	ldrb	r3, [r3, #12]
 8005388:	071a      	lsls	r2, r3, #28
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	7adb      	ldrb	r3, [r3, #11]
 800538e:	061b      	lsls	r3, r3, #24
 8005390:	431a      	orrs	r2, r3
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	7a9b      	ldrb	r3, [r3, #10]
 8005396:	04db      	lsls	r3, r3, #19
 8005398:	431a      	orrs	r2, r3
 800539a:	687b      	ldr	r3, [r7, #4]
 800539c:	7b5b      	ldrb	r3, [r3, #13]
 800539e:	049b      	lsls	r3, r3, #18
 80053a0:	431a      	orrs	r2, r3
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	7b9b      	ldrb	r3, [r3, #14]
 80053a6:	045b      	lsls	r3, r3, #17
 80053a8:	431a      	orrs	r2, r3
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	7bdb      	ldrb	r3, [r3, #15]
 80053ae:	041b      	lsls	r3, r3, #16
 80053b0:	431a      	orrs	r2, r3
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	7a5b      	ldrb	r3, [r3, #9]
 80053b6:	021b      	lsls	r3, r3, #8
 80053b8:	431a      	orrs	r2, r3
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	7a1b      	ldrb	r3, [r3, #8]
 80053be:	005b      	lsls	r3, r3, #1
 80053c0:	4313      	orrs	r3, r2
 80053c2:	687a      	ldr	r2, [r7, #4]
 80053c4:	7812      	ldrb	r2, [r2, #0]
 80053c6:	4611      	mov	r1, r2
 80053c8:	4a04      	ldr	r2, [pc, #16]	@ (80053dc <HAL_MPU_ConfigRegion+0x7c>)
 80053ca:	430b      	orrs	r3, r1
 80053cc:	6113      	str	r3, [r2, #16]
 80053ce:	bf00      	nop
 80053d0:	370c      	adds	r7, #12
 80053d2:	46bd      	mov	sp, r7
 80053d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053d8:	4770      	bx	lr
 80053da:	bf00      	nop
 80053dc:	e000ed90 	.word	0xe000ed90

080053e0 <HAL_GPIO_Init>:
 80053e0:	b480      	push	{r7}
 80053e2:	b089      	sub	sp, #36	@ 0x24
 80053e4:	af00      	add	r7, sp, #0
 80053e6:	6078      	str	r0, [r7, #4]
 80053e8:	6039      	str	r1, [r7, #0]
 80053ea:	2300      	movs	r3, #0
 80053ec:	61fb      	str	r3, [r7, #28]
 80053ee:	4b89      	ldr	r3, [pc, #548]	@ (8005614 <HAL_GPIO_Init+0x234>)
 80053f0:	617b      	str	r3, [r7, #20]
 80053f2:	e194      	b.n	800571e <HAL_GPIO_Init+0x33e>
 80053f4:	683b      	ldr	r3, [r7, #0]
 80053f6:	681a      	ldr	r2, [r3, #0]
 80053f8:	2101      	movs	r1, #1
 80053fa:	69fb      	ldr	r3, [r7, #28]
 80053fc:	fa01 f303 	lsl.w	r3, r1, r3
 8005400:	4013      	ands	r3, r2
 8005402:	613b      	str	r3, [r7, #16]
 8005404:	693b      	ldr	r3, [r7, #16]
 8005406:	2b00      	cmp	r3, #0
 8005408:	f000 8186 	beq.w	8005718 <HAL_GPIO_Init+0x338>
 800540c:	683b      	ldr	r3, [r7, #0]
 800540e:	685b      	ldr	r3, [r3, #4]
 8005410:	f003 0303 	and.w	r3, r3, #3
 8005414:	2b01      	cmp	r3, #1
 8005416:	d005      	beq.n	8005424 <HAL_GPIO_Init+0x44>
 8005418:	683b      	ldr	r3, [r7, #0]
 800541a:	685b      	ldr	r3, [r3, #4]
 800541c:	f003 0303 	and.w	r3, r3, #3
 8005420:	2b02      	cmp	r3, #2
 8005422:	d130      	bne.n	8005486 <HAL_GPIO_Init+0xa6>
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	689b      	ldr	r3, [r3, #8]
 8005428:	61bb      	str	r3, [r7, #24]
 800542a:	69fb      	ldr	r3, [r7, #28]
 800542c:	005b      	lsls	r3, r3, #1
 800542e:	2203      	movs	r2, #3
 8005430:	fa02 f303 	lsl.w	r3, r2, r3
 8005434:	43db      	mvns	r3, r3
 8005436:	69ba      	ldr	r2, [r7, #24]
 8005438:	4013      	ands	r3, r2
 800543a:	61bb      	str	r3, [r7, #24]
 800543c:	683b      	ldr	r3, [r7, #0]
 800543e:	68da      	ldr	r2, [r3, #12]
 8005440:	69fb      	ldr	r3, [r7, #28]
 8005442:	005b      	lsls	r3, r3, #1
 8005444:	fa02 f303 	lsl.w	r3, r2, r3
 8005448:	69ba      	ldr	r2, [r7, #24]
 800544a:	4313      	orrs	r3, r2
 800544c:	61bb      	str	r3, [r7, #24]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	69ba      	ldr	r2, [r7, #24]
 8005452:	609a      	str	r2, [r3, #8]
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	685b      	ldr	r3, [r3, #4]
 8005458:	61bb      	str	r3, [r7, #24]
 800545a:	2201      	movs	r2, #1
 800545c:	69fb      	ldr	r3, [r7, #28]
 800545e:	fa02 f303 	lsl.w	r3, r2, r3
 8005462:	43db      	mvns	r3, r3
 8005464:	69ba      	ldr	r2, [r7, #24]
 8005466:	4013      	ands	r3, r2
 8005468:	61bb      	str	r3, [r7, #24]
 800546a:	683b      	ldr	r3, [r7, #0]
 800546c:	685b      	ldr	r3, [r3, #4]
 800546e:	091b      	lsrs	r3, r3, #4
 8005470:	f003 0201 	and.w	r2, r3, #1
 8005474:	69fb      	ldr	r3, [r7, #28]
 8005476:	fa02 f303 	lsl.w	r3, r2, r3
 800547a:	69ba      	ldr	r2, [r7, #24]
 800547c:	4313      	orrs	r3, r2
 800547e:	61bb      	str	r3, [r7, #24]
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	69ba      	ldr	r2, [r7, #24]
 8005484:	605a      	str	r2, [r3, #4]
 8005486:	683b      	ldr	r3, [r7, #0]
 8005488:	685b      	ldr	r3, [r3, #4]
 800548a:	f003 0303 	and.w	r3, r3, #3
 800548e:	2b03      	cmp	r3, #3
 8005490:	d017      	beq.n	80054c2 <HAL_GPIO_Init+0xe2>
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	68db      	ldr	r3, [r3, #12]
 8005496:	61bb      	str	r3, [r7, #24]
 8005498:	69fb      	ldr	r3, [r7, #28]
 800549a:	005b      	lsls	r3, r3, #1
 800549c:	2203      	movs	r2, #3
 800549e:	fa02 f303 	lsl.w	r3, r2, r3
 80054a2:	43db      	mvns	r3, r3
 80054a4:	69ba      	ldr	r2, [r7, #24]
 80054a6:	4013      	ands	r3, r2
 80054a8:	61bb      	str	r3, [r7, #24]
 80054aa:	683b      	ldr	r3, [r7, #0]
 80054ac:	689a      	ldr	r2, [r3, #8]
 80054ae:	69fb      	ldr	r3, [r7, #28]
 80054b0:	005b      	lsls	r3, r3, #1
 80054b2:	fa02 f303 	lsl.w	r3, r2, r3
 80054b6:	69ba      	ldr	r2, [r7, #24]
 80054b8:	4313      	orrs	r3, r2
 80054ba:	61bb      	str	r3, [r7, #24]
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	69ba      	ldr	r2, [r7, #24]
 80054c0:	60da      	str	r2, [r3, #12]
 80054c2:	683b      	ldr	r3, [r7, #0]
 80054c4:	685b      	ldr	r3, [r3, #4]
 80054c6:	f003 0303 	and.w	r3, r3, #3
 80054ca:	2b02      	cmp	r3, #2
 80054cc:	d123      	bne.n	8005516 <HAL_GPIO_Init+0x136>
 80054ce:	69fb      	ldr	r3, [r7, #28]
 80054d0:	08da      	lsrs	r2, r3, #3
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	3208      	adds	r2, #8
 80054d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80054da:	61bb      	str	r3, [r7, #24]
 80054dc:	69fb      	ldr	r3, [r7, #28]
 80054de:	f003 0307 	and.w	r3, r3, #7
 80054e2:	009b      	lsls	r3, r3, #2
 80054e4:	220f      	movs	r2, #15
 80054e6:	fa02 f303 	lsl.w	r3, r2, r3
 80054ea:	43db      	mvns	r3, r3
 80054ec:	69ba      	ldr	r2, [r7, #24]
 80054ee:	4013      	ands	r3, r2
 80054f0:	61bb      	str	r3, [r7, #24]
 80054f2:	683b      	ldr	r3, [r7, #0]
 80054f4:	691a      	ldr	r2, [r3, #16]
 80054f6:	69fb      	ldr	r3, [r7, #28]
 80054f8:	f003 0307 	and.w	r3, r3, #7
 80054fc:	009b      	lsls	r3, r3, #2
 80054fe:	fa02 f303 	lsl.w	r3, r2, r3
 8005502:	69ba      	ldr	r2, [r7, #24]
 8005504:	4313      	orrs	r3, r2
 8005506:	61bb      	str	r3, [r7, #24]
 8005508:	69fb      	ldr	r3, [r7, #28]
 800550a:	08da      	lsrs	r2, r3, #3
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	3208      	adds	r2, #8
 8005510:	69b9      	ldr	r1, [r7, #24]
 8005512:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005516:	687b      	ldr	r3, [r7, #4]
 8005518:	681b      	ldr	r3, [r3, #0]
 800551a:	61bb      	str	r3, [r7, #24]
 800551c:	69fb      	ldr	r3, [r7, #28]
 800551e:	005b      	lsls	r3, r3, #1
 8005520:	2203      	movs	r2, #3
 8005522:	fa02 f303 	lsl.w	r3, r2, r3
 8005526:	43db      	mvns	r3, r3
 8005528:	69ba      	ldr	r2, [r7, #24]
 800552a:	4013      	ands	r3, r2
 800552c:	61bb      	str	r3, [r7, #24]
 800552e:	683b      	ldr	r3, [r7, #0]
 8005530:	685b      	ldr	r3, [r3, #4]
 8005532:	f003 0203 	and.w	r2, r3, #3
 8005536:	69fb      	ldr	r3, [r7, #28]
 8005538:	005b      	lsls	r3, r3, #1
 800553a:	fa02 f303 	lsl.w	r3, r2, r3
 800553e:	69ba      	ldr	r2, [r7, #24]
 8005540:	4313      	orrs	r3, r2
 8005542:	61bb      	str	r3, [r7, #24]
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	69ba      	ldr	r2, [r7, #24]
 8005548:	601a      	str	r2, [r3, #0]
 800554a:	683b      	ldr	r3, [r7, #0]
 800554c:	685b      	ldr	r3, [r3, #4]
 800554e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8005552:	2b00      	cmp	r3, #0
 8005554:	f000 80e0 	beq.w	8005718 <HAL_GPIO_Init+0x338>
 8005558:	4b2f      	ldr	r3, [pc, #188]	@ (8005618 <HAL_GPIO_Init+0x238>)
 800555a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800555e:	4a2e      	ldr	r2, [pc, #184]	@ (8005618 <HAL_GPIO_Init+0x238>)
 8005560:	f043 0302 	orr.w	r3, r3, #2
 8005564:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8005568:	4b2b      	ldr	r3, [pc, #172]	@ (8005618 <HAL_GPIO_Init+0x238>)
 800556a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 800556e:	f003 0302 	and.w	r3, r3, #2
 8005572:	60fb      	str	r3, [r7, #12]
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	4a29      	ldr	r2, [pc, #164]	@ (800561c <HAL_GPIO_Init+0x23c>)
 8005578:	69fb      	ldr	r3, [r7, #28]
 800557a:	089b      	lsrs	r3, r3, #2
 800557c:	3302      	adds	r3, #2
 800557e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005582:	61bb      	str	r3, [r7, #24]
 8005584:	69fb      	ldr	r3, [r7, #28]
 8005586:	f003 0303 	and.w	r3, r3, #3
 800558a:	009b      	lsls	r3, r3, #2
 800558c:	220f      	movs	r2, #15
 800558e:	fa02 f303 	lsl.w	r3, r2, r3
 8005592:	43db      	mvns	r3, r3
 8005594:	69ba      	ldr	r2, [r7, #24]
 8005596:	4013      	ands	r3, r2
 8005598:	61bb      	str	r3, [r7, #24]
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	4a20      	ldr	r2, [pc, #128]	@ (8005620 <HAL_GPIO_Init+0x240>)
 800559e:	4293      	cmp	r3, r2
 80055a0:	d052      	beq.n	8005648 <HAL_GPIO_Init+0x268>
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	4a1f      	ldr	r2, [pc, #124]	@ (8005624 <HAL_GPIO_Init+0x244>)
 80055a6:	4293      	cmp	r3, r2
 80055a8:	d031      	beq.n	800560e <HAL_GPIO_Init+0x22e>
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	4a1e      	ldr	r2, [pc, #120]	@ (8005628 <HAL_GPIO_Init+0x248>)
 80055ae:	4293      	cmp	r3, r2
 80055b0:	d02b      	beq.n	800560a <HAL_GPIO_Init+0x22a>
 80055b2:	687b      	ldr	r3, [r7, #4]
 80055b4:	4a1d      	ldr	r2, [pc, #116]	@ (800562c <HAL_GPIO_Init+0x24c>)
 80055b6:	4293      	cmp	r3, r2
 80055b8:	d025      	beq.n	8005606 <HAL_GPIO_Init+0x226>
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	4a1c      	ldr	r2, [pc, #112]	@ (8005630 <HAL_GPIO_Init+0x250>)
 80055be:	4293      	cmp	r3, r2
 80055c0:	d01f      	beq.n	8005602 <HAL_GPIO_Init+0x222>
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	4a1b      	ldr	r2, [pc, #108]	@ (8005634 <HAL_GPIO_Init+0x254>)
 80055c6:	4293      	cmp	r3, r2
 80055c8:	d019      	beq.n	80055fe <HAL_GPIO_Init+0x21e>
 80055ca:	687b      	ldr	r3, [r7, #4]
 80055cc:	4a1a      	ldr	r2, [pc, #104]	@ (8005638 <HAL_GPIO_Init+0x258>)
 80055ce:	4293      	cmp	r3, r2
 80055d0:	d013      	beq.n	80055fa <HAL_GPIO_Init+0x21a>
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	4a19      	ldr	r2, [pc, #100]	@ (800563c <HAL_GPIO_Init+0x25c>)
 80055d6:	4293      	cmp	r3, r2
 80055d8:	d00d      	beq.n	80055f6 <HAL_GPIO_Init+0x216>
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	4a18      	ldr	r2, [pc, #96]	@ (8005640 <HAL_GPIO_Init+0x260>)
 80055de:	4293      	cmp	r3, r2
 80055e0:	d007      	beq.n	80055f2 <HAL_GPIO_Init+0x212>
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	4a17      	ldr	r2, [pc, #92]	@ (8005644 <HAL_GPIO_Init+0x264>)
 80055e6:	4293      	cmp	r3, r2
 80055e8:	d101      	bne.n	80055ee <HAL_GPIO_Init+0x20e>
 80055ea:	2309      	movs	r3, #9
 80055ec:	e02d      	b.n	800564a <HAL_GPIO_Init+0x26a>
 80055ee:	230a      	movs	r3, #10
 80055f0:	e02b      	b.n	800564a <HAL_GPIO_Init+0x26a>
 80055f2:	2308      	movs	r3, #8
 80055f4:	e029      	b.n	800564a <HAL_GPIO_Init+0x26a>
 80055f6:	2307      	movs	r3, #7
 80055f8:	e027      	b.n	800564a <HAL_GPIO_Init+0x26a>
 80055fa:	2306      	movs	r3, #6
 80055fc:	e025      	b.n	800564a <HAL_GPIO_Init+0x26a>
 80055fe:	2305      	movs	r3, #5
 8005600:	e023      	b.n	800564a <HAL_GPIO_Init+0x26a>
 8005602:	2304      	movs	r3, #4
 8005604:	e021      	b.n	800564a <HAL_GPIO_Init+0x26a>
 8005606:	2303      	movs	r3, #3
 8005608:	e01f      	b.n	800564a <HAL_GPIO_Init+0x26a>
 800560a:	2302      	movs	r3, #2
 800560c:	e01d      	b.n	800564a <HAL_GPIO_Init+0x26a>
 800560e:	2301      	movs	r3, #1
 8005610:	e01b      	b.n	800564a <HAL_GPIO_Init+0x26a>
 8005612:	bf00      	nop
 8005614:	58000080 	.word	0x58000080
 8005618:	58024400 	.word	0x58024400
 800561c:	58000400 	.word	0x58000400
 8005620:	58020000 	.word	0x58020000
 8005624:	58020400 	.word	0x58020400
 8005628:	58020800 	.word	0x58020800
 800562c:	58020c00 	.word	0x58020c00
 8005630:	58021000 	.word	0x58021000
 8005634:	58021400 	.word	0x58021400
 8005638:	58021800 	.word	0x58021800
 800563c:	58021c00 	.word	0x58021c00
 8005640:	58022000 	.word	0x58022000
 8005644:	58022400 	.word	0x58022400
 8005648:	2300      	movs	r3, #0
 800564a:	69fa      	ldr	r2, [r7, #28]
 800564c:	f002 0203 	and.w	r2, r2, #3
 8005650:	0092      	lsls	r2, r2, #2
 8005652:	4093      	lsls	r3, r2
 8005654:	69ba      	ldr	r2, [r7, #24]
 8005656:	4313      	orrs	r3, r2
 8005658:	61bb      	str	r3, [r7, #24]
 800565a:	4938      	ldr	r1, [pc, #224]	@ (800573c <HAL_GPIO_Init+0x35c>)
 800565c:	69fb      	ldr	r3, [r7, #28]
 800565e:	089b      	lsrs	r3, r3, #2
 8005660:	3302      	adds	r3, #2
 8005662:	69ba      	ldr	r2, [r7, #24]
 8005664:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005668:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	61bb      	str	r3, [r7, #24]
 8005670:	693b      	ldr	r3, [r7, #16]
 8005672:	43db      	mvns	r3, r3
 8005674:	69ba      	ldr	r2, [r7, #24]
 8005676:	4013      	ands	r3, r2
 8005678:	61bb      	str	r3, [r7, #24]
 800567a:	683b      	ldr	r3, [r7, #0]
 800567c:	685b      	ldr	r3, [r3, #4]
 800567e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8005682:	2b00      	cmp	r3, #0
 8005684:	d003      	beq.n	800568e <HAL_GPIO_Init+0x2ae>
 8005686:	69ba      	ldr	r2, [r7, #24]
 8005688:	693b      	ldr	r3, [r7, #16]
 800568a:	4313      	orrs	r3, r2
 800568c:	61bb      	str	r3, [r7, #24]
 800568e:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8005692:	69bb      	ldr	r3, [r7, #24]
 8005694:	6013      	str	r3, [r2, #0]
 8005696:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 800569a:	685b      	ldr	r3, [r3, #4]
 800569c:	61bb      	str	r3, [r7, #24]
 800569e:	693b      	ldr	r3, [r7, #16]
 80056a0:	43db      	mvns	r3, r3
 80056a2:	69ba      	ldr	r2, [r7, #24]
 80056a4:	4013      	ands	r3, r2
 80056a6:	61bb      	str	r3, [r7, #24]
 80056a8:	683b      	ldr	r3, [r7, #0]
 80056aa:	685b      	ldr	r3, [r3, #4]
 80056ac:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	d003      	beq.n	80056bc <HAL_GPIO_Init+0x2dc>
 80056b4:	69ba      	ldr	r2, [r7, #24]
 80056b6:	693b      	ldr	r3, [r7, #16]
 80056b8:	4313      	orrs	r3, r2
 80056ba:	61bb      	str	r3, [r7, #24]
 80056bc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 80056c0:	69bb      	ldr	r3, [r7, #24]
 80056c2:	6053      	str	r3, [r2, #4]
 80056c4:	697b      	ldr	r3, [r7, #20]
 80056c6:	685b      	ldr	r3, [r3, #4]
 80056c8:	61bb      	str	r3, [r7, #24]
 80056ca:	693b      	ldr	r3, [r7, #16]
 80056cc:	43db      	mvns	r3, r3
 80056ce:	69ba      	ldr	r2, [r7, #24]
 80056d0:	4013      	ands	r3, r2
 80056d2:	61bb      	str	r3, [r7, #24]
 80056d4:	683b      	ldr	r3, [r7, #0]
 80056d6:	685b      	ldr	r3, [r3, #4]
 80056d8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80056dc:	2b00      	cmp	r3, #0
 80056de:	d003      	beq.n	80056e8 <HAL_GPIO_Init+0x308>
 80056e0:	69ba      	ldr	r2, [r7, #24]
 80056e2:	693b      	ldr	r3, [r7, #16]
 80056e4:	4313      	orrs	r3, r2
 80056e6:	61bb      	str	r3, [r7, #24]
 80056e8:	697b      	ldr	r3, [r7, #20]
 80056ea:	69ba      	ldr	r2, [r7, #24]
 80056ec:	605a      	str	r2, [r3, #4]
 80056ee:	697b      	ldr	r3, [r7, #20]
 80056f0:	681b      	ldr	r3, [r3, #0]
 80056f2:	61bb      	str	r3, [r7, #24]
 80056f4:	693b      	ldr	r3, [r7, #16]
 80056f6:	43db      	mvns	r3, r3
 80056f8:	69ba      	ldr	r2, [r7, #24]
 80056fa:	4013      	ands	r3, r2
 80056fc:	61bb      	str	r3, [r7, #24]
 80056fe:	683b      	ldr	r3, [r7, #0]
 8005700:	685b      	ldr	r3, [r3, #4]
 8005702:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005706:	2b00      	cmp	r3, #0
 8005708:	d003      	beq.n	8005712 <HAL_GPIO_Init+0x332>
 800570a:	69ba      	ldr	r2, [r7, #24]
 800570c:	693b      	ldr	r3, [r7, #16]
 800570e:	4313      	orrs	r3, r2
 8005710:	61bb      	str	r3, [r7, #24]
 8005712:	697b      	ldr	r3, [r7, #20]
 8005714:	69ba      	ldr	r2, [r7, #24]
 8005716:	601a      	str	r2, [r3, #0]
 8005718:	69fb      	ldr	r3, [r7, #28]
 800571a:	3301      	adds	r3, #1
 800571c:	61fb      	str	r3, [r7, #28]
 800571e:	683b      	ldr	r3, [r7, #0]
 8005720:	681a      	ldr	r2, [r3, #0]
 8005722:	69fb      	ldr	r3, [r7, #28]
 8005724:	fa22 f303 	lsr.w	r3, r2, r3
 8005728:	2b00      	cmp	r3, #0
 800572a:	f47f ae63 	bne.w	80053f4 <HAL_GPIO_Init+0x14>
 800572e:	bf00      	nop
 8005730:	bf00      	nop
 8005732:	3724      	adds	r7, #36	@ 0x24
 8005734:	46bd      	mov	sp, r7
 8005736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800573a:	4770      	bx	lr
 800573c:	58000400 	.word	0x58000400

08005740 <HAL_GPIO_ReadPin>:
 8005740:	b480      	push	{r7}
 8005742:	b085      	sub	sp, #20
 8005744:	af00      	add	r7, sp, #0
 8005746:	6078      	str	r0, [r7, #4]
 8005748:	460b      	mov	r3, r1
 800574a:	807b      	strh	r3, [r7, #2]
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	691a      	ldr	r2, [r3, #16]
 8005750:	887b      	ldrh	r3, [r7, #2]
 8005752:	4013      	ands	r3, r2
 8005754:	2b00      	cmp	r3, #0
 8005756:	d002      	beq.n	800575e <HAL_GPIO_ReadPin+0x1e>
 8005758:	2301      	movs	r3, #1
 800575a:	73fb      	strb	r3, [r7, #15]
 800575c:	e001      	b.n	8005762 <HAL_GPIO_ReadPin+0x22>
 800575e:	2300      	movs	r3, #0
 8005760:	73fb      	strb	r3, [r7, #15]
 8005762:	7bfb      	ldrb	r3, [r7, #15]
 8005764:	4618      	mov	r0, r3
 8005766:	3714      	adds	r7, #20
 8005768:	46bd      	mov	sp, r7
 800576a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800576e:	4770      	bx	lr

08005770 <HAL_GPIO_WritePin>:
 8005770:	b480      	push	{r7}
 8005772:	b083      	sub	sp, #12
 8005774:	af00      	add	r7, sp, #0
 8005776:	6078      	str	r0, [r7, #4]
 8005778:	460b      	mov	r3, r1
 800577a:	807b      	strh	r3, [r7, #2]
 800577c:	4613      	mov	r3, r2
 800577e:	707b      	strb	r3, [r7, #1]
 8005780:	787b      	ldrb	r3, [r7, #1]
 8005782:	2b00      	cmp	r3, #0
 8005784:	d003      	beq.n	800578e <HAL_GPIO_WritePin+0x1e>
 8005786:	887a      	ldrh	r2, [r7, #2]
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	619a      	str	r2, [r3, #24]
 800578c:	e003      	b.n	8005796 <HAL_GPIO_WritePin+0x26>
 800578e:	887b      	ldrh	r3, [r7, #2]
 8005790:	041a      	lsls	r2, r3, #16
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	619a      	str	r2, [r3, #24]
 8005796:	bf00      	nop
 8005798:	370c      	adds	r7, #12
 800579a:	46bd      	mov	sp, r7
 800579c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057a0:	4770      	bx	lr

080057a2 <HAL_PCD_Init>:
 80057a2:	b580      	push	{r7, lr}
 80057a4:	b086      	sub	sp, #24
 80057a6:	af02      	add	r7, sp, #8
 80057a8:	6078      	str	r0, [r7, #4]
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	2b00      	cmp	r3, #0
 80057ae:	d101      	bne.n	80057b4 <HAL_PCD_Init+0x12>
 80057b0:	2301      	movs	r3, #1
 80057b2:	e0fe      	b.n	80059b2 <HAL_PCD_Init+0x210>
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	f893 3495 	ldrb.w	r3, [r3, #1173]	@ 0x495
 80057ba:	b2db      	uxtb	r3, r3
 80057bc:	2b00      	cmp	r3, #0
 80057be:	d106      	bne.n	80057ce <HAL_PCD_Init+0x2c>
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	2200      	movs	r2, #0
 80057c4:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80057c8:	6878      	ldr	r0, [r7, #4]
 80057ca:	f00a fcf3 	bl	80101b4 <HAL_PCD_MspInit>
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	2203      	movs	r2, #3
 80057d2:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	4618      	mov	r0, r3
 80057dc:	f007 f8b7 	bl	800c94e <USB_DisableGlobalInt>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	6818      	ldr	r0, [r3, #0]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	7c1a      	ldrb	r2, [r3, #16]
 80057e8:	f88d 2000 	strb.w	r2, [sp]
 80057ec:	3304      	adds	r3, #4
 80057ee:	cb0e      	ldmia	r3, {r1, r2, r3}
 80057f0:	f006 ff88 	bl	800c704 <USB_CoreInit>
 80057f4:	4603      	mov	r3, r0
 80057f6:	2b00      	cmp	r3, #0
 80057f8:	d005      	beq.n	8005806 <HAL_PCD_Init+0x64>
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	2202      	movs	r2, #2
 80057fe:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8005802:	2301      	movs	r3, #1
 8005804:	e0d5      	b.n	80059b2 <HAL_PCD_Init+0x210>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	2100      	movs	r1, #0
 800580c:	4618      	mov	r0, r3
 800580e:	f007 f8af 	bl	800c970 <USB_SetCurrentMode>
 8005812:	4603      	mov	r3, r0
 8005814:	2b00      	cmp	r3, #0
 8005816:	d005      	beq.n	8005824 <HAL_PCD_Init+0x82>
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	2202      	movs	r2, #2
 800581c:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8005820:	2301      	movs	r3, #1
 8005822:	e0c6      	b.n	80059b2 <HAL_PCD_Init+0x210>
 8005824:	2300      	movs	r3, #0
 8005826:	73fb      	strb	r3, [r7, #15]
 8005828:	e04a      	b.n	80058c0 <HAL_PCD_Init+0x11e>
 800582a:	7bfa      	ldrb	r2, [r7, #15]
 800582c:	6879      	ldr	r1, [r7, #4]
 800582e:	4613      	mov	r3, r2
 8005830:	00db      	lsls	r3, r3, #3
 8005832:	4413      	add	r3, r2
 8005834:	009b      	lsls	r3, r3, #2
 8005836:	440b      	add	r3, r1
 8005838:	3315      	adds	r3, #21
 800583a:	2201      	movs	r2, #1
 800583c:	701a      	strb	r2, [r3, #0]
 800583e:	7bfa      	ldrb	r2, [r7, #15]
 8005840:	6879      	ldr	r1, [r7, #4]
 8005842:	4613      	mov	r3, r2
 8005844:	00db      	lsls	r3, r3, #3
 8005846:	4413      	add	r3, r2
 8005848:	009b      	lsls	r3, r3, #2
 800584a:	440b      	add	r3, r1
 800584c:	3314      	adds	r3, #20
 800584e:	7bfa      	ldrb	r2, [r7, #15]
 8005850:	701a      	strb	r2, [r3, #0]
 8005852:	7bfa      	ldrb	r2, [r7, #15]
 8005854:	7bfb      	ldrb	r3, [r7, #15]
 8005856:	b298      	uxth	r0, r3
 8005858:	6879      	ldr	r1, [r7, #4]
 800585a:	4613      	mov	r3, r2
 800585c:	00db      	lsls	r3, r3, #3
 800585e:	4413      	add	r3, r2
 8005860:	009b      	lsls	r3, r3, #2
 8005862:	440b      	add	r3, r1
 8005864:	332e      	adds	r3, #46	@ 0x2e
 8005866:	4602      	mov	r2, r0
 8005868:	801a      	strh	r2, [r3, #0]
 800586a:	7bfa      	ldrb	r2, [r7, #15]
 800586c:	6879      	ldr	r1, [r7, #4]
 800586e:	4613      	mov	r3, r2
 8005870:	00db      	lsls	r3, r3, #3
 8005872:	4413      	add	r3, r2
 8005874:	009b      	lsls	r3, r3, #2
 8005876:	440b      	add	r3, r1
 8005878:	3318      	adds	r3, #24
 800587a:	2200      	movs	r2, #0
 800587c:	701a      	strb	r2, [r3, #0]
 800587e:	7bfa      	ldrb	r2, [r7, #15]
 8005880:	6879      	ldr	r1, [r7, #4]
 8005882:	4613      	mov	r3, r2
 8005884:	00db      	lsls	r3, r3, #3
 8005886:	4413      	add	r3, r2
 8005888:	009b      	lsls	r3, r3, #2
 800588a:	440b      	add	r3, r1
 800588c:	331c      	adds	r3, #28
 800588e:	2200      	movs	r2, #0
 8005890:	601a      	str	r2, [r3, #0]
 8005892:	7bfa      	ldrb	r2, [r7, #15]
 8005894:	6879      	ldr	r1, [r7, #4]
 8005896:	4613      	mov	r3, r2
 8005898:	00db      	lsls	r3, r3, #3
 800589a:	4413      	add	r3, r2
 800589c:	009b      	lsls	r3, r3, #2
 800589e:	440b      	add	r3, r1
 80058a0:	3320      	adds	r3, #32
 80058a2:	2200      	movs	r2, #0
 80058a4:	601a      	str	r2, [r3, #0]
 80058a6:	7bfa      	ldrb	r2, [r7, #15]
 80058a8:	6879      	ldr	r1, [r7, #4]
 80058aa:	4613      	mov	r3, r2
 80058ac:	00db      	lsls	r3, r3, #3
 80058ae:	4413      	add	r3, r2
 80058b0:	009b      	lsls	r3, r3, #2
 80058b2:	440b      	add	r3, r1
 80058b4:	3324      	adds	r3, #36	@ 0x24
 80058b6:	2200      	movs	r2, #0
 80058b8:	601a      	str	r2, [r3, #0]
 80058ba:	7bfb      	ldrb	r3, [r7, #15]
 80058bc:	3301      	adds	r3, #1
 80058be:	73fb      	strb	r3, [r7, #15]
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	791b      	ldrb	r3, [r3, #4]
 80058c4:	7bfa      	ldrb	r2, [r7, #15]
 80058c6:	429a      	cmp	r2, r3
 80058c8:	d3af      	bcc.n	800582a <HAL_PCD_Init+0x88>
 80058ca:	2300      	movs	r3, #0
 80058cc:	73fb      	strb	r3, [r7, #15]
 80058ce:	e044      	b.n	800595a <HAL_PCD_Init+0x1b8>
 80058d0:	7bfa      	ldrb	r2, [r7, #15]
 80058d2:	6879      	ldr	r1, [r7, #4]
 80058d4:	4613      	mov	r3, r2
 80058d6:	00db      	lsls	r3, r3, #3
 80058d8:	4413      	add	r3, r2
 80058da:	009b      	lsls	r3, r3, #2
 80058dc:	440b      	add	r3, r1
 80058de:	f203 2355 	addw	r3, r3, #597	@ 0x255
 80058e2:	2200      	movs	r2, #0
 80058e4:	701a      	strb	r2, [r3, #0]
 80058e6:	7bfa      	ldrb	r2, [r7, #15]
 80058e8:	6879      	ldr	r1, [r7, #4]
 80058ea:	4613      	mov	r3, r2
 80058ec:	00db      	lsls	r3, r3, #3
 80058ee:	4413      	add	r3, r2
 80058f0:	009b      	lsls	r3, r3, #2
 80058f2:	440b      	add	r3, r1
 80058f4:	f503 7315 	add.w	r3, r3, #596	@ 0x254
 80058f8:	7bfa      	ldrb	r2, [r7, #15]
 80058fa:	701a      	strb	r2, [r3, #0]
 80058fc:	7bfa      	ldrb	r2, [r7, #15]
 80058fe:	6879      	ldr	r1, [r7, #4]
 8005900:	4613      	mov	r3, r2
 8005902:	00db      	lsls	r3, r3, #3
 8005904:	4413      	add	r3, r2
 8005906:	009b      	lsls	r3, r3, #2
 8005908:	440b      	add	r3, r1
 800590a:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 800590e:	2200      	movs	r2, #0
 8005910:	701a      	strb	r2, [r3, #0]
 8005912:	7bfa      	ldrb	r2, [r7, #15]
 8005914:	6879      	ldr	r1, [r7, #4]
 8005916:	4613      	mov	r3, r2
 8005918:	00db      	lsls	r3, r3, #3
 800591a:	4413      	add	r3, r2
 800591c:	009b      	lsls	r3, r3, #2
 800591e:	440b      	add	r3, r1
 8005920:	f503 7317 	add.w	r3, r3, #604	@ 0x25c
 8005924:	2200      	movs	r2, #0
 8005926:	601a      	str	r2, [r3, #0]
 8005928:	7bfa      	ldrb	r2, [r7, #15]
 800592a:	6879      	ldr	r1, [r7, #4]
 800592c:	4613      	mov	r3, r2
 800592e:	00db      	lsls	r3, r3, #3
 8005930:	4413      	add	r3, r2
 8005932:	009b      	lsls	r3, r3, #2
 8005934:	440b      	add	r3, r1
 8005936:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 800593a:	2200      	movs	r2, #0
 800593c:	601a      	str	r2, [r3, #0]
 800593e:	7bfa      	ldrb	r2, [r7, #15]
 8005940:	6879      	ldr	r1, [r7, #4]
 8005942:	4613      	mov	r3, r2
 8005944:	00db      	lsls	r3, r3, #3
 8005946:	4413      	add	r3, r2
 8005948:	009b      	lsls	r3, r3, #2
 800594a:	440b      	add	r3, r1
 800594c:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 8005950:	2200      	movs	r2, #0
 8005952:	601a      	str	r2, [r3, #0]
 8005954:	7bfb      	ldrb	r3, [r7, #15]
 8005956:	3301      	adds	r3, #1
 8005958:	73fb      	strb	r3, [r7, #15]
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	791b      	ldrb	r3, [r3, #4]
 800595e:	7bfa      	ldrb	r2, [r7, #15]
 8005960:	429a      	cmp	r2, r3
 8005962:	d3b5      	bcc.n	80058d0 <HAL_PCD_Init+0x12e>
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	6818      	ldr	r0, [r3, #0]
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	7c1a      	ldrb	r2, [r3, #16]
 800596c:	f88d 2000 	strb.w	r2, [sp]
 8005970:	3304      	adds	r3, #4
 8005972:	cb0e      	ldmia	r3, {r1, r2, r3}
 8005974:	f007 f848 	bl	800ca08 <USB_DevInit>
 8005978:	4603      	mov	r3, r0
 800597a:	2b00      	cmp	r3, #0
 800597c:	d005      	beq.n	800598a <HAL_PCD_Init+0x1e8>
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	2202      	movs	r2, #2
 8005982:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8005986:	2301      	movs	r3, #1
 8005988:	e013      	b.n	80059b2 <HAL_PCD_Init+0x210>
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	2200      	movs	r2, #0
 800598e:	745a      	strb	r2, [r3, #17]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	2201      	movs	r2, #1
 8005994:	f883 2495 	strb.w	r2, [r3, #1173]	@ 0x495
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	7b1b      	ldrb	r3, [r3, #12]
 800599c:	2b01      	cmp	r3, #1
 800599e:	d102      	bne.n	80059a6 <HAL_PCD_Init+0x204>
 80059a0:	6878      	ldr	r0, [r7, #4]
 80059a2:	f001 f96d 	bl	8006c80 <HAL_PCDEx_ActivateLPM>
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	4618      	mov	r0, r3
 80059ac:	f008 f887 	bl	800dabe <USB_DevDisconnect>
 80059b0:	2300      	movs	r3, #0
 80059b2:	4618      	mov	r0, r3
 80059b4:	3710      	adds	r7, #16
 80059b6:	46bd      	mov	sp, r7
 80059b8:	bd80      	pop	{r7, pc}

080059ba <HAL_PCD_Start>:
 80059ba:	b580      	push	{r7, lr}
 80059bc:	b084      	sub	sp, #16
 80059be:	af00      	add	r7, sp, #0
 80059c0:	6078      	str	r0, [r7, #4]
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	60fb      	str	r3, [r7, #12]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80059ce:	2b01      	cmp	r3, #1
 80059d0:	d101      	bne.n	80059d6 <HAL_PCD_Start+0x1c>
 80059d2:	2302      	movs	r3, #2
 80059d4:	e022      	b.n	8005a1c <HAL_PCD_Start+0x62>
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	2201      	movs	r2, #1
 80059da:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80059de:	68fb      	ldr	r3, [r7, #12]
 80059e0:	68db      	ldr	r3, [r3, #12]
 80059e2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d009      	beq.n	80059fe <HAL_PCD_Start+0x44>
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	7b5b      	ldrb	r3, [r3, #13]
 80059ee:	2b01      	cmp	r3, #1
 80059f0:	d105      	bne.n	80059fe <HAL_PCD_Start+0x44>
 80059f2:	68fb      	ldr	r3, [r7, #12]
 80059f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80059f6:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80059fa:	68fb      	ldr	r3, [r7, #12]
 80059fc:	639a      	str	r2, [r3, #56]	@ 0x38
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	681b      	ldr	r3, [r3, #0]
 8005a02:	4618      	mov	r0, r3
 8005a04:	f006 ff92 	bl	800c92c <USB_EnableGlobalInt>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	4618      	mov	r0, r3
 8005a0e:	f008 f835 	bl	800da7c <USB_DevConnect>
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	2200      	movs	r2, #0
 8005a16:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8005a1a:	2300      	movs	r3, #0
 8005a1c:	4618      	mov	r0, r3
 8005a1e:	3710      	adds	r7, #16
 8005a20:	46bd      	mov	sp, r7
 8005a22:	bd80      	pop	{r7, pc}

08005a24 <HAL_PCD_IRQHandler>:
 8005a24:	b590      	push	{r4, r7, lr}
 8005a26:	b08d      	sub	sp, #52	@ 0x34
 8005a28:	af00      	add	r7, sp, #0
 8005a2a:	6078      	str	r0, [r7, #4]
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	623b      	str	r3, [r7, #32]
 8005a32:	6a3b      	ldr	r3, [r7, #32]
 8005a34:	61fb      	str	r3, [r7, #28]
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	681b      	ldr	r3, [r3, #0]
 8005a3a:	4618      	mov	r0, r3
 8005a3c:	f008 f8f3 	bl	800dc26 <USB_GetMode>
 8005a40:	4603      	mov	r3, r0
 8005a42:	2b00      	cmp	r3, #0
 8005a44:	f040 84b9 	bne.w	80063ba <HAL_PCD_IRQHandler+0x996>
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	681b      	ldr	r3, [r3, #0]
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	f008 f857 	bl	800db00 <USB_ReadInterrupts>
 8005a52:	4603      	mov	r3, r0
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	f000 84af 	beq.w	80063b8 <HAL_PCD_IRQHandler+0x994>
 8005a5a:	69fb      	ldr	r3, [r7, #28]
 8005a5c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005a60:	689b      	ldr	r3, [r3, #8]
 8005a62:	0a1b      	lsrs	r3, r3, #8
 8005a64:	f3c3 020d 	ubfx	r2, r3, #0, #14
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	f8c3 24d4 	str.w	r2, [r3, #1236]	@ 0x4d4
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	4618      	mov	r0, r3
 8005a74:	f008 f844 	bl	800db00 <USB_ReadInterrupts>
 8005a78:	4603      	mov	r3, r0
 8005a7a:	f003 0302 	and.w	r3, r3, #2
 8005a7e:	2b02      	cmp	r3, #2
 8005a80:	d107      	bne.n	8005a92 <HAL_PCD_IRQHandler+0x6e>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	695a      	ldr	r2, [r3, #20]
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	f002 0202 	and.w	r2, r2, #2
 8005a90:	615a      	str	r2, [r3, #20]
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	4618      	mov	r0, r3
 8005a98:	f008 f832 	bl	800db00 <USB_ReadInterrupts>
 8005a9c:	4603      	mov	r3, r0
 8005a9e:	f003 0310 	and.w	r3, r3, #16
 8005aa2:	2b10      	cmp	r3, #16
 8005aa4:	d161      	bne.n	8005b6a <HAL_PCD_IRQHandler+0x146>
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	699a      	ldr	r2, [r3, #24]
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	f022 0210 	bic.w	r2, r2, #16
 8005ab4:	619a      	str	r2, [r3, #24]
 8005ab6:	6a3b      	ldr	r3, [r7, #32]
 8005ab8:	6a1b      	ldr	r3, [r3, #32]
 8005aba:	61bb      	str	r3, [r7, #24]
 8005abc:	69bb      	ldr	r3, [r7, #24]
 8005abe:	f003 020f 	and.w	r2, r3, #15
 8005ac2:	4613      	mov	r3, r2
 8005ac4:	00db      	lsls	r3, r3, #3
 8005ac6:	4413      	add	r3, r2
 8005ac8:	009b      	lsls	r3, r3, #2
 8005aca:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8005ace:	687a      	ldr	r2, [r7, #4]
 8005ad0:	4413      	add	r3, r2
 8005ad2:	3304      	adds	r3, #4
 8005ad4:	617b      	str	r3, [r7, #20]
 8005ad6:	69bb      	ldr	r3, [r7, #24]
 8005ad8:	0c5b      	lsrs	r3, r3, #17
 8005ada:	f003 030f 	and.w	r3, r3, #15
 8005ade:	2b02      	cmp	r3, #2
 8005ae0:	d124      	bne.n	8005b2c <HAL_PCD_IRQHandler+0x108>
 8005ae2:	69ba      	ldr	r2, [r7, #24]
 8005ae4:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8005ae8:	4013      	ands	r3, r2
 8005aea:	2b00      	cmp	r3, #0
 8005aec:	d035      	beq.n	8005b5a <HAL_PCD_IRQHandler+0x136>
 8005aee:	697b      	ldr	r3, [r7, #20]
 8005af0:	68d9      	ldr	r1, [r3, #12]
 8005af2:	69bb      	ldr	r3, [r7, #24]
 8005af4:	091b      	lsrs	r3, r3, #4
 8005af6:	b29b      	uxth	r3, r3
 8005af8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005afc:	b29b      	uxth	r3, r3
 8005afe:	461a      	mov	r2, r3
 8005b00:	6a38      	ldr	r0, [r7, #32]
 8005b02:	f007 fe69 	bl	800d7d8 <USB_ReadPacket>
 8005b06:	697b      	ldr	r3, [r7, #20]
 8005b08:	68da      	ldr	r2, [r3, #12]
 8005b0a:	69bb      	ldr	r3, [r7, #24]
 8005b0c:	091b      	lsrs	r3, r3, #4
 8005b0e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005b12:	441a      	add	r2, r3
 8005b14:	697b      	ldr	r3, [r7, #20]
 8005b16:	60da      	str	r2, [r3, #12]
 8005b18:	697b      	ldr	r3, [r7, #20]
 8005b1a:	695a      	ldr	r2, [r3, #20]
 8005b1c:	69bb      	ldr	r3, [r7, #24]
 8005b1e:	091b      	lsrs	r3, r3, #4
 8005b20:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005b24:	441a      	add	r2, r3
 8005b26:	697b      	ldr	r3, [r7, #20]
 8005b28:	615a      	str	r2, [r3, #20]
 8005b2a:	e016      	b.n	8005b5a <HAL_PCD_IRQHandler+0x136>
 8005b2c:	69bb      	ldr	r3, [r7, #24]
 8005b2e:	0c5b      	lsrs	r3, r3, #17
 8005b30:	f003 030f 	and.w	r3, r3, #15
 8005b34:	2b06      	cmp	r3, #6
 8005b36:	d110      	bne.n	8005b5a <HAL_PCD_IRQHandler+0x136>
 8005b38:	687b      	ldr	r3, [r7, #4]
 8005b3a:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8005b3e:	2208      	movs	r2, #8
 8005b40:	4619      	mov	r1, r3
 8005b42:	6a38      	ldr	r0, [r7, #32]
 8005b44:	f007 fe48 	bl	800d7d8 <USB_ReadPacket>
 8005b48:	697b      	ldr	r3, [r7, #20]
 8005b4a:	695a      	ldr	r2, [r3, #20]
 8005b4c:	69bb      	ldr	r3, [r7, #24]
 8005b4e:	091b      	lsrs	r3, r3, #4
 8005b50:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005b54:	441a      	add	r2, r3
 8005b56:	697b      	ldr	r3, [r7, #20]
 8005b58:	615a      	str	r2, [r3, #20]
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	681b      	ldr	r3, [r3, #0]
 8005b5e:	699a      	ldr	r2, [r3, #24]
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	f042 0210 	orr.w	r2, r2, #16
 8005b68:	619a      	str	r2, [r3, #24]
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	681b      	ldr	r3, [r3, #0]
 8005b6e:	4618      	mov	r0, r3
 8005b70:	f007 ffc6 	bl	800db00 <USB_ReadInterrupts>
 8005b74:	4603      	mov	r3, r0
 8005b76:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8005b7a:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8005b7e:	f040 80a7 	bne.w	8005cd0 <HAL_PCD_IRQHandler+0x2ac>
 8005b82:	2300      	movs	r3, #0
 8005b84:	627b      	str	r3, [r7, #36]	@ 0x24
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	4618      	mov	r0, r3
 8005b8c:	f007 ffcb 	bl	800db26 <USB_ReadDevAllOutEpInterrupt>
 8005b90:	62b8      	str	r0, [r7, #40]	@ 0x28
 8005b92:	e099      	b.n	8005cc8 <HAL_PCD_IRQHandler+0x2a4>
 8005b94:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005b96:	f003 0301 	and.w	r3, r3, #1
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	f000 808e 	beq.w	8005cbc <HAL_PCD_IRQHandler+0x298>
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005ba6:	b2d2      	uxtb	r2, r2
 8005ba8:	4611      	mov	r1, r2
 8005baa:	4618      	mov	r0, r3
 8005bac:	f007 ffef 	bl	800db8e <USB_ReadDevOutEPInterrupt>
 8005bb0:	6138      	str	r0, [r7, #16]
 8005bb2:	693b      	ldr	r3, [r7, #16]
 8005bb4:	f003 0301 	and.w	r3, r3, #1
 8005bb8:	2b00      	cmp	r3, #0
 8005bba:	d00c      	beq.n	8005bd6 <HAL_PCD_IRQHandler+0x1b2>
 8005bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005bbe:	015a      	lsls	r2, r3, #5
 8005bc0:	69fb      	ldr	r3, [r7, #28]
 8005bc2:	4413      	add	r3, r2
 8005bc4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005bc8:	461a      	mov	r2, r3
 8005bca:	2301      	movs	r3, #1
 8005bcc:	6093      	str	r3, [r2, #8]
 8005bce:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8005bd0:	6878      	ldr	r0, [r7, #4]
 8005bd2:	f000 fecf 	bl	8006974 <PCD_EP_OutXfrComplete_int>
 8005bd6:	693b      	ldr	r3, [r7, #16]
 8005bd8:	f003 0308 	and.w	r3, r3, #8
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d00c      	beq.n	8005bfa <HAL_PCD_IRQHandler+0x1d6>
 8005be0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005be2:	015a      	lsls	r2, r3, #5
 8005be4:	69fb      	ldr	r3, [r7, #28]
 8005be6:	4413      	add	r3, r2
 8005be8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005bec:	461a      	mov	r2, r3
 8005bee:	2308      	movs	r3, #8
 8005bf0:	6093      	str	r3, [r2, #8]
 8005bf2:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8005bf4:	6878      	ldr	r0, [r7, #4]
 8005bf6:	f000 ffa5 	bl	8006b44 <PCD_EP_OutSetupPacket_int>
 8005bfa:	693b      	ldr	r3, [r7, #16]
 8005bfc:	f003 0310 	and.w	r3, r3, #16
 8005c00:	2b00      	cmp	r3, #0
 8005c02:	d008      	beq.n	8005c16 <HAL_PCD_IRQHandler+0x1f2>
 8005c04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c06:	015a      	lsls	r2, r3, #5
 8005c08:	69fb      	ldr	r3, [r7, #28]
 8005c0a:	4413      	add	r3, r2
 8005c0c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005c10:	461a      	mov	r2, r3
 8005c12:	2310      	movs	r3, #16
 8005c14:	6093      	str	r3, [r2, #8]
 8005c16:	693b      	ldr	r3, [r7, #16]
 8005c18:	f003 0302 	and.w	r3, r3, #2
 8005c1c:	2b00      	cmp	r3, #0
 8005c1e:	d030      	beq.n	8005c82 <HAL_PCD_IRQHandler+0x25e>
 8005c20:	6a3b      	ldr	r3, [r7, #32]
 8005c22:	695b      	ldr	r3, [r3, #20]
 8005c24:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005c28:	2b80      	cmp	r3, #128	@ 0x80
 8005c2a:	d109      	bne.n	8005c40 <HAL_PCD_IRQHandler+0x21c>
 8005c2c:	69fb      	ldr	r3, [r7, #28]
 8005c2e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005c32:	685b      	ldr	r3, [r3, #4]
 8005c34:	69fa      	ldr	r2, [r7, #28]
 8005c36:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8005c3a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8005c3e:	6053      	str	r3, [r2, #4]
 8005c40:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005c42:	4613      	mov	r3, r2
 8005c44:	00db      	lsls	r3, r3, #3
 8005c46:	4413      	add	r3, r2
 8005c48:	009b      	lsls	r3, r3, #2
 8005c4a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8005c4e:	687a      	ldr	r2, [r7, #4]
 8005c50:	4413      	add	r3, r2
 8005c52:	3304      	adds	r3, #4
 8005c54:	617b      	str	r3, [r7, #20]
 8005c56:	697b      	ldr	r3, [r7, #20]
 8005c58:	78db      	ldrb	r3, [r3, #3]
 8005c5a:	2b01      	cmp	r3, #1
 8005c5c:	d108      	bne.n	8005c70 <HAL_PCD_IRQHandler+0x24c>
 8005c5e:	697b      	ldr	r3, [r7, #20]
 8005c60:	2200      	movs	r2, #0
 8005c62:	70da      	strb	r2, [r3, #3]
 8005c64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c66:	b2db      	uxtb	r3, r3
 8005c68:	4619      	mov	r1, r3
 8005c6a:	6878      	ldr	r0, [r7, #4]
 8005c6c:	f00a fbc8 	bl	8010400 <HAL_PCD_ISOOUTIncompleteCallback>
 8005c70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c72:	015a      	lsls	r2, r3, #5
 8005c74:	69fb      	ldr	r3, [r7, #28]
 8005c76:	4413      	add	r3, r2
 8005c78:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005c7c:	461a      	mov	r2, r3
 8005c7e:	2302      	movs	r3, #2
 8005c80:	6093      	str	r3, [r2, #8]
 8005c82:	693b      	ldr	r3, [r7, #16]
 8005c84:	f003 0320 	and.w	r3, r3, #32
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d008      	beq.n	8005c9e <HAL_PCD_IRQHandler+0x27a>
 8005c8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005c8e:	015a      	lsls	r2, r3, #5
 8005c90:	69fb      	ldr	r3, [r7, #28]
 8005c92:	4413      	add	r3, r2
 8005c94:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005c98:	461a      	mov	r2, r3
 8005c9a:	2320      	movs	r3, #32
 8005c9c:	6093      	str	r3, [r2, #8]
 8005c9e:	693b      	ldr	r3, [r7, #16]
 8005ca0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8005ca4:	2b00      	cmp	r3, #0
 8005ca6:	d009      	beq.n	8005cbc <HAL_PCD_IRQHandler+0x298>
 8005ca8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005caa:	015a      	lsls	r2, r3, #5
 8005cac:	69fb      	ldr	r3, [r7, #28]
 8005cae:	4413      	add	r3, r2
 8005cb0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8005cb4:	461a      	mov	r2, r3
 8005cb6:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8005cba:	6093      	str	r3, [r2, #8]
 8005cbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005cbe:	3301      	adds	r3, #1
 8005cc0:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005cc4:	085b      	lsrs	r3, r3, #1
 8005cc6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005cc8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	f47f af62 	bne.w	8005b94 <HAL_PCD_IRQHandler+0x170>
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	f007 ff13 	bl	800db00 <USB_ReadInterrupts>
 8005cda:	4603      	mov	r3, r0
 8005cdc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005ce0:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005ce4:	f040 80db 	bne.w	8005e9e <HAL_PCD_IRQHandler+0x47a>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	4618      	mov	r0, r3
 8005cee:	f007 ff34 	bl	800db5a <USB_ReadDevAllInEpInterrupt>
 8005cf2:	62b8      	str	r0, [r7, #40]	@ 0x28
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	627b      	str	r3, [r7, #36]	@ 0x24
 8005cf8:	e0cd      	b.n	8005e96 <HAL_PCD_IRQHandler+0x472>
 8005cfa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005cfc:	f003 0301 	and.w	r3, r3, #1
 8005d00:	2b00      	cmp	r3, #0
 8005d02:	f000 80c2 	beq.w	8005e8a <HAL_PCD_IRQHandler+0x466>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005d0c:	b2d2      	uxtb	r2, r2
 8005d0e:	4611      	mov	r1, r2
 8005d10:	4618      	mov	r0, r3
 8005d12:	f007 ff5a 	bl	800dbca <USB_ReadDevInEPInterrupt>
 8005d16:	6138      	str	r0, [r7, #16]
 8005d18:	693b      	ldr	r3, [r7, #16]
 8005d1a:	f003 0301 	and.w	r3, r3, #1
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d057      	beq.n	8005dd2 <HAL_PCD_IRQHandler+0x3ae>
 8005d22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005d24:	f003 030f 	and.w	r3, r3, #15
 8005d28:	2201      	movs	r2, #1
 8005d2a:	fa02 f303 	lsl.w	r3, r2, r3
 8005d2e:	60fb      	str	r3, [r7, #12]
 8005d30:	69fb      	ldr	r3, [r7, #28]
 8005d32:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005d36:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	43db      	mvns	r3, r3
 8005d3c:	69f9      	ldr	r1, [r7, #28]
 8005d3e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8005d42:	4013      	ands	r3, r2
 8005d44:	634b      	str	r3, [r1, #52]	@ 0x34
 8005d46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005d48:	015a      	lsls	r2, r3, #5
 8005d4a:	69fb      	ldr	r3, [r7, #28]
 8005d4c:	4413      	add	r3, r2
 8005d4e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005d52:	461a      	mov	r2, r3
 8005d54:	2301      	movs	r3, #1
 8005d56:	6093      	str	r3, [r2, #8]
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	799b      	ldrb	r3, [r3, #6]
 8005d5c:	2b01      	cmp	r3, #1
 8005d5e:	d132      	bne.n	8005dc6 <HAL_PCD_IRQHandler+0x3a2>
 8005d60:	6879      	ldr	r1, [r7, #4]
 8005d62:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005d64:	4613      	mov	r3, r2
 8005d66:	00db      	lsls	r3, r3, #3
 8005d68:	4413      	add	r3, r2
 8005d6a:	009b      	lsls	r3, r3, #2
 8005d6c:	440b      	add	r3, r1
 8005d6e:	3320      	adds	r3, #32
 8005d70:	6819      	ldr	r1, [r3, #0]
 8005d72:	6878      	ldr	r0, [r7, #4]
 8005d74:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005d76:	4613      	mov	r3, r2
 8005d78:	00db      	lsls	r3, r3, #3
 8005d7a:	4413      	add	r3, r2
 8005d7c:	009b      	lsls	r3, r3, #2
 8005d7e:	4403      	add	r3, r0
 8005d80:	331c      	adds	r3, #28
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	4419      	add	r1, r3
 8005d86:	6878      	ldr	r0, [r7, #4]
 8005d88:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005d8a:	4613      	mov	r3, r2
 8005d8c:	00db      	lsls	r3, r3, #3
 8005d8e:	4413      	add	r3, r2
 8005d90:	009b      	lsls	r3, r3, #2
 8005d92:	4403      	add	r3, r0
 8005d94:	3320      	adds	r3, #32
 8005d96:	6019      	str	r1, [r3, #0]
 8005d98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d113      	bne.n	8005dc6 <HAL_PCD_IRQHandler+0x3a2>
 8005d9e:	6879      	ldr	r1, [r7, #4]
 8005da0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005da2:	4613      	mov	r3, r2
 8005da4:	00db      	lsls	r3, r3, #3
 8005da6:	4413      	add	r3, r2
 8005da8:	009b      	lsls	r3, r3, #2
 8005daa:	440b      	add	r3, r1
 8005dac:	3324      	adds	r3, #36	@ 0x24
 8005dae:	681b      	ldr	r3, [r3, #0]
 8005db0:	2b00      	cmp	r3, #0
 8005db2:	d108      	bne.n	8005dc6 <HAL_PCD_IRQHandler+0x3a2>
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	6818      	ldr	r0, [r3, #0]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8005dbe:	461a      	mov	r2, r3
 8005dc0:	2101      	movs	r1, #1
 8005dc2:	f007 ff63 	bl	800dc8c <USB_EP0_OutStart>
 8005dc6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005dc8:	b2db      	uxtb	r3, r3
 8005dca:	4619      	mov	r1, r3
 8005dcc:	6878      	ldr	r0, [r7, #4]
 8005dce:	f00a fa92 	bl	80102f6 <HAL_PCD_DataInStageCallback>
 8005dd2:	693b      	ldr	r3, [r7, #16]
 8005dd4:	f003 0308 	and.w	r3, r3, #8
 8005dd8:	2b00      	cmp	r3, #0
 8005dda:	d008      	beq.n	8005dee <HAL_PCD_IRQHandler+0x3ca>
 8005ddc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005dde:	015a      	lsls	r2, r3, #5
 8005de0:	69fb      	ldr	r3, [r7, #28]
 8005de2:	4413      	add	r3, r2
 8005de4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005de8:	461a      	mov	r2, r3
 8005dea:	2308      	movs	r3, #8
 8005dec:	6093      	str	r3, [r2, #8]
 8005dee:	693b      	ldr	r3, [r7, #16]
 8005df0:	f003 0310 	and.w	r3, r3, #16
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	d008      	beq.n	8005e0a <HAL_PCD_IRQHandler+0x3e6>
 8005df8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005dfa:	015a      	lsls	r2, r3, #5
 8005dfc:	69fb      	ldr	r3, [r7, #28]
 8005dfe:	4413      	add	r3, r2
 8005e00:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005e04:	461a      	mov	r2, r3
 8005e06:	2310      	movs	r3, #16
 8005e08:	6093      	str	r3, [r2, #8]
 8005e0a:	693b      	ldr	r3, [r7, #16]
 8005e0c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005e10:	2b00      	cmp	r3, #0
 8005e12:	d008      	beq.n	8005e26 <HAL_PCD_IRQHandler+0x402>
 8005e14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005e16:	015a      	lsls	r2, r3, #5
 8005e18:	69fb      	ldr	r3, [r7, #28]
 8005e1a:	4413      	add	r3, r2
 8005e1c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005e20:	461a      	mov	r2, r3
 8005e22:	2340      	movs	r3, #64	@ 0x40
 8005e24:	6093      	str	r3, [r2, #8]
 8005e26:	693b      	ldr	r3, [r7, #16]
 8005e28:	f003 0302 	and.w	r3, r3, #2
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d023      	beq.n	8005e78 <HAL_PCD_IRQHandler+0x454>
 8005e30:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8005e32:	6a38      	ldr	r0, [r7, #32]
 8005e34:	f006 ff46 	bl	800ccc4 <USB_FlushTxFifo>
 8005e38:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8005e3a:	4613      	mov	r3, r2
 8005e3c:	00db      	lsls	r3, r3, #3
 8005e3e:	4413      	add	r3, r2
 8005e40:	009b      	lsls	r3, r3, #2
 8005e42:	3310      	adds	r3, #16
 8005e44:	687a      	ldr	r2, [r7, #4]
 8005e46:	4413      	add	r3, r2
 8005e48:	3304      	adds	r3, #4
 8005e4a:	617b      	str	r3, [r7, #20]
 8005e4c:	697b      	ldr	r3, [r7, #20]
 8005e4e:	78db      	ldrb	r3, [r3, #3]
 8005e50:	2b01      	cmp	r3, #1
 8005e52:	d108      	bne.n	8005e66 <HAL_PCD_IRQHandler+0x442>
 8005e54:	697b      	ldr	r3, [r7, #20]
 8005e56:	2200      	movs	r2, #0
 8005e58:	70da      	strb	r2, [r3, #3]
 8005e5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005e5c:	b2db      	uxtb	r3, r3
 8005e5e:	4619      	mov	r1, r3
 8005e60:	6878      	ldr	r0, [r7, #4]
 8005e62:	f00a fadf 	bl	8010424 <HAL_PCD_ISOINIncompleteCallback>
 8005e66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005e68:	015a      	lsls	r2, r3, #5
 8005e6a:	69fb      	ldr	r3, [r7, #28]
 8005e6c:	4413      	add	r3, r2
 8005e6e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005e72:	461a      	mov	r2, r3
 8005e74:	2302      	movs	r3, #2
 8005e76:	6093      	str	r3, [r2, #8]
 8005e78:	693b      	ldr	r3, [r7, #16]
 8005e7a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	d003      	beq.n	8005e8a <HAL_PCD_IRQHandler+0x466>
 8005e82:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8005e84:	6878      	ldr	r0, [r7, #4]
 8005e86:	f000 fce8 	bl	800685a <PCD_WriteEmptyTxFifo>
 8005e8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005e8c:	3301      	adds	r3, #1
 8005e8e:	627b      	str	r3, [r7, #36]	@ 0x24
 8005e90:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005e92:	085b      	lsrs	r3, r3, #1
 8005e94:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005e96:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005e98:	2b00      	cmp	r3, #0
 8005e9a:	f47f af2e 	bne.w	8005cfa <HAL_PCD_IRQHandler+0x2d6>
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	4618      	mov	r0, r3
 8005ea4:	f007 fe2c 	bl	800db00 <USB_ReadInterrupts>
 8005ea8:	4603      	mov	r3, r0
 8005eaa:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8005eae:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8005eb2:	d122      	bne.n	8005efa <HAL_PCD_IRQHandler+0x4d6>
 8005eb4:	69fb      	ldr	r3, [r7, #28]
 8005eb6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005eba:	685b      	ldr	r3, [r3, #4]
 8005ebc:	69fa      	ldr	r2, [r7, #28]
 8005ebe:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8005ec2:	f023 0301 	bic.w	r3, r3, #1
 8005ec6:	6053      	str	r3, [r2, #4]
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 8005ece:	2b01      	cmp	r3, #1
 8005ed0:	d108      	bne.n	8005ee4 <HAL_PCD_IRQHandler+0x4c0>
 8005ed2:	687b      	ldr	r3, [r7, #4]
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 8005eda:	2100      	movs	r1, #0
 8005edc:	6878      	ldr	r0, [r7, #4]
 8005ede:	f000 fef3 	bl	8006cc8 <HAL_PCDEx_LPM_Callback>
 8005ee2:	e002      	b.n	8005eea <HAL_PCD_IRQHandler+0x4c6>
 8005ee4:	6878      	ldr	r0, [r7, #4]
 8005ee6:	f00a fa7d 	bl	80103e4 <HAL_PCD_ResumeCallback>
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	681b      	ldr	r3, [r3, #0]
 8005eee:	695a      	ldr	r2, [r3, #20]
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 8005ef8:	615a      	str	r2, [r3, #20]
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	681b      	ldr	r3, [r3, #0]
 8005efe:	4618      	mov	r0, r3
 8005f00:	f007 fdfe 	bl	800db00 <USB_ReadInterrupts>
 8005f04:	4603      	mov	r3, r0
 8005f06:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005f0a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005f0e:	d112      	bne.n	8005f36 <HAL_PCD_IRQHandler+0x512>
 8005f10:	69fb      	ldr	r3, [r7, #28]
 8005f12:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005f16:	689b      	ldr	r3, [r3, #8]
 8005f18:	f003 0301 	and.w	r3, r3, #1
 8005f1c:	2b01      	cmp	r3, #1
 8005f1e:	d102      	bne.n	8005f26 <HAL_PCD_IRQHandler+0x502>
 8005f20:	6878      	ldr	r0, [r7, #4]
 8005f22:	f00a fa39 	bl	8010398 <HAL_PCD_SuspendCallback>
 8005f26:	687b      	ldr	r3, [r7, #4]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	695a      	ldr	r2, [r3, #20]
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 8005f34:	615a      	str	r2, [r3, #20]
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	681b      	ldr	r3, [r3, #0]
 8005f3a:	4618      	mov	r0, r3
 8005f3c:	f007 fde0 	bl	800db00 <USB_ReadInterrupts>
 8005f40:	4603      	mov	r3, r0
 8005f42:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8005f46:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8005f4a:	d121      	bne.n	8005f90 <HAL_PCD_IRQHandler+0x56c>
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	695a      	ldr	r2, [r3, #20]
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	f002 6200 	and.w	r2, r2, #134217728	@ 0x8000000
 8005f5a:	615a      	str	r2, [r3, #20]
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	f893 34cc 	ldrb.w	r3, [r3, #1228]	@ 0x4cc
 8005f62:	2b00      	cmp	r3, #0
 8005f64:	d111      	bne.n	8005f8a <HAL_PCD_IRQHandler+0x566>
 8005f66:	687b      	ldr	r3, [r7, #4]
 8005f68:	2201      	movs	r2, #1
 8005f6a:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8005f74:	089b      	lsrs	r3, r3, #2
 8005f76:	f003 020f 	and.w	r2, r3, #15
 8005f7a:	687b      	ldr	r3, [r7, #4]
 8005f7c:	f8c3 24d0 	str.w	r2, [r3, #1232]	@ 0x4d0
 8005f80:	2101      	movs	r1, #1
 8005f82:	6878      	ldr	r0, [r7, #4]
 8005f84:	f000 fea0 	bl	8006cc8 <HAL_PCDEx_LPM_Callback>
 8005f88:	e002      	b.n	8005f90 <HAL_PCD_IRQHandler+0x56c>
 8005f8a:	6878      	ldr	r0, [r7, #4]
 8005f8c:	f00a fa04 	bl	8010398 <HAL_PCD_SuspendCallback>
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	4618      	mov	r0, r3
 8005f96:	f007 fdb3 	bl	800db00 <USB_ReadInterrupts>
 8005f9a:	4603      	mov	r3, r0
 8005f9c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8005fa0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005fa4:	f040 80b7 	bne.w	8006116 <HAL_PCD_IRQHandler+0x6f2>
 8005fa8:	69fb      	ldr	r3, [r7, #28]
 8005faa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8005fae:	685b      	ldr	r3, [r3, #4]
 8005fb0:	69fa      	ldr	r2, [r7, #28]
 8005fb2:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8005fb6:	f023 0301 	bic.w	r3, r3, #1
 8005fba:	6053      	str	r3, [r2, #4]
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	681b      	ldr	r3, [r3, #0]
 8005fc0:	2110      	movs	r1, #16
 8005fc2:	4618      	mov	r0, r3
 8005fc4:	f006 fe7e 	bl	800ccc4 <USB_FlushTxFifo>
 8005fc8:	2300      	movs	r3, #0
 8005fca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005fcc:	e046      	b.n	800605c <HAL_PCD_IRQHandler+0x638>
 8005fce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005fd0:	015a      	lsls	r2, r3, #5
 8005fd2:	69fb      	ldr	r3, [r7, #28]
 8005fd4:	4413      	add	r3, r2
 8005fd6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005fda:	461a      	mov	r2, r3
 8005fdc:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8005fe0:	6093      	str	r3, [r2, #8]
 8005fe2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005fe4:	015a      	lsls	r2, r3, #5
 8005fe6:	69fb      	ldr	r3, [r7, #28]
 8005fe8:	4413      	add	r3, r2
 8005fea:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005ff2:	0151      	lsls	r1, r2, #5
 8005ff4:	69fa      	ldr	r2, [r7, #28]
 8005ff6:	440a      	add	r2, r1
 8005ff8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8005ffc:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006000:	6013      	str	r3, [r2, #0]
 8006002:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006004:	015a      	lsls	r2, r3, #5
 8006006:	69fb      	ldr	r3, [r7, #28]
 8006008:	4413      	add	r3, r2
 800600a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800600e:	461a      	mov	r2, r3
 8006010:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8006014:	6093      	str	r3, [r2, #8]
 8006016:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006018:	015a      	lsls	r2, r3, #5
 800601a:	69fb      	ldr	r3, [r7, #28]
 800601c:	4413      	add	r3, r2
 800601e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006022:	681b      	ldr	r3, [r3, #0]
 8006024:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006026:	0151      	lsls	r1, r2, #5
 8006028:	69fa      	ldr	r2, [r7, #28]
 800602a:	440a      	add	r2, r1
 800602c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8006030:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006034:	6013      	str	r3, [r2, #0]
 8006036:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006038:	015a      	lsls	r2, r3, #5
 800603a:	69fb      	ldr	r3, [r7, #28]
 800603c:	4413      	add	r3, r2
 800603e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8006046:	0151      	lsls	r1, r2, #5
 8006048:	69fa      	ldr	r2, [r7, #28]
 800604a:	440a      	add	r2, r1
 800604c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8006050:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8006054:	6013      	str	r3, [r2, #0]
 8006056:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006058:	3301      	adds	r3, #1
 800605a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	791b      	ldrb	r3, [r3, #4]
 8006060:	461a      	mov	r2, r3
 8006062:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006064:	4293      	cmp	r3, r2
 8006066:	d3b2      	bcc.n	8005fce <HAL_PCD_IRQHandler+0x5aa>
 8006068:	69fb      	ldr	r3, [r7, #28]
 800606a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800606e:	69db      	ldr	r3, [r3, #28]
 8006070:	69fa      	ldr	r2, [r7, #28]
 8006072:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8006076:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800607a:	61d3      	str	r3, [r2, #28]
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	7bdb      	ldrb	r3, [r3, #15]
 8006080:	2b00      	cmp	r3, #0
 8006082:	d016      	beq.n	80060b2 <HAL_PCD_IRQHandler+0x68e>
 8006084:	69fb      	ldr	r3, [r7, #28]
 8006086:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800608a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800608e:	69fa      	ldr	r2, [r7, #28]
 8006090:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8006094:	f043 030b 	orr.w	r3, r3, #11
 8006098:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800609c:	69fb      	ldr	r3, [r7, #28]
 800609e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80060a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80060a4:	69fa      	ldr	r2, [r7, #28]
 80060a6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80060aa:	f043 030b 	orr.w	r3, r3, #11
 80060ae:	6453      	str	r3, [r2, #68]	@ 0x44
 80060b0:	e015      	b.n	80060de <HAL_PCD_IRQHandler+0x6ba>
 80060b2:	69fb      	ldr	r3, [r7, #28]
 80060b4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80060b8:	695a      	ldr	r2, [r3, #20]
 80060ba:	69fb      	ldr	r3, [r7, #28]
 80060bc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80060c0:	4619      	mov	r1, r3
 80060c2:	f242 032b 	movw	r3, #8235	@ 0x202b
 80060c6:	4313      	orrs	r3, r2
 80060c8:	614b      	str	r3, [r1, #20]
 80060ca:	69fb      	ldr	r3, [r7, #28]
 80060cc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80060d0:	691b      	ldr	r3, [r3, #16]
 80060d2:	69fa      	ldr	r2, [r7, #28]
 80060d4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80060d8:	f043 030b 	orr.w	r3, r3, #11
 80060dc:	6113      	str	r3, [r2, #16]
 80060de:	69fb      	ldr	r3, [r7, #28]
 80060e0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80060e4:	681b      	ldr	r3, [r3, #0]
 80060e6:	69fa      	ldr	r2, [r7, #28]
 80060e8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80060ec:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 80060f0:	6013      	str	r3, [r2, #0]
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	6818      	ldr	r0, [r3, #0]
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	7999      	ldrb	r1, [r3, #6]
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8006100:	461a      	mov	r2, r3
 8006102:	f007 fdc3 	bl	800dc8c <USB_EP0_OutStart>
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	695a      	ldr	r2, [r3, #20]
 800610c:	687b      	ldr	r3, [r7, #4]
 800610e:	681b      	ldr	r3, [r3, #0]
 8006110:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 8006114:	615a      	str	r2, [r3, #20]
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	4618      	mov	r0, r3
 800611c:	f007 fcf0 	bl	800db00 <USB_ReadInterrupts>
 8006120:	4603      	mov	r3, r0
 8006122:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006126:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800612a:	d123      	bne.n	8006174 <HAL_PCD_IRQHandler+0x750>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	4618      	mov	r0, r3
 8006132:	f007 fd87 	bl	800dc44 <USB_ActivateSetup>
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	4618      	mov	r0, r3
 800613c:	f006 fe3b 	bl	800cdb6 <USB_GetDevSpeed>
 8006140:	4603      	mov	r3, r0
 8006142:	461a      	mov	r2, r3
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	71da      	strb	r2, [r3, #7]
 8006148:	687b      	ldr	r3, [r7, #4]
 800614a:	681c      	ldr	r4, [r3, #0]
 800614c:	f001 fd9c 	bl	8007c88 <HAL_RCC_GetHCLKFreq>
 8006150:	4601      	mov	r1, r0
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	79db      	ldrb	r3, [r3, #7]
 8006156:	461a      	mov	r2, r3
 8006158:	4620      	mov	r0, r4
 800615a:	f006 fb45 	bl	800c7e8 <USB_SetTurnaroundTime>
 800615e:	6878      	ldr	r0, [r7, #4]
 8006160:	f00a f8f1 	bl	8010346 <HAL_PCD_ResetCallback>
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	695a      	ldr	r2, [r3, #20]
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8006172:	615a      	str	r2, [r3, #20]
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	4618      	mov	r0, r3
 800617a:	f007 fcc1 	bl	800db00 <USB_ReadInterrupts>
 800617e:	4603      	mov	r3, r0
 8006180:	f003 0308 	and.w	r3, r3, #8
 8006184:	2b08      	cmp	r3, #8
 8006186:	d10a      	bne.n	800619e <HAL_PCD_IRQHandler+0x77a>
 8006188:	6878      	ldr	r0, [r7, #4]
 800618a:	f00a f8ce 	bl	801032a <HAL_PCD_SOFCallback>
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	695a      	ldr	r2, [r3, #20]
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	f002 0208 	and.w	r2, r2, #8
 800619c:	615a      	str	r2, [r3, #20]
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	4618      	mov	r0, r3
 80061a4:	f007 fcac 	bl	800db00 <USB_ReadInterrupts>
 80061a8:	4603      	mov	r3, r0
 80061aa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80061ae:	2b80      	cmp	r3, #128	@ 0x80
 80061b0:	d123      	bne.n	80061fa <HAL_PCD_IRQHandler+0x7d6>
 80061b2:	6a3b      	ldr	r3, [r7, #32]
 80061b4:	699b      	ldr	r3, [r3, #24]
 80061b6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80061ba:	6a3b      	ldr	r3, [r7, #32]
 80061bc:	619a      	str	r2, [r3, #24]
 80061be:	2301      	movs	r3, #1
 80061c0:	627b      	str	r3, [r7, #36]	@ 0x24
 80061c2:	e014      	b.n	80061ee <HAL_PCD_IRQHandler+0x7ca>
 80061c4:	6879      	ldr	r1, [r7, #4]
 80061c6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80061c8:	4613      	mov	r3, r2
 80061ca:	00db      	lsls	r3, r3, #3
 80061cc:	4413      	add	r3, r2
 80061ce:	009b      	lsls	r3, r3, #2
 80061d0:	440b      	add	r3, r1
 80061d2:	f203 2357 	addw	r3, r3, #599	@ 0x257
 80061d6:	781b      	ldrb	r3, [r3, #0]
 80061d8:	2b01      	cmp	r3, #1
 80061da:	d105      	bne.n	80061e8 <HAL_PCD_IRQHandler+0x7c4>
 80061dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061de:	b2db      	uxtb	r3, r3
 80061e0:	4619      	mov	r1, r3
 80061e2:	6878      	ldr	r0, [r7, #4]
 80061e4:	f000 fb08 	bl	80067f8 <HAL_PCD_EP_Abort>
 80061e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061ea:	3301      	adds	r3, #1
 80061ec:	627b      	str	r3, [r7, #36]	@ 0x24
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	791b      	ldrb	r3, [r3, #4]
 80061f2:	461a      	mov	r2, r3
 80061f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80061f6:	4293      	cmp	r3, r2
 80061f8:	d3e4      	bcc.n	80061c4 <HAL_PCD_IRQHandler+0x7a0>
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	681b      	ldr	r3, [r3, #0]
 80061fe:	4618      	mov	r0, r3
 8006200:	f007 fc7e 	bl	800db00 <USB_ReadInterrupts>
 8006204:	4603      	mov	r3, r0
 8006206:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800620a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800620e:	d13c      	bne.n	800628a <HAL_PCD_IRQHandler+0x866>
 8006210:	2301      	movs	r3, #1
 8006212:	627b      	str	r3, [r7, #36]	@ 0x24
 8006214:	e02b      	b.n	800626e <HAL_PCD_IRQHandler+0x84a>
 8006216:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006218:	015a      	lsls	r2, r3, #5
 800621a:	69fb      	ldr	r3, [r7, #28]
 800621c:	4413      	add	r3, r2
 800621e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	61bb      	str	r3, [r7, #24]
 8006226:	6879      	ldr	r1, [r7, #4]
 8006228:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800622a:	4613      	mov	r3, r2
 800622c:	00db      	lsls	r3, r3, #3
 800622e:	4413      	add	r3, r2
 8006230:	009b      	lsls	r3, r3, #2
 8006232:	440b      	add	r3, r1
 8006234:	3318      	adds	r3, #24
 8006236:	781b      	ldrb	r3, [r3, #0]
 8006238:	2b01      	cmp	r3, #1
 800623a:	d115      	bne.n	8006268 <HAL_PCD_IRQHandler+0x844>
 800623c:	69bb      	ldr	r3, [r7, #24]
 800623e:	2b00      	cmp	r3, #0
 8006240:	da12      	bge.n	8006268 <HAL_PCD_IRQHandler+0x844>
 8006242:	6879      	ldr	r1, [r7, #4]
 8006244:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8006246:	4613      	mov	r3, r2
 8006248:	00db      	lsls	r3, r3, #3
 800624a:	4413      	add	r3, r2
 800624c:	009b      	lsls	r3, r3, #2
 800624e:	440b      	add	r3, r1
 8006250:	3317      	adds	r3, #23
 8006252:	2201      	movs	r2, #1
 8006254:	701a      	strb	r2, [r3, #0]
 8006256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006258:	b2db      	uxtb	r3, r3
 800625a:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800625e:	b2db      	uxtb	r3, r3
 8006260:	4619      	mov	r1, r3
 8006262:	6878      	ldr	r0, [r7, #4]
 8006264:	f000 fac8 	bl	80067f8 <HAL_PCD_EP_Abort>
 8006268:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800626a:	3301      	adds	r3, #1
 800626c:	627b      	str	r3, [r7, #36]	@ 0x24
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	791b      	ldrb	r3, [r3, #4]
 8006272:	461a      	mov	r2, r3
 8006274:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006276:	4293      	cmp	r3, r2
 8006278:	d3cd      	bcc.n	8006216 <HAL_PCD_IRQHandler+0x7f2>
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	681b      	ldr	r3, [r3, #0]
 800627e:	695a      	ldr	r2, [r3, #20]
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 8006288:	615a      	str	r2, [r3, #20]
 800628a:	687b      	ldr	r3, [r7, #4]
 800628c:	681b      	ldr	r3, [r3, #0]
 800628e:	4618      	mov	r0, r3
 8006290:	f007 fc36 	bl	800db00 <USB_ReadInterrupts>
 8006294:	4603      	mov	r3, r0
 8006296:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800629a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800629e:	d156      	bne.n	800634e <HAL_PCD_IRQHandler+0x92a>
 80062a0:	2301      	movs	r3, #1
 80062a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80062a4:	e045      	b.n	8006332 <HAL_PCD_IRQHandler+0x90e>
 80062a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80062a8:	015a      	lsls	r2, r3, #5
 80062aa:	69fb      	ldr	r3, [r7, #28]
 80062ac:	4413      	add	r3, r2
 80062ae:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	61bb      	str	r3, [r7, #24]
 80062b6:	6879      	ldr	r1, [r7, #4]
 80062b8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80062ba:	4613      	mov	r3, r2
 80062bc:	00db      	lsls	r3, r3, #3
 80062be:	4413      	add	r3, r2
 80062c0:	009b      	lsls	r3, r3, #2
 80062c2:	440b      	add	r3, r1
 80062c4:	f503 7316 	add.w	r3, r3, #600	@ 0x258
 80062c8:	781b      	ldrb	r3, [r3, #0]
 80062ca:	2b01      	cmp	r3, #1
 80062cc:	d12e      	bne.n	800632c <HAL_PCD_IRQHandler+0x908>
 80062ce:	69bb      	ldr	r3, [r7, #24]
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	da2b      	bge.n	800632c <HAL_PCD_IRQHandler+0x908>
 80062d4:	69bb      	ldr	r3, [r7, #24]
 80062d6:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	f8d3 34d4 	ldr.w	r3, [r3, #1236]	@ 0x4d4
 80062e0:	f003 0301 	and.w	r3, r3, #1
 80062e4:	429a      	cmp	r2, r3
 80062e6:	d121      	bne.n	800632c <HAL_PCD_IRQHandler+0x908>
 80062e8:	6879      	ldr	r1, [r7, #4]
 80062ea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80062ec:	4613      	mov	r3, r2
 80062ee:	00db      	lsls	r3, r3, #3
 80062f0:	4413      	add	r3, r2
 80062f2:	009b      	lsls	r3, r3, #2
 80062f4:	440b      	add	r3, r1
 80062f6:	f203 2357 	addw	r3, r3, #599	@ 0x257
 80062fa:	2201      	movs	r2, #1
 80062fc:	701a      	strb	r2, [r3, #0]
 80062fe:	6a3b      	ldr	r3, [r7, #32]
 8006300:	699b      	ldr	r3, [r3, #24]
 8006302:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8006306:	6a3b      	ldr	r3, [r7, #32]
 8006308:	619a      	str	r2, [r3, #24]
 800630a:	6a3b      	ldr	r3, [r7, #32]
 800630c:	695b      	ldr	r3, [r3, #20]
 800630e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006312:	2b00      	cmp	r3, #0
 8006314:	d10a      	bne.n	800632c <HAL_PCD_IRQHandler+0x908>
 8006316:	69fb      	ldr	r3, [r7, #28]
 8006318:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800631c:	685b      	ldr	r3, [r3, #4]
 800631e:	69fa      	ldr	r2, [r7, #28]
 8006320:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8006324:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006328:	6053      	str	r3, [r2, #4]
 800632a:	e008      	b.n	800633e <HAL_PCD_IRQHandler+0x91a>
 800632c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800632e:	3301      	adds	r3, #1
 8006330:	627b      	str	r3, [r7, #36]	@ 0x24
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	791b      	ldrb	r3, [r3, #4]
 8006336:	461a      	mov	r2, r3
 8006338:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800633a:	4293      	cmp	r3, r2
 800633c:	d3b3      	bcc.n	80062a6 <HAL_PCD_IRQHandler+0x882>
 800633e:	687b      	ldr	r3, [r7, #4]
 8006340:	681b      	ldr	r3, [r3, #0]
 8006342:	695a      	ldr	r2, [r3, #20]
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	681b      	ldr	r3, [r3, #0]
 8006348:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800634c:	615a      	str	r2, [r3, #20]
 800634e:	687b      	ldr	r3, [r7, #4]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	4618      	mov	r0, r3
 8006354:	f007 fbd4 	bl	800db00 <USB_ReadInterrupts>
 8006358:	4603      	mov	r3, r0
 800635a:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800635e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006362:	d10a      	bne.n	800637a <HAL_PCD_IRQHandler+0x956>
 8006364:	6878      	ldr	r0, [r7, #4]
 8006366:	f00a f86f 	bl	8010448 <HAL_PCD_ConnectCallback>
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	681b      	ldr	r3, [r3, #0]
 800636e:	695a      	ldr	r2, [r3, #20]
 8006370:	687b      	ldr	r3, [r7, #4]
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8006378:	615a      	str	r2, [r3, #20]
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	681b      	ldr	r3, [r3, #0]
 800637e:	4618      	mov	r0, r3
 8006380:	f007 fbbe 	bl	800db00 <USB_ReadInterrupts>
 8006384:	4603      	mov	r3, r0
 8006386:	f003 0304 	and.w	r3, r3, #4
 800638a:	2b04      	cmp	r3, #4
 800638c:	d115      	bne.n	80063ba <HAL_PCD_IRQHandler+0x996>
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	685b      	ldr	r3, [r3, #4]
 8006394:	61bb      	str	r3, [r7, #24]
 8006396:	69bb      	ldr	r3, [r7, #24]
 8006398:	f003 0304 	and.w	r3, r3, #4
 800639c:	2b00      	cmp	r3, #0
 800639e:	d002      	beq.n	80063a6 <HAL_PCD_IRQHandler+0x982>
 80063a0:	6878      	ldr	r0, [r7, #4]
 80063a2:	f00a f85f 	bl	8010464 <HAL_PCD_DisconnectCallback>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	681b      	ldr	r3, [r3, #0]
 80063aa:	6859      	ldr	r1, [r3, #4]
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	681b      	ldr	r3, [r3, #0]
 80063b0:	69ba      	ldr	r2, [r7, #24]
 80063b2:	430a      	orrs	r2, r1
 80063b4:	605a      	str	r2, [r3, #4]
 80063b6:	e000      	b.n	80063ba <HAL_PCD_IRQHandler+0x996>
 80063b8:	bf00      	nop
 80063ba:	3734      	adds	r7, #52	@ 0x34
 80063bc:	46bd      	mov	sp, r7
 80063be:	bd90      	pop	{r4, r7, pc}

080063c0 <HAL_PCD_SetAddress>:
 80063c0:	b580      	push	{r7, lr}
 80063c2:	b082      	sub	sp, #8
 80063c4:	af00      	add	r7, sp, #0
 80063c6:	6078      	str	r0, [r7, #4]
 80063c8:	460b      	mov	r3, r1
 80063ca:	70fb      	strb	r3, [r7, #3]
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80063d2:	2b01      	cmp	r3, #1
 80063d4:	d101      	bne.n	80063da <HAL_PCD_SetAddress+0x1a>
 80063d6:	2302      	movs	r3, #2
 80063d8:	e012      	b.n	8006400 <HAL_PCD_SetAddress+0x40>
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	2201      	movs	r2, #1
 80063de:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	78fa      	ldrb	r2, [r7, #3]
 80063e6:	745a      	strb	r2, [r3, #17]
 80063e8:	687b      	ldr	r3, [r7, #4]
 80063ea:	681b      	ldr	r3, [r3, #0]
 80063ec:	78fa      	ldrb	r2, [r7, #3]
 80063ee:	4611      	mov	r1, r2
 80063f0:	4618      	mov	r0, r3
 80063f2:	f007 fb1d 	bl	800da30 <USB_SetDevAddress>
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	2200      	movs	r2, #0
 80063fa:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80063fe:	2300      	movs	r3, #0
 8006400:	4618      	mov	r0, r3
 8006402:	3708      	adds	r7, #8
 8006404:	46bd      	mov	sp, r7
 8006406:	bd80      	pop	{r7, pc}

08006408 <HAL_PCD_EP_Open>:
 8006408:	b580      	push	{r7, lr}
 800640a:	b084      	sub	sp, #16
 800640c:	af00      	add	r7, sp, #0
 800640e:	6078      	str	r0, [r7, #4]
 8006410:	4608      	mov	r0, r1
 8006412:	4611      	mov	r1, r2
 8006414:	461a      	mov	r2, r3
 8006416:	4603      	mov	r3, r0
 8006418:	70fb      	strb	r3, [r7, #3]
 800641a:	460b      	mov	r3, r1
 800641c:	803b      	strh	r3, [r7, #0]
 800641e:	4613      	mov	r3, r2
 8006420:	70bb      	strb	r3, [r7, #2]
 8006422:	2300      	movs	r3, #0
 8006424:	72fb      	strb	r3, [r7, #11]
 8006426:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800642a:	2b00      	cmp	r3, #0
 800642c:	da0f      	bge.n	800644e <HAL_PCD_EP_Open+0x46>
 800642e:	78fb      	ldrb	r3, [r7, #3]
 8006430:	f003 020f 	and.w	r2, r3, #15
 8006434:	4613      	mov	r3, r2
 8006436:	00db      	lsls	r3, r3, #3
 8006438:	4413      	add	r3, r2
 800643a:	009b      	lsls	r3, r3, #2
 800643c:	3310      	adds	r3, #16
 800643e:	687a      	ldr	r2, [r7, #4]
 8006440:	4413      	add	r3, r2
 8006442:	3304      	adds	r3, #4
 8006444:	60fb      	str	r3, [r7, #12]
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	2201      	movs	r2, #1
 800644a:	705a      	strb	r2, [r3, #1]
 800644c:	e00f      	b.n	800646e <HAL_PCD_EP_Open+0x66>
 800644e:	78fb      	ldrb	r3, [r7, #3]
 8006450:	f003 020f 	and.w	r2, r3, #15
 8006454:	4613      	mov	r3, r2
 8006456:	00db      	lsls	r3, r3, #3
 8006458:	4413      	add	r3, r2
 800645a:	009b      	lsls	r3, r3, #2
 800645c:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8006460:	687a      	ldr	r2, [r7, #4]
 8006462:	4413      	add	r3, r2
 8006464:	3304      	adds	r3, #4
 8006466:	60fb      	str	r3, [r7, #12]
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	2200      	movs	r2, #0
 800646c:	705a      	strb	r2, [r3, #1]
 800646e:	78fb      	ldrb	r3, [r7, #3]
 8006470:	f003 030f 	and.w	r3, r3, #15
 8006474:	b2da      	uxtb	r2, r3
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	701a      	strb	r2, [r3, #0]
 800647a:	883a      	ldrh	r2, [r7, #0]
 800647c:	68fb      	ldr	r3, [r7, #12]
 800647e:	609a      	str	r2, [r3, #8]
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	78ba      	ldrb	r2, [r7, #2]
 8006484:	711a      	strb	r2, [r3, #4]
 8006486:	68fb      	ldr	r3, [r7, #12]
 8006488:	785b      	ldrb	r3, [r3, #1]
 800648a:	2b00      	cmp	r3, #0
 800648c:	d004      	beq.n	8006498 <HAL_PCD_EP_Open+0x90>
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	781b      	ldrb	r3, [r3, #0]
 8006492:	461a      	mov	r2, r3
 8006494:	68fb      	ldr	r3, [r7, #12]
 8006496:	835a      	strh	r2, [r3, #26]
 8006498:	78bb      	ldrb	r3, [r7, #2]
 800649a:	2b02      	cmp	r3, #2
 800649c:	d102      	bne.n	80064a4 <HAL_PCD_EP_Open+0x9c>
 800649e:	68fb      	ldr	r3, [r7, #12]
 80064a0:	2200      	movs	r2, #0
 80064a2:	715a      	strb	r2, [r3, #5]
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80064aa:	2b01      	cmp	r3, #1
 80064ac:	d101      	bne.n	80064b2 <HAL_PCD_EP_Open+0xaa>
 80064ae:	2302      	movs	r3, #2
 80064b0:	e00e      	b.n	80064d0 <HAL_PCD_EP_Open+0xc8>
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	2201      	movs	r2, #1
 80064b6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	68f9      	ldr	r1, [r7, #12]
 80064c0:	4618      	mov	r0, r3
 80064c2:	f006 fc9d 	bl	800ce00 <USB_ActivateEndpoint>
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	2200      	movs	r2, #0
 80064ca:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80064ce:	7afb      	ldrb	r3, [r7, #11]
 80064d0:	4618      	mov	r0, r3
 80064d2:	3710      	adds	r7, #16
 80064d4:	46bd      	mov	sp, r7
 80064d6:	bd80      	pop	{r7, pc}

080064d8 <HAL_PCD_EP_Close>:
 80064d8:	b580      	push	{r7, lr}
 80064da:	b084      	sub	sp, #16
 80064dc:	af00      	add	r7, sp, #0
 80064de:	6078      	str	r0, [r7, #4]
 80064e0:	460b      	mov	r3, r1
 80064e2:	70fb      	strb	r3, [r7, #3]
 80064e4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80064e8:	2b00      	cmp	r3, #0
 80064ea:	da0f      	bge.n	800650c <HAL_PCD_EP_Close+0x34>
 80064ec:	78fb      	ldrb	r3, [r7, #3]
 80064ee:	f003 020f 	and.w	r2, r3, #15
 80064f2:	4613      	mov	r3, r2
 80064f4:	00db      	lsls	r3, r3, #3
 80064f6:	4413      	add	r3, r2
 80064f8:	009b      	lsls	r3, r3, #2
 80064fa:	3310      	adds	r3, #16
 80064fc:	687a      	ldr	r2, [r7, #4]
 80064fe:	4413      	add	r3, r2
 8006500:	3304      	adds	r3, #4
 8006502:	60fb      	str	r3, [r7, #12]
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	2201      	movs	r2, #1
 8006508:	705a      	strb	r2, [r3, #1]
 800650a:	e00f      	b.n	800652c <HAL_PCD_EP_Close+0x54>
 800650c:	78fb      	ldrb	r3, [r7, #3]
 800650e:	f003 020f 	and.w	r2, r3, #15
 8006512:	4613      	mov	r3, r2
 8006514:	00db      	lsls	r3, r3, #3
 8006516:	4413      	add	r3, r2
 8006518:	009b      	lsls	r3, r3, #2
 800651a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800651e:	687a      	ldr	r2, [r7, #4]
 8006520:	4413      	add	r3, r2
 8006522:	3304      	adds	r3, #4
 8006524:	60fb      	str	r3, [r7, #12]
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	2200      	movs	r2, #0
 800652a:	705a      	strb	r2, [r3, #1]
 800652c:	78fb      	ldrb	r3, [r7, #3]
 800652e:	f003 030f 	and.w	r3, r3, #15
 8006532:	b2da      	uxtb	r2, r3
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	701a      	strb	r2, [r3, #0]
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 800653e:	2b01      	cmp	r3, #1
 8006540:	d101      	bne.n	8006546 <HAL_PCD_EP_Close+0x6e>
 8006542:	2302      	movs	r3, #2
 8006544:	e00e      	b.n	8006564 <HAL_PCD_EP_Close+0x8c>
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	2201      	movs	r2, #1
 800654a:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	681b      	ldr	r3, [r3, #0]
 8006552:	68f9      	ldr	r1, [r7, #12]
 8006554:	4618      	mov	r0, r3
 8006556:	f006 fcdb 	bl	800cf10 <USB_DeactivateEndpoint>
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	2200      	movs	r2, #0
 800655e:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8006562:	2300      	movs	r3, #0
 8006564:	4618      	mov	r0, r3
 8006566:	3710      	adds	r7, #16
 8006568:	46bd      	mov	sp, r7
 800656a:	bd80      	pop	{r7, pc}

0800656c <HAL_PCD_EP_Receive>:
 800656c:	b580      	push	{r7, lr}
 800656e:	b086      	sub	sp, #24
 8006570:	af00      	add	r7, sp, #0
 8006572:	60f8      	str	r0, [r7, #12]
 8006574:	607a      	str	r2, [r7, #4]
 8006576:	603b      	str	r3, [r7, #0]
 8006578:	460b      	mov	r3, r1
 800657a:	72fb      	strb	r3, [r7, #11]
 800657c:	7afb      	ldrb	r3, [r7, #11]
 800657e:	f003 020f 	and.w	r2, r3, #15
 8006582:	4613      	mov	r3, r2
 8006584:	00db      	lsls	r3, r3, #3
 8006586:	4413      	add	r3, r2
 8006588:	009b      	lsls	r3, r3, #2
 800658a:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 800658e:	68fa      	ldr	r2, [r7, #12]
 8006590:	4413      	add	r3, r2
 8006592:	3304      	adds	r3, #4
 8006594:	617b      	str	r3, [r7, #20]
 8006596:	697b      	ldr	r3, [r7, #20]
 8006598:	687a      	ldr	r2, [r7, #4]
 800659a:	60da      	str	r2, [r3, #12]
 800659c:	697b      	ldr	r3, [r7, #20]
 800659e:	683a      	ldr	r2, [r7, #0]
 80065a0:	611a      	str	r2, [r3, #16]
 80065a2:	697b      	ldr	r3, [r7, #20]
 80065a4:	2200      	movs	r2, #0
 80065a6:	615a      	str	r2, [r3, #20]
 80065a8:	697b      	ldr	r3, [r7, #20]
 80065aa:	2200      	movs	r2, #0
 80065ac:	705a      	strb	r2, [r3, #1]
 80065ae:	7afb      	ldrb	r3, [r7, #11]
 80065b0:	f003 030f 	and.w	r3, r3, #15
 80065b4:	b2da      	uxtb	r2, r3
 80065b6:	697b      	ldr	r3, [r7, #20]
 80065b8:	701a      	strb	r2, [r3, #0]
 80065ba:	68fb      	ldr	r3, [r7, #12]
 80065bc:	799b      	ldrb	r3, [r3, #6]
 80065be:	2b01      	cmp	r3, #1
 80065c0:	d102      	bne.n	80065c8 <HAL_PCD_EP_Receive+0x5c>
 80065c2:	687a      	ldr	r2, [r7, #4]
 80065c4:	697b      	ldr	r3, [r7, #20]
 80065c6:	61da      	str	r2, [r3, #28]
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	6818      	ldr	r0, [r3, #0]
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	799b      	ldrb	r3, [r3, #6]
 80065d0:	461a      	mov	r2, r3
 80065d2:	6979      	ldr	r1, [r7, #20]
 80065d4:	f006 fd78 	bl	800d0c8 <USB_EPStartXfer>
 80065d8:	2300      	movs	r3, #0
 80065da:	4618      	mov	r0, r3
 80065dc:	3718      	adds	r7, #24
 80065de:	46bd      	mov	sp, r7
 80065e0:	bd80      	pop	{r7, pc}

080065e2 <HAL_PCD_EP_GetRxCount>:
 80065e2:	b480      	push	{r7}
 80065e4:	b083      	sub	sp, #12
 80065e6:	af00      	add	r7, sp, #0
 80065e8:	6078      	str	r0, [r7, #4]
 80065ea:	460b      	mov	r3, r1
 80065ec:	70fb      	strb	r3, [r7, #3]
 80065ee:	78fb      	ldrb	r3, [r7, #3]
 80065f0:	f003 020f 	and.w	r2, r3, #15
 80065f4:	6879      	ldr	r1, [r7, #4]
 80065f6:	4613      	mov	r3, r2
 80065f8:	00db      	lsls	r3, r3, #3
 80065fa:	4413      	add	r3, r2
 80065fc:	009b      	lsls	r3, r3, #2
 80065fe:	440b      	add	r3, r1
 8006600:	f503 731a 	add.w	r3, r3, #616	@ 0x268
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	4618      	mov	r0, r3
 8006608:	370c      	adds	r7, #12
 800660a:	46bd      	mov	sp, r7
 800660c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006610:	4770      	bx	lr

08006612 <HAL_PCD_EP_Transmit>:
 8006612:	b580      	push	{r7, lr}
 8006614:	b086      	sub	sp, #24
 8006616:	af00      	add	r7, sp, #0
 8006618:	60f8      	str	r0, [r7, #12]
 800661a:	607a      	str	r2, [r7, #4]
 800661c:	603b      	str	r3, [r7, #0]
 800661e:	460b      	mov	r3, r1
 8006620:	72fb      	strb	r3, [r7, #11]
 8006622:	7afb      	ldrb	r3, [r7, #11]
 8006624:	f003 020f 	and.w	r2, r3, #15
 8006628:	4613      	mov	r3, r2
 800662a:	00db      	lsls	r3, r3, #3
 800662c:	4413      	add	r3, r2
 800662e:	009b      	lsls	r3, r3, #2
 8006630:	3310      	adds	r3, #16
 8006632:	68fa      	ldr	r2, [r7, #12]
 8006634:	4413      	add	r3, r2
 8006636:	3304      	adds	r3, #4
 8006638:	617b      	str	r3, [r7, #20]
 800663a:	697b      	ldr	r3, [r7, #20]
 800663c:	687a      	ldr	r2, [r7, #4]
 800663e:	60da      	str	r2, [r3, #12]
 8006640:	697b      	ldr	r3, [r7, #20]
 8006642:	683a      	ldr	r2, [r7, #0]
 8006644:	611a      	str	r2, [r3, #16]
 8006646:	697b      	ldr	r3, [r7, #20]
 8006648:	2200      	movs	r2, #0
 800664a:	615a      	str	r2, [r3, #20]
 800664c:	697b      	ldr	r3, [r7, #20]
 800664e:	2201      	movs	r2, #1
 8006650:	705a      	strb	r2, [r3, #1]
 8006652:	7afb      	ldrb	r3, [r7, #11]
 8006654:	f003 030f 	and.w	r3, r3, #15
 8006658:	b2da      	uxtb	r2, r3
 800665a:	697b      	ldr	r3, [r7, #20]
 800665c:	701a      	strb	r2, [r3, #0]
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	799b      	ldrb	r3, [r3, #6]
 8006662:	2b01      	cmp	r3, #1
 8006664:	d102      	bne.n	800666c <HAL_PCD_EP_Transmit+0x5a>
 8006666:	687a      	ldr	r2, [r7, #4]
 8006668:	697b      	ldr	r3, [r7, #20]
 800666a:	61da      	str	r2, [r3, #28]
 800666c:	68fb      	ldr	r3, [r7, #12]
 800666e:	6818      	ldr	r0, [r3, #0]
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	799b      	ldrb	r3, [r3, #6]
 8006674:	461a      	mov	r2, r3
 8006676:	6979      	ldr	r1, [r7, #20]
 8006678:	f006 fd26 	bl	800d0c8 <USB_EPStartXfer>
 800667c:	2300      	movs	r3, #0
 800667e:	4618      	mov	r0, r3
 8006680:	3718      	adds	r7, #24
 8006682:	46bd      	mov	sp, r7
 8006684:	bd80      	pop	{r7, pc}

08006686 <HAL_PCD_EP_SetStall>:
 8006686:	b580      	push	{r7, lr}
 8006688:	b084      	sub	sp, #16
 800668a:	af00      	add	r7, sp, #0
 800668c:	6078      	str	r0, [r7, #4]
 800668e:	460b      	mov	r3, r1
 8006690:	70fb      	strb	r3, [r7, #3]
 8006692:	78fb      	ldrb	r3, [r7, #3]
 8006694:	f003 030f 	and.w	r3, r3, #15
 8006698:	687a      	ldr	r2, [r7, #4]
 800669a:	7912      	ldrb	r2, [r2, #4]
 800669c:	4293      	cmp	r3, r2
 800669e:	d901      	bls.n	80066a4 <HAL_PCD_EP_SetStall+0x1e>
 80066a0:	2301      	movs	r3, #1
 80066a2:	e04f      	b.n	8006744 <HAL_PCD_EP_SetStall+0xbe>
 80066a4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80066a8:	2b00      	cmp	r3, #0
 80066aa:	da0f      	bge.n	80066cc <HAL_PCD_EP_SetStall+0x46>
 80066ac:	78fb      	ldrb	r3, [r7, #3]
 80066ae:	f003 020f 	and.w	r2, r3, #15
 80066b2:	4613      	mov	r3, r2
 80066b4:	00db      	lsls	r3, r3, #3
 80066b6:	4413      	add	r3, r2
 80066b8:	009b      	lsls	r3, r3, #2
 80066ba:	3310      	adds	r3, #16
 80066bc:	687a      	ldr	r2, [r7, #4]
 80066be:	4413      	add	r3, r2
 80066c0:	3304      	adds	r3, #4
 80066c2:	60fb      	str	r3, [r7, #12]
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	2201      	movs	r2, #1
 80066c8:	705a      	strb	r2, [r3, #1]
 80066ca:	e00d      	b.n	80066e8 <HAL_PCD_EP_SetStall+0x62>
 80066cc:	78fa      	ldrb	r2, [r7, #3]
 80066ce:	4613      	mov	r3, r2
 80066d0:	00db      	lsls	r3, r3, #3
 80066d2:	4413      	add	r3, r2
 80066d4:	009b      	lsls	r3, r3, #2
 80066d6:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80066da:	687a      	ldr	r2, [r7, #4]
 80066dc:	4413      	add	r3, r2
 80066de:	3304      	adds	r3, #4
 80066e0:	60fb      	str	r3, [r7, #12]
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	2200      	movs	r2, #0
 80066e6:	705a      	strb	r2, [r3, #1]
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	2201      	movs	r2, #1
 80066ec:	709a      	strb	r2, [r3, #2]
 80066ee:	78fb      	ldrb	r3, [r7, #3]
 80066f0:	f003 030f 	and.w	r3, r3, #15
 80066f4:	b2da      	uxtb	r2, r3
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	701a      	strb	r2, [r3, #0]
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 8006700:	2b01      	cmp	r3, #1
 8006702:	d101      	bne.n	8006708 <HAL_PCD_EP_SetStall+0x82>
 8006704:	2302      	movs	r3, #2
 8006706:	e01d      	b.n	8006744 <HAL_PCD_EP_SetStall+0xbe>
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	2201      	movs	r2, #1
 800670c:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	68f9      	ldr	r1, [r7, #12]
 8006716:	4618      	mov	r0, r3
 8006718:	f007 f8b6 	bl	800d888 <USB_EPSetStall>
 800671c:	78fb      	ldrb	r3, [r7, #3]
 800671e:	f003 030f 	and.w	r3, r3, #15
 8006722:	2b00      	cmp	r3, #0
 8006724:	d109      	bne.n	800673a <HAL_PCD_EP_SetStall+0xb4>
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	6818      	ldr	r0, [r3, #0]
 800672a:	687b      	ldr	r3, [r7, #4]
 800672c:	7999      	ldrb	r1, [r3, #6]
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8006734:	461a      	mov	r2, r3
 8006736:	f007 faa9 	bl	800dc8c <USB_EP0_OutStart>
 800673a:	687b      	ldr	r3, [r7, #4]
 800673c:	2200      	movs	r2, #0
 800673e:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 8006742:	2300      	movs	r3, #0
 8006744:	4618      	mov	r0, r3
 8006746:	3710      	adds	r7, #16
 8006748:	46bd      	mov	sp, r7
 800674a:	bd80      	pop	{r7, pc}

0800674c <HAL_PCD_EP_ClrStall>:
 800674c:	b580      	push	{r7, lr}
 800674e:	b084      	sub	sp, #16
 8006750:	af00      	add	r7, sp, #0
 8006752:	6078      	str	r0, [r7, #4]
 8006754:	460b      	mov	r3, r1
 8006756:	70fb      	strb	r3, [r7, #3]
 8006758:	78fb      	ldrb	r3, [r7, #3]
 800675a:	f003 030f 	and.w	r3, r3, #15
 800675e:	687a      	ldr	r2, [r7, #4]
 8006760:	7912      	ldrb	r2, [r2, #4]
 8006762:	4293      	cmp	r3, r2
 8006764:	d901      	bls.n	800676a <HAL_PCD_EP_ClrStall+0x1e>
 8006766:	2301      	movs	r3, #1
 8006768:	e042      	b.n	80067f0 <HAL_PCD_EP_ClrStall+0xa4>
 800676a:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800676e:	2b00      	cmp	r3, #0
 8006770:	da0f      	bge.n	8006792 <HAL_PCD_EP_ClrStall+0x46>
 8006772:	78fb      	ldrb	r3, [r7, #3]
 8006774:	f003 020f 	and.w	r2, r3, #15
 8006778:	4613      	mov	r3, r2
 800677a:	00db      	lsls	r3, r3, #3
 800677c:	4413      	add	r3, r2
 800677e:	009b      	lsls	r3, r3, #2
 8006780:	3310      	adds	r3, #16
 8006782:	687a      	ldr	r2, [r7, #4]
 8006784:	4413      	add	r3, r2
 8006786:	3304      	adds	r3, #4
 8006788:	60fb      	str	r3, [r7, #12]
 800678a:	68fb      	ldr	r3, [r7, #12]
 800678c:	2201      	movs	r2, #1
 800678e:	705a      	strb	r2, [r3, #1]
 8006790:	e00f      	b.n	80067b2 <HAL_PCD_EP_ClrStall+0x66>
 8006792:	78fb      	ldrb	r3, [r7, #3]
 8006794:	f003 020f 	and.w	r2, r3, #15
 8006798:	4613      	mov	r3, r2
 800679a:	00db      	lsls	r3, r3, #3
 800679c:	4413      	add	r3, r2
 800679e:	009b      	lsls	r3, r3, #2
 80067a0:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 80067a4:	687a      	ldr	r2, [r7, #4]
 80067a6:	4413      	add	r3, r2
 80067a8:	3304      	adds	r3, #4
 80067aa:	60fb      	str	r3, [r7, #12]
 80067ac:	68fb      	ldr	r3, [r7, #12]
 80067ae:	2200      	movs	r2, #0
 80067b0:	705a      	strb	r2, [r3, #1]
 80067b2:	68fb      	ldr	r3, [r7, #12]
 80067b4:	2200      	movs	r2, #0
 80067b6:	709a      	strb	r2, [r3, #2]
 80067b8:	78fb      	ldrb	r3, [r7, #3]
 80067ba:	f003 030f 	and.w	r3, r3, #15
 80067be:	b2da      	uxtb	r2, r3
 80067c0:	68fb      	ldr	r3, [r7, #12]
 80067c2:	701a      	strb	r2, [r3, #0]
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	f893 3494 	ldrb.w	r3, [r3, #1172]	@ 0x494
 80067ca:	2b01      	cmp	r3, #1
 80067cc:	d101      	bne.n	80067d2 <HAL_PCD_EP_ClrStall+0x86>
 80067ce:	2302      	movs	r3, #2
 80067d0:	e00e      	b.n	80067f0 <HAL_PCD_EP_ClrStall+0xa4>
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	2201      	movs	r2, #1
 80067d6:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	68f9      	ldr	r1, [r7, #12]
 80067e0:	4618      	mov	r0, r3
 80067e2:	f007 f8bf 	bl	800d964 <USB_EPClearStall>
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	2200      	movs	r2, #0
 80067ea:	f883 2494 	strb.w	r2, [r3, #1172]	@ 0x494
 80067ee:	2300      	movs	r3, #0
 80067f0:	4618      	mov	r0, r3
 80067f2:	3710      	adds	r7, #16
 80067f4:	46bd      	mov	sp, r7
 80067f6:	bd80      	pop	{r7, pc}

080067f8 <HAL_PCD_EP_Abort>:
 80067f8:	b580      	push	{r7, lr}
 80067fa:	b084      	sub	sp, #16
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	6078      	str	r0, [r7, #4]
 8006800:	460b      	mov	r3, r1
 8006802:	70fb      	strb	r3, [r7, #3]
 8006804:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8006808:	2b00      	cmp	r3, #0
 800680a:	da0c      	bge.n	8006826 <HAL_PCD_EP_Abort+0x2e>
 800680c:	78fb      	ldrb	r3, [r7, #3]
 800680e:	f003 020f 	and.w	r2, r3, #15
 8006812:	4613      	mov	r3, r2
 8006814:	00db      	lsls	r3, r3, #3
 8006816:	4413      	add	r3, r2
 8006818:	009b      	lsls	r3, r3, #2
 800681a:	3310      	adds	r3, #16
 800681c:	687a      	ldr	r2, [r7, #4]
 800681e:	4413      	add	r3, r2
 8006820:	3304      	adds	r3, #4
 8006822:	60fb      	str	r3, [r7, #12]
 8006824:	e00c      	b.n	8006840 <HAL_PCD_EP_Abort+0x48>
 8006826:	78fb      	ldrb	r3, [r7, #3]
 8006828:	f003 020f 	and.w	r2, r3, #15
 800682c:	4613      	mov	r3, r2
 800682e:	00db      	lsls	r3, r3, #3
 8006830:	4413      	add	r3, r2
 8006832:	009b      	lsls	r3, r3, #2
 8006834:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8006838:	687a      	ldr	r2, [r7, #4]
 800683a:	4413      	add	r3, r2
 800683c:	3304      	adds	r3, #4
 800683e:	60fb      	str	r3, [r7, #12]
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	68f9      	ldr	r1, [r7, #12]
 8006846:	4618      	mov	r0, r3
 8006848:	f006 fede 	bl	800d608 <USB_EPStopXfer>
 800684c:	4603      	mov	r3, r0
 800684e:	72fb      	strb	r3, [r7, #11]
 8006850:	7afb      	ldrb	r3, [r7, #11]
 8006852:	4618      	mov	r0, r3
 8006854:	3710      	adds	r7, #16
 8006856:	46bd      	mov	sp, r7
 8006858:	bd80      	pop	{r7, pc}

0800685a <PCD_WriteEmptyTxFifo>:
 800685a:	b580      	push	{r7, lr}
 800685c:	b08a      	sub	sp, #40	@ 0x28
 800685e:	af02      	add	r7, sp, #8
 8006860:	6078      	str	r0, [r7, #4]
 8006862:	6039      	str	r1, [r7, #0]
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	681b      	ldr	r3, [r3, #0]
 8006868:	617b      	str	r3, [r7, #20]
 800686a:	697b      	ldr	r3, [r7, #20]
 800686c:	613b      	str	r3, [r7, #16]
 800686e:	683a      	ldr	r2, [r7, #0]
 8006870:	4613      	mov	r3, r2
 8006872:	00db      	lsls	r3, r3, #3
 8006874:	4413      	add	r3, r2
 8006876:	009b      	lsls	r3, r3, #2
 8006878:	3310      	adds	r3, #16
 800687a:	687a      	ldr	r2, [r7, #4]
 800687c:	4413      	add	r3, r2
 800687e:	3304      	adds	r3, #4
 8006880:	60fb      	str	r3, [r7, #12]
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	695a      	ldr	r2, [r3, #20]
 8006886:	68fb      	ldr	r3, [r7, #12]
 8006888:	691b      	ldr	r3, [r3, #16]
 800688a:	429a      	cmp	r2, r3
 800688c:	d901      	bls.n	8006892 <PCD_WriteEmptyTxFifo+0x38>
 800688e:	2301      	movs	r3, #1
 8006890:	e06b      	b.n	800696a <PCD_WriteEmptyTxFifo+0x110>
 8006892:	68fb      	ldr	r3, [r7, #12]
 8006894:	691a      	ldr	r2, [r3, #16]
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	695b      	ldr	r3, [r3, #20]
 800689a:	1ad3      	subs	r3, r2, r3
 800689c:	61fb      	str	r3, [r7, #28]
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	689b      	ldr	r3, [r3, #8]
 80068a2:	69fa      	ldr	r2, [r7, #28]
 80068a4:	429a      	cmp	r2, r3
 80068a6:	d902      	bls.n	80068ae <PCD_WriteEmptyTxFifo+0x54>
 80068a8:	68fb      	ldr	r3, [r7, #12]
 80068aa:	689b      	ldr	r3, [r3, #8]
 80068ac:	61fb      	str	r3, [r7, #28]
 80068ae:	69fb      	ldr	r3, [r7, #28]
 80068b0:	3303      	adds	r3, #3
 80068b2:	089b      	lsrs	r3, r3, #2
 80068b4:	61bb      	str	r3, [r7, #24]
 80068b6:	e02a      	b.n	800690e <PCD_WriteEmptyTxFifo+0xb4>
 80068b8:	68fb      	ldr	r3, [r7, #12]
 80068ba:	691a      	ldr	r2, [r3, #16]
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	695b      	ldr	r3, [r3, #20]
 80068c0:	1ad3      	subs	r3, r2, r3
 80068c2:	61fb      	str	r3, [r7, #28]
 80068c4:	68fb      	ldr	r3, [r7, #12]
 80068c6:	689b      	ldr	r3, [r3, #8]
 80068c8:	69fa      	ldr	r2, [r7, #28]
 80068ca:	429a      	cmp	r2, r3
 80068cc:	d902      	bls.n	80068d4 <PCD_WriteEmptyTxFifo+0x7a>
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	689b      	ldr	r3, [r3, #8]
 80068d2:	61fb      	str	r3, [r7, #28]
 80068d4:	69fb      	ldr	r3, [r7, #28]
 80068d6:	3303      	adds	r3, #3
 80068d8:	089b      	lsrs	r3, r3, #2
 80068da:	61bb      	str	r3, [r7, #24]
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	68d9      	ldr	r1, [r3, #12]
 80068e0:	683b      	ldr	r3, [r7, #0]
 80068e2:	b2da      	uxtb	r2, r3
 80068e4:	69fb      	ldr	r3, [r7, #28]
 80068e6:	b298      	uxth	r0, r3
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	799b      	ldrb	r3, [r3, #6]
 80068ec:	9300      	str	r3, [sp, #0]
 80068ee:	4603      	mov	r3, r0
 80068f0:	6978      	ldr	r0, [r7, #20]
 80068f2:	f006 ff33 	bl	800d75c <USB_WritePacket>
 80068f6:	68fb      	ldr	r3, [r7, #12]
 80068f8:	68da      	ldr	r2, [r3, #12]
 80068fa:	69fb      	ldr	r3, [r7, #28]
 80068fc:	441a      	add	r2, r3
 80068fe:	68fb      	ldr	r3, [r7, #12]
 8006900:	60da      	str	r2, [r3, #12]
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	695a      	ldr	r2, [r3, #20]
 8006906:	69fb      	ldr	r3, [r7, #28]
 8006908:	441a      	add	r2, r3
 800690a:	68fb      	ldr	r3, [r7, #12]
 800690c:	615a      	str	r2, [r3, #20]
 800690e:	683b      	ldr	r3, [r7, #0]
 8006910:	015a      	lsls	r2, r3, #5
 8006912:	693b      	ldr	r3, [r7, #16]
 8006914:	4413      	add	r3, r2
 8006916:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800691a:	699b      	ldr	r3, [r3, #24]
 800691c:	b29b      	uxth	r3, r3
 800691e:	69ba      	ldr	r2, [r7, #24]
 8006920:	429a      	cmp	r2, r3
 8006922:	d809      	bhi.n	8006938 <PCD_WriteEmptyTxFifo+0xde>
 8006924:	68fb      	ldr	r3, [r7, #12]
 8006926:	695a      	ldr	r2, [r3, #20]
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	691b      	ldr	r3, [r3, #16]
 800692c:	429a      	cmp	r2, r3
 800692e:	d203      	bcs.n	8006938 <PCD_WriteEmptyTxFifo+0xde>
 8006930:	68fb      	ldr	r3, [r7, #12]
 8006932:	691b      	ldr	r3, [r3, #16]
 8006934:	2b00      	cmp	r3, #0
 8006936:	d1bf      	bne.n	80068b8 <PCD_WriteEmptyTxFifo+0x5e>
 8006938:	68fb      	ldr	r3, [r7, #12]
 800693a:	691a      	ldr	r2, [r3, #16]
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	695b      	ldr	r3, [r3, #20]
 8006940:	429a      	cmp	r2, r3
 8006942:	d811      	bhi.n	8006968 <PCD_WriteEmptyTxFifo+0x10e>
 8006944:	683b      	ldr	r3, [r7, #0]
 8006946:	f003 030f 	and.w	r3, r3, #15
 800694a:	2201      	movs	r2, #1
 800694c:	fa02 f303 	lsl.w	r3, r2, r3
 8006950:	60bb      	str	r3, [r7, #8]
 8006952:	693b      	ldr	r3, [r7, #16]
 8006954:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8006958:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800695a:	68bb      	ldr	r3, [r7, #8]
 800695c:	43db      	mvns	r3, r3
 800695e:	6939      	ldr	r1, [r7, #16]
 8006960:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8006964:	4013      	ands	r3, r2
 8006966:	634b      	str	r3, [r1, #52]	@ 0x34
 8006968:	2300      	movs	r3, #0
 800696a:	4618      	mov	r0, r3
 800696c:	3720      	adds	r7, #32
 800696e:	46bd      	mov	sp, r7
 8006970:	bd80      	pop	{r7, pc}
	...

08006974 <PCD_EP_OutXfrComplete_int>:
 8006974:	b580      	push	{r7, lr}
 8006976:	b088      	sub	sp, #32
 8006978:	af00      	add	r7, sp, #0
 800697a:	6078      	str	r0, [r7, #4]
 800697c:	6039      	str	r1, [r7, #0]
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	61fb      	str	r3, [r7, #28]
 8006984:	69fb      	ldr	r3, [r7, #28]
 8006986:	61bb      	str	r3, [r7, #24]
 8006988:	69fb      	ldr	r3, [r7, #28]
 800698a:	333c      	adds	r3, #60	@ 0x3c
 800698c:	3304      	adds	r3, #4
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	617b      	str	r3, [r7, #20]
 8006992:	683b      	ldr	r3, [r7, #0]
 8006994:	015a      	lsls	r2, r3, #5
 8006996:	69bb      	ldr	r3, [r7, #24]
 8006998:	4413      	add	r3, r2
 800699a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800699e:	689b      	ldr	r3, [r3, #8]
 80069a0:	613b      	str	r3, [r7, #16]
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	799b      	ldrb	r3, [r3, #6]
 80069a6:	2b01      	cmp	r3, #1
 80069a8:	d17b      	bne.n	8006aa2 <PCD_EP_OutXfrComplete_int+0x12e>
 80069aa:	693b      	ldr	r3, [r7, #16]
 80069ac:	f003 0308 	and.w	r3, r3, #8
 80069b0:	2b00      	cmp	r3, #0
 80069b2:	d015      	beq.n	80069e0 <PCD_EP_OutXfrComplete_int+0x6c>
 80069b4:	697b      	ldr	r3, [r7, #20]
 80069b6:	4a61      	ldr	r2, [pc, #388]	@ (8006b3c <PCD_EP_OutXfrComplete_int+0x1c8>)
 80069b8:	4293      	cmp	r3, r2
 80069ba:	f240 80b9 	bls.w	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 80069be:	693b      	ldr	r3, [r7, #16]
 80069c0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	f000 80b3 	beq.w	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	015a      	lsls	r2, r3, #5
 80069ce:	69bb      	ldr	r3, [r7, #24]
 80069d0:	4413      	add	r3, r2
 80069d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80069d6:	461a      	mov	r2, r3
 80069d8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80069dc:	6093      	str	r3, [r2, #8]
 80069de:	e0a7      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 80069e0:	693b      	ldr	r3, [r7, #16]
 80069e2:	f003 0320 	and.w	r3, r3, #32
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	d009      	beq.n	80069fe <PCD_EP_OutXfrComplete_int+0x8a>
 80069ea:	683b      	ldr	r3, [r7, #0]
 80069ec:	015a      	lsls	r2, r3, #5
 80069ee:	69bb      	ldr	r3, [r7, #24]
 80069f0:	4413      	add	r3, r2
 80069f2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80069f6:	461a      	mov	r2, r3
 80069f8:	2320      	movs	r3, #32
 80069fa:	6093      	str	r3, [r2, #8]
 80069fc:	e098      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 80069fe:	693b      	ldr	r3, [r7, #16]
 8006a00:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	f040 8093 	bne.w	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 8006a0a:	697b      	ldr	r3, [r7, #20]
 8006a0c:	4a4b      	ldr	r2, [pc, #300]	@ (8006b3c <PCD_EP_OutXfrComplete_int+0x1c8>)
 8006a0e:	4293      	cmp	r3, r2
 8006a10:	d90f      	bls.n	8006a32 <PCD_EP_OutXfrComplete_int+0xbe>
 8006a12:	693b      	ldr	r3, [r7, #16]
 8006a14:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006a18:	2b00      	cmp	r3, #0
 8006a1a:	d00a      	beq.n	8006a32 <PCD_EP_OutXfrComplete_int+0xbe>
 8006a1c:	683b      	ldr	r3, [r7, #0]
 8006a1e:	015a      	lsls	r2, r3, #5
 8006a20:	69bb      	ldr	r3, [r7, #24]
 8006a22:	4413      	add	r3, r2
 8006a24:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006a28:	461a      	mov	r2, r3
 8006a2a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8006a2e:	6093      	str	r3, [r2, #8]
 8006a30:	e07e      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 8006a32:	683a      	ldr	r2, [r7, #0]
 8006a34:	4613      	mov	r3, r2
 8006a36:	00db      	lsls	r3, r3, #3
 8006a38:	4413      	add	r3, r2
 8006a3a:	009b      	lsls	r3, r3, #2
 8006a3c:	f503 7314 	add.w	r3, r3, #592	@ 0x250
 8006a40:	687a      	ldr	r2, [r7, #4]
 8006a42:	4413      	add	r3, r2
 8006a44:	3304      	adds	r3, #4
 8006a46:	60fb      	str	r3, [r7, #12]
 8006a48:	68fb      	ldr	r3, [r7, #12]
 8006a4a:	6a1a      	ldr	r2, [r3, #32]
 8006a4c:	683b      	ldr	r3, [r7, #0]
 8006a4e:	0159      	lsls	r1, r3, #5
 8006a50:	69bb      	ldr	r3, [r7, #24]
 8006a52:	440b      	add	r3, r1
 8006a54:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006a58:	691b      	ldr	r3, [r3, #16]
 8006a5a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8006a5e:	1ad2      	subs	r2, r2, r3
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	615a      	str	r2, [r3, #20]
 8006a64:	683b      	ldr	r3, [r7, #0]
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d114      	bne.n	8006a94 <PCD_EP_OutXfrComplete_int+0x120>
 8006a6a:	68fb      	ldr	r3, [r7, #12]
 8006a6c:	691b      	ldr	r3, [r3, #16]
 8006a6e:	2b00      	cmp	r3, #0
 8006a70:	d109      	bne.n	8006a86 <PCD_EP_OutXfrComplete_int+0x112>
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	6818      	ldr	r0, [r3, #0]
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8006a7c:	461a      	mov	r2, r3
 8006a7e:	2101      	movs	r1, #1
 8006a80:	f007 f904 	bl	800dc8c <USB_EP0_OutStart>
 8006a84:	e006      	b.n	8006a94 <PCD_EP_OutXfrComplete_int+0x120>
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	68da      	ldr	r2, [r3, #12]
 8006a8a:	68fb      	ldr	r3, [r7, #12]
 8006a8c:	695b      	ldr	r3, [r3, #20]
 8006a8e:	441a      	add	r2, r3
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	60da      	str	r2, [r3, #12]
 8006a94:	683b      	ldr	r3, [r7, #0]
 8006a96:	b2db      	uxtb	r3, r3
 8006a98:	4619      	mov	r1, r3
 8006a9a:	6878      	ldr	r0, [r7, #4]
 8006a9c:	f009 fc10 	bl	80102c0 <HAL_PCD_DataOutStageCallback>
 8006aa0:	e046      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 8006aa2:	697b      	ldr	r3, [r7, #20]
 8006aa4:	4a26      	ldr	r2, [pc, #152]	@ (8006b40 <PCD_EP_OutXfrComplete_int+0x1cc>)
 8006aa6:	4293      	cmp	r3, r2
 8006aa8:	d124      	bne.n	8006af4 <PCD_EP_OutXfrComplete_int+0x180>
 8006aaa:	693b      	ldr	r3, [r7, #16]
 8006aac:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d00a      	beq.n	8006aca <PCD_EP_OutXfrComplete_int+0x156>
 8006ab4:	683b      	ldr	r3, [r7, #0]
 8006ab6:	015a      	lsls	r2, r3, #5
 8006ab8:	69bb      	ldr	r3, [r7, #24]
 8006aba:	4413      	add	r3, r2
 8006abc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006ac0:	461a      	mov	r2, r3
 8006ac2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8006ac6:	6093      	str	r3, [r2, #8]
 8006ac8:	e032      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 8006aca:	693b      	ldr	r3, [r7, #16]
 8006acc:	f003 0320 	and.w	r3, r3, #32
 8006ad0:	2b00      	cmp	r3, #0
 8006ad2:	d008      	beq.n	8006ae6 <PCD_EP_OutXfrComplete_int+0x172>
 8006ad4:	683b      	ldr	r3, [r7, #0]
 8006ad6:	015a      	lsls	r2, r3, #5
 8006ad8:	69bb      	ldr	r3, [r7, #24]
 8006ada:	4413      	add	r3, r2
 8006adc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006ae0:	461a      	mov	r2, r3
 8006ae2:	2320      	movs	r3, #32
 8006ae4:	6093      	str	r3, [r2, #8]
 8006ae6:	683b      	ldr	r3, [r7, #0]
 8006ae8:	b2db      	uxtb	r3, r3
 8006aea:	4619      	mov	r1, r3
 8006aec:	6878      	ldr	r0, [r7, #4]
 8006aee:	f009 fbe7 	bl	80102c0 <HAL_PCD_DataOutStageCallback>
 8006af2:	e01d      	b.n	8006b30 <PCD_EP_OutXfrComplete_int+0x1bc>
 8006af4:	683b      	ldr	r3, [r7, #0]
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	d114      	bne.n	8006b24 <PCD_EP_OutXfrComplete_int+0x1b0>
 8006afa:	6879      	ldr	r1, [r7, #4]
 8006afc:	683a      	ldr	r2, [r7, #0]
 8006afe:	4613      	mov	r3, r2
 8006b00:	00db      	lsls	r3, r3, #3
 8006b02:	4413      	add	r3, r2
 8006b04:	009b      	lsls	r3, r3, #2
 8006b06:	440b      	add	r3, r1
 8006b08:	f503 7319 	add.w	r3, r3, #612	@ 0x264
 8006b0c:	681b      	ldr	r3, [r3, #0]
 8006b0e:	2b00      	cmp	r3, #0
 8006b10:	d108      	bne.n	8006b24 <PCD_EP_OutXfrComplete_int+0x1b0>
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	6818      	ldr	r0, [r3, #0]
 8006b16:	687b      	ldr	r3, [r7, #4]
 8006b18:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8006b1c:	461a      	mov	r2, r3
 8006b1e:	2100      	movs	r1, #0
 8006b20:	f007 f8b4 	bl	800dc8c <USB_EP0_OutStart>
 8006b24:	683b      	ldr	r3, [r7, #0]
 8006b26:	b2db      	uxtb	r3, r3
 8006b28:	4619      	mov	r1, r3
 8006b2a:	6878      	ldr	r0, [r7, #4]
 8006b2c:	f009 fbc8 	bl	80102c0 <HAL_PCD_DataOutStageCallback>
 8006b30:	2300      	movs	r3, #0
 8006b32:	4618      	mov	r0, r3
 8006b34:	3720      	adds	r7, #32
 8006b36:	46bd      	mov	sp, r7
 8006b38:	bd80      	pop	{r7, pc}
 8006b3a:	bf00      	nop
 8006b3c:	4f54300a 	.word	0x4f54300a
 8006b40:	4f54310a 	.word	0x4f54310a

08006b44 <PCD_EP_OutSetupPacket_int>:
 8006b44:	b580      	push	{r7, lr}
 8006b46:	b086      	sub	sp, #24
 8006b48:	af00      	add	r7, sp, #0
 8006b4a:	6078      	str	r0, [r7, #4]
 8006b4c:	6039      	str	r1, [r7, #0]
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	617b      	str	r3, [r7, #20]
 8006b54:	697b      	ldr	r3, [r7, #20]
 8006b56:	613b      	str	r3, [r7, #16]
 8006b58:	697b      	ldr	r3, [r7, #20]
 8006b5a:	333c      	adds	r3, #60	@ 0x3c
 8006b5c:	3304      	adds	r3, #4
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	60fb      	str	r3, [r7, #12]
 8006b62:	683b      	ldr	r3, [r7, #0]
 8006b64:	015a      	lsls	r2, r3, #5
 8006b66:	693b      	ldr	r3, [r7, #16]
 8006b68:	4413      	add	r3, r2
 8006b6a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006b6e:	689b      	ldr	r3, [r3, #8]
 8006b70:	60bb      	str	r3, [r7, #8]
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	4a15      	ldr	r2, [pc, #84]	@ (8006bcc <PCD_EP_OutSetupPacket_int+0x88>)
 8006b76:	4293      	cmp	r3, r2
 8006b78:	d90e      	bls.n	8006b98 <PCD_EP_OutSetupPacket_int+0x54>
 8006b7a:	68bb      	ldr	r3, [r7, #8]
 8006b7c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006b80:	2b00      	cmp	r3, #0
 8006b82:	d009      	beq.n	8006b98 <PCD_EP_OutSetupPacket_int+0x54>
 8006b84:	683b      	ldr	r3, [r7, #0]
 8006b86:	015a      	lsls	r2, r3, #5
 8006b88:	693b      	ldr	r3, [r7, #16]
 8006b8a:	4413      	add	r3, r2
 8006b8c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8006b90:	461a      	mov	r2, r3
 8006b92:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8006b96:	6093      	str	r3, [r2, #8]
 8006b98:	6878      	ldr	r0, [r7, #4]
 8006b9a:	f009 fb7f 	bl	801029c <HAL_PCD_SetupStageCallback>
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	4a0a      	ldr	r2, [pc, #40]	@ (8006bcc <PCD_EP_OutSetupPacket_int+0x88>)
 8006ba2:	4293      	cmp	r3, r2
 8006ba4:	d90c      	bls.n	8006bc0 <PCD_EP_OutSetupPacket_int+0x7c>
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	799b      	ldrb	r3, [r3, #6]
 8006baa:	2b01      	cmp	r3, #1
 8006bac:	d108      	bne.n	8006bc0 <PCD_EP_OutSetupPacket_int+0x7c>
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	6818      	ldr	r0, [r3, #0]
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 8006bb8:	461a      	mov	r2, r3
 8006bba:	2101      	movs	r1, #1
 8006bbc:	f007 f866 	bl	800dc8c <USB_EP0_OutStart>
 8006bc0:	2300      	movs	r3, #0
 8006bc2:	4618      	mov	r0, r3
 8006bc4:	3718      	adds	r7, #24
 8006bc6:	46bd      	mov	sp, r7
 8006bc8:	bd80      	pop	{r7, pc}
 8006bca:	bf00      	nop
 8006bcc:	4f54300a 	.word	0x4f54300a

08006bd0 <HAL_PCDEx_SetTxFiFo>:
 8006bd0:	b480      	push	{r7}
 8006bd2:	b085      	sub	sp, #20
 8006bd4:	af00      	add	r7, sp, #0
 8006bd6:	6078      	str	r0, [r7, #4]
 8006bd8:	460b      	mov	r3, r1
 8006bda:	70fb      	strb	r3, [r7, #3]
 8006bdc:	4613      	mov	r3, r2
 8006bde:	803b      	strh	r3, [r7, #0]
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006be6:	60bb      	str	r3, [r7, #8]
 8006be8:	78fb      	ldrb	r3, [r7, #3]
 8006bea:	2b00      	cmp	r3, #0
 8006bec:	d107      	bne.n	8006bfe <HAL_PCDEx_SetTxFiFo+0x2e>
 8006bee:	883b      	ldrh	r3, [r7, #0]
 8006bf0:	0419      	lsls	r1, r3, #16
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	681b      	ldr	r3, [r3, #0]
 8006bf6:	68ba      	ldr	r2, [r7, #8]
 8006bf8:	430a      	orrs	r2, r1
 8006bfa:	629a      	str	r2, [r3, #40]	@ 0x28
 8006bfc:	e028      	b.n	8006c50 <HAL_PCDEx_SetTxFiFo+0x80>
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c04:	0c1b      	lsrs	r3, r3, #16
 8006c06:	68ba      	ldr	r2, [r7, #8]
 8006c08:	4413      	add	r3, r2
 8006c0a:	60bb      	str	r3, [r7, #8]
 8006c0c:	2300      	movs	r3, #0
 8006c0e:	73fb      	strb	r3, [r7, #15]
 8006c10:	e00d      	b.n	8006c2e <HAL_PCDEx_SetTxFiFo+0x5e>
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	681a      	ldr	r2, [r3, #0]
 8006c16:	7bfb      	ldrb	r3, [r7, #15]
 8006c18:	3340      	adds	r3, #64	@ 0x40
 8006c1a:	009b      	lsls	r3, r3, #2
 8006c1c:	4413      	add	r3, r2
 8006c1e:	685b      	ldr	r3, [r3, #4]
 8006c20:	0c1b      	lsrs	r3, r3, #16
 8006c22:	68ba      	ldr	r2, [r7, #8]
 8006c24:	4413      	add	r3, r2
 8006c26:	60bb      	str	r3, [r7, #8]
 8006c28:	7bfb      	ldrb	r3, [r7, #15]
 8006c2a:	3301      	adds	r3, #1
 8006c2c:	73fb      	strb	r3, [r7, #15]
 8006c2e:	7bfa      	ldrb	r2, [r7, #15]
 8006c30:	78fb      	ldrb	r3, [r7, #3]
 8006c32:	3b01      	subs	r3, #1
 8006c34:	429a      	cmp	r2, r3
 8006c36:	d3ec      	bcc.n	8006c12 <HAL_PCDEx_SetTxFiFo+0x42>
 8006c38:	883b      	ldrh	r3, [r7, #0]
 8006c3a:	0418      	lsls	r0, r3, #16
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	6819      	ldr	r1, [r3, #0]
 8006c40:	78fb      	ldrb	r3, [r7, #3]
 8006c42:	3b01      	subs	r3, #1
 8006c44:	68ba      	ldr	r2, [r7, #8]
 8006c46:	4302      	orrs	r2, r0
 8006c48:	3340      	adds	r3, #64	@ 0x40
 8006c4a:	009b      	lsls	r3, r3, #2
 8006c4c:	440b      	add	r3, r1
 8006c4e:	605a      	str	r2, [r3, #4]
 8006c50:	2300      	movs	r3, #0
 8006c52:	4618      	mov	r0, r3
 8006c54:	3714      	adds	r7, #20
 8006c56:	46bd      	mov	sp, r7
 8006c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c5c:	4770      	bx	lr

08006c5e <HAL_PCDEx_SetRxFiFo>:
 8006c5e:	b480      	push	{r7}
 8006c60:	b083      	sub	sp, #12
 8006c62:	af00      	add	r7, sp, #0
 8006c64:	6078      	str	r0, [r7, #4]
 8006c66:	460b      	mov	r3, r1
 8006c68:	807b      	strh	r3, [r7, #2]
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	887a      	ldrh	r2, [r7, #2]
 8006c70:	625a      	str	r2, [r3, #36]	@ 0x24
 8006c72:	2300      	movs	r3, #0
 8006c74:	4618      	mov	r0, r3
 8006c76:	370c      	adds	r7, #12
 8006c78:	46bd      	mov	sp, r7
 8006c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c7e:	4770      	bx	lr

08006c80 <HAL_PCDEx_ActivateLPM>:
 8006c80:	b480      	push	{r7}
 8006c82:	b085      	sub	sp, #20
 8006c84:	af00      	add	r7, sp, #0
 8006c86:	6078      	str	r0, [r7, #4]
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	60fb      	str	r3, [r7, #12]
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	2201      	movs	r2, #1
 8006c92:	f8c3 24d8 	str.w	r2, [r3, #1240]	@ 0x4d8
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	2200      	movs	r2, #0
 8006c9a:	f883 24cc 	strb.w	r2, [r3, #1228]	@ 0x4cc
 8006c9e:	68fb      	ldr	r3, [r7, #12]
 8006ca0:	699b      	ldr	r3, [r3, #24]
 8006ca2:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 8006ca6:	68fb      	ldr	r3, [r7, #12]
 8006ca8:	619a      	str	r2, [r3, #24]
 8006caa:	68fb      	ldr	r3, [r7, #12]
 8006cac:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8006cae:	4b05      	ldr	r3, [pc, #20]	@ (8006cc4 <HAL_PCDEx_ActivateLPM+0x44>)
 8006cb0:	4313      	orrs	r3, r2
 8006cb2:	68fa      	ldr	r2, [r7, #12]
 8006cb4:	6553      	str	r3, [r2, #84]	@ 0x54
 8006cb6:	2300      	movs	r3, #0
 8006cb8:	4618      	mov	r0, r3
 8006cba:	3714      	adds	r7, #20
 8006cbc:	46bd      	mov	sp, r7
 8006cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc2:	4770      	bx	lr
 8006cc4:	10000003 	.word	0x10000003

08006cc8 <HAL_PCDEx_LPM_Callback>:
 8006cc8:	b480      	push	{r7}
 8006cca:	b083      	sub	sp, #12
 8006ccc:	af00      	add	r7, sp, #0
 8006cce:	6078      	str	r0, [r7, #4]
 8006cd0:	460b      	mov	r3, r1
 8006cd2:	70fb      	strb	r3, [r7, #3]
 8006cd4:	bf00      	nop
 8006cd6:	370c      	adds	r7, #12
 8006cd8:	46bd      	mov	sp, r7
 8006cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cde:	4770      	bx	lr

08006ce0 <HAL_PWREx_ConfigSupply>:
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	b084      	sub	sp, #16
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	6078      	str	r0, [r7, #4]
 8006ce8:	4b19      	ldr	r3, [pc, #100]	@ (8006d50 <HAL_PWREx_ConfigSupply+0x70>)
 8006cea:	68db      	ldr	r3, [r3, #12]
 8006cec:	f003 0304 	and.w	r3, r3, #4
 8006cf0:	2b04      	cmp	r3, #4
 8006cf2:	d00a      	beq.n	8006d0a <HAL_PWREx_ConfigSupply+0x2a>
 8006cf4:	4b16      	ldr	r3, [pc, #88]	@ (8006d50 <HAL_PWREx_ConfigSupply+0x70>)
 8006cf6:	68db      	ldr	r3, [r3, #12]
 8006cf8:	f003 0307 	and.w	r3, r3, #7
 8006cfc:	687a      	ldr	r2, [r7, #4]
 8006cfe:	429a      	cmp	r2, r3
 8006d00:	d001      	beq.n	8006d06 <HAL_PWREx_ConfigSupply+0x26>
 8006d02:	2301      	movs	r3, #1
 8006d04:	e01f      	b.n	8006d46 <HAL_PWREx_ConfigSupply+0x66>
 8006d06:	2300      	movs	r3, #0
 8006d08:	e01d      	b.n	8006d46 <HAL_PWREx_ConfigSupply+0x66>
 8006d0a:	4b11      	ldr	r3, [pc, #68]	@ (8006d50 <HAL_PWREx_ConfigSupply+0x70>)
 8006d0c:	68db      	ldr	r3, [r3, #12]
 8006d0e:	f023 0207 	bic.w	r2, r3, #7
 8006d12:	490f      	ldr	r1, [pc, #60]	@ (8006d50 <HAL_PWREx_ConfigSupply+0x70>)
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	4313      	orrs	r3, r2
 8006d18:	60cb      	str	r3, [r1, #12]
 8006d1a:	f7fc fceb 	bl	80036f4 <HAL_GetTick>
 8006d1e:	60f8      	str	r0, [r7, #12]
 8006d20:	e009      	b.n	8006d36 <HAL_PWREx_ConfigSupply+0x56>
 8006d22:	f7fc fce7 	bl	80036f4 <HAL_GetTick>
 8006d26:	4602      	mov	r2, r0
 8006d28:	68fb      	ldr	r3, [r7, #12]
 8006d2a:	1ad3      	subs	r3, r2, r3
 8006d2c:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8006d30:	d901      	bls.n	8006d36 <HAL_PWREx_ConfigSupply+0x56>
 8006d32:	2301      	movs	r3, #1
 8006d34:	e007      	b.n	8006d46 <HAL_PWREx_ConfigSupply+0x66>
 8006d36:	4b06      	ldr	r3, [pc, #24]	@ (8006d50 <HAL_PWREx_ConfigSupply+0x70>)
 8006d38:	685b      	ldr	r3, [r3, #4]
 8006d3a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006d3e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006d42:	d1ee      	bne.n	8006d22 <HAL_PWREx_ConfigSupply+0x42>
 8006d44:	2300      	movs	r3, #0
 8006d46:	4618      	mov	r0, r3
 8006d48:	3710      	adds	r7, #16
 8006d4a:	46bd      	mov	sp, r7
 8006d4c:	bd80      	pop	{r7, pc}
 8006d4e:	bf00      	nop
 8006d50:	58024800 	.word	0x58024800

08006d54 <HAL_PWREx_EnableUSBVoltageDetector>:
 8006d54:	b480      	push	{r7}
 8006d56:	af00      	add	r7, sp, #0
 8006d58:	4b05      	ldr	r3, [pc, #20]	@ (8006d70 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 8006d5a:	68db      	ldr	r3, [r3, #12]
 8006d5c:	4a04      	ldr	r2, [pc, #16]	@ (8006d70 <HAL_PWREx_EnableUSBVoltageDetector+0x1c>)
 8006d5e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8006d62:	60d3      	str	r3, [r2, #12]
 8006d64:	bf00      	nop
 8006d66:	46bd      	mov	sp, r7
 8006d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d6c:	4770      	bx	lr
 8006d6e:	bf00      	nop
 8006d70:	58024800 	.word	0x58024800

08006d74 <HAL_RCC_OscConfig>:
 8006d74:	b580      	push	{r7, lr}
 8006d76:	b08c      	sub	sp, #48	@ 0x30
 8006d78:	af00      	add	r7, sp, #0
 8006d7a:	6078      	str	r0, [r7, #4]
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d102      	bne.n	8006d88 <HAL_RCC_OscConfig+0x14>
 8006d82:	2301      	movs	r3, #1
 8006d84:	f000 bc48 	b.w	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	681b      	ldr	r3, [r3, #0]
 8006d8c:	f003 0301 	and.w	r3, r3, #1
 8006d90:	2b00      	cmp	r3, #0
 8006d92:	f000 8088 	beq.w	8006ea6 <HAL_RCC_OscConfig+0x132>
 8006d96:	4b99      	ldr	r3, [pc, #612]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006d98:	691b      	ldr	r3, [r3, #16]
 8006d9a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006d9e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006da0:	4b96      	ldr	r3, [pc, #600]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006da2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006da4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8006da6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006da8:	2b10      	cmp	r3, #16
 8006daa:	d007      	beq.n	8006dbc <HAL_RCC_OscConfig+0x48>
 8006dac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006dae:	2b18      	cmp	r3, #24
 8006db0:	d111      	bne.n	8006dd6 <HAL_RCC_OscConfig+0x62>
 8006db2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006db4:	f003 0303 	and.w	r3, r3, #3
 8006db8:	2b02      	cmp	r3, #2
 8006dba:	d10c      	bne.n	8006dd6 <HAL_RCC_OscConfig+0x62>
 8006dbc:	4b8f      	ldr	r3, [pc, #572]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	d06d      	beq.n	8006ea4 <HAL_RCC_OscConfig+0x130>
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	685b      	ldr	r3, [r3, #4]
 8006dcc:	2b00      	cmp	r3, #0
 8006dce:	d169      	bne.n	8006ea4 <HAL_RCC_OscConfig+0x130>
 8006dd0:	2301      	movs	r3, #1
 8006dd2:	f000 bc21 	b.w	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	685b      	ldr	r3, [r3, #4]
 8006dda:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006dde:	d106      	bne.n	8006dee <HAL_RCC_OscConfig+0x7a>
 8006de0:	4b86      	ldr	r3, [pc, #536]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	4a85      	ldr	r2, [pc, #532]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006de6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006dea:	6013      	str	r3, [r2, #0]
 8006dec:	e02e      	b.n	8006e4c <HAL_RCC_OscConfig+0xd8>
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	685b      	ldr	r3, [r3, #4]
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	d10c      	bne.n	8006e10 <HAL_RCC_OscConfig+0x9c>
 8006df6:	4b81      	ldr	r3, [pc, #516]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	4a80      	ldr	r2, [pc, #512]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006dfc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e00:	6013      	str	r3, [r2, #0]
 8006e02:	4b7e      	ldr	r3, [pc, #504]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	4a7d      	ldr	r2, [pc, #500]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e08:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006e0c:	6013      	str	r3, [r2, #0]
 8006e0e:	e01d      	b.n	8006e4c <HAL_RCC_OscConfig+0xd8>
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	685b      	ldr	r3, [r3, #4]
 8006e14:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006e18:	d10c      	bne.n	8006e34 <HAL_RCC_OscConfig+0xc0>
 8006e1a:	4b78      	ldr	r3, [pc, #480]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	4a77      	ldr	r2, [pc, #476]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e20:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006e24:	6013      	str	r3, [r2, #0]
 8006e26:	4b75      	ldr	r3, [pc, #468]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	4a74      	ldr	r2, [pc, #464]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e2c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e30:	6013      	str	r3, [r2, #0]
 8006e32:	e00b      	b.n	8006e4c <HAL_RCC_OscConfig+0xd8>
 8006e34:	4b71      	ldr	r3, [pc, #452]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	4a70      	ldr	r2, [pc, #448]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e3a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006e3e:	6013      	str	r3, [r2, #0]
 8006e40:	4b6e      	ldr	r3, [pc, #440]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e42:	681b      	ldr	r3, [r3, #0]
 8006e44:	4a6d      	ldr	r2, [pc, #436]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e46:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006e4a:	6013      	str	r3, [r2, #0]
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	685b      	ldr	r3, [r3, #4]
 8006e50:	2b00      	cmp	r3, #0
 8006e52:	d013      	beq.n	8006e7c <HAL_RCC_OscConfig+0x108>
 8006e54:	f7fc fc4e 	bl	80036f4 <HAL_GetTick>
 8006e58:	6278      	str	r0, [r7, #36]	@ 0x24
 8006e5a:	e008      	b.n	8006e6e <HAL_RCC_OscConfig+0xfa>
 8006e5c:	f7fc fc4a 	bl	80036f4 <HAL_GetTick>
 8006e60:	4602      	mov	r2, r0
 8006e62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e64:	1ad3      	subs	r3, r2, r3
 8006e66:	2b64      	cmp	r3, #100	@ 0x64
 8006e68:	d901      	bls.n	8006e6e <HAL_RCC_OscConfig+0xfa>
 8006e6a:	2303      	movs	r3, #3
 8006e6c:	e3d4      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006e6e:	4b63      	ldr	r3, [pc, #396]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	d0f0      	beq.n	8006e5c <HAL_RCC_OscConfig+0xe8>
 8006e7a:	e014      	b.n	8006ea6 <HAL_RCC_OscConfig+0x132>
 8006e7c:	f7fc fc3a 	bl	80036f4 <HAL_GetTick>
 8006e80:	6278      	str	r0, [r7, #36]	@ 0x24
 8006e82:	e008      	b.n	8006e96 <HAL_RCC_OscConfig+0x122>
 8006e84:	f7fc fc36 	bl	80036f4 <HAL_GetTick>
 8006e88:	4602      	mov	r2, r0
 8006e8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e8c:	1ad3      	subs	r3, r2, r3
 8006e8e:	2b64      	cmp	r3, #100	@ 0x64
 8006e90:	d901      	bls.n	8006e96 <HAL_RCC_OscConfig+0x122>
 8006e92:	2303      	movs	r3, #3
 8006e94:	e3c0      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006e96:	4b59      	ldr	r3, [pc, #356]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e9e:	2b00      	cmp	r3, #0
 8006ea0:	d1f0      	bne.n	8006e84 <HAL_RCC_OscConfig+0x110>
 8006ea2:	e000      	b.n	8006ea6 <HAL_RCC_OscConfig+0x132>
 8006ea4:	bf00      	nop
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	681b      	ldr	r3, [r3, #0]
 8006eaa:	f003 0302 	and.w	r3, r3, #2
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	f000 80ca 	beq.w	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006eb4:	4b51      	ldr	r3, [pc, #324]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006eb6:	691b      	ldr	r3, [r3, #16]
 8006eb8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006ebc:	623b      	str	r3, [r7, #32]
 8006ebe:	4b4f      	ldr	r3, [pc, #316]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006ec0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006ec2:	61fb      	str	r3, [r7, #28]
 8006ec4:	6a3b      	ldr	r3, [r7, #32]
 8006ec6:	2b00      	cmp	r3, #0
 8006ec8:	d007      	beq.n	8006eda <HAL_RCC_OscConfig+0x166>
 8006eca:	6a3b      	ldr	r3, [r7, #32]
 8006ecc:	2b18      	cmp	r3, #24
 8006ece:	d156      	bne.n	8006f7e <HAL_RCC_OscConfig+0x20a>
 8006ed0:	69fb      	ldr	r3, [r7, #28]
 8006ed2:	f003 0303 	and.w	r3, r3, #3
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	d151      	bne.n	8006f7e <HAL_RCC_OscConfig+0x20a>
 8006eda:	4b48      	ldr	r3, [pc, #288]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	f003 0304 	and.w	r3, r3, #4
 8006ee2:	2b00      	cmp	r3, #0
 8006ee4:	d005      	beq.n	8006ef2 <HAL_RCC_OscConfig+0x17e>
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	68db      	ldr	r3, [r3, #12]
 8006eea:	2b00      	cmp	r3, #0
 8006eec:	d101      	bne.n	8006ef2 <HAL_RCC_OscConfig+0x17e>
 8006eee:	2301      	movs	r3, #1
 8006ef0:	e392      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006ef2:	4b42      	ldr	r3, [pc, #264]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006ef4:	681b      	ldr	r3, [r3, #0]
 8006ef6:	f023 0219 	bic.w	r2, r3, #25
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	68db      	ldr	r3, [r3, #12]
 8006efe:	493f      	ldr	r1, [pc, #252]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f00:	4313      	orrs	r3, r2
 8006f02:	600b      	str	r3, [r1, #0]
 8006f04:	f7fc fbf6 	bl	80036f4 <HAL_GetTick>
 8006f08:	6278      	str	r0, [r7, #36]	@ 0x24
 8006f0a:	e008      	b.n	8006f1e <HAL_RCC_OscConfig+0x1aa>
 8006f0c:	f7fc fbf2 	bl	80036f4 <HAL_GetTick>
 8006f10:	4602      	mov	r2, r0
 8006f12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006f14:	1ad3      	subs	r3, r2, r3
 8006f16:	2b02      	cmp	r3, #2
 8006f18:	d901      	bls.n	8006f1e <HAL_RCC_OscConfig+0x1aa>
 8006f1a:	2303      	movs	r3, #3
 8006f1c:	e37c      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006f1e:	4b37      	ldr	r3, [pc, #220]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f20:	681b      	ldr	r3, [r3, #0]
 8006f22:	f003 0304 	and.w	r3, r3, #4
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	d0f0      	beq.n	8006f0c <HAL_RCC_OscConfig+0x198>
 8006f2a:	f7fc fc13 	bl	8003754 <HAL_GetREVID>
 8006f2e:	4603      	mov	r3, r0
 8006f30:	f241 0203 	movw	r2, #4099	@ 0x1003
 8006f34:	4293      	cmp	r3, r2
 8006f36:	d817      	bhi.n	8006f68 <HAL_RCC_OscConfig+0x1f4>
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	691b      	ldr	r3, [r3, #16]
 8006f3c:	2b40      	cmp	r3, #64	@ 0x40
 8006f3e:	d108      	bne.n	8006f52 <HAL_RCC_OscConfig+0x1de>
 8006f40:	4b2e      	ldr	r3, [pc, #184]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f42:	685b      	ldr	r3, [r3, #4]
 8006f44:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
 8006f48:	4a2c      	ldr	r2, [pc, #176]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f4a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8006f4e:	6053      	str	r3, [r2, #4]
 8006f50:	e07a      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006f52:	4b2a      	ldr	r3, [pc, #168]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f54:	685b      	ldr	r3, [r3, #4]
 8006f56:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	691b      	ldr	r3, [r3, #16]
 8006f5e:	031b      	lsls	r3, r3, #12
 8006f60:	4926      	ldr	r1, [pc, #152]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f62:	4313      	orrs	r3, r2
 8006f64:	604b      	str	r3, [r1, #4]
 8006f66:	e06f      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006f68:	4b24      	ldr	r3, [pc, #144]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f6a:	685b      	ldr	r3, [r3, #4]
 8006f6c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	691b      	ldr	r3, [r3, #16]
 8006f74:	061b      	lsls	r3, r3, #24
 8006f76:	4921      	ldr	r1, [pc, #132]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f78:	4313      	orrs	r3, r2
 8006f7a:	604b      	str	r3, [r1, #4]
 8006f7c:	e064      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	68db      	ldr	r3, [r3, #12]
 8006f82:	2b00      	cmp	r3, #0
 8006f84:	d047      	beq.n	8007016 <HAL_RCC_OscConfig+0x2a2>
 8006f86:	4b1d      	ldr	r3, [pc, #116]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f88:	681b      	ldr	r3, [r3, #0]
 8006f8a:	f023 0219 	bic.w	r2, r3, #25
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	68db      	ldr	r3, [r3, #12]
 8006f92:	491a      	ldr	r1, [pc, #104]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006f94:	4313      	orrs	r3, r2
 8006f96:	600b      	str	r3, [r1, #0]
 8006f98:	f7fc fbac 	bl	80036f4 <HAL_GetTick>
 8006f9c:	6278      	str	r0, [r7, #36]	@ 0x24
 8006f9e:	e008      	b.n	8006fb2 <HAL_RCC_OscConfig+0x23e>
 8006fa0:	f7fc fba8 	bl	80036f4 <HAL_GetTick>
 8006fa4:	4602      	mov	r2, r0
 8006fa6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fa8:	1ad3      	subs	r3, r2, r3
 8006faa:	2b02      	cmp	r3, #2
 8006fac:	d901      	bls.n	8006fb2 <HAL_RCC_OscConfig+0x23e>
 8006fae:	2303      	movs	r3, #3
 8006fb0:	e332      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8006fb2:	4b12      	ldr	r3, [pc, #72]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	f003 0304 	and.w	r3, r3, #4
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d0f0      	beq.n	8006fa0 <HAL_RCC_OscConfig+0x22c>
 8006fbe:	f7fc fbc9 	bl	8003754 <HAL_GetREVID>
 8006fc2:	4603      	mov	r3, r0
 8006fc4:	f241 0203 	movw	r2, #4099	@ 0x1003
 8006fc8:	4293      	cmp	r3, r2
 8006fca:	d819      	bhi.n	8007000 <HAL_RCC_OscConfig+0x28c>
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	691b      	ldr	r3, [r3, #16]
 8006fd0:	2b40      	cmp	r3, #64	@ 0x40
 8006fd2:	d108      	bne.n	8006fe6 <HAL_RCC_OscConfig+0x272>
 8006fd4:	4b09      	ldr	r3, [pc, #36]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006fd6:	685b      	ldr	r3, [r3, #4]
 8006fd8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
 8006fdc:	4a07      	ldr	r2, [pc, #28]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006fde:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8006fe2:	6053      	str	r3, [r2, #4]
 8006fe4:	e030      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006fe6:	4b05      	ldr	r3, [pc, #20]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006fe8:	685b      	ldr	r3, [r3, #4]
 8006fea:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	691b      	ldr	r3, [r3, #16]
 8006ff2:	031b      	lsls	r3, r3, #12
 8006ff4:	4901      	ldr	r1, [pc, #4]	@ (8006ffc <HAL_RCC_OscConfig+0x288>)
 8006ff6:	4313      	orrs	r3, r2
 8006ff8:	604b      	str	r3, [r1, #4]
 8006ffa:	e025      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8006ffc:	58024400 	.word	0x58024400
 8007000:	4b9a      	ldr	r3, [pc, #616]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007002:	685b      	ldr	r3, [r3, #4]
 8007004:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	691b      	ldr	r3, [r3, #16]
 800700c:	061b      	lsls	r3, r3, #24
 800700e:	4997      	ldr	r1, [pc, #604]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007010:	4313      	orrs	r3, r2
 8007012:	604b      	str	r3, [r1, #4]
 8007014:	e018      	b.n	8007048 <HAL_RCC_OscConfig+0x2d4>
 8007016:	4b95      	ldr	r3, [pc, #596]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007018:	681b      	ldr	r3, [r3, #0]
 800701a:	4a94      	ldr	r2, [pc, #592]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800701c:	f023 0301 	bic.w	r3, r3, #1
 8007020:	6013      	str	r3, [r2, #0]
 8007022:	f7fc fb67 	bl	80036f4 <HAL_GetTick>
 8007026:	6278      	str	r0, [r7, #36]	@ 0x24
 8007028:	e008      	b.n	800703c <HAL_RCC_OscConfig+0x2c8>
 800702a:	f7fc fb63 	bl	80036f4 <HAL_GetTick>
 800702e:	4602      	mov	r2, r0
 8007030:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007032:	1ad3      	subs	r3, r2, r3
 8007034:	2b02      	cmp	r3, #2
 8007036:	d901      	bls.n	800703c <HAL_RCC_OscConfig+0x2c8>
 8007038:	2303      	movs	r3, #3
 800703a:	e2ed      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 800703c:	4b8b      	ldr	r3, [pc, #556]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	f003 0304 	and.w	r3, r3, #4
 8007044:	2b00      	cmp	r3, #0
 8007046:	d1f0      	bne.n	800702a <HAL_RCC_OscConfig+0x2b6>
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	f003 0310 	and.w	r3, r3, #16
 8007050:	2b00      	cmp	r3, #0
 8007052:	f000 80a9 	beq.w	80071a8 <HAL_RCC_OscConfig+0x434>
 8007056:	4b85      	ldr	r3, [pc, #532]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007058:	691b      	ldr	r3, [r3, #16]
 800705a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800705e:	61bb      	str	r3, [r7, #24]
 8007060:	4b82      	ldr	r3, [pc, #520]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007062:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007064:	617b      	str	r3, [r7, #20]
 8007066:	69bb      	ldr	r3, [r7, #24]
 8007068:	2b08      	cmp	r3, #8
 800706a:	d007      	beq.n	800707c <HAL_RCC_OscConfig+0x308>
 800706c:	69bb      	ldr	r3, [r7, #24]
 800706e:	2b18      	cmp	r3, #24
 8007070:	d13a      	bne.n	80070e8 <HAL_RCC_OscConfig+0x374>
 8007072:	697b      	ldr	r3, [r7, #20]
 8007074:	f003 0303 	and.w	r3, r3, #3
 8007078:	2b01      	cmp	r3, #1
 800707a:	d135      	bne.n	80070e8 <HAL_RCC_OscConfig+0x374>
 800707c:	4b7b      	ldr	r3, [pc, #492]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800707e:	681b      	ldr	r3, [r3, #0]
 8007080:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007084:	2b00      	cmp	r3, #0
 8007086:	d005      	beq.n	8007094 <HAL_RCC_OscConfig+0x320>
 8007088:	687b      	ldr	r3, [r7, #4]
 800708a:	69db      	ldr	r3, [r3, #28]
 800708c:	2b80      	cmp	r3, #128	@ 0x80
 800708e:	d001      	beq.n	8007094 <HAL_RCC_OscConfig+0x320>
 8007090:	2301      	movs	r3, #1
 8007092:	e2c1      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007094:	f7fc fb5e 	bl	8003754 <HAL_GetREVID>
 8007098:	4603      	mov	r3, r0
 800709a:	f241 0203 	movw	r2, #4099	@ 0x1003
 800709e:	4293      	cmp	r3, r2
 80070a0:	d817      	bhi.n	80070d2 <HAL_RCC_OscConfig+0x35e>
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	6a1b      	ldr	r3, [r3, #32]
 80070a6:	2b20      	cmp	r3, #32
 80070a8:	d108      	bne.n	80070bc <HAL_RCC_OscConfig+0x348>
 80070aa:	4b70      	ldr	r3, [pc, #448]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070ac:	685b      	ldr	r3, [r3, #4]
 80070ae:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
 80070b2:	4a6e      	ldr	r2, [pc, #440]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070b4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80070b8:	6053      	str	r3, [r2, #4]
 80070ba:	e075      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 80070bc:	4b6b      	ldr	r3, [pc, #428]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070be:	685b      	ldr	r3, [r3, #4]
 80070c0:	f023 42f8 	bic.w	r2, r3, #2080374784	@ 0x7c000000
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	6a1b      	ldr	r3, [r3, #32]
 80070c8:	069b      	lsls	r3, r3, #26
 80070ca:	4968      	ldr	r1, [pc, #416]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070cc:	4313      	orrs	r3, r2
 80070ce:	604b      	str	r3, [r1, #4]
 80070d0:	e06a      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 80070d2:	4b66      	ldr	r3, [pc, #408]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070d4:	68db      	ldr	r3, [r3, #12]
 80070d6:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	6a1b      	ldr	r3, [r3, #32]
 80070de:	061b      	lsls	r3, r3, #24
 80070e0:	4962      	ldr	r1, [pc, #392]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070e2:	4313      	orrs	r3, r2
 80070e4:	60cb      	str	r3, [r1, #12]
 80070e6:	e05f      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	69db      	ldr	r3, [r3, #28]
 80070ec:	2b00      	cmp	r3, #0
 80070ee:	d042      	beq.n	8007176 <HAL_RCC_OscConfig+0x402>
 80070f0:	4b5e      	ldr	r3, [pc, #376]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	4a5d      	ldr	r2, [pc, #372]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80070f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80070fa:	6013      	str	r3, [r2, #0]
 80070fc:	f7fc fafa 	bl	80036f4 <HAL_GetTick>
 8007100:	6278      	str	r0, [r7, #36]	@ 0x24
 8007102:	e008      	b.n	8007116 <HAL_RCC_OscConfig+0x3a2>
 8007104:	f7fc faf6 	bl	80036f4 <HAL_GetTick>
 8007108:	4602      	mov	r2, r0
 800710a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800710c:	1ad3      	subs	r3, r2, r3
 800710e:	2b02      	cmp	r3, #2
 8007110:	d901      	bls.n	8007116 <HAL_RCC_OscConfig+0x3a2>
 8007112:	2303      	movs	r3, #3
 8007114:	e280      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007116:	4b55      	ldr	r3, [pc, #340]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800711e:	2b00      	cmp	r3, #0
 8007120:	d0f0      	beq.n	8007104 <HAL_RCC_OscConfig+0x390>
 8007122:	f7fc fb17 	bl	8003754 <HAL_GetREVID>
 8007126:	4603      	mov	r3, r0
 8007128:	f241 0203 	movw	r2, #4099	@ 0x1003
 800712c:	4293      	cmp	r3, r2
 800712e:	d817      	bhi.n	8007160 <HAL_RCC_OscConfig+0x3ec>
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	6a1b      	ldr	r3, [r3, #32]
 8007134:	2b20      	cmp	r3, #32
 8007136:	d108      	bne.n	800714a <HAL_RCC_OscConfig+0x3d6>
 8007138:	4b4c      	ldr	r3, [pc, #304]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800713a:	685b      	ldr	r3, [r3, #4]
 800713c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
 8007140:	4a4a      	ldr	r2, [pc, #296]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007142:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8007146:	6053      	str	r3, [r2, #4]
 8007148:	e02e      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 800714a:	4b48      	ldr	r3, [pc, #288]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800714c:	685b      	ldr	r3, [r3, #4]
 800714e:	f023 42f8 	bic.w	r2, r3, #2080374784	@ 0x7c000000
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	6a1b      	ldr	r3, [r3, #32]
 8007156:	069b      	lsls	r3, r3, #26
 8007158:	4944      	ldr	r1, [pc, #272]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800715a:	4313      	orrs	r3, r2
 800715c:	604b      	str	r3, [r1, #4]
 800715e:	e023      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 8007160:	4b42      	ldr	r3, [pc, #264]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007162:	68db      	ldr	r3, [r3, #12]
 8007164:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	6a1b      	ldr	r3, [r3, #32]
 800716c:	061b      	lsls	r3, r3, #24
 800716e:	493f      	ldr	r1, [pc, #252]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007170:	4313      	orrs	r3, r2
 8007172:	60cb      	str	r3, [r1, #12]
 8007174:	e018      	b.n	80071a8 <HAL_RCC_OscConfig+0x434>
 8007176:	4b3d      	ldr	r3, [pc, #244]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	4a3c      	ldr	r2, [pc, #240]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800717c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007180:	6013      	str	r3, [r2, #0]
 8007182:	f7fc fab7 	bl	80036f4 <HAL_GetTick>
 8007186:	6278      	str	r0, [r7, #36]	@ 0x24
 8007188:	e008      	b.n	800719c <HAL_RCC_OscConfig+0x428>
 800718a:	f7fc fab3 	bl	80036f4 <HAL_GetTick>
 800718e:	4602      	mov	r2, r0
 8007190:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007192:	1ad3      	subs	r3, r2, r3
 8007194:	2b02      	cmp	r3, #2
 8007196:	d901      	bls.n	800719c <HAL_RCC_OscConfig+0x428>
 8007198:	2303      	movs	r3, #3
 800719a:	e23d      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 800719c:	4b33      	ldr	r3, [pc, #204]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80071a4:	2b00      	cmp	r3, #0
 80071a6:	d1f0      	bne.n	800718a <HAL_RCC_OscConfig+0x416>
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	681b      	ldr	r3, [r3, #0]
 80071ac:	f003 0308 	and.w	r3, r3, #8
 80071b0:	2b00      	cmp	r3, #0
 80071b2:	d036      	beq.n	8007222 <HAL_RCC_OscConfig+0x4ae>
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	695b      	ldr	r3, [r3, #20]
 80071b8:	2b00      	cmp	r3, #0
 80071ba:	d019      	beq.n	80071f0 <HAL_RCC_OscConfig+0x47c>
 80071bc:	4b2b      	ldr	r3, [pc, #172]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80071be:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80071c0:	4a2a      	ldr	r2, [pc, #168]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80071c2:	f043 0301 	orr.w	r3, r3, #1
 80071c6:	6753      	str	r3, [r2, #116]	@ 0x74
 80071c8:	f7fc fa94 	bl	80036f4 <HAL_GetTick>
 80071cc:	6278      	str	r0, [r7, #36]	@ 0x24
 80071ce:	e008      	b.n	80071e2 <HAL_RCC_OscConfig+0x46e>
 80071d0:	f7fc fa90 	bl	80036f4 <HAL_GetTick>
 80071d4:	4602      	mov	r2, r0
 80071d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80071d8:	1ad3      	subs	r3, r2, r3
 80071da:	2b02      	cmp	r3, #2
 80071dc:	d901      	bls.n	80071e2 <HAL_RCC_OscConfig+0x46e>
 80071de:	2303      	movs	r3, #3
 80071e0:	e21a      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 80071e2:	4b22      	ldr	r3, [pc, #136]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80071e4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80071e6:	f003 0302 	and.w	r3, r3, #2
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	d0f0      	beq.n	80071d0 <HAL_RCC_OscConfig+0x45c>
 80071ee:	e018      	b.n	8007222 <HAL_RCC_OscConfig+0x4ae>
 80071f0:	4b1e      	ldr	r3, [pc, #120]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80071f2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80071f4:	4a1d      	ldr	r2, [pc, #116]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 80071f6:	f023 0301 	bic.w	r3, r3, #1
 80071fa:	6753      	str	r3, [r2, #116]	@ 0x74
 80071fc:	f7fc fa7a 	bl	80036f4 <HAL_GetTick>
 8007200:	6278      	str	r0, [r7, #36]	@ 0x24
 8007202:	e008      	b.n	8007216 <HAL_RCC_OscConfig+0x4a2>
 8007204:	f7fc fa76 	bl	80036f4 <HAL_GetTick>
 8007208:	4602      	mov	r2, r0
 800720a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800720c:	1ad3      	subs	r3, r2, r3
 800720e:	2b02      	cmp	r3, #2
 8007210:	d901      	bls.n	8007216 <HAL_RCC_OscConfig+0x4a2>
 8007212:	2303      	movs	r3, #3
 8007214:	e200      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007216:	4b15      	ldr	r3, [pc, #84]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007218:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800721a:	f003 0302 	and.w	r3, r3, #2
 800721e:	2b00      	cmp	r3, #0
 8007220:	d1f0      	bne.n	8007204 <HAL_RCC_OscConfig+0x490>
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	681b      	ldr	r3, [r3, #0]
 8007226:	f003 0320 	and.w	r3, r3, #32
 800722a:	2b00      	cmp	r3, #0
 800722c:	d039      	beq.n	80072a2 <HAL_RCC_OscConfig+0x52e>
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	699b      	ldr	r3, [r3, #24]
 8007232:	2b00      	cmp	r3, #0
 8007234:	d01c      	beq.n	8007270 <HAL_RCC_OscConfig+0x4fc>
 8007236:	4b0d      	ldr	r3, [pc, #52]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 8007238:	681b      	ldr	r3, [r3, #0]
 800723a:	4a0c      	ldr	r2, [pc, #48]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800723c:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8007240:	6013      	str	r3, [r2, #0]
 8007242:	f7fc fa57 	bl	80036f4 <HAL_GetTick>
 8007246:	6278      	str	r0, [r7, #36]	@ 0x24
 8007248:	e008      	b.n	800725c <HAL_RCC_OscConfig+0x4e8>
 800724a:	f7fc fa53 	bl	80036f4 <HAL_GetTick>
 800724e:	4602      	mov	r2, r0
 8007250:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007252:	1ad3      	subs	r3, r2, r3
 8007254:	2b02      	cmp	r3, #2
 8007256:	d901      	bls.n	800725c <HAL_RCC_OscConfig+0x4e8>
 8007258:	2303      	movs	r3, #3
 800725a:	e1dd      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 800725c:	4b03      	ldr	r3, [pc, #12]	@ (800726c <HAL_RCC_OscConfig+0x4f8>)
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007264:	2b00      	cmp	r3, #0
 8007266:	d0f0      	beq.n	800724a <HAL_RCC_OscConfig+0x4d6>
 8007268:	e01b      	b.n	80072a2 <HAL_RCC_OscConfig+0x52e>
 800726a:	bf00      	nop
 800726c:	58024400 	.word	0x58024400
 8007270:	4b9b      	ldr	r3, [pc, #620]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007272:	681b      	ldr	r3, [r3, #0]
 8007274:	4a9a      	ldr	r2, [pc, #616]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007276:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800727a:	6013      	str	r3, [r2, #0]
 800727c:	f7fc fa3a 	bl	80036f4 <HAL_GetTick>
 8007280:	6278      	str	r0, [r7, #36]	@ 0x24
 8007282:	e008      	b.n	8007296 <HAL_RCC_OscConfig+0x522>
 8007284:	f7fc fa36 	bl	80036f4 <HAL_GetTick>
 8007288:	4602      	mov	r2, r0
 800728a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800728c:	1ad3      	subs	r3, r2, r3
 800728e:	2b02      	cmp	r3, #2
 8007290:	d901      	bls.n	8007296 <HAL_RCC_OscConfig+0x522>
 8007292:	2303      	movs	r3, #3
 8007294:	e1c0      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007296:	4b92      	ldr	r3, [pc, #584]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007298:	681b      	ldr	r3, [r3, #0]
 800729a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800729e:	2b00      	cmp	r3, #0
 80072a0:	d1f0      	bne.n	8007284 <HAL_RCC_OscConfig+0x510>
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	f003 0304 	and.w	r3, r3, #4
 80072aa:	2b00      	cmp	r3, #0
 80072ac:	f000 8081 	beq.w	80073b2 <HAL_RCC_OscConfig+0x63e>
 80072b0:	4b8c      	ldr	r3, [pc, #560]	@ (80074e4 <HAL_RCC_OscConfig+0x770>)
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	4a8b      	ldr	r2, [pc, #556]	@ (80074e4 <HAL_RCC_OscConfig+0x770>)
 80072b6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80072ba:	6013      	str	r3, [r2, #0]
 80072bc:	f7fc fa1a 	bl	80036f4 <HAL_GetTick>
 80072c0:	6278      	str	r0, [r7, #36]	@ 0x24
 80072c2:	e008      	b.n	80072d6 <HAL_RCC_OscConfig+0x562>
 80072c4:	f7fc fa16 	bl	80036f4 <HAL_GetTick>
 80072c8:	4602      	mov	r2, r0
 80072ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80072cc:	1ad3      	subs	r3, r2, r3
 80072ce:	2b64      	cmp	r3, #100	@ 0x64
 80072d0:	d901      	bls.n	80072d6 <HAL_RCC_OscConfig+0x562>
 80072d2:	2303      	movs	r3, #3
 80072d4:	e1a0      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 80072d6:	4b83      	ldr	r3, [pc, #524]	@ (80074e4 <HAL_RCC_OscConfig+0x770>)
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80072de:	2b00      	cmp	r3, #0
 80072e0:	d0f0      	beq.n	80072c4 <HAL_RCC_OscConfig+0x550>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	689b      	ldr	r3, [r3, #8]
 80072e6:	2b01      	cmp	r3, #1
 80072e8:	d106      	bne.n	80072f8 <HAL_RCC_OscConfig+0x584>
 80072ea:	4b7d      	ldr	r3, [pc, #500]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80072ec:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80072ee:	4a7c      	ldr	r2, [pc, #496]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80072f0:	f043 0301 	orr.w	r3, r3, #1
 80072f4:	6713      	str	r3, [r2, #112]	@ 0x70
 80072f6:	e02d      	b.n	8007354 <HAL_RCC_OscConfig+0x5e0>
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	689b      	ldr	r3, [r3, #8]
 80072fc:	2b00      	cmp	r3, #0
 80072fe:	d10c      	bne.n	800731a <HAL_RCC_OscConfig+0x5a6>
 8007300:	4b77      	ldr	r3, [pc, #476]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007302:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007304:	4a76      	ldr	r2, [pc, #472]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007306:	f023 0301 	bic.w	r3, r3, #1
 800730a:	6713      	str	r3, [r2, #112]	@ 0x70
 800730c:	4b74      	ldr	r3, [pc, #464]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800730e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007310:	4a73      	ldr	r2, [pc, #460]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007312:	f023 0304 	bic.w	r3, r3, #4
 8007316:	6713      	str	r3, [r2, #112]	@ 0x70
 8007318:	e01c      	b.n	8007354 <HAL_RCC_OscConfig+0x5e0>
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	689b      	ldr	r3, [r3, #8]
 800731e:	2b05      	cmp	r3, #5
 8007320:	d10c      	bne.n	800733c <HAL_RCC_OscConfig+0x5c8>
 8007322:	4b6f      	ldr	r3, [pc, #444]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007324:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007326:	4a6e      	ldr	r2, [pc, #440]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007328:	f043 0304 	orr.w	r3, r3, #4
 800732c:	6713      	str	r3, [r2, #112]	@ 0x70
 800732e:	4b6c      	ldr	r3, [pc, #432]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007330:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007332:	4a6b      	ldr	r2, [pc, #428]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007334:	f043 0301 	orr.w	r3, r3, #1
 8007338:	6713      	str	r3, [r2, #112]	@ 0x70
 800733a:	e00b      	b.n	8007354 <HAL_RCC_OscConfig+0x5e0>
 800733c:	4b68      	ldr	r3, [pc, #416]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800733e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007340:	4a67      	ldr	r2, [pc, #412]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007342:	f023 0301 	bic.w	r3, r3, #1
 8007346:	6713      	str	r3, [r2, #112]	@ 0x70
 8007348:	4b65      	ldr	r3, [pc, #404]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800734a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800734c:	4a64      	ldr	r2, [pc, #400]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800734e:	f023 0304 	bic.w	r3, r3, #4
 8007352:	6713      	str	r3, [r2, #112]	@ 0x70
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	689b      	ldr	r3, [r3, #8]
 8007358:	2b00      	cmp	r3, #0
 800735a:	d015      	beq.n	8007388 <HAL_RCC_OscConfig+0x614>
 800735c:	f7fc f9ca 	bl	80036f4 <HAL_GetTick>
 8007360:	6278      	str	r0, [r7, #36]	@ 0x24
 8007362:	e00a      	b.n	800737a <HAL_RCC_OscConfig+0x606>
 8007364:	f7fc f9c6 	bl	80036f4 <HAL_GetTick>
 8007368:	4602      	mov	r2, r0
 800736a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800736c:	1ad3      	subs	r3, r2, r3
 800736e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007372:	4293      	cmp	r3, r2
 8007374:	d901      	bls.n	800737a <HAL_RCC_OscConfig+0x606>
 8007376:	2303      	movs	r3, #3
 8007378:	e14e      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 800737a:	4b59      	ldr	r3, [pc, #356]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800737c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800737e:	f003 0302 	and.w	r3, r3, #2
 8007382:	2b00      	cmp	r3, #0
 8007384:	d0ee      	beq.n	8007364 <HAL_RCC_OscConfig+0x5f0>
 8007386:	e014      	b.n	80073b2 <HAL_RCC_OscConfig+0x63e>
 8007388:	f7fc f9b4 	bl	80036f4 <HAL_GetTick>
 800738c:	6278      	str	r0, [r7, #36]	@ 0x24
 800738e:	e00a      	b.n	80073a6 <HAL_RCC_OscConfig+0x632>
 8007390:	f7fc f9b0 	bl	80036f4 <HAL_GetTick>
 8007394:	4602      	mov	r2, r0
 8007396:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007398:	1ad3      	subs	r3, r2, r3
 800739a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800739e:	4293      	cmp	r3, r2
 80073a0:	d901      	bls.n	80073a6 <HAL_RCC_OscConfig+0x632>
 80073a2:	2303      	movs	r3, #3
 80073a4:	e138      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 80073a6:	4b4e      	ldr	r3, [pc, #312]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80073a8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073aa:	f003 0302 	and.w	r3, r3, #2
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d1ee      	bne.n	8007390 <HAL_RCC_OscConfig+0x61c>
 80073b2:	687b      	ldr	r3, [r7, #4]
 80073b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	f000 812d 	beq.w	8007616 <HAL_RCC_OscConfig+0x8a2>
 80073bc:	4b48      	ldr	r3, [pc, #288]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80073be:	691b      	ldr	r3, [r3, #16]
 80073c0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80073c4:	2b18      	cmp	r3, #24
 80073c6:	f000 80bd 	beq.w	8007544 <HAL_RCC_OscConfig+0x7d0>
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80073ce:	2b02      	cmp	r3, #2
 80073d0:	f040 809e 	bne.w	8007510 <HAL_RCC_OscConfig+0x79c>
 80073d4:	4b42      	ldr	r3, [pc, #264]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	4a41      	ldr	r2, [pc, #260]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80073da:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80073de:	6013      	str	r3, [r2, #0]
 80073e0:	f7fc f988 	bl	80036f4 <HAL_GetTick>
 80073e4:	6278      	str	r0, [r7, #36]	@ 0x24
 80073e6:	e008      	b.n	80073fa <HAL_RCC_OscConfig+0x686>
 80073e8:	f7fc f984 	bl	80036f4 <HAL_GetTick>
 80073ec:	4602      	mov	r2, r0
 80073ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80073f0:	1ad3      	subs	r3, r2, r3
 80073f2:	2b02      	cmp	r3, #2
 80073f4:	d901      	bls.n	80073fa <HAL_RCC_OscConfig+0x686>
 80073f6:	2303      	movs	r3, #3
 80073f8:	e10e      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 80073fa:	4b39      	ldr	r3, [pc, #228]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007402:	2b00      	cmp	r3, #0
 8007404:	d1f0      	bne.n	80073e8 <HAL_RCC_OscConfig+0x674>
 8007406:	4b36      	ldr	r3, [pc, #216]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007408:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800740a:	4b37      	ldr	r3, [pc, #220]	@ (80074e8 <HAL_RCC_OscConfig+0x774>)
 800740c:	4013      	ands	r3, r2
 800740e:	687a      	ldr	r2, [r7, #4]
 8007410:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8007412:	687a      	ldr	r2, [r7, #4]
 8007414:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8007416:	0112      	lsls	r2, r2, #4
 8007418:	430a      	orrs	r2, r1
 800741a:	4931      	ldr	r1, [pc, #196]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800741c:	4313      	orrs	r3, r2
 800741e:	628b      	str	r3, [r1, #40]	@ 0x28
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007424:	3b01      	subs	r3, #1
 8007426:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800742e:	3b01      	subs	r3, #1
 8007430:	025b      	lsls	r3, r3, #9
 8007432:	b29b      	uxth	r3, r3
 8007434:	431a      	orrs	r2, r3
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800743a:	3b01      	subs	r3, #1
 800743c:	041b      	lsls	r3, r3, #16
 800743e:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8007442:	431a      	orrs	r2, r3
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007448:	3b01      	subs	r3, #1
 800744a:	061b      	lsls	r3, r3, #24
 800744c:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8007450:	4923      	ldr	r1, [pc, #140]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007452:	4313      	orrs	r3, r2
 8007454:	630b      	str	r3, [r1, #48]	@ 0x30
 8007456:	4b22      	ldr	r3, [pc, #136]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007458:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800745a:	4a21      	ldr	r2, [pc, #132]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800745c:	f023 0301 	bic.w	r3, r3, #1
 8007460:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007462:	4b1f      	ldr	r3, [pc, #124]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007464:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8007466:	4b21      	ldr	r3, [pc, #132]	@ (80074ec <HAL_RCC_OscConfig+0x778>)
 8007468:	4013      	ands	r3, r2
 800746a:	687a      	ldr	r2, [r7, #4]
 800746c:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800746e:	00d2      	lsls	r2, r2, #3
 8007470:	491b      	ldr	r1, [pc, #108]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007472:	4313      	orrs	r3, r2
 8007474:	634b      	str	r3, [r1, #52]	@ 0x34
 8007476:	4b1a      	ldr	r3, [pc, #104]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007478:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800747a:	f023 020c 	bic.w	r2, r3, #12
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007482:	4917      	ldr	r1, [pc, #92]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007484:	4313      	orrs	r3, r2
 8007486:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8007488:	4b15      	ldr	r3, [pc, #84]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800748a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800748c:	f023 0202 	bic.w	r2, r3, #2
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007494:	4912      	ldr	r1, [pc, #72]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 8007496:	4313      	orrs	r3, r2
 8007498:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800749a:	4b11      	ldr	r3, [pc, #68]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 800749c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800749e:	4a10      	ldr	r2, [pc, #64]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80074a4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80074a6:	4b0e      	ldr	r3, [pc, #56]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074aa:	4a0d      	ldr	r2, [pc, #52]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074ac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80074b0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80074b2:	4b0b      	ldr	r3, [pc, #44]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074b6:	4a0a      	ldr	r2, [pc, #40]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074b8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80074bc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80074be:	4b08      	ldr	r3, [pc, #32]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074c2:	4a07      	ldr	r2, [pc, #28]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074c4:	f043 0301 	orr.w	r3, r3, #1
 80074c8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80074ca:	4b05      	ldr	r3, [pc, #20]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	4a04      	ldr	r2, [pc, #16]	@ (80074e0 <HAL_RCC_OscConfig+0x76c>)
 80074d0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80074d4:	6013      	str	r3, [r2, #0]
 80074d6:	f7fc f90d 	bl	80036f4 <HAL_GetTick>
 80074da:	6278      	str	r0, [r7, #36]	@ 0x24
 80074dc:	e011      	b.n	8007502 <HAL_RCC_OscConfig+0x78e>
 80074de:	bf00      	nop
 80074e0:	58024400 	.word	0x58024400
 80074e4:	58024800 	.word	0x58024800
 80074e8:	fffffc0c 	.word	0xfffffc0c
 80074ec:	ffff0007 	.word	0xffff0007
 80074f0:	f7fc f900 	bl	80036f4 <HAL_GetTick>
 80074f4:	4602      	mov	r2, r0
 80074f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80074f8:	1ad3      	subs	r3, r2, r3
 80074fa:	2b02      	cmp	r3, #2
 80074fc:	d901      	bls.n	8007502 <HAL_RCC_OscConfig+0x78e>
 80074fe:	2303      	movs	r3, #3
 8007500:	e08a      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007502:	4b47      	ldr	r3, [pc, #284]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007504:	681b      	ldr	r3, [r3, #0]
 8007506:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800750a:	2b00      	cmp	r3, #0
 800750c:	d0f0      	beq.n	80074f0 <HAL_RCC_OscConfig+0x77c>
 800750e:	e082      	b.n	8007616 <HAL_RCC_OscConfig+0x8a2>
 8007510:	4b43      	ldr	r3, [pc, #268]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	4a42      	ldr	r2, [pc, #264]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007516:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800751a:	6013      	str	r3, [r2, #0]
 800751c:	f7fc f8ea 	bl	80036f4 <HAL_GetTick>
 8007520:	6278      	str	r0, [r7, #36]	@ 0x24
 8007522:	e008      	b.n	8007536 <HAL_RCC_OscConfig+0x7c2>
 8007524:	f7fc f8e6 	bl	80036f4 <HAL_GetTick>
 8007528:	4602      	mov	r2, r0
 800752a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800752c:	1ad3      	subs	r3, r2, r3
 800752e:	2b02      	cmp	r3, #2
 8007530:	d901      	bls.n	8007536 <HAL_RCC_OscConfig+0x7c2>
 8007532:	2303      	movs	r3, #3
 8007534:	e070      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 8007536:	4b3a      	ldr	r3, [pc, #232]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800753e:	2b00      	cmp	r3, #0
 8007540:	d1f0      	bne.n	8007524 <HAL_RCC_OscConfig+0x7b0>
 8007542:	e068      	b.n	8007616 <HAL_RCC_OscConfig+0x8a2>
 8007544:	4b36      	ldr	r3, [pc, #216]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007546:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007548:	613b      	str	r3, [r7, #16]
 800754a:	4b35      	ldr	r3, [pc, #212]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 800754c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800754e:	60fb      	str	r3, [r7, #12]
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007554:	2b01      	cmp	r3, #1
 8007556:	d031      	beq.n	80075bc <HAL_RCC_OscConfig+0x848>
 8007558:	693b      	ldr	r3, [r7, #16]
 800755a:	f003 0203 	and.w	r2, r3, #3
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007562:	429a      	cmp	r2, r3
 8007564:	d12a      	bne.n	80075bc <HAL_RCC_OscConfig+0x848>
 8007566:	693b      	ldr	r3, [r7, #16]
 8007568:	091b      	lsrs	r3, r3, #4
 800756a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007572:	429a      	cmp	r2, r3
 8007574:	d122      	bne.n	80075bc <HAL_RCC_OscConfig+0x848>
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007580:	3b01      	subs	r3, #1
 8007582:	429a      	cmp	r2, r3
 8007584:	d11a      	bne.n	80075bc <HAL_RCC_OscConfig+0x848>
 8007586:	68fb      	ldr	r3, [r7, #12]
 8007588:	0a5b      	lsrs	r3, r3, #9
 800758a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007592:	3b01      	subs	r3, #1
 8007594:	429a      	cmp	r2, r3
 8007596:	d111      	bne.n	80075bc <HAL_RCC_OscConfig+0x848>
 8007598:	68fb      	ldr	r3, [r7, #12]
 800759a:	0c1b      	lsrs	r3, r3, #16
 800759c:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80075a4:	3b01      	subs	r3, #1
 80075a6:	429a      	cmp	r2, r3
 80075a8:	d108      	bne.n	80075bc <HAL_RCC_OscConfig+0x848>
 80075aa:	68fb      	ldr	r3, [r7, #12]
 80075ac:	0e1b      	lsrs	r3, r3, #24
 80075ae:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80075b6:	3b01      	subs	r3, #1
 80075b8:	429a      	cmp	r2, r3
 80075ba:	d001      	beq.n	80075c0 <HAL_RCC_OscConfig+0x84c>
 80075bc:	2301      	movs	r3, #1
 80075be:	e02b      	b.n	8007618 <HAL_RCC_OscConfig+0x8a4>
 80075c0:	4b17      	ldr	r3, [pc, #92]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 80075c2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80075c4:	08db      	lsrs	r3, r3, #3
 80075c6:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80075ca:	613b      	str	r3, [r7, #16]
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80075d0:	693a      	ldr	r2, [r7, #16]
 80075d2:	429a      	cmp	r2, r3
 80075d4:	d01f      	beq.n	8007616 <HAL_RCC_OscConfig+0x8a2>
 80075d6:	4b12      	ldr	r3, [pc, #72]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 80075d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80075da:	4a11      	ldr	r2, [pc, #68]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 80075dc:	f023 0301 	bic.w	r3, r3, #1
 80075e0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80075e2:	f7fc f887 	bl	80036f4 <HAL_GetTick>
 80075e6:	6278      	str	r0, [r7, #36]	@ 0x24
 80075e8:	bf00      	nop
 80075ea:	f7fc f883 	bl	80036f4 <HAL_GetTick>
 80075ee:	4602      	mov	r2, r0
 80075f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80075f2:	4293      	cmp	r3, r2
 80075f4:	d0f9      	beq.n	80075ea <HAL_RCC_OscConfig+0x876>
 80075f6:	4b0a      	ldr	r3, [pc, #40]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 80075f8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80075fa:	4b0a      	ldr	r3, [pc, #40]	@ (8007624 <HAL_RCC_OscConfig+0x8b0>)
 80075fc:	4013      	ands	r3, r2
 80075fe:	687a      	ldr	r2, [r7, #4]
 8007600:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8007602:	00d2      	lsls	r2, r2, #3
 8007604:	4906      	ldr	r1, [pc, #24]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007606:	4313      	orrs	r3, r2
 8007608:	634b      	str	r3, [r1, #52]	@ 0x34
 800760a:	4b05      	ldr	r3, [pc, #20]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 800760c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800760e:	4a04      	ldr	r2, [pc, #16]	@ (8007620 <HAL_RCC_OscConfig+0x8ac>)
 8007610:	f043 0301 	orr.w	r3, r3, #1
 8007614:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007616:	2300      	movs	r3, #0
 8007618:	4618      	mov	r0, r3
 800761a:	3730      	adds	r7, #48	@ 0x30
 800761c:	46bd      	mov	sp, r7
 800761e:	bd80      	pop	{r7, pc}
 8007620:	58024400 	.word	0x58024400
 8007624:	ffff0007 	.word	0xffff0007

08007628 <HAL_RCC_ClockConfig>:
 8007628:	b580      	push	{r7, lr}
 800762a:	b086      	sub	sp, #24
 800762c:	af00      	add	r7, sp, #0
 800762e:	6078      	str	r0, [r7, #4]
 8007630:	6039      	str	r1, [r7, #0]
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	2b00      	cmp	r3, #0
 8007636:	d101      	bne.n	800763c <HAL_RCC_ClockConfig+0x14>
 8007638:	2301      	movs	r3, #1
 800763a:	e19c      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 800763c:	4b8a      	ldr	r3, [pc, #552]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	f003 030f 	and.w	r3, r3, #15
 8007644:	683a      	ldr	r2, [r7, #0]
 8007646:	429a      	cmp	r2, r3
 8007648:	d910      	bls.n	800766c <HAL_RCC_ClockConfig+0x44>
 800764a:	4b87      	ldr	r3, [pc, #540]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	f023 020f 	bic.w	r2, r3, #15
 8007652:	4985      	ldr	r1, [pc, #532]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 8007654:	683b      	ldr	r3, [r7, #0]
 8007656:	4313      	orrs	r3, r2
 8007658:	600b      	str	r3, [r1, #0]
 800765a:	4b83      	ldr	r3, [pc, #524]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	f003 030f 	and.w	r3, r3, #15
 8007662:	683a      	ldr	r2, [r7, #0]
 8007664:	429a      	cmp	r2, r3
 8007666:	d001      	beq.n	800766c <HAL_RCC_ClockConfig+0x44>
 8007668:	2301      	movs	r3, #1
 800766a:	e184      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f003 0304 	and.w	r3, r3, #4
 8007674:	2b00      	cmp	r3, #0
 8007676:	d010      	beq.n	800769a <HAL_RCC_ClockConfig+0x72>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	691a      	ldr	r2, [r3, #16]
 800767c:	4b7b      	ldr	r3, [pc, #492]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800767e:	699b      	ldr	r3, [r3, #24]
 8007680:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007684:	429a      	cmp	r2, r3
 8007686:	d908      	bls.n	800769a <HAL_RCC_ClockConfig+0x72>
 8007688:	4b78      	ldr	r3, [pc, #480]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800768a:	699b      	ldr	r3, [r3, #24]
 800768c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	691b      	ldr	r3, [r3, #16]
 8007694:	4975      	ldr	r1, [pc, #468]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007696:	4313      	orrs	r3, r2
 8007698:	618b      	str	r3, [r1, #24]
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	f003 0308 	and.w	r3, r3, #8
 80076a2:	2b00      	cmp	r3, #0
 80076a4:	d010      	beq.n	80076c8 <HAL_RCC_ClockConfig+0xa0>
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	695a      	ldr	r2, [r3, #20]
 80076aa:	4b70      	ldr	r3, [pc, #448]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076ac:	69db      	ldr	r3, [r3, #28]
 80076ae:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80076b2:	429a      	cmp	r2, r3
 80076b4:	d908      	bls.n	80076c8 <HAL_RCC_ClockConfig+0xa0>
 80076b6:	4b6d      	ldr	r3, [pc, #436]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076b8:	69db      	ldr	r3, [r3, #28]
 80076ba:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	695b      	ldr	r3, [r3, #20]
 80076c2:	496a      	ldr	r1, [pc, #424]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076c4:	4313      	orrs	r3, r2
 80076c6:	61cb      	str	r3, [r1, #28]
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	f003 0310 	and.w	r3, r3, #16
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d010      	beq.n	80076f6 <HAL_RCC_ClockConfig+0xce>
 80076d4:	687b      	ldr	r3, [r7, #4]
 80076d6:	699a      	ldr	r2, [r3, #24]
 80076d8:	4b64      	ldr	r3, [pc, #400]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076da:	69db      	ldr	r3, [r3, #28]
 80076dc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80076e0:	429a      	cmp	r2, r3
 80076e2:	d908      	bls.n	80076f6 <HAL_RCC_ClockConfig+0xce>
 80076e4:	4b61      	ldr	r3, [pc, #388]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076e6:	69db      	ldr	r3, [r3, #28]
 80076e8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	699b      	ldr	r3, [r3, #24]
 80076f0:	495e      	ldr	r1, [pc, #376]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80076f2:	4313      	orrs	r3, r2
 80076f4:	61cb      	str	r3, [r1, #28]
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	681b      	ldr	r3, [r3, #0]
 80076fa:	f003 0320 	and.w	r3, r3, #32
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d010      	beq.n	8007724 <HAL_RCC_ClockConfig+0xfc>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	69da      	ldr	r2, [r3, #28]
 8007706:	4b59      	ldr	r3, [pc, #356]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007708:	6a1b      	ldr	r3, [r3, #32]
 800770a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800770e:	429a      	cmp	r2, r3
 8007710:	d908      	bls.n	8007724 <HAL_RCC_ClockConfig+0xfc>
 8007712:	4b56      	ldr	r3, [pc, #344]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007714:	6a1b      	ldr	r3, [r3, #32]
 8007716:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	69db      	ldr	r3, [r3, #28]
 800771e:	4953      	ldr	r1, [pc, #332]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007720:	4313      	orrs	r3, r2
 8007722:	620b      	str	r3, [r1, #32]
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	681b      	ldr	r3, [r3, #0]
 8007728:	f003 0302 	and.w	r3, r3, #2
 800772c:	2b00      	cmp	r3, #0
 800772e:	d010      	beq.n	8007752 <HAL_RCC_ClockConfig+0x12a>
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	68da      	ldr	r2, [r3, #12]
 8007734:	4b4d      	ldr	r3, [pc, #308]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007736:	699b      	ldr	r3, [r3, #24]
 8007738:	f003 030f 	and.w	r3, r3, #15
 800773c:	429a      	cmp	r2, r3
 800773e:	d908      	bls.n	8007752 <HAL_RCC_ClockConfig+0x12a>
 8007740:	4b4a      	ldr	r3, [pc, #296]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007742:	699b      	ldr	r3, [r3, #24]
 8007744:	f023 020f 	bic.w	r2, r3, #15
 8007748:	687b      	ldr	r3, [r7, #4]
 800774a:	68db      	ldr	r3, [r3, #12]
 800774c:	4947      	ldr	r1, [pc, #284]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800774e:	4313      	orrs	r3, r2
 8007750:	618b      	str	r3, [r1, #24]
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	f003 0301 	and.w	r3, r3, #1
 800775a:	2b00      	cmp	r3, #0
 800775c:	d055      	beq.n	800780a <HAL_RCC_ClockConfig+0x1e2>
 800775e:	4b43      	ldr	r3, [pc, #268]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007760:	699b      	ldr	r3, [r3, #24]
 8007762:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	689b      	ldr	r3, [r3, #8]
 800776a:	4940      	ldr	r1, [pc, #256]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800776c:	4313      	orrs	r3, r2
 800776e:	618b      	str	r3, [r1, #24]
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	685b      	ldr	r3, [r3, #4]
 8007774:	2b02      	cmp	r3, #2
 8007776:	d107      	bne.n	8007788 <HAL_RCC_ClockConfig+0x160>
 8007778:	4b3c      	ldr	r3, [pc, #240]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800777a:	681b      	ldr	r3, [r3, #0]
 800777c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007780:	2b00      	cmp	r3, #0
 8007782:	d121      	bne.n	80077c8 <HAL_RCC_ClockConfig+0x1a0>
 8007784:	2301      	movs	r3, #1
 8007786:	e0f6      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	685b      	ldr	r3, [r3, #4]
 800778c:	2b03      	cmp	r3, #3
 800778e:	d107      	bne.n	80077a0 <HAL_RCC_ClockConfig+0x178>
 8007790:	4b36      	ldr	r3, [pc, #216]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007798:	2b00      	cmp	r3, #0
 800779a:	d115      	bne.n	80077c8 <HAL_RCC_ClockConfig+0x1a0>
 800779c:	2301      	movs	r3, #1
 800779e:	e0ea      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	685b      	ldr	r3, [r3, #4]
 80077a4:	2b01      	cmp	r3, #1
 80077a6:	d107      	bne.n	80077b8 <HAL_RCC_ClockConfig+0x190>
 80077a8:	4b30      	ldr	r3, [pc, #192]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80077aa:	681b      	ldr	r3, [r3, #0]
 80077ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80077b0:	2b00      	cmp	r3, #0
 80077b2:	d109      	bne.n	80077c8 <HAL_RCC_ClockConfig+0x1a0>
 80077b4:	2301      	movs	r3, #1
 80077b6:	e0de      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 80077b8:	4b2c      	ldr	r3, [pc, #176]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	f003 0304 	and.w	r3, r3, #4
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	d101      	bne.n	80077c8 <HAL_RCC_ClockConfig+0x1a0>
 80077c4:	2301      	movs	r3, #1
 80077c6:	e0d6      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 80077c8:	4b28      	ldr	r3, [pc, #160]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80077ca:	691b      	ldr	r3, [r3, #16]
 80077cc:	f023 0207 	bic.w	r2, r3, #7
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	685b      	ldr	r3, [r3, #4]
 80077d4:	4925      	ldr	r1, [pc, #148]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80077d6:	4313      	orrs	r3, r2
 80077d8:	610b      	str	r3, [r1, #16]
 80077da:	f7fb ff8b 	bl	80036f4 <HAL_GetTick>
 80077de:	6178      	str	r0, [r7, #20]
 80077e0:	e00a      	b.n	80077f8 <HAL_RCC_ClockConfig+0x1d0>
 80077e2:	f7fb ff87 	bl	80036f4 <HAL_GetTick>
 80077e6:	4602      	mov	r2, r0
 80077e8:	697b      	ldr	r3, [r7, #20]
 80077ea:	1ad3      	subs	r3, r2, r3
 80077ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 80077f0:	4293      	cmp	r3, r2
 80077f2:	d901      	bls.n	80077f8 <HAL_RCC_ClockConfig+0x1d0>
 80077f4:	2303      	movs	r3, #3
 80077f6:	e0be      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 80077f8:	4b1c      	ldr	r3, [pc, #112]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 80077fa:	691b      	ldr	r3, [r3, #16]
 80077fc:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	685b      	ldr	r3, [r3, #4]
 8007804:	00db      	lsls	r3, r3, #3
 8007806:	429a      	cmp	r2, r3
 8007808:	d1eb      	bne.n	80077e2 <HAL_RCC_ClockConfig+0x1ba>
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	f003 0302 	and.w	r3, r3, #2
 8007812:	2b00      	cmp	r3, #0
 8007814:	d010      	beq.n	8007838 <HAL_RCC_ClockConfig+0x210>
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	68da      	ldr	r2, [r3, #12]
 800781a:	4b14      	ldr	r3, [pc, #80]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 800781c:	699b      	ldr	r3, [r3, #24]
 800781e:	f003 030f 	and.w	r3, r3, #15
 8007822:	429a      	cmp	r2, r3
 8007824:	d208      	bcs.n	8007838 <HAL_RCC_ClockConfig+0x210>
 8007826:	4b11      	ldr	r3, [pc, #68]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007828:	699b      	ldr	r3, [r3, #24]
 800782a:	f023 020f 	bic.w	r2, r3, #15
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	68db      	ldr	r3, [r3, #12]
 8007832:	490e      	ldr	r1, [pc, #56]	@ (800786c <HAL_RCC_ClockConfig+0x244>)
 8007834:	4313      	orrs	r3, r2
 8007836:	618b      	str	r3, [r1, #24]
 8007838:	4b0b      	ldr	r3, [pc, #44]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 800783a:	681b      	ldr	r3, [r3, #0]
 800783c:	f003 030f 	and.w	r3, r3, #15
 8007840:	683a      	ldr	r2, [r7, #0]
 8007842:	429a      	cmp	r2, r3
 8007844:	d214      	bcs.n	8007870 <HAL_RCC_ClockConfig+0x248>
 8007846:	4b08      	ldr	r3, [pc, #32]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	f023 020f 	bic.w	r2, r3, #15
 800784e:	4906      	ldr	r1, [pc, #24]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 8007850:	683b      	ldr	r3, [r7, #0]
 8007852:	4313      	orrs	r3, r2
 8007854:	600b      	str	r3, [r1, #0]
 8007856:	4b04      	ldr	r3, [pc, #16]	@ (8007868 <HAL_RCC_ClockConfig+0x240>)
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	f003 030f 	and.w	r3, r3, #15
 800785e:	683a      	ldr	r2, [r7, #0]
 8007860:	429a      	cmp	r2, r3
 8007862:	d005      	beq.n	8007870 <HAL_RCC_ClockConfig+0x248>
 8007864:	2301      	movs	r3, #1
 8007866:	e086      	b.n	8007976 <HAL_RCC_ClockConfig+0x34e>
 8007868:	52002000 	.word	0x52002000
 800786c:	58024400 	.word	0x58024400
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	f003 0304 	and.w	r3, r3, #4
 8007878:	2b00      	cmp	r3, #0
 800787a:	d010      	beq.n	800789e <HAL_RCC_ClockConfig+0x276>
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	691a      	ldr	r2, [r3, #16]
 8007880:	4b3f      	ldr	r3, [pc, #252]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 8007882:	699b      	ldr	r3, [r3, #24]
 8007884:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007888:	429a      	cmp	r2, r3
 800788a:	d208      	bcs.n	800789e <HAL_RCC_ClockConfig+0x276>
 800788c:	4b3c      	ldr	r3, [pc, #240]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 800788e:	699b      	ldr	r3, [r3, #24]
 8007890:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	691b      	ldr	r3, [r3, #16]
 8007898:	4939      	ldr	r1, [pc, #228]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 800789a:	4313      	orrs	r3, r2
 800789c:	618b      	str	r3, [r1, #24]
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	f003 0308 	and.w	r3, r3, #8
 80078a6:	2b00      	cmp	r3, #0
 80078a8:	d010      	beq.n	80078cc <HAL_RCC_ClockConfig+0x2a4>
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	695a      	ldr	r2, [r3, #20]
 80078ae:	4b34      	ldr	r3, [pc, #208]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078b0:	69db      	ldr	r3, [r3, #28]
 80078b2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80078b6:	429a      	cmp	r2, r3
 80078b8:	d208      	bcs.n	80078cc <HAL_RCC_ClockConfig+0x2a4>
 80078ba:	4b31      	ldr	r3, [pc, #196]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078bc:	69db      	ldr	r3, [r3, #28]
 80078be:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	695b      	ldr	r3, [r3, #20]
 80078c6:	492e      	ldr	r1, [pc, #184]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078c8:	4313      	orrs	r3, r2
 80078ca:	61cb      	str	r3, [r1, #28]
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	f003 0310 	and.w	r3, r3, #16
 80078d4:	2b00      	cmp	r3, #0
 80078d6:	d010      	beq.n	80078fa <HAL_RCC_ClockConfig+0x2d2>
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	699a      	ldr	r2, [r3, #24]
 80078dc:	4b28      	ldr	r3, [pc, #160]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078de:	69db      	ldr	r3, [r3, #28]
 80078e0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80078e4:	429a      	cmp	r2, r3
 80078e6:	d208      	bcs.n	80078fa <HAL_RCC_ClockConfig+0x2d2>
 80078e8:	4b25      	ldr	r3, [pc, #148]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078ea:	69db      	ldr	r3, [r3, #28]
 80078ec:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	699b      	ldr	r3, [r3, #24]
 80078f4:	4922      	ldr	r1, [pc, #136]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 80078f6:	4313      	orrs	r3, r2
 80078f8:	61cb      	str	r3, [r1, #28]
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	f003 0320 	and.w	r3, r3, #32
 8007902:	2b00      	cmp	r3, #0
 8007904:	d010      	beq.n	8007928 <HAL_RCC_ClockConfig+0x300>
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	69da      	ldr	r2, [r3, #28]
 800790a:	4b1d      	ldr	r3, [pc, #116]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 800790c:	6a1b      	ldr	r3, [r3, #32]
 800790e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007912:	429a      	cmp	r2, r3
 8007914:	d208      	bcs.n	8007928 <HAL_RCC_ClockConfig+0x300>
 8007916:	4b1a      	ldr	r3, [pc, #104]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 8007918:	6a1b      	ldr	r3, [r3, #32]
 800791a:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	69db      	ldr	r3, [r3, #28]
 8007922:	4917      	ldr	r1, [pc, #92]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 8007924:	4313      	orrs	r3, r2
 8007926:	620b      	str	r3, [r1, #32]
 8007928:	f000 f834 	bl	8007994 <HAL_RCC_GetSysClockFreq>
 800792c:	4602      	mov	r2, r0
 800792e:	4b14      	ldr	r3, [pc, #80]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 8007930:	699b      	ldr	r3, [r3, #24]
 8007932:	0a1b      	lsrs	r3, r3, #8
 8007934:	f003 030f 	and.w	r3, r3, #15
 8007938:	4912      	ldr	r1, [pc, #72]	@ (8007984 <HAL_RCC_ClockConfig+0x35c>)
 800793a:	5ccb      	ldrb	r3, [r1, r3]
 800793c:	f003 031f 	and.w	r3, r3, #31
 8007940:	fa22 f303 	lsr.w	r3, r2, r3
 8007944:	613b      	str	r3, [r7, #16]
 8007946:	4b0e      	ldr	r3, [pc, #56]	@ (8007980 <HAL_RCC_ClockConfig+0x358>)
 8007948:	699b      	ldr	r3, [r3, #24]
 800794a:	f003 030f 	and.w	r3, r3, #15
 800794e:	4a0d      	ldr	r2, [pc, #52]	@ (8007984 <HAL_RCC_ClockConfig+0x35c>)
 8007950:	5cd3      	ldrb	r3, [r2, r3]
 8007952:	f003 031f 	and.w	r3, r3, #31
 8007956:	693a      	ldr	r2, [r7, #16]
 8007958:	fa22 f303 	lsr.w	r3, r2, r3
 800795c:	4a0a      	ldr	r2, [pc, #40]	@ (8007988 <HAL_RCC_ClockConfig+0x360>)
 800795e:	6013      	str	r3, [r2, #0]
 8007960:	4a0a      	ldr	r2, [pc, #40]	@ (800798c <HAL_RCC_ClockConfig+0x364>)
 8007962:	693b      	ldr	r3, [r7, #16]
 8007964:	6013      	str	r3, [r2, #0]
 8007966:	4b0a      	ldr	r3, [pc, #40]	@ (8007990 <HAL_RCC_ClockConfig+0x368>)
 8007968:	681b      	ldr	r3, [r3, #0]
 800796a:	4618      	mov	r0, r3
 800796c:	f7fb fe78 	bl	8003660 <HAL_InitTick>
 8007970:	4603      	mov	r3, r0
 8007972:	73fb      	strb	r3, [r7, #15]
 8007974:	7bfb      	ldrb	r3, [r7, #15]
 8007976:	4618      	mov	r0, r3
 8007978:	3718      	adds	r7, #24
 800797a:	46bd      	mov	sp, r7
 800797c:	bd80      	pop	{r7, pc}
 800797e:	bf00      	nop
 8007980:	58024400 	.word	0x58024400
 8007984:	08018128 	.word	0x08018128
 8007988:	24000094 	.word	0x24000094
 800798c:	24000090 	.word	0x24000090
 8007990:	24000098 	.word	0x24000098

08007994 <HAL_RCC_GetSysClockFreq>:
 8007994:	b480      	push	{r7}
 8007996:	b089      	sub	sp, #36	@ 0x24
 8007998:	af00      	add	r7, sp, #0
 800799a:	4bb3      	ldr	r3, [pc, #716]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800799c:	691b      	ldr	r3, [r3, #16]
 800799e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80079a2:	2b18      	cmp	r3, #24
 80079a4:	f200 8155 	bhi.w	8007c52 <HAL_RCC_GetSysClockFreq+0x2be>
 80079a8:	a201      	add	r2, pc, #4	@ (adr r2, 80079b0 <HAL_RCC_GetSysClockFreq+0x1c>)
 80079aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80079ae:	bf00      	nop
 80079b0:	08007a15 	.word	0x08007a15
 80079b4:	08007c53 	.word	0x08007c53
 80079b8:	08007c53 	.word	0x08007c53
 80079bc:	08007c53 	.word	0x08007c53
 80079c0:	08007c53 	.word	0x08007c53
 80079c4:	08007c53 	.word	0x08007c53
 80079c8:	08007c53 	.word	0x08007c53
 80079cc:	08007c53 	.word	0x08007c53
 80079d0:	08007a3b 	.word	0x08007a3b
 80079d4:	08007c53 	.word	0x08007c53
 80079d8:	08007c53 	.word	0x08007c53
 80079dc:	08007c53 	.word	0x08007c53
 80079e0:	08007c53 	.word	0x08007c53
 80079e4:	08007c53 	.word	0x08007c53
 80079e8:	08007c53 	.word	0x08007c53
 80079ec:	08007c53 	.word	0x08007c53
 80079f0:	08007a41 	.word	0x08007a41
 80079f4:	08007c53 	.word	0x08007c53
 80079f8:	08007c53 	.word	0x08007c53
 80079fc:	08007c53 	.word	0x08007c53
 8007a00:	08007c53 	.word	0x08007c53
 8007a04:	08007c53 	.word	0x08007c53
 8007a08:	08007c53 	.word	0x08007c53
 8007a0c:	08007c53 	.word	0x08007c53
 8007a10:	08007a47 	.word	0x08007a47
 8007a14:	4b94      	ldr	r3, [pc, #592]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a16:	681b      	ldr	r3, [r3, #0]
 8007a18:	f003 0320 	and.w	r3, r3, #32
 8007a1c:	2b00      	cmp	r3, #0
 8007a1e:	d009      	beq.n	8007a34 <HAL_RCC_GetSysClockFreq+0xa0>
 8007a20:	4b91      	ldr	r3, [pc, #580]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a22:	681b      	ldr	r3, [r3, #0]
 8007a24:	08db      	lsrs	r3, r3, #3
 8007a26:	f003 0303 	and.w	r3, r3, #3
 8007a2a:	4a90      	ldr	r2, [pc, #576]	@ (8007c6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007a2c:	fa22 f303 	lsr.w	r3, r2, r3
 8007a30:	61bb      	str	r3, [r7, #24]
 8007a32:	e111      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007a34:	4b8d      	ldr	r3, [pc, #564]	@ (8007c6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007a36:	61bb      	str	r3, [r7, #24]
 8007a38:	e10e      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007a3a:	4b8d      	ldr	r3, [pc, #564]	@ (8007c70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007a3c:	61bb      	str	r3, [r7, #24]
 8007a3e:	e10b      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007a40:	4b8c      	ldr	r3, [pc, #560]	@ (8007c74 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8007a42:	61bb      	str	r3, [r7, #24]
 8007a44:	e108      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007a46:	4b88      	ldr	r3, [pc, #544]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a48:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a4a:	f003 0303 	and.w	r3, r3, #3
 8007a4e:	617b      	str	r3, [r7, #20]
 8007a50:	4b85      	ldr	r3, [pc, #532]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007a54:	091b      	lsrs	r3, r3, #4
 8007a56:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8007a5a:	613b      	str	r3, [r7, #16]
 8007a5c:	4b82      	ldr	r3, [pc, #520]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007a60:	f003 0301 	and.w	r3, r3, #1
 8007a64:	60fb      	str	r3, [r7, #12]
 8007a66:	4b80      	ldr	r3, [pc, #512]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007a68:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007a6a:	08db      	lsrs	r3, r3, #3
 8007a6c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007a70:	68fa      	ldr	r2, [r7, #12]
 8007a72:	fb02 f303 	mul.w	r3, r2, r3
 8007a76:	ee07 3a90 	vmov	s15, r3
 8007a7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007a7e:	edc7 7a02 	vstr	s15, [r7, #8]
 8007a82:	693b      	ldr	r3, [r7, #16]
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	f000 80e1 	beq.w	8007c4c <HAL_RCC_GetSysClockFreq+0x2b8>
 8007a8a:	697b      	ldr	r3, [r7, #20]
 8007a8c:	2b02      	cmp	r3, #2
 8007a8e:	f000 8083 	beq.w	8007b98 <HAL_RCC_GetSysClockFreq+0x204>
 8007a92:	697b      	ldr	r3, [r7, #20]
 8007a94:	2b02      	cmp	r3, #2
 8007a96:	f200 80a1 	bhi.w	8007bdc <HAL_RCC_GetSysClockFreq+0x248>
 8007a9a:	697b      	ldr	r3, [r7, #20]
 8007a9c:	2b00      	cmp	r3, #0
 8007a9e:	d003      	beq.n	8007aa8 <HAL_RCC_GetSysClockFreq+0x114>
 8007aa0:	697b      	ldr	r3, [r7, #20]
 8007aa2:	2b01      	cmp	r3, #1
 8007aa4:	d056      	beq.n	8007b54 <HAL_RCC_GetSysClockFreq+0x1c0>
 8007aa6:	e099      	b.n	8007bdc <HAL_RCC_GetSysClockFreq+0x248>
 8007aa8:	4b6f      	ldr	r3, [pc, #444]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007aaa:	681b      	ldr	r3, [r3, #0]
 8007aac:	f003 0320 	and.w	r3, r3, #32
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d02d      	beq.n	8007b10 <HAL_RCC_GetSysClockFreq+0x17c>
 8007ab4:	4b6c      	ldr	r3, [pc, #432]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ab6:	681b      	ldr	r3, [r3, #0]
 8007ab8:	08db      	lsrs	r3, r3, #3
 8007aba:	f003 0303 	and.w	r3, r3, #3
 8007abe:	4a6b      	ldr	r2, [pc, #428]	@ (8007c6c <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007ac0:	fa22 f303 	lsr.w	r3, r2, r3
 8007ac4:	607b      	str	r3, [r7, #4]
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	ee07 3a90 	vmov	s15, r3
 8007acc:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007ad0:	693b      	ldr	r3, [r7, #16]
 8007ad2:	ee07 3a90 	vmov	s15, r3
 8007ad6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ada:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007ade:	4b62      	ldr	r3, [pc, #392]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007ae0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007ae2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007ae6:	ee07 3a90 	vmov	s15, r3
 8007aea:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007aee:	ed97 6a02 	vldr	s12, [r7, #8]
 8007af2:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8007c78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007af6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007afa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007afe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007b02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b06:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007b0a:	edc7 7a07 	vstr	s15, [r7, #28]
 8007b0e:	e087      	b.n	8007c20 <HAL_RCC_GetSysClockFreq+0x28c>
 8007b10:	693b      	ldr	r3, [r7, #16]
 8007b12:	ee07 3a90 	vmov	s15, r3
 8007b16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007b1a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8007c7c <HAL_RCC_GetSysClockFreq+0x2e8>
 8007b1e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007b22:	4b51      	ldr	r3, [pc, #324]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007b24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b26:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007b2a:	ee07 3a90 	vmov	s15, r3
 8007b2e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007b32:	ed97 6a02 	vldr	s12, [r7, #8]
 8007b36:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8007c78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007b3a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007b3e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007b42:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007b46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b4a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007b4e:	edc7 7a07 	vstr	s15, [r7, #28]
 8007b52:	e065      	b.n	8007c20 <HAL_RCC_GetSysClockFreq+0x28c>
 8007b54:	693b      	ldr	r3, [r7, #16]
 8007b56:	ee07 3a90 	vmov	s15, r3
 8007b5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007b5e:	eddf 6a48 	vldr	s13, [pc, #288]	@ 8007c80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007b62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007b66:	4b40      	ldr	r3, [pc, #256]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007b68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007b6e:	ee07 3a90 	vmov	s15, r3
 8007b72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007b76:	ed97 6a02 	vldr	s12, [r7, #8]
 8007b7a:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8007c78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007b7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007b82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007b86:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007b8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007b8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007b92:	edc7 7a07 	vstr	s15, [r7, #28]
 8007b96:	e043      	b.n	8007c20 <HAL_RCC_GetSysClockFreq+0x28c>
 8007b98:	693b      	ldr	r3, [r7, #16]
 8007b9a:	ee07 3a90 	vmov	s15, r3
 8007b9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007ba2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8007c84 <HAL_RCC_GetSysClockFreq+0x2f0>
 8007ba6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007baa:	4b2f      	ldr	r3, [pc, #188]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007bac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007bae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007bb2:	ee07 3a90 	vmov	s15, r3
 8007bb6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007bba:	ed97 6a02 	vldr	s12, [r7, #8]
 8007bbe:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8007c78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007bc2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007bc6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007bca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007bce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007bd2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007bd6:	edc7 7a07 	vstr	s15, [r7, #28]
 8007bda:	e021      	b.n	8007c20 <HAL_RCC_GetSysClockFreq+0x28c>
 8007bdc:	693b      	ldr	r3, [r7, #16]
 8007bde:	ee07 3a90 	vmov	s15, r3
 8007be2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007be6:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8007c80 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007bea:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007bee:	4b1e      	ldr	r3, [pc, #120]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007bf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007bf2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007bf6:	ee07 3a90 	vmov	s15, r3
 8007bfa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007bfe:	ed97 6a02 	vldr	s12, [r7, #8]
 8007c02:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8007c78 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007c06:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007c0a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007c0e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007c12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007c16:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007c1a:	edc7 7a07 	vstr	s15, [r7, #28]
 8007c1e:	bf00      	nop
 8007c20:	4b11      	ldr	r3, [pc, #68]	@ (8007c68 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007c22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007c24:	0a5b      	lsrs	r3, r3, #9
 8007c26:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007c2a:	3301      	adds	r3, #1
 8007c2c:	603b      	str	r3, [r7, #0]
 8007c2e:	683b      	ldr	r3, [r7, #0]
 8007c30:	ee07 3a90 	vmov	s15, r3
 8007c34:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007c38:	edd7 6a07 	vldr	s13, [r7, #28]
 8007c3c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007c40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007c44:	ee17 3a90 	vmov	r3, s15
 8007c48:	61bb      	str	r3, [r7, #24]
 8007c4a:	e005      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007c4c:	2300      	movs	r3, #0
 8007c4e:	61bb      	str	r3, [r7, #24]
 8007c50:	e002      	b.n	8007c58 <HAL_RCC_GetSysClockFreq+0x2c4>
 8007c52:	4b07      	ldr	r3, [pc, #28]	@ (8007c70 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007c54:	61bb      	str	r3, [r7, #24]
 8007c56:	bf00      	nop
 8007c58:	69bb      	ldr	r3, [r7, #24]
 8007c5a:	4618      	mov	r0, r3
 8007c5c:	3724      	adds	r7, #36	@ 0x24
 8007c5e:	46bd      	mov	sp, r7
 8007c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c64:	4770      	bx	lr
 8007c66:	bf00      	nop
 8007c68:	58024400 	.word	0x58024400
 8007c6c:	03d09000 	.word	0x03d09000
 8007c70:	003d0900 	.word	0x003d0900
 8007c74:	017d7840 	.word	0x017d7840
 8007c78:	46000000 	.word	0x46000000
 8007c7c:	4c742400 	.word	0x4c742400
 8007c80:	4a742400 	.word	0x4a742400
 8007c84:	4bbebc20 	.word	0x4bbebc20

08007c88 <HAL_RCC_GetHCLKFreq>:
 8007c88:	b580      	push	{r7, lr}
 8007c8a:	b082      	sub	sp, #8
 8007c8c:	af00      	add	r7, sp, #0
 8007c8e:	f7ff fe81 	bl	8007994 <HAL_RCC_GetSysClockFreq>
 8007c92:	4602      	mov	r2, r0
 8007c94:	4b10      	ldr	r3, [pc, #64]	@ (8007cd8 <HAL_RCC_GetHCLKFreq+0x50>)
 8007c96:	699b      	ldr	r3, [r3, #24]
 8007c98:	0a1b      	lsrs	r3, r3, #8
 8007c9a:	f003 030f 	and.w	r3, r3, #15
 8007c9e:	490f      	ldr	r1, [pc, #60]	@ (8007cdc <HAL_RCC_GetHCLKFreq+0x54>)
 8007ca0:	5ccb      	ldrb	r3, [r1, r3]
 8007ca2:	f003 031f 	and.w	r3, r3, #31
 8007ca6:	fa22 f303 	lsr.w	r3, r2, r3
 8007caa:	607b      	str	r3, [r7, #4]
 8007cac:	4b0a      	ldr	r3, [pc, #40]	@ (8007cd8 <HAL_RCC_GetHCLKFreq+0x50>)
 8007cae:	699b      	ldr	r3, [r3, #24]
 8007cb0:	f003 030f 	and.w	r3, r3, #15
 8007cb4:	4a09      	ldr	r2, [pc, #36]	@ (8007cdc <HAL_RCC_GetHCLKFreq+0x54>)
 8007cb6:	5cd3      	ldrb	r3, [r2, r3]
 8007cb8:	f003 031f 	and.w	r3, r3, #31
 8007cbc:	687a      	ldr	r2, [r7, #4]
 8007cbe:	fa22 f303 	lsr.w	r3, r2, r3
 8007cc2:	4a07      	ldr	r2, [pc, #28]	@ (8007ce0 <HAL_RCC_GetHCLKFreq+0x58>)
 8007cc4:	6013      	str	r3, [r2, #0]
 8007cc6:	4a07      	ldr	r2, [pc, #28]	@ (8007ce4 <HAL_RCC_GetHCLKFreq+0x5c>)
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	6013      	str	r3, [r2, #0]
 8007ccc:	4b04      	ldr	r3, [pc, #16]	@ (8007ce0 <HAL_RCC_GetHCLKFreq+0x58>)
 8007cce:	681b      	ldr	r3, [r3, #0]
 8007cd0:	4618      	mov	r0, r3
 8007cd2:	3708      	adds	r7, #8
 8007cd4:	46bd      	mov	sp, r7
 8007cd6:	bd80      	pop	{r7, pc}
 8007cd8:	58024400 	.word	0x58024400
 8007cdc:	08018128 	.word	0x08018128
 8007ce0:	24000094 	.word	0x24000094
 8007ce4:	24000090 	.word	0x24000090

08007ce8 <HAL_RCC_GetPCLK1Freq>:
 8007ce8:	b580      	push	{r7, lr}
 8007cea:	af00      	add	r7, sp, #0
 8007cec:	f7ff ffcc 	bl	8007c88 <HAL_RCC_GetHCLKFreq>
 8007cf0:	4602      	mov	r2, r0
 8007cf2:	4b06      	ldr	r3, [pc, #24]	@ (8007d0c <HAL_RCC_GetPCLK1Freq+0x24>)
 8007cf4:	69db      	ldr	r3, [r3, #28]
 8007cf6:	091b      	lsrs	r3, r3, #4
 8007cf8:	f003 0307 	and.w	r3, r3, #7
 8007cfc:	4904      	ldr	r1, [pc, #16]	@ (8007d10 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007cfe:	5ccb      	ldrb	r3, [r1, r3]
 8007d00:	f003 031f 	and.w	r3, r3, #31
 8007d04:	fa22 f303 	lsr.w	r3, r2, r3
 8007d08:	4618      	mov	r0, r3
 8007d0a:	bd80      	pop	{r7, pc}
 8007d0c:	58024400 	.word	0x58024400
 8007d10:	08018128 	.word	0x08018128

08007d14 <HAL_RCCEx_PeriphCLKConfig>:
 8007d14:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007d18:	b0ca      	sub	sp, #296	@ 0x128
 8007d1a:	af00      	add	r7, sp, #0
 8007d1c:	f8c7 0114 	str.w	r0, [r7, #276]	@ 0x114
 8007d20:	2300      	movs	r3, #0
 8007d22:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007d26:	2300      	movs	r3, #0
 8007d28:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8007d2c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007d30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d34:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 8007d38:	2500      	movs	r5, #0
 8007d3a:	ea54 0305 	orrs.w	r3, r4, r5
 8007d3e:	d049      	beq.n	8007dd4 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8007d40:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007d44:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8007d46:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007d4a:	d02f      	beq.n	8007dac <HAL_RCCEx_PeriphCLKConfig+0x98>
 8007d4c:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8007d50:	d828      	bhi.n	8007da4 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007d52:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007d56:	d01a      	beq.n	8007d8e <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8007d58:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007d5c:	d822      	bhi.n	8007da4 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007d5e:	2b00      	cmp	r3, #0
 8007d60:	d003      	beq.n	8007d6a <HAL_RCCEx_PeriphCLKConfig+0x56>
 8007d62:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007d66:	d007      	beq.n	8007d78 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8007d68:	e01c      	b.n	8007da4 <HAL_RCCEx_PeriphCLKConfig+0x90>
 8007d6a:	4bb8      	ldr	r3, [pc, #736]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007d6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007d6e:	4ab7      	ldr	r2, [pc, #732]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007d70:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007d74:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007d76:	e01a      	b.n	8007dae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007d78:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007d7c:	3308      	adds	r3, #8
 8007d7e:	2102      	movs	r1, #2
 8007d80:	4618      	mov	r0, r3
 8007d82:	f002 fb61 	bl	800a448 <RCCEx_PLL2_Config>
 8007d86:	4603      	mov	r3, r0
 8007d88:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007d8c:	e00f      	b.n	8007dae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007d8e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007d92:	3328      	adds	r3, #40	@ 0x28
 8007d94:	2102      	movs	r1, #2
 8007d96:	4618      	mov	r0, r3
 8007d98:	f002 fc08 	bl	800a5ac <RCCEx_PLL3_Config>
 8007d9c:	4603      	mov	r3, r0
 8007d9e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007da2:	e004      	b.n	8007dae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007da4:	2301      	movs	r3, #1
 8007da6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007daa:	e000      	b.n	8007dae <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007dac:	bf00      	nop
 8007dae:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007db2:	2b00      	cmp	r3, #0
 8007db4:	d10a      	bne.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0xb8>
 8007db6:	4ba5      	ldr	r3, [pc, #660]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007db8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007dba:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8007dbe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007dc2:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8007dc4:	4aa1      	ldr	r2, [pc, #644]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007dc6:	430b      	orrs	r3, r1
 8007dc8:	6513      	str	r3, [r2, #80]	@ 0x50
 8007dca:	e003      	b.n	8007dd4 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8007dcc:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007dd0:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8007dd4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ddc:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 8007de0:	f04f 0900 	mov.w	r9, #0
 8007de4:	ea58 0309 	orrs.w	r3, r8, r9
 8007de8:	d047      	beq.n	8007e7a <HAL_RCCEx_PeriphCLKConfig+0x166>
 8007dea:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007dee:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007df0:	2b04      	cmp	r3, #4
 8007df2:	d82a      	bhi.n	8007e4a <HAL_RCCEx_PeriphCLKConfig+0x136>
 8007df4:	a201      	add	r2, pc, #4	@ (adr r2, 8007dfc <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8007df6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007dfa:	bf00      	nop
 8007dfc:	08007e11 	.word	0x08007e11
 8007e00:	08007e1f 	.word	0x08007e1f
 8007e04:	08007e35 	.word	0x08007e35
 8007e08:	08007e53 	.word	0x08007e53
 8007e0c:	08007e53 	.word	0x08007e53
 8007e10:	4b8e      	ldr	r3, [pc, #568]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007e12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007e14:	4a8d      	ldr	r2, [pc, #564]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007e16:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007e1a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007e1c:	e01a      	b.n	8007e54 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8007e1e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007e22:	3308      	adds	r3, #8
 8007e24:	2100      	movs	r1, #0
 8007e26:	4618      	mov	r0, r3
 8007e28:	f002 fb0e 	bl	800a448 <RCCEx_PLL2_Config>
 8007e2c:	4603      	mov	r3, r0
 8007e2e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007e32:	e00f      	b.n	8007e54 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8007e34:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007e38:	3328      	adds	r3, #40	@ 0x28
 8007e3a:	2100      	movs	r1, #0
 8007e3c:	4618      	mov	r0, r3
 8007e3e:	f002 fbb5 	bl	800a5ac <RCCEx_PLL3_Config>
 8007e42:	4603      	mov	r3, r0
 8007e44:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007e48:	e004      	b.n	8007e54 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8007e4a:	2301      	movs	r3, #1
 8007e4c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007e50:	e000      	b.n	8007e54 <HAL_RCCEx_PeriphCLKConfig+0x140>
 8007e52:	bf00      	nop
 8007e54:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007e58:	2b00      	cmp	r3, #0
 8007e5a:	d10a      	bne.n	8007e72 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 8007e5c:	4b7b      	ldr	r3, [pc, #492]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007e5e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007e60:	f023 0107 	bic.w	r1, r3, #7
 8007e64:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007e68:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007e6a:	4a78      	ldr	r2, [pc, #480]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007e6c:	430b      	orrs	r3, r1
 8007e6e:	6513      	str	r3, [r2, #80]	@ 0x50
 8007e70:	e003      	b.n	8007e7a <HAL_RCCEx_PeriphCLKConfig+0x166>
 8007e72:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007e76:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8007e7a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007e7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e82:	f402 7a00 	and.w	sl, r2, #512	@ 0x200
 8007e86:	f04f 0b00 	mov.w	fp, #0
 8007e8a:	ea5a 030b 	orrs.w	r3, sl, fp
 8007e8e:	d04c      	beq.n	8007f2a <HAL_RCCEx_PeriphCLKConfig+0x216>
 8007e90:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007e94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007e96:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007e9a:	d030      	beq.n	8007efe <HAL_RCCEx_PeriphCLKConfig+0x1ea>
 8007e9c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8007ea0:	d829      	bhi.n	8007ef6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8007ea2:	2bc0      	cmp	r3, #192	@ 0xc0
 8007ea4:	d02d      	beq.n	8007f02 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
 8007ea6:	2bc0      	cmp	r3, #192	@ 0xc0
 8007ea8:	d825      	bhi.n	8007ef6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8007eaa:	2b80      	cmp	r3, #128	@ 0x80
 8007eac:	d018      	beq.n	8007ee0 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
 8007eae:	2b80      	cmp	r3, #128	@ 0x80
 8007eb0:	d821      	bhi.n	8007ef6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d002      	beq.n	8007ebc <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8007eb6:	2b40      	cmp	r3, #64	@ 0x40
 8007eb8:	d007      	beq.n	8007eca <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8007eba:	e01c      	b.n	8007ef6 <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8007ebc:	4b63      	ldr	r3, [pc, #396]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007ebe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007ec0:	4a62      	ldr	r2, [pc, #392]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007ec2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007ec6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007ec8:	e01c      	b.n	8007f04 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8007eca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007ece:	3308      	adds	r3, #8
 8007ed0:	2100      	movs	r1, #0
 8007ed2:	4618      	mov	r0, r3
 8007ed4:	f002 fab8 	bl	800a448 <RCCEx_PLL2_Config>
 8007ed8:	4603      	mov	r3, r0
 8007eda:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007ede:	e011      	b.n	8007f04 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8007ee0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007ee4:	3328      	adds	r3, #40	@ 0x28
 8007ee6:	2100      	movs	r1, #0
 8007ee8:	4618      	mov	r0, r3
 8007eea:	f002 fb5f 	bl	800a5ac <RCCEx_PLL3_Config>
 8007eee:	4603      	mov	r3, r0
 8007ef0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007ef4:	e006      	b.n	8007f04 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8007ef6:	2301      	movs	r3, #1
 8007ef8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007efc:	e002      	b.n	8007f04 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8007efe:	bf00      	nop
 8007f00:	e000      	b.n	8007f04 <HAL_RCCEx_PeriphCLKConfig+0x1f0>
 8007f02:	bf00      	nop
 8007f04:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007f08:	2b00      	cmp	r3, #0
 8007f0a:	d10a      	bne.n	8007f22 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8007f0c:	4b4f      	ldr	r3, [pc, #316]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007f0e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007f10:	f423 71e0 	bic.w	r1, r3, #448	@ 0x1c0
 8007f14:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007f18:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007f1a:	4a4c      	ldr	r2, [pc, #304]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007f1c:	430b      	orrs	r3, r1
 8007f1e:	6513      	str	r3, [r2, #80]	@ 0x50
 8007f20:	e003      	b.n	8007f2a <HAL_RCCEx_PeriphCLKConfig+0x216>
 8007f22:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007f26:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8007f2a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007f2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f32:	f402 6380 	and.w	r3, r2, #1024	@ 0x400
 8007f36:	f8c7 3108 	str.w	r3, [r7, #264]	@ 0x108
 8007f3a:	2300      	movs	r3, #0
 8007f3c:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 8007f40:	e9d7 1242 	ldrd	r1, r2, [r7, #264]	@ 0x108
 8007f44:	460b      	mov	r3, r1
 8007f46:	4313      	orrs	r3, r2
 8007f48:	d053      	beq.n	8007ff2 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8007f4a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007f4e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8007f52:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007f56:	d035      	beq.n	8007fc4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8007f58:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007f5c:	d82e      	bhi.n	8007fbc <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8007f5e:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8007f62:	d031      	beq.n	8007fc8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>
 8007f64:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8007f68:	d828      	bhi.n	8007fbc <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8007f6a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007f6e:	d01a      	beq.n	8007fa6 <HAL_RCCEx_PeriphCLKConfig+0x292>
 8007f70:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007f74:	d822      	bhi.n	8007fbc <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d003      	beq.n	8007f82 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 8007f7a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007f7e:	d007      	beq.n	8007f90 <HAL_RCCEx_PeriphCLKConfig+0x27c>
 8007f80:	e01c      	b.n	8007fbc <HAL_RCCEx_PeriphCLKConfig+0x2a8>
 8007f82:	4b32      	ldr	r3, [pc, #200]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007f84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007f86:	4a31      	ldr	r2, [pc, #196]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007f88:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007f8c:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007f8e:	e01c      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8007f90:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007f94:	3308      	adds	r3, #8
 8007f96:	2100      	movs	r1, #0
 8007f98:	4618      	mov	r0, r3
 8007f9a:	f002 fa55 	bl	800a448 <RCCEx_PLL2_Config>
 8007f9e:	4603      	mov	r3, r0
 8007fa0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007fa4:	e011      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8007fa6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007faa:	3328      	adds	r3, #40	@ 0x28
 8007fac:	2100      	movs	r1, #0
 8007fae:	4618      	mov	r0, r3
 8007fb0:	f002 fafc 	bl	800a5ac <RCCEx_PLL3_Config>
 8007fb4:	4603      	mov	r3, r0
 8007fb6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007fba:	e006      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8007fbc:	2301      	movs	r3, #1
 8007fbe:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8007fc2:	e002      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8007fc4:	bf00      	nop
 8007fc6:	e000      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x2b6>
 8007fc8:	bf00      	nop
 8007fca:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007fce:	2b00      	cmp	r3, #0
 8007fd0:	d10b      	bne.n	8007fea <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 8007fd2:	4b1e      	ldr	r3, [pc, #120]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007fd4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007fd6:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8007fda:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007fde:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8007fe2:	4a1a      	ldr	r2, [pc, #104]	@ (800804c <HAL_RCCEx_PeriphCLKConfig+0x338>)
 8007fe4:	430b      	orrs	r3, r1
 8007fe6:	6593      	str	r3, [r2, #88]	@ 0x58
 8007fe8:	e003      	b.n	8007ff2 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8007fea:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8007fee:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8007ff2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8007ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ffa:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 8007ffe:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
 8008002:	2300      	movs	r3, #0
 8008004:	f8c7 3104 	str.w	r3, [r7, #260]	@ 0x104
 8008008:	e9d7 1240 	ldrd	r1, r2, [r7, #256]	@ 0x100
 800800c:	460b      	mov	r3, r1
 800800e:	4313      	orrs	r3, r2
 8008010:	d056      	beq.n	80080c0 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 8008012:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008016:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800801a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800801e:	d038      	beq.n	8008092 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8008020:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8008024:	d831      	bhi.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x376>
 8008026:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 800802a:	d034      	beq.n	8008096 <HAL_RCCEx_PeriphCLKConfig+0x382>
 800802c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8008030:	d82b      	bhi.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x376>
 8008032:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8008036:	d01d      	beq.n	8008074 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8008038:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800803c:	d825      	bhi.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x376>
 800803e:	2b00      	cmp	r3, #0
 8008040:	d006      	beq.n	8008050 <HAL_RCCEx_PeriphCLKConfig+0x33c>
 8008042:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8008046:	d00a      	beq.n	800805e <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8008048:	e01f      	b.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x376>
 800804a:	bf00      	nop
 800804c:	58024400 	.word	0x58024400
 8008050:	4ba2      	ldr	r3, [pc, #648]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008052:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008054:	4aa1      	ldr	r2, [pc, #644]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008056:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800805a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800805c:	e01c      	b.n	8008098 <HAL_RCCEx_PeriphCLKConfig+0x384>
 800805e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008062:	3308      	adds	r3, #8
 8008064:	2100      	movs	r1, #0
 8008066:	4618      	mov	r0, r3
 8008068:	f002 f9ee 	bl	800a448 <RCCEx_PLL2_Config>
 800806c:	4603      	mov	r3, r0
 800806e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008072:	e011      	b.n	8008098 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8008074:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008078:	3328      	adds	r3, #40	@ 0x28
 800807a:	2100      	movs	r1, #0
 800807c:	4618      	mov	r0, r3
 800807e:	f002 fa95 	bl	800a5ac <RCCEx_PLL3_Config>
 8008082:	4603      	mov	r3, r0
 8008084:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008088:	e006      	b.n	8008098 <HAL_RCCEx_PeriphCLKConfig+0x384>
 800808a:	2301      	movs	r3, #1
 800808c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008090:	e002      	b.n	8008098 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8008092:	bf00      	nop
 8008094:	e000      	b.n	8008098 <HAL_RCCEx_PeriphCLKConfig+0x384>
 8008096:	bf00      	nop
 8008098:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800809c:	2b00      	cmp	r3, #0
 800809e:	d10b      	bne.n	80080b8 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 80080a0:	4b8e      	ldr	r3, [pc, #568]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80080a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80080a4:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 80080a8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80080ac:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80080b0:	4a8a      	ldr	r2, [pc, #552]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80080b2:	430b      	orrs	r3, r1
 80080b4:	6593      	str	r3, [r2, #88]	@ 0x58
 80080b6:	e003      	b.n	80080c0 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 80080b8:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80080bc:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80080c0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80080c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080c8:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 80080cc:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80080d0:	2300      	movs	r3, #0
 80080d2:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80080d6:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 80080da:	460b      	mov	r3, r1
 80080dc:	4313      	orrs	r3, r2
 80080de:	d03a      	beq.n	8008156 <HAL_RCCEx_PeriphCLKConfig+0x442>
 80080e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80080e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80080e6:	2b30      	cmp	r3, #48	@ 0x30
 80080e8:	d01f      	beq.n	800812a <HAL_RCCEx_PeriphCLKConfig+0x416>
 80080ea:	2b30      	cmp	r3, #48	@ 0x30
 80080ec:	d819      	bhi.n	8008122 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80080ee:	2b20      	cmp	r3, #32
 80080f0:	d00c      	beq.n	800810c <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 80080f2:	2b20      	cmp	r3, #32
 80080f4:	d815      	bhi.n	8008122 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80080f6:	2b00      	cmp	r3, #0
 80080f8:	d019      	beq.n	800812e <HAL_RCCEx_PeriphCLKConfig+0x41a>
 80080fa:	2b10      	cmp	r3, #16
 80080fc:	d111      	bne.n	8008122 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 80080fe:	4b77      	ldr	r3, [pc, #476]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008100:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008102:	4a76      	ldr	r2, [pc, #472]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008104:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008108:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800810a:	e011      	b.n	8008130 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800810c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008110:	3308      	adds	r3, #8
 8008112:	2102      	movs	r1, #2
 8008114:	4618      	mov	r0, r3
 8008116:	f002 f997 	bl	800a448 <RCCEx_PLL2_Config>
 800811a:	4603      	mov	r3, r0
 800811c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008120:	e006      	b.n	8008130 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8008122:	2301      	movs	r3, #1
 8008124:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008128:	e002      	b.n	8008130 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800812a:	bf00      	nop
 800812c:	e000      	b.n	8008130 <HAL_RCCEx_PeriphCLKConfig+0x41c>
 800812e:	bf00      	nop
 8008130:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008134:	2b00      	cmp	r3, #0
 8008136:	d10a      	bne.n	800814e <HAL_RCCEx_PeriphCLKConfig+0x43a>
 8008138:	4b68      	ldr	r3, [pc, #416]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800813a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800813c:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8008140:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008144:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008146:	4a65      	ldr	r2, [pc, #404]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 8008148:	430b      	orrs	r3, r1
 800814a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800814c:	e003      	b.n	8008156 <HAL_RCCEx_PeriphCLKConfig+0x442>
 800814e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008152:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008156:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800815a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800815e:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8008162:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8008166:	2300      	movs	r3, #0
 8008168:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 800816c:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8008170:	460b      	mov	r3, r1
 8008172:	4313      	orrs	r3, r2
 8008174:	d051      	beq.n	800821a <HAL_RCCEx_PeriphCLKConfig+0x506>
 8008176:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800817a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800817c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008180:	d035      	beq.n	80081ee <HAL_RCCEx_PeriphCLKConfig+0x4da>
 8008182:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008186:	d82e      	bhi.n	80081e6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8008188:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800818c:	d031      	beq.n	80081f2 <HAL_RCCEx_PeriphCLKConfig+0x4de>
 800818e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8008192:	d828      	bhi.n	80081e6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 8008194:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008198:	d01a      	beq.n	80081d0 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 800819a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800819e:	d822      	bhi.n	80081e6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80081a0:	2b00      	cmp	r3, #0
 80081a2:	d003      	beq.n	80081ac <HAL_RCCEx_PeriphCLKConfig+0x498>
 80081a4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80081a8:	d007      	beq.n	80081ba <HAL_RCCEx_PeriphCLKConfig+0x4a6>
 80081aa:	e01c      	b.n	80081e6 <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 80081ac:	4b4b      	ldr	r3, [pc, #300]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80081ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80081b0:	4a4a      	ldr	r2, [pc, #296]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80081b2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80081b6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80081b8:	e01c      	b.n	80081f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80081ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80081be:	3308      	adds	r3, #8
 80081c0:	2100      	movs	r1, #0
 80081c2:	4618      	mov	r0, r3
 80081c4:	f002 f940 	bl	800a448 <RCCEx_PLL2_Config>
 80081c8:	4603      	mov	r3, r0
 80081ca:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80081ce:	e011      	b.n	80081f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80081d0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80081d4:	3328      	adds	r3, #40	@ 0x28
 80081d6:	2100      	movs	r1, #0
 80081d8:	4618      	mov	r0, r3
 80081da:	f002 f9e7 	bl	800a5ac <RCCEx_PLL3_Config>
 80081de:	4603      	mov	r3, r0
 80081e0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80081e4:	e006      	b.n	80081f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80081e6:	2301      	movs	r3, #1
 80081e8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80081ec:	e002      	b.n	80081f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80081ee:	bf00      	nop
 80081f0:	e000      	b.n	80081f4 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 80081f2:	bf00      	nop
 80081f4:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80081f8:	2b00      	cmp	r3, #0
 80081fa:	d10a      	bne.n	8008212 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 80081fc:	4b37      	ldr	r3, [pc, #220]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80081fe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008200:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8008204:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008208:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800820a:	4a34      	ldr	r2, [pc, #208]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 800820c:	430b      	orrs	r3, r1
 800820e:	6513      	str	r3, [r2, #80]	@ 0x50
 8008210:	e003      	b.n	800821a <HAL_RCCEx_PeriphCLKConfig+0x506>
 8008212:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008216:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800821a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800821e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008222:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 8008226:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800822a:	2300      	movs	r3, #0
 800822c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8008230:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8008234:	460b      	mov	r3, r1
 8008236:	4313      	orrs	r3, r2
 8008238:	d056      	beq.n	80082e8 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 800823a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800823e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008240:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8008244:	d033      	beq.n	80082ae <HAL_RCCEx_PeriphCLKConfig+0x59a>
 8008246:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800824a:	d82c      	bhi.n	80082a6 <HAL_RCCEx_PeriphCLKConfig+0x592>
 800824c:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8008250:	d02f      	beq.n	80082b2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8008252:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8008256:	d826      	bhi.n	80082a6 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8008258:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 800825c:	d02b      	beq.n	80082b6 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
 800825e:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8008262:	d820      	bhi.n	80082a6 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8008264:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8008268:	d012      	beq.n	8008290 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 800826a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800826e:	d81a      	bhi.n	80082a6 <HAL_RCCEx_PeriphCLKConfig+0x592>
 8008270:	2b00      	cmp	r3, #0
 8008272:	d022      	beq.n	80082ba <HAL_RCCEx_PeriphCLKConfig+0x5a6>
 8008274:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008278:	d115      	bne.n	80082a6 <HAL_RCCEx_PeriphCLKConfig+0x592>
 800827a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800827e:	3308      	adds	r3, #8
 8008280:	2101      	movs	r1, #1
 8008282:	4618      	mov	r0, r3
 8008284:	f002 f8e0 	bl	800a448 <RCCEx_PLL2_Config>
 8008288:	4603      	mov	r3, r0
 800828a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800828e:	e015      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 8008290:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008294:	3328      	adds	r3, #40	@ 0x28
 8008296:	2101      	movs	r1, #1
 8008298:	4618      	mov	r0, r3
 800829a:	f002 f987 	bl	800a5ac <RCCEx_PLL3_Config>
 800829e:	4603      	mov	r3, r0
 80082a0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80082a4:	e00a      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 80082a6:	2301      	movs	r3, #1
 80082a8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80082ac:	e006      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 80082ae:	bf00      	nop
 80082b0:	e004      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 80082b2:	bf00      	nop
 80082b4:	e002      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 80082b6:	bf00      	nop
 80082b8:	e000      	b.n	80082bc <HAL_RCCEx_PeriphCLKConfig+0x5a8>
 80082ba:	bf00      	nop
 80082bc:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80082c0:	2b00      	cmp	r3, #0
 80082c2:	d10d      	bne.n	80082e0 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 80082c4:	4b05      	ldr	r3, [pc, #20]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80082c6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80082c8:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 80082cc:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80082d0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80082d2:	4a02      	ldr	r2, [pc, #8]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x5c8>)
 80082d4:	430b      	orrs	r3, r1
 80082d6:	6513      	str	r3, [r2, #80]	@ 0x50
 80082d8:	e006      	b.n	80082e8 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 80082da:	bf00      	nop
 80082dc:	58024400 	.word	0x58024400
 80082e0:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80082e4:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80082e8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80082ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082f0:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 80082f4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80082f8:	2300      	movs	r3, #0
 80082fa:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80082fe:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 8008302:	460b      	mov	r3, r1
 8008304:	4313      	orrs	r3, r2
 8008306:	d055      	beq.n	80083b4 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 8008308:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800830c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8008310:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8008314:	d033      	beq.n	800837e <HAL_RCCEx_PeriphCLKConfig+0x66a>
 8008316:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 800831a:	d82c      	bhi.n	8008376 <HAL_RCCEx_PeriphCLKConfig+0x662>
 800831c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008320:	d02f      	beq.n	8008382 <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8008322:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008326:	d826      	bhi.n	8008376 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8008328:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800832c:	d02b      	beq.n	8008386 <HAL_RCCEx_PeriphCLKConfig+0x672>
 800832e:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8008332:	d820      	bhi.n	8008376 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8008334:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008338:	d012      	beq.n	8008360 <HAL_RCCEx_PeriphCLKConfig+0x64c>
 800833a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800833e:	d81a      	bhi.n	8008376 <HAL_RCCEx_PeriphCLKConfig+0x662>
 8008340:	2b00      	cmp	r3, #0
 8008342:	d022      	beq.n	800838a <HAL_RCCEx_PeriphCLKConfig+0x676>
 8008344:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8008348:	d115      	bne.n	8008376 <HAL_RCCEx_PeriphCLKConfig+0x662>
 800834a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800834e:	3308      	adds	r3, #8
 8008350:	2101      	movs	r1, #1
 8008352:	4618      	mov	r0, r3
 8008354:	f002 f878 	bl	800a448 <RCCEx_PLL2_Config>
 8008358:	4603      	mov	r3, r0
 800835a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800835e:	e015      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8008360:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008364:	3328      	adds	r3, #40	@ 0x28
 8008366:	2101      	movs	r1, #1
 8008368:	4618      	mov	r0, r3
 800836a:	f002 f91f 	bl	800a5ac <RCCEx_PLL3_Config>
 800836e:	4603      	mov	r3, r0
 8008370:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008374:	e00a      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8008376:	2301      	movs	r3, #1
 8008378:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800837c:	e006      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 800837e:	bf00      	nop
 8008380:	e004      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8008382:	bf00      	nop
 8008384:	e002      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 8008386:	bf00      	nop
 8008388:	e000      	b.n	800838c <HAL_RCCEx_PeriphCLKConfig+0x678>
 800838a:	bf00      	nop
 800838c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008390:	2b00      	cmp	r3, #0
 8008392:	d10b      	bne.n	80083ac <HAL_RCCEx_PeriphCLKConfig+0x698>
 8008394:	4ba3      	ldr	r3, [pc, #652]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008396:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008398:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800839c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80083a0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80083a4:	4a9f      	ldr	r2, [pc, #636]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80083a6:	430b      	orrs	r3, r1
 80083a8:	6593      	str	r3, [r2, #88]	@ 0x58
 80083aa:	e003      	b.n	80083b4 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
 80083ac:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80083b0:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80083b4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80083b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80083bc:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 80083c0:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80083c4:	2300      	movs	r3, #0
 80083c6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80083ca:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80083ce:	460b      	mov	r3, r1
 80083d0:	4313      	orrs	r3, r2
 80083d2:	d037      	beq.n	8008444 <HAL_RCCEx_PeriphCLKConfig+0x730>
 80083d4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80083d8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80083da:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80083de:	d00e      	beq.n	80083fe <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 80083e0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80083e4:	d816      	bhi.n	8008414 <HAL_RCCEx_PeriphCLKConfig+0x700>
 80083e6:	2b00      	cmp	r3, #0
 80083e8:	d018      	beq.n	800841c <HAL_RCCEx_PeriphCLKConfig+0x708>
 80083ea:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80083ee:	d111      	bne.n	8008414 <HAL_RCCEx_PeriphCLKConfig+0x700>
 80083f0:	4b8c      	ldr	r3, [pc, #560]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80083f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80083f4:	4a8b      	ldr	r2, [pc, #556]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80083f6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80083fa:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80083fc:	e00f      	b.n	800841e <HAL_RCCEx_PeriphCLKConfig+0x70a>
 80083fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008402:	3308      	adds	r3, #8
 8008404:	2101      	movs	r1, #1
 8008406:	4618      	mov	r0, r3
 8008408:	f002 f81e 	bl	800a448 <RCCEx_PLL2_Config>
 800840c:	4603      	mov	r3, r0
 800840e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008412:	e004      	b.n	800841e <HAL_RCCEx_PeriphCLKConfig+0x70a>
 8008414:	2301      	movs	r3, #1
 8008416:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800841a:	e000      	b.n	800841e <HAL_RCCEx_PeriphCLKConfig+0x70a>
 800841c:	bf00      	nop
 800841e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008422:	2b00      	cmp	r3, #0
 8008424:	d10a      	bne.n	800843c <HAL_RCCEx_PeriphCLKConfig+0x728>
 8008426:	4b7f      	ldr	r3, [pc, #508]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008428:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800842a:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 800842e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008432:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008434:	4a7b      	ldr	r2, [pc, #492]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008436:	430b      	orrs	r3, r1
 8008438:	6513      	str	r3, [r2, #80]	@ 0x50
 800843a:	e003      	b.n	8008444 <HAL_RCCEx_PeriphCLKConfig+0x730>
 800843c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008440:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008444:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008448:	e9d3 2300 	ldrd	r2, r3, [r3]
 800844c:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 8008450:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8008454:	2300      	movs	r3, #0
 8008456:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800845a:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 800845e:	460b      	mov	r3, r1
 8008460:	4313      	orrs	r3, r2
 8008462:	d039      	beq.n	80084d8 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 8008464:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008468:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800846a:	2b03      	cmp	r3, #3
 800846c:	d81c      	bhi.n	80084a8 <HAL_RCCEx_PeriphCLKConfig+0x794>
 800846e:	a201      	add	r2, pc, #4	@ (adr r2, 8008474 <HAL_RCCEx_PeriphCLKConfig+0x760>)
 8008470:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008474:	080084b1 	.word	0x080084b1
 8008478:	08008485 	.word	0x08008485
 800847c:	08008493 	.word	0x08008493
 8008480:	080084b1 	.word	0x080084b1
 8008484:	4b67      	ldr	r3, [pc, #412]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008486:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008488:	4a66      	ldr	r2, [pc, #408]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800848a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800848e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8008490:	e00f      	b.n	80084b2 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 8008492:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008496:	3308      	adds	r3, #8
 8008498:	2102      	movs	r1, #2
 800849a:	4618      	mov	r0, r3
 800849c:	f001 ffd4 	bl	800a448 <RCCEx_PLL2_Config>
 80084a0:	4603      	mov	r3, r0
 80084a2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80084a6:	e004      	b.n	80084b2 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 80084a8:	2301      	movs	r3, #1
 80084aa:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80084ae:	e000      	b.n	80084b2 <HAL_RCCEx_PeriphCLKConfig+0x79e>
 80084b0:	bf00      	nop
 80084b2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80084b6:	2b00      	cmp	r3, #0
 80084b8:	d10a      	bne.n	80084d0 <HAL_RCCEx_PeriphCLKConfig+0x7bc>
 80084ba:	4b5a      	ldr	r3, [pc, #360]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80084bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80084be:	f023 0103 	bic.w	r1, r3, #3
 80084c2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80084c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80084c8:	4a56      	ldr	r2, [pc, #344]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80084ca:	430b      	orrs	r3, r1
 80084cc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80084ce:	e003      	b.n	80084d8 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 80084d0:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80084d4:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80084d8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80084dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084e0:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 80084e4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80084e8:	2300      	movs	r3, #0
 80084ea:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80084ee:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 80084f2:	460b      	mov	r3, r1
 80084f4:	4313      	orrs	r3, r2
 80084f6:	f000 809f 	beq.w	8008638 <HAL_RCCEx_PeriphCLKConfig+0x924>
 80084fa:	4b4b      	ldr	r3, [pc, #300]	@ (8008628 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 80084fc:	681b      	ldr	r3, [r3, #0]
 80084fe:	4a4a      	ldr	r2, [pc, #296]	@ (8008628 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 8008500:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8008504:	6013      	str	r3, [r2, #0]
 8008506:	f7fb f8f5 	bl	80036f4 <HAL_GetTick>
 800850a:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 800850e:	e00b      	b.n	8008528 <HAL_RCCEx_PeriphCLKConfig+0x814>
 8008510:	f7fb f8f0 	bl	80036f4 <HAL_GetTick>
 8008514:	4602      	mov	r2, r0
 8008516:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 800851a:	1ad3      	subs	r3, r2, r3
 800851c:	2b64      	cmp	r3, #100	@ 0x64
 800851e:	d903      	bls.n	8008528 <HAL_RCCEx_PeriphCLKConfig+0x814>
 8008520:	2303      	movs	r3, #3
 8008522:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008526:	e005      	b.n	8008534 <HAL_RCCEx_PeriphCLKConfig+0x820>
 8008528:	4b3f      	ldr	r3, [pc, #252]	@ (8008628 <HAL_RCCEx_PeriphCLKConfig+0x914>)
 800852a:	681b      	ldr	r3, [r3, #0]
 800852c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008530:	2b00      	cmp	r3, #0
 8008532:	d0ed      	beq.n	8008510 <HAL_RCCEx_PeriphCLKConfig+0x7fc>
 8008534:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008538:	2b00      	cmp	r3, #0
 800853a:	d179      	bne.n	8008630 <HAL_RCCEx_PeriphCLKConfig+0x91c>
 800853c:	4b39      	ldr	r3, [pc, #228]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800853e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8008540:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008544:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8008548:	4053      	eors	r3, r2
 800854a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800854e:	2b00      	cmp	r3, #0
 8008550:	d015      	beq.n	800857e <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8008552:	4b34      	ldr	r3, [pc, #208]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008554:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008556:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800855a:	f8c7 311c 	str.w	r3, [r7, #284]	@ 0x11c
 800855e:	4b31      	ldr	r3, [pc, #196]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008560:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008562:	4a30      	ldr	r2, [pc, #192]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008564:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008568:	6713      	str	r3, [r2, #112]	@ 0x70
 800856a:	4b2e      	ldr	r3, [pc, #184]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 800856c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800856e:	4a2d      	ldr	r2, [pc, #180]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008570:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8008574:	6713      	str	r3, [r2, #112]	@ 0x70
 8008576:	4a2b      	ldr	r2, [pc, #172]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008578:	f8d7 311c 	ldr.w	r3, [r7, #284]	@ 0x11c
 800857c:	6713      	str	r3, [r2, #112]	@ 0x70
 800857e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008582:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8008586:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800858a:	d118      	bne.n	80085be <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 800858c:	f7fb f8b2 	bl	80036f4 <HAL_GetTick>
 8008590:	f8c7 0120 	str.w	r0, [r7, #288]	@ 0x120
 8008594:	e00d      	b.n	80085b2 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 8008596:	f7fb f8ad 	bl	80036f4 <HAL_GetTick>
 800859a:	4602      	mov	r2, r0
 800859c:	f8d7 3120 	ldr.w	r3, [r7, #288]	@ 0x120
 80085a0:	1ad2      	subs	r2, r2, r3
 80085a2:	f241 3388 	movw	r3, #5000	@ 0x1388
 80085a6:	429a      	cmp	r2, r3
 80085a8:	d903      	bls.n	80085b2 <HAL_RCCEx_PeriphCLKConfig+0x89e>
 80085aa:	2303      	movs	r3, #3
 80085ac:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80085b0:	e005      	b.n	80085be <HAL_RCCEx_PeriphCLKConfig+0x8aa>
 80085b2:	4b1c      	ldr	r3, [pc, #112]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80085b4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80085b6:	f003 0302 	and.w	r3, r3, #2
 80085ba:	2b00      	cmp	r3, #0
 80085bc:	d0eb      	beq.n	8008596 <HAL_RCCEx_PeriphCLKConfig+0x882>
 80085be:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80085c2:	2b00      	cmp	r3, #0
 80085c4:	d129      	bne.n	800861a <HAL_RCCEx_PeriphCLKConfig+0x906>
 80085c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80085ca:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80085ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80085d2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80085d6:	d10e      	bne.n	80085f6 <HAL_RCCEx_PeriphCLKConfig+0x8e2>
 80085d8:	4b12      	ldr	r3, [pc, #72]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80085da:	691b      	ldr	r3, [r3, #16]
 80085dc:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 80085e0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80085e4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 80085e8:	091a      	lsrs	r2, r3, #4
 80085ea:	4b10      	ldr	r3, [pc, #64]	@ (800862c <HAL_RCCEx_PeriphCLKConfig+0x918>)
 80085ec:	4013      	ands	r3, r2
 80085ee:	4a0d      	ldr	r2, [pc, #52]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80085f0:	430b      	orrs	r3, r1
 80085f2:	6113      	str	r3, [r2, #16]
 80085f4:	e005      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
 80085f6:	4b0b      	ldr	r3, [pc, #44]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80085f8:	691b      	ldr	r3, [r3, #16]
 80085fa:	4a0a      	ldr	r2, [pc, #40]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 80085fc:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 8008600:	6113      	str	r3, [r2, #16]
 8008602:	4b08      	ldr	r3, [pc, #32]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008604:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 8008606:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800860a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800860e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008612:	4a04      	ldr	r2, [pc, #16]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0x910>)
 8008614:	430b      	orrs	r3, r1
 8008616:	6713      	str	r3, [r2, #112]	@ 0x70
 8008618:	e00e      	b.n	8008638 <HAL_RCCEx_PeriphCLKConfig+0x924>
 800861a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800861e:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008622:	e009      	b.n	8008638 <HAL_RCCEx_PeriphCLKConfig+0x924>
 8008624:	58024400 	.word	0x58024400
 8008628:	58024800 	.word	0x58024800
 800862c:	00ffffcf 	.word	0x00ffffcf
 8008630:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008634:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008638:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800863c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008640:	f002 0301 	and.w	r3, r2, #1
 8008644:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8008648:	2300      	movs	r3, #0
 800864a:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800864e:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8008652:	460b      	mov	r3, r1
 8008654:	4313      	orrs	r3, r2
 8008656:	f000 8089 	beq.w	800876c <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800865a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800865e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008660:	2b28      	cmp	r3, #40	@ 0x28
 8008662:	d86b      	bhi.n	800873c <HAL_RCCEx_PeriphCLKConfig+0xa28>
 8008664:	a201      	add	r2, pc, #4	@ (adr r2, 800866c <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008666:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800866a:	bf00      	nop
 800866c:	08008745 	.word	0x08008745
 8008670:	0800873d 	.word	0x0800873d
 8008674:	0800873d 	.word	0x0800873d
 8008678:	0800873d 	.word	0x0800873d
 800867c:	0800873d 	.word	0x0800873d
 8008680:	0800873d 	.word	0x0800873d
 8008684:	0800873d 	.word	0x0800873d
 8008688:	0800873d 	.word	0x0800873d
 800868c:	08008711 	.word	0x08008711
 8008690:	0800873d 	.word	0x0800873d
 8008694:	0800873d 	.word	0x0800873d
 8008698:	0800873d 	.word	0x0800873d
 800869c:	0800873d 	.word	0x0800873d
 80086a0:	0800873d 	.word	0x0800873d
 80086a4:	0800873d 	.word	0x0800873d
 80086a8:	0800873d 	.word	0x0800873d
 80086ac:	08008727 	.word	0x08008727
 80086b0:	0800873d 	.word	0x0800873d
 80086b4:	0800873d 	.word	0x0800873d
 80086b8:	0800873d 	.word	0x0800873d
 80086bc:	0800873d 	.word	0x0800873d
 80086c0:	0800873d 	.word	0x0800873d
 80086c4:	0800873d 	.word	0x0800873d
 80086c8:	0800873d 	.word	0x0800873d
 80086cc:	08008745 	.word	0x08008745
 80086d0:	0800873d 	.word	0x0800873d
 80086d4:	0800873d 	.word	0x0800873d
 80086d8:	0800873d 	.word	0x0800873d
 80086dc:	0800873d 	.word	0x0800873d
 80086e0:	0800873d 	.word	0x0800873d
 80086e4:	0800873d 	.word	0x0800873d
 80086e8:	0800873d 	.word	0x0800873d
 80086ec:	08008745 	.word	0x08008745
 80086f0:	0800873d 	.word	0x0800873d
 80086f4:	0800873d 	.word	0x0800873d
 80086f8:	0800873d 	.word	0x0800873d
 80086fc:	0800873d 	.word	0x0800873d
 8008700:	0800873d 	.word	0x0800873d
 8008704:	0800873d 	.word	0x0800873d
 8008708:	0800873d 	.word	0x0800873d
 800870c:	08008745 	.word	0x08008745
 8008710:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008714:	3308      	adds	r3, #8
 8008716:	2101      	movs	r1, #1
 8008718:	4618      	mov	r0, r3
 800871a:	f001 fe95 	bl	800a448 <RCCEx_PLL2_Config>
 800871e:	4603      	mov	r3, r0
 8008720:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008724:	e00f      	b.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 8008726:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800872a:	3328      	adds	r3, #40	@ 0x28
 800872c:	2101      	movs	r1, #1
 800872e:	4618      	mov	r0, r3
 8008730:	f001 ff3c 	bl	800a5ac <RCCEx_PLL3_Config>
 8008734:	4603      	mov	r3, r0
 8008736:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800873a:	e004      	b.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 800873c:	2301      	movs	r3, #1
 800873e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008742:	e000      	b.n	8008746 <HAL_RCCEx_PeriphCLKConfig+0xa32>
 8008744:	bf00      	nop
 8008746:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800874a:	2b00      	cmp	r3, #0
 800874c:	d10a      	bne.n	8008764 <HAL_RCCEx_PeriphCLKConfig+0xa50>
 800874e:	4bbf      	ldr	r3, [pc, #764]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008750:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008752:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 8008756:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800875a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800875c:	4abb      	ldr	r2, [pc, #748]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800875e:	430b      	orrs	r3, r1
 8008760:	6553      	str	r3, [r2, #84]	@ 0x54
 8008762:	e003      	b.n	800876c <HAL_RCCEx_PeriphCLKConfig+0xa58>
 8008764:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008768:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800876c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008770:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008774:	f002 0302 	and.w	r3, r2, #2
 8008778:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800877c:	2300      	movs	r3, #0
 800877e:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8008782:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 8008786:	460b      	mov	r3, r1
 8008788:	4313      	orrs	r3, r2
 800878a:	d041      	beq.n	8008810 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 800878c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008790:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008792:	2b05      	cmp	r3, #5
 8008794:	d824      	bhi.n	80087e0 <HAL_RCCEx_PeriphCLKConfig+0xacc>
 8008796:	a201      	add	r2, pc, #4	@ (adr r2, 800879c <HAL_RCCEx_PeriphCLKConfig+0xa88>)
 8008798:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800879c:	080087e9 	.word	0x080087e9
 80087a0:	080087b5 	.word	0x080087b5
 80087a4:	080087cb 	.word	0x080087cb
 80087a8:	080087e9 	.word	0x080087e9
 80087ac:	080087e9 	.word	0x080087e9
 80087b0:	080087e9 	.word	0x080087e9
 80087b4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80087b8:	3308      	adds	r3, #8
 80087ba:	2101      	movs	r1, #1
 80087bc:	4618      	mov	r0, r3
 80087be:	f001 fe43 	bl	800a448 <RCCEx_PLL2_Config>
 80087c2:	4603      	mov	r3, r0
 80087c4:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80087c8:	e00f      	b.n	80087ea <HAL_RCCEx_PeriphCLKConfig+0xad6>
 80087ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80087ce:	3328      	adds	r3, #40	@ 0x28
 80087d0:	2101      	movs	r1, #1
 80087d2:	4618      	mov	r0, r3
 80087d4:	f001 feea 	bl	800a5ac <RCCEx_PLL3_Config>
 80087d8:	4603      	mov	r3, r0
 80087da:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80087de:	e004      	b.n	80087ea <HAL_RCCEx_PeriphCLKConfig+0xad6>
 80087e0:	2301      	movs	r3, #1
 80087e2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80087e6:	e000      	b.n	80087ea <HAL_RCCEx_PeriphCLKConfig+0xad6>
 80087e8:	bf00      	nop
 80087ea:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80087ee:	2b00      	cmp	r3, #0
 80087f0:	d10a      	bne.n	8008808 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
 80087f2:	4b96      	ldr	r3, [pc, #600]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 80087f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80087f6:	f023 0107 	bic.w	r1, r3, #7
 80087fa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80087fe:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008800:	4a92      	ldr	r2, [pc, #584]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008802:	430b      	orrs	r3, r1
 8008804:	6553      	str	r3, [r2, #84]	@ 0x54
 8008806:	e003      	b.n	8008810 <HAL_RCCEx_PeriphCLKConfig+0xafc>
 8008808:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800880c:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008810:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008814:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008818:	f002 0304 	and.w	r3, r2, #4
 800881c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008820:	2300      	movs	r3, #0
 8008822:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8008826:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 800882a:	460b      	mov	r3, r1
 800882c:	4313      	orrs	r3, r2
 800882e:	d044      	beq.n	80088ba <HAL_RCCEx_PeriphCLKConfig+0xba6>
 8008830:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008834:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8008838:	2b05      	cmp	r3, #5
 800883a:	d825      	bhi.n	8008888 <HAL_RCCEx_PeriphCLKConfig+0xb74>
 800883c:	a201      	add	r2, pc, #4	@ (adr r2, 8008844 <HAL_RCCEx_PeriphCLKConfig+0xb30>)
 800883e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008842:	bf00      	nop
 8008844:	08008891 	.word	0x08008891
 8008848:	0800885d 	.word	0x0800885d
 800884c:	08008873 	.word	0x08008873
 8008850:	08008891 	.word	0x08008891
 8008854:	08008891 	.word	0x08008891
 8008858:	08008891 	.word	0x08008891
 800885c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008860:	3308      	adds	r3, #8
 8008862:	2101      	movs	r1, #1
 8008864:	4618      	mov	r0, r3
 8008866:	f001 fdef 	bl	800a448 <RCCEx_PLL2_Config>
 800886a:	4603      	mov	r3, r0
 800886c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008870:	e00f      	b.n	8008892 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8008872:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008876:	3328      	adds	r3, #40	@ 0x28
 8008878:	2101      	movs	r1, #1
 800887a:	4618      	mov	r0, r3
 800887c:	f001 fe96 	bl	800a5ac <RCCEx_PLL3_Config>
 8008880:	4603      	mov	r3, r0
 8008882:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008886:	e004      	b.n	8008892 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8008888:	2301      	movs	r3, #1
 800888a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800888e:	e000      	b.n	8008892 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8008890:	bf00      	nop
 8008892:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008896:	2b00      	cmp	r3, #0
 8008898:	d10b      	bne.n	80088b2 <HAL_RCCEx_PeriphCLKConfig+0xb9e>
 800889a:	4b6c      	ldr	r3, [pc, #432]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 800889c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800889e:	f023 0107 	bic.w	r1, r3, #7
 80088a2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80088a6:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80088aa:	4a68      	ldr	r2, [pc, #416]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 80088ac:	430b      	orrs	r3, r1
 80088ae:	6593      	str	r3, [r2, #88]	@ 0x58
 80088b0:	e003      	b.n	80088ba <HAL_RCCEx_PeriphCLKConfig+0xba6>
 80088b2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80088b6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80088ba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80088be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088c2:	f002 0320 	and.w	r3, r2, #32
 80088c6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80088ca:	2300      	movs	r3, #0
 80088cc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80088d0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80088d4:	460b      	mov	r3, r1
 80088d6:	4313      	orrs	r3, r2
 80088d8:	d055      	beq.n	8008986 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 80088da:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80088de:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80088e2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80088e6:	d033      	beq.n	8008950 <HAL_RCCEx_PeriphCLKConfig+0xc3c>
 80088e8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80088ec:	d82c      	bhi.n	8008948 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 80088ee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80088f2:	d02f      	beq.n	8008954 <HAL_RCCEx_PeriphCLKConfig+0xc40>
 80088f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80088f8:	d826      	bhi.n	8008948 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 80088fa:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80088fe:	d02b      	beq.n	8008958 <HAL_RCCEx_PeriphCLKConfig+0xc44>
 8008900:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8008904:	d820      	bhi.n	8008948 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008906:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800890a:	d012      	beq.n	8008932 <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 800890c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008910:	d81a      	bhi.n	8008948 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 8008912:	2b00      	cmp	r3, #0
 8008914:	d022      	beq.n	800895c <HAL_RCCEx_PeriphCLKConfig+0xc48>
 8008916:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800891a:	d115      	bne.n	8008948 <HAL_RCCEx_PeriphCLKConfig+0xc34>
 800891c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008920:	3308      	adds	r3, #8
 8008922:	2100      	movs	r1, #0
 8008924:	4618      	mov	r0, r3
 8008926:	f001 fd8f 	bl	800a448 <RCCEx_PLL2_Config>
 800892a:	4603      	mov	r3, r0
 800892c:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008930:	e015      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8008932:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008936:	3328      	adds	r3, #40	@ 0x28
 8008938:	2102      	movs	r1, #2
 800893a:	4618      	mov	r0, r3
 800893c:	f001 fe36 	bl	800a5ac <RCCEx_PLL3_Config>
 8008940:	4603      	mov	r3, r0
 8008942:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008946:	e00a      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8008948:	2301      	movs	r3, #1
 800894a:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800894e:	e006      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8008950:	bf00      	nop
 8008952:	e004      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8008954:	bf00      	nop
 8008956:	e002      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8008958:	bf00      	nop
 800895a:	e000      	b.n	800895e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800895c:	bf00      	nop
 800895e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008962:	2b00      	cmp	r3, #0
 8008964:	d10b      	bne.n	800897e <HAL_RCCEx_PeriphCLKConfig+0xc6a>
 8008966:	4b39      	ldr	r3, [pc, #228]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008968:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800896a:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 800896e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008972:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008976:	4a35      	ldr	r2, [pc, #212]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008978:	430b      	orrs	r3, r1
 800897a:	6553      	str	r3, [r2, #84]	@ 0x54
 800897c:	e003      	b.n	8008986 <HAL_RCCEx_PeriphCLKConfig+0xc72>
 800897e:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008982:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008986:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800898a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800898e:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 8008992:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8008996:	2300      	movs	r3, #0
 8008998:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800899c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 80089a0:	460b      	mov	r3, r1
 80089a2:	4313      	orrs	r3, r2
 80089a4:	d058      	beq.n	8008a58 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 80089a6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80089aa:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80089ae:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 80089b2:	d033      	beq.n	8008a1c <HAL_RCCEx_PeriphCLKConfig+0xd08>
 80089b4:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 80089b8:	d82c      	bhi.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 80089ba:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80089be:	d02f      	beq.n	8008a20 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
 80089c0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80089c4:	d826      	bhi.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 80089c6:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80089ca:	d02b      	beq.n	8008a24 <HAL_RCCEx_PeriphCLKConfig+0xd10>
 80089cc:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80089d0:	d820      	bhi.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 80089d2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80089d6:	d012      	beq.n	80089fe <HAL_RCCEx_PeriphCLKConfig+0xcea>
 80089d8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80089dc:	d81a      	bhi.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 80089de:	2b00      	cmp	r3, #0
 80089e0:	d022      	beq.n	8008a28 <HAL_RCCEx_PeriphCLKConfig+0xd14>
 80089e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80089e6:	d115      	bne.n	8008a14 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 80089e8:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80089ec:	3308      	adds	r3, #8
 80089ee:	2100      	movs	r1, #0
 80089f0:	4618      	mov	r0, r3
 80089f2:	f001 fd29 	bl	800a448 <RCCEx_PLL2_Config>
 80089f6:	4603      	mov	r3, r0
 80089f8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80089fc:	e015      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 80089fe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008a02:	3328      	adds	r3, #40	@ 0x28
 8008a04:	2102      	movs	r1, #2
 8008a06:	4618      	mov	r0, r3
 8008a08:	f001 fdd0 	bl	800a5ac <RCCEx_PLL3_Config>
 8008a0c:	4603      	mov	r3, r0
 8008a0e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008a12:	e00a      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8008a14:	2301      	movs	r3, #1
 8008a16:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008a1a:	e006      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8008a1c:	bf00      	nop
 8008a1e:	e004      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8008a20:	bf00      	nop
 8008a22:	e002      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8008a24:	bf00      	nop
 8008a26:	e000      	b.n	8008a2a <HAL_RCCEx_PeriphCLKConfig+0xd16>
 8008a28:	bf00      	nop
 8008a2a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008a2e:	2b00      	cmp	r3, #0
 8008a30:	d10e      	bne.n	8008a50 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 8008a32:	4b06      	ldr	r3, [pc, #24]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008a34:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008a36:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 8008a3a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008a3e:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8008a42:	4a02      	ldr	r2, [pc, #8]	@ (8008a4c <HAL_RCCEx_PeriphCLKConfig+0xd38>)
 8008a44:	430b      	orrs	r3, r1
 8008a46:	6593      	str	r3, [r2, #88]	@ 0x58
 8008a48:	e006      	b.n	8008a58 <HAL_RCCEx_PeriphCLKConfig+0xd44>
 8008a4a:	bf00      	nop
 8008a4c:	58024400 	.word	0x58024400
 8008a50:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008a54:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008a58:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008a5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a60:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 8008a64:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8008a68:	2300      	movs	r3, #0
 8008a6a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8008a6e:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 8008a72:	460b      	mov	r3, r1
 8008a74:	4313      	orrs	r3, r2
 8008a76:	d055      	beq.n	8008b24 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8008a78:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008a7c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008a80:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8008a84:	d033      	beq.n	8008aee <HAL_RCCEx_PeriphCLKConfig+0xdda>
 8008a86:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8008a8a:	d82c      	bhi.n	8008ae6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008a8c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008a90:	d02f      	beq.n	8008af2 <HAL_RCCEx_PeriphCLKConfig+0xdde>
 8008a92:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008a96:	d826      	bhi.n	8008ae6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008a98:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8008a9c:	d02b      	beq.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0xde2>
 8008a9e:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8008aa2:	d820      	bhi.n	8008ae6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008aa4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008aa8:	d012      	beq.n	8008ad0 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 8008aaa:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008aae:	d81a      	bhi.n	8008ae6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008ab0:	2b00      	cmp	r3, #0
 8008ab2:	d022      	beq.n	8008afa <HAL_RCCEx_PeriphCLKConfig+0xde6>
 8008ab4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008ab8:	d115      	bne.n	8008ae6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8008aba:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008abe:	3308      	adds	r3, #8
 8008ac0:	2100      	movs	r1, #0
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	f001 fcc0 	bl	800a448 <RCCEx_PLL2_Config>
 8008ac8:	4603      	mov	r3, r0
 8008aca:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008ace:	e015      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008ad0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008ad4:	3328      	adds	r3, #40	@ 0x28
 8008ad6:	2102      	movs	r1, #2
 8008ad8:	4618      	mov	r0, r3
 8008ada:	f001 fd67 	bl	800a5ac <RCCEx_PLL3_Config>
 8008ade:	4603      	mov	r3, r0
 8008ae0:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008ae4:	e00a      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008ae6:	2301      	movs	r3, #1
 8008ae8:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008aec:	e006      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008aee:	bf00      	nop
 8008af0:	e004      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008af2:	bf00      	nop
 8008af4:	e002      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008af6:	bf00      	nop
 8008af8:	e000      	b.n	8008afc <HAL_RCCEx_PeriphCLKConfig+0xde8>
 8008afa:	bf00      	nop
 8008afc:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008b00:	2b00      	cmp	r3, #0
 8008b02:	d10b      	bne.n	8008b1c <HAL_RCCEx_PeriphCLKConfig+0xe08>
 8008b04:	4ba1      	ldr	r3, [pc, #644]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008b06:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008b08:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 8008b0c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b10:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008b14:	4a9d      	ldr	r2, [pc, #628]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008b16:	430b      	orrs	r3, r1
 8008b18:	6593      	str	r3, [r2, #88]	@ 0x58
 8008b1a:	e003      	b.n	8008b24 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8008b1c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008b20:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008b24:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b2c:	f002 0308 	and.w	r3, r2, #8
 8008b30:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8008b34:	2300      	movs	r3, #0
 8008b36:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8008b3a:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 8008b3e:	460b      	mov	r3, r1
 8008b40:	4313      	orrs	r3, r2
 8008b42:	d01e      	beq.n	8008b82 <HAL_RCCEx_PeriphCLKConfig+0xe6e>
 8008b44:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b48:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008b4c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008b50:	d10c      	bne.n	8008b6c <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8008b52:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b56:	3328      	adds	r3, #40	@ 0x28
 8008b58:	2102      	movs	r1, #2
 8008b5a:	4618      	mov	r0, r3
 8008b5c:	f001 fd26 	bl	800a5ac <RCCEx_PLL3_Config>
 8008b60:	4603      	mov	r3, r0
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	d002      	beq.n	8008b6c <HAL_RCCEx_PeriphCLKConfig+0xe58>
 8008b66:	2301      	movs	r3, #1
 8008b68:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008b6c:	4b87      	ldr	r3, [pc, #540]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008b6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008b70:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8008b74:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b78:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008b7c:	4a83      	ldr	r2, [pc, #524]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008b7e:	430b      	orrs	r3, r1
 8008b80:	6553      	str	r3, [r2, #84]	@ 0x54
 8008b82:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008b86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b8a:	f002 0310 	and.w	r3, r2, #16
 8008b8e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8008b92:	2300      	movs	r3, #0
 8008b94:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8008b98:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8008b9c:	460b      	mov	r3, r1
 8008b9e:	4313      	orrs	r3, r2
 8008ba0:	d01e      	beq.n	8008be0 <HAL_RCCEx_PeriphCLKConfig+0xecc>
 8008ba2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008ba6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8008baa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008bae:	d10c      	bne.n	8008bca <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8008bb0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008bb4:	3328      	adds	r3, #40	@ 0x28
 8008bb6:	2102      	movs	r1, #2
 8008bb8:	4618      	mov	r0, r3
 8008bba:	f001 fcf7 	bl	800a5ac <RCCEx_PLL3_Config>
 8008bbe:	4603      	mov	r3, r0
 8008bc0:	2b00      	cmp	r3, #0
 8008bc2:	d002      	beq.n	8008bca <HAL_RCCEx_PeriphCLKConfig+0xeb6>
 8008bc4:	2301      	movs	r3, #1
 8008bc6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008bca:	4b70      	ldr	r3, [pc, #448]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008bcc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008bce:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8008bd2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008bd6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8008bda:	4a6c      	ldr	r2, [pc, #432]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008bdc:	430b      	orrs	r3, r1
 8008bde:	6593      	str	r3, [r2, #88]	@ 0x58
 8008be0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008be4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008be8:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8008bec:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8008bf0:	2300      	movs	r3, #0
 8008bf2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8008bf6:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8008bfa:	460b      	mov	r3, r1
 8008bfc:	4313      	orrs	r3, r2
 8008bfe:	d03e      	beq.n	8008c7e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8008c00:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c04:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8008c08:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8008c0c:	d022      	beq.n	8008c54 <HAL_RCCEx_PeriphCLKConfig+0xf40>
 8008c0e:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8008c12:	d81b      	bhi.n	8008c4c <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8008c14:	2b00      	cmp	r3, #0
 8008c16:	d003      	beq.n	8008c20 <HAL_RCCEx_PeriphCLKConfig+0xf0c>
 8008c18:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008c1c:	d00b      	beq.n	8008c36 <HAL_RCCEx_PeriphCLKConfig+0xf22>
 8008c1e:	e015      	b.n	8008c4c <HAL_RCCEx_PeriphCLKConfig+0xf38>
 8008c20:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c24:	3308      	adds	r3, #8
 8008c26:	2100      	movs	r1, #0
 8008c28:	4618      	mov	r0, r3
 8008c2a:	f001 fc0d 	bl	800a448 <RCCEx_PLL2_Config>
 8008c2e:	4603      	mov	r3, r0
 8008c30:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008c34:	e00f      	b.n	8008c56 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8008c36:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c3a:	3328      	adds	r3, #40	@ 0x28
 8008c3c:	2102      	movs	r1, #2
 8008c3e:	4618      	mov	r0, r3
 8008c40:	f001 fcb4 	bl	800a5ac <RCCEx_PLL3_Config>
 8008c44:	4603      	mov	r3, r0
 8008c46:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008c4a:	e004      	b.n	8008c56 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8008c4c:	2301      	movs	r3, #1
 8008c4e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008c52:	e000      	b.n	8008c56 <HAL_RCCEx_PeriphCLKConfig+0xf42>
 8008c54:	bf00      	nop
 8008c56:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008c5a:	2b00      	cmp	r3, #0
 8008c5c:	d10b      	bne.n	8008c76 <HAL_RCCEx_PeriphCLKConfig+0xf62>
 8008c5e:	4b4b      	ldr	r3, [pc, #300]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008c60:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008c62:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 8008c66:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c6a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8008c6e:	4a47      	ldr	r2, [pc, #284]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008c70:	430b      	orrs	r3, r1
 8008c72:	6593      	str	r3, [r2, #88]	@ 0x58
 8008c74:	e003      	b.n	8008c7e <HAL_RCCEx_PeriphCLKConfig+0xf6a>
 8008c76:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008c7a:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008c7e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c86:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 8008c8a:	67bb      	str	r3, [r7, #120]	@ 0x78
 8008c8c:	2300      	movs	r3, #0
 8008c8e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8008c90:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8008c94:	460b      	mov	r3, r1
 8008c96:	4313      	orrs	r3, r2
 8008c98:	d03b      	beq.n	8008d12 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8008c9a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008c9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008ca2:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008ca6:	d01f      	beq.n	8008ce8 <HAL_RCCEx_PeriphCLKConfig+0xfd4>
 8008ca8:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008cac:	d818      	bhi.n	8008ce0 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8008cae:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008cb2:	d003      	beq.n	8008cbc <HAL_RCCEx_PeriphCLKConfig+0xfa8>
 8008cb4:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8008cb8:	d007      	beq.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0xfb6>
 8008cba:	e011      	b.n	8008ce0 <HAL_RCCEx_PeriphCLKConfig+0xfcc>
 8008cbc:	4b33      	ldr	r3, [pc, #204]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008cbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008cc0:	4a32      	ldr	r2, [pc, #200]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008cc2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008cc6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8008cc8:	e00f      	b.n	8008cea <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8008cca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008cce:	3328      	adds	r3, #40	@ 0x28
 8008cd0:	2101      	movs	r1, #1
 8008cd2:	4618      	mov	r0, r3
 8008cd4:	f001 fc6a 	bl	800a5ac <RCCEx_PLL3_Config>
 8008cd8:	4603      	mov	r3, r0
 8008cda:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008cde:	e004      	b.n	8008cea <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8008ce0:	2301      	movs	r3, #1
 8008ce2:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008ce6:	e000      	b.n	8008cea <HAL_RCCEx_PeriphCLKConfig+0xfd6>
 8008ce8:	bf00      	nop
 8008cea:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008cee:	2b00      	cmp	r3, #0
 8008cf0:	d10b      	bne.n	8008d0a <HAL_RCCEx_PeriphCLKConfig+0xff6>
 8008cf2:	4b26      	ldr	r3, [pc, #152]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008cf4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008cf6:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8008cfa:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008cfe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008d02:	4a22      	ldr	r2, [pc, #136]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008d04:	430b      	orrs	r3, r1
 8008d06:	6553      	str	r3, [r2, #84]	@ 0x54
 8008d08:	e003      	b.n	8008d12 <HAL_RCCEx_PeriphCLKConfig+0xffe>
 8008d0a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008d0e:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008d12:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008d16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d1a:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8008d1e:	673b      	str	r3, [r7, #112]	@ 0x70
 8008d20:	2300      	movs	r3, #0
 8008d22:	677b      	str	r3, [r7, #116]	@ 0x74
 8008d24:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8008d28:	460b      	mov	r3, r1
 8008d2a:	4313      	orrs	r3, r2
 8008d2c:	d034      	beq.n	8008d98 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8008d2e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008d32:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008d34:	2b00      	cmp	r3, #0
 8008d36:	d003      	beq.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x102c>
 8008d38:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008d3c:	d007      	beq.n	8008d4e <HAL_RCCEx_PeriphCLKConfig+0x103a>
 8008d3e:	e011      	b.n	8008d64 <HAL_RCCEx_PeriphCLKConfig+0x1050>
 8008d40:	4b12      	ldr	r3, [pc, #72]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008d42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d44:	4a11      	ldr	r2, [pc, #68]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008d46:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008d4a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8008d4c:	e00e      	b.n	8008d6c <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8008d4e:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008d52:	3308      	adds	r3, #8
 8008d54:	2102      	movs	r1, #2
 8008d56:	4618      	mov	r0, r3
 8008d58:	f001 fb76 	bl	800a448 <RCCEx_PLL2_Config>
 8008d5c:	4603      	mov	r3, r0
 8008d5e:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008d62:	e003      	b.n	8008d6c <HAL_RCCEx_PeriphCLKConfig+0x1058>
 8008d64:	2301      	movs	r3, #1
 8008d66:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008d6a:	bf00      	nop
 8008d6c:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008d70:	2b00      	cmp	r3, #0
 8008d72:	d10d      	bne.n	8008d90 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8008d74:	4b05      	ldr	r3, [pc, #20]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008d76:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008d78:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8008d7c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008d80:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008d82:	4a02      	ldr	r2, [pc, #8]	@ (8008d8c <HAL_RCCEx_PeriphCLKConfig+0x1078>)
 8008d84:	430b      	orrs	r3, r1
 8008d86:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8008d88:	e006      	b.n	8008d98 <HAL_RCCEx_PeriphCLKConfig+0x1084>
 8008d8a:	bf00      	nop
 8008d8c:	58024400 	.word	0x58024400
 8008d90:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008d94:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008d98:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008d9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008da0:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8008da4:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008da6:	2300      	movs	r3, #0
 8008da8:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8008daa:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8008dae:	460b      	mov	r3, r1
 8008db0:	4313      	orrs	r3, r2
 8008db2:	d00c      	beq.n	8008dce <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8008db4:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008db8:	3328      	adds	r3, #40	@ 0x28
 8008dba:	2102      	movs	r1, #2
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	f001 fbf5 	bl	800a5ac <RCCEx_PLL3_Config>
 8008dc2:	4603      	mov	r3, r0
 8008dc4:	2b00      	cmp	r3, #0
 8008dc6:	d002      	beq.n	8008dce <HAL_RCCEx_PeriphCLKConfig+0x10ba>
 8008dc8:	2301      	movs	r3, #1
 8008dca:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008dce:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008dd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008dd6:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 8008dda:	663b      	str	r3, [r7, #96]	@ 0x60
 8008ddc:	2300      	movs	r3, #0
 8008dde:	667b      	str	r3, [r7, #100]	@ 0x64
 8008de0:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8008de4:	460b      	mov	r3, r1
 8008de6:	4313      	orrs	r3, r2
 8008de8:	d038      	beq.n	8008e5c <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8008dea:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008dee:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008df2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008df6:	d018      	beq.n	8008e2a <HAL_RCCEx_PeriphCLKConfig+0x1116>
 8008df8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8008dfc:	d811      	bhi.n	8008e22 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8008dfe:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008e02:	d014      	beq.n	8008e2e <HAL_RCCEx_PeriphCLKConfig+0x111a>
 8008e04:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8008e08:	d80b      	bhi.n	8008e22 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8008e0a:	2b00      	cmp	r3, #0
 8008e0c:	d011      	beq.n	8008e32 <HAL_RCCEx_PeriphCLKConfig+0x111e>
 8008e0e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008e12:	d106      	bne.n	8008e22 <HAL_RCCEx_PeriphCLKConfig+0x110e>
 8008e14:	4bc3      	ldr	r3, [pc, #780]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e18:	4ac2      	ldr	r2, [pc, #776]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e1a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008e1e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8008e20:	e008      	b.n	8008e34 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8008e22:	2301      	movs	r3, #1
 8008e24:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008e28:	e004      	b.n	8008e34 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8008e2a:	bf00      	nop
 8008e2c:	e002      	b.n	8008e34 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8008e2e:	bf00      	nop
 8008e30:	e000      	b.n	8008e34 <HAL_RCCEx_PeriphCLKConfig+0x1120>
 8008e32:	bf00      	nop
 8008e34:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008e38:	2b00      	cmp	r3, #0
 8008e3a:	d10b      	bne.n	8008e54 <HAL_RCCEx_PeriphCLKConfig+0x1140>
 8008e3c:	4bb9      	ldr	r3, [pc, #740]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008e40:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8008e44:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008e48:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008e4c:	4ab5      	ldr	r2, [pc, #724]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e4e:	430b      	orrs	r3, r1
 8008e50:	6553      	str	r3, [r2, #84]	@ 0x54
 8008e52:	e003      	b.n	8008e5c <HAL_RCCEx_PeriphCLKConfig+0x1148>
 8008e54:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008e58:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008e5c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008e60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e64:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8008e68:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008e6a:	2300      	movs	r3, #0
 8008e6c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008e6e:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 8008e72:	460b      	mov	r3, r1
 8008e74:	4313      	orrs	r3, r2
 8008e76:	d009      	beq.n	8008e8c <HAL_RCCEx_PeriphCLKConfig+0x1178>
 8008e78:	4baa      	ldr	r3, [pc, #680]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e7a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008e7c:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8008e80:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008e84:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008e86:	4aa7      	ldr	r2, [pc, #668]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008e88:	430b      	orrs	r3, r1
 8008e8a:	6513      	str	r3, [r2, #80]	@ 0x50
 8008e8c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008e90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e94:	f002 5380 	and.w	r3, r2, #268435456	@ 0x10000000
 8008e98:	653b      	str	r3, [r7, #80]	@ 0x50
 8008e9a:	2300      	movs	r3, #0
 8008e9c:	657b      	str	r3, [r7, #84]	@ 0x54
 8008e9e:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8008ea2:	460b      	mov	r3, r1
 8008ea4:	4313      	orrs	r3, r2
 8008ea6:	d00a      	beq.n	8008ebe <HAL_RCCEx_PeriphCLKConfig+0x11aa>
 8008ea8:	4b9e      	ldr	r3, [pc, #632]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008eaa:	691b      	ldr	r3, [r3, #16]
 8008eac:	f423 4180 	bic.w	r1, r3, #16384	@ 0x4000
 8008eb0:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008eb4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8008eb8:	4a9a      	ldr	r2, [pc, #616]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008eba:	430b      	orrs	r3, r1
 8008ebc:	6113      	str	r3, [r2, #16]
 8008ebe:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008ec2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ec6:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 8008eca:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008ecc:	2300      	movs	r3, #0
 8008ece:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008ed0:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8008ed4:	460b      	mov	r3, r1
 8008ed6:	4313      	orrs	r3, r2
 8008ed8:	d009      	beq.n	8008eee <HAL_RCCEx_PeriphCLKConfig+0x11da>
 8008eda:	4b92      	ldr	r3, [pc, #584]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008edc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008ede:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 8008ee2:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008ee6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8008ee8:	4a8e      	ldr	r2, [pc, #568]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008eea:	430b      	orrs	r3, r1
 8008eec:	6513      	str	r3, [r2, #80]	@ 0x50
 8008eee:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008ef2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ef6:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 8008efa:	643b      	str	r3, [r7, #64]	@ 0x40
 8008efc:	2300      	movs	r3, #0
 8008efe:	647b      	str	r3, [r7, #68]	@ 0x44
 8008f00:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 8008f04:	460b      	mov	r3, r1
 8008f06:	4313      	orrs	r3, r2
 8008f08:	d00e      	beq.n	8008f28 <HAL_RCCEx_PeriphCLKConfig+0x1214>
 8008f0a:	4b86      	ldr	r3, [pc, #536]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f0c:	691b      	ldr	r3, [r3, #16]
 8008f0e:	4a85      	ldr	r2, [pc, #532]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f10:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8008f14:	6113      	str	r3, [r2, #16]
 8008f16:	4b83      	ldr	r3, [pc, #524]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f18:	6919      	ldr	r1, [r3, #16]
 8008f1a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f1e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8008f22:	4a80      	ldr	r2, [pc, #512]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f24:	430b      	orrs	r3, r1
 8008f26:	6113      	str	r3, [r2, #16]
 8008f28:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f30:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8008f34:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008f36:	2300      	movs	r3, #0
 8008f38:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008f3a:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 8008f3e:	460b      	mov	r3, r1
 8008f40:	4313      	orrs	r3, r2
 8008f42:	d009      	beq.n	8008f58 <HAL_RCCEx_PeriphCLKConfig+0x1244>
 8008f44:	4b77      	ldr	r3, [pc, #476]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f46:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008f48:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8008f4c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f50:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008f52:	4a74      	ldr	r2, [pc, #464]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f54:	430b      	orrs	r3, r1
 8008f56:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8008f58:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f60:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8008f64:	633b      	str	r3, [r7, #48]	@ 0x30
 8008f66:	2300      	movs	r3, #0
 8008f68:	637b      	str	r3, [r7, #52]	@ 0x34
 8008f6a:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 8008f6e:	460b      	mov	r3, r1
 8008f70:	4313      	orrs	r3, r2
 8008f72:	d00a      	beq.n	8008f8a <HAL_RCCEx_PeriphCLKConfig+0x1276>
 8008f74:	4b6b      	ldr	r3, [pc, #428]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008f78:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 8008f7c:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f80:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008f84:	4a67      	ldr	r2, [pc, #412]	@ (8009124 <HAL_RCCEx_PeriphCLKConfig+0x1410>)
 8008f86:	430b      	orrs	r3, r1
 8008f88:	6553      	str	r3, [r2, #84]	@ 0x54
 8008f8a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008f8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f92:	2100      	movs	r1, #0
 8008f94:	62b9      	str	r1, [r7, #40]	@ 0x28
 8008f96:	f003 0301 	and.w	r3, r3, #1
 8008f9a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008f9c:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8008fa0:	460b      	mov	r3, r1
 8008fa2:	4313      	orrs	r3, r2
 8008fa4:	d011      	beq.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 8008fa6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008faa:	3308      	adds	r3, #8
 8008fac:	2100      	movs	r1, #0
 8008fae:	4618      	mov	r0, r3
 8008fb0:	f001 fa4a 	bl	800a448 <RCCEx_PLL2_Config>
 8008fb4:	4603      	mov	r3, r0
 8008fb6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008fba:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d003      	beq.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x12b6>
 8008fc2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008fc6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 8008fca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008fce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008fd2:	2100      	movs	r1, #0
 8008fd4:	6239      	str	r1, [r7, #32]
 8008fd6:	f003 0302 	and.w	r3, r3, #2
 8008fda:	627b      	str	r3, [r7, #36]	@ 0x24
 8008fdc:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8008fe0:	460b      	mov	r3, r1
 8008fe2:	4313      	orrs	r3, r2
 8008fe4:	d011      	beq.n	800900a <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 8008fe6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 8008fea:	3308      	adds	r3, #8
 8008fec:	2101      	movs	r1, #1
 8008fee:	4618      	mov	r0, r3
 8008ff0:	f001 fa2a 	bl	800a448 <RCCEx_PLL2_Config>
 8008ff4:	4603      	mov	r3, r0
 8008ff6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 8008ffa:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8008ffe:	2b00      	cmp	r3, #0
 8009000:	d003      	beq.n	800900a <HAL_RCCEx_PeriphCLKConfig+0x12f6>
 8009002:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8009006:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800900a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800900e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009012:	2100      	movs	r1, #0
 8009014:	61b9      	str	r1, [r7, #24]
 8009016:	f003 0304 	and.w	r3, r3, #4
 800901a:	61fb      	str	r3, [r7, #28]
 800901c:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8009020:	460b      	mov	r3, r1
 8009022:	4313      	orrs	r3, r2
 8009024:	d011      	beq.n	800904a <HAL_RCCEx_PeriphCLKConfig+0x1336>
 8009026:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800902a:	3308      	adds	r3, #8
 800902c:	2102      	movs	r1, #2
 800902e:	4618      	mov	r0, r3
 8009030:	f001 fa0a 	bl	800a448 <RCCEx_PLL2_Config>
 8009034:	4603      	mov	r3, r0
 8009036:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800903a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800903e:	2b00      	cmp	r3, #0
 8009040:	d003      	beq.n	800904a <HAL_RCCEx_PeriphCLKConfig+0x1336>
 8009042:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8009046:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800904a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800904e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009052:	2100      	movs	r1, #0
 8009054:	6139      	str	r1, [r7, #16]
 8009056:	f003 0308 	and.w	r3, r3, #8
 800905a:	617b      	str	r3, [r7, #20]
 800905c:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8009060:	460b      	mov	r3, r1
 8009062:	4313      	orrs	r3, r2
 8009064:	d011      	beq.n	800908a <HAL_RCCEx_PeriphCLKConfig+0x1376>
 8009066:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800906a:	3328      	adds	r3, #40	@ 0x28
 800906c:	2100      	movs	r1, #0
 800906e:	4618      	mov	r0, r3
 8009070:	f001 fa9c 	bl	800a5ac <RCCEx_PLL3_Config>
 8009074:	4603      	mov	r3, r0
 8009076:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 800907a:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 800907e:	2b00      	cmp	r3, #0
 8009080:	d003      	beq.n	800908a <HAL_RCCEx_PeriphCLKConfig+0x1376>
 8009082:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8009086:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800908a:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 800908e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009092:	2100      	movs	r1, #0
 8009094:	60b9      	str	r1, [r7, #8]
 8009096:	f003 0310 	and.w	r3, r3, #16
 800909a:	60fb      	str	r3, [r7, #12]
 800909c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 80090a0:	460b      	mov	r3, r1
 80090a2:	4313      	orrs	r3, r2
 80090a4:	d011      	beq.n	80090ca <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 80090a6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80090aa:	3328      	adds	r3, #40	@ 0x28
 80090ac:	2101      	movs	r1, #1
 80090ae:	4618      	mov	r0, r3
 80090b0:	f001 fa7c 	bl	800a5ac <RCCEx_PLL3_Config>
 80090b4:	4603      	mov	r3, r0
 80090b6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80090ba:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80090be:	2b00      	cmp	r3, #0
 80090c0:	d003      	beq.n	80090ca <HAL_RCCEx_PeriphCLKConfig+0x13b6>
 80090c2:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80090c6:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 80090ca:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80090ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80090d2:	2100      	movs	r1, #0
 80090d4:	6039      	str	r1, [r7, #0]
 80090d6:	f003 0320 	and.w	r3, r3, #32
 80090da:	607b      	str	r3, [r7, #4]
 80090dc:	e9d7 1200 	ldrd	r1, r2, [r7]
 80090e0:	460b      	mov	r3, r1
 80090e2:	4313      	orrs	r3, r2
 80090e4:	d011      	beq.n	800910a <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 80090e6:	f8d7 3114 	ldr.w	r3, [r7, #276]	@ 0x114
 80090ea:	3328      	adds	r3, #40	@ 0x28
 80090ec:	2102      	movs	r1, #2
 80090ee:	4618      	mov	r0, r3
 80090f0:	f001 fa5c 	bl	800a5ac <RCCEx_PLL3_Config>
 80090f4:	4603      	mov	r3, r0
 80090f6:	f887 3127 	strb.w	r3, [r7, #295]	@ 0x127
 80090fa:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 80090fe:	2b00      	cmp	r3, #0
 8009100:	d003      	beq.n	800910a <HAL_RCCEx_PeriphCLKConfig+0x13f6>
 8009102:	f897 3127 	ldrb.w	r3, [r7, #295]	@ 0x127
 8009106:	f887 3126 	strb.w	r3, [r7, #294]	@ 0x126
 800910a:	f897 3126 	ldrb.w	r3, [r7, #294]	@ 0x126
 800910e:	2b00      	cmp	r3, #0
 8009110:	d101      	bne.n	8009116 <HAL_RCCEx_PeriphCLKConfig+0x1402>
 8009112:	2300      	movs	r3, #0
 8009114:	e000      	b.n	8009118 <HAL_RCCEx_PeriphCLKConfig+0x1404>
 8009116:	2301      	movs	r3, #1
 8009118:	4618      	mov	r0, r3
 800911a:	f507 7794 	add.w	r7, r7, #296	@ 0x128
 800911e:	46bd      	mov	sp, r7
 8009120:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009124:	58024400 	.word	0x58024400

08009128 <HAL_RCCEx_GetPeriphCLKFreq>:
 8009128:	b580      	push	{r7, lr}
 800912a:	b090      	sub	sp, #64	@ 0x40
 800912c:	af00      	add	r7, sp, #0
 800912e:	e9c7 0100 	strd	r0, r1, [r7]
 8009132:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009136:	f5a2 7180 	sub.w	r1, r2, #256	@ 0x100
 800913a:	430b      	orrs	r3, r1
 800913c:	f040 8094 	bne.w	8009268 <HAL_RCCEx_GetPeriphCLKFreq+0x140>
 8009140:	4b9e      	ldr	r3, [pc, #632]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009142:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009144:	f003 0307 	and.w	r3, r3, #7
 8009148:	633b      	str	r3, [r7, #48]	@ 0x30
 800914a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800914c:	2b04      	cmp	r3, #4
 800914e:	f200 8087 	bhi.w	8009260 <HAL_RCCEx_GetPeriphCLKFreq+0x138>
 8009152:	a201      	add	r2, pc, #4	@ (adr r2, 8009158 <HAL_RCCEx_GetPeriphCLKFreq+0x30>)
 8009154:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009158:	0800916d 	.word	0x0800916d
 800915c:	08009195 	.word	0x08009195
 8009160:	080091bd 	.word	0x080091bd
 8009164:	08009259 	.word	0x08009259
 8009168:	080091e5 	.word	0x080091e5
 800916c:	4b93      	ldr	r3, [pc, #588]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 800916e:	681b      	ldr	r3, [r3, #0]
 8009170:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8009174:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009178:	d108      	bne.n	800918c <HAL_RCCEx_GetPeriphCLKFreq+0x64>
 800917a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800917e:	4618      	mov	r0, r3
 8009180:	f001 f810 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 8009184:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009186:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009188:	f000 bd45 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800918c:	2300      	movs	r3, #0
 800918e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009190:	f000 bd41 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009194:	4b89      	ldr	r3, [pc, #548]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800919c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80091a0:	d108      	bne.n	80091b4 <HAL_RCCEx_GetPeriphCLKFreq+0x8c>
 80091a2:	f107 0318 	add.w	r3, r7, #24
 80091a6:	4618      	mov	r0, r3
 80091a8:	f000 fd54 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 80091ac:	69bb      	ldr	r3, [r7, #24]
 80091ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80091b0:	f000 bd31 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80091b4:	2300      	movs	r3, #0
 80091b6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80091b8:	f000 bd2d 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80091bc:	4b7f      	ldr	r3, [pc, #508]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80091be:	681b      	ldr	r3, [r3, #0]
 80091c0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80091c4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80091c8:	d108      	bne.n	80091dc <HAL_RCCEx_GetPeriphCLKFreq+0xb4>
 80091ca:	f107 030c 	add.w	r3, r7, #12
 80091ce:	4618      	mov	r0, r3
 80091d0:	f000 fe94 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 80091d4:	68fb      	ldr	r3, [r7, #12]
 80091d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80091d8:	f000 bd1d 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80091dc:	2300      	movs	r3, #0
 80091de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80091e0:	f000 bd19 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80091e4:	4b75      	ldr	r3, [pc, #468]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80091e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80091e8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80091ec:	637b      	str	r3, [r7, #52]	@ 0x34
 80091ee:	4b73      	ldr	r3, [pc, #460]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80091f0:	681b      	ldr	r3, [r3, #0]
 80091f2:	f003 0304 	and.w	r3, r3, #4
 80091f6:	2b04      	cmp	r3, #4
 80091f8:	d10c      	bne.n	8009214 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 80091fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80091fc:	2b00      	cmp	r3, #0
 80091fe:	d109      	bne.n	8009214 <HAL_RCCEx_GetPeriphCLKFreq+0xec>
 8009200:	4b6e      	ldr	r3, [pc, #440]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	08db      	lsrs	r3, r3, #3
 8009206:	f003 0303 	and.w	r3, r3, #3
 800920a:	4a6d      	ldr	r2, [pc, #436]	@ (80093c0 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800920c:	fa22 f303 	lsr.w	r3, r2, r3
 8009210:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009212:	e01f      	b.n	8009254 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8009214:	4b69      	ldr	r3, [pc, #420]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009216:	681b      	ldr	r3, [r3, #0]
 8009218:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800921c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009220:	d106      	bne.n	8009230 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 8009222:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009224:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009228:	d102      	bne.n	8009230 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
 800922a:	4b66      	ldr	r3, [pc, #408]	@ (80093c4 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 800922c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800922e:	e011      	b.n	8009254 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 8009230:	4b62      	ldr	r3, [pc, #392]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009238:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800923c:	d106      	bne.n	800924c <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 800923e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009240:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009244:	d102      	bne.n	800924c <HAL_RCCEx_GetPeriphCLKFreq+0x124>
 8009246:	4b60      	ldr	r3, [pc, #384]	@ (80093c8 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 8009248:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800924a:	e003      	b.n	8009254 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>
 800924c:	2300      	movs	r3, #0
 800924e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009250:	f000 bce1 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009254:	f000 bcdf 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009258:	4b5c      	ldr	r3, [pc, #368]	@ (80093cc <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 800925a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800925c:	f000 bcdb 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009260:	2300      	movs	r3, #0
 8009262:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009264:	f000 bcd7 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009268:	e9d7 2300 	ldrd	r2, r3, [r7]
 800926c:	f5a2 7100 	sub.w	r1, r2, #512	@ 0x200
 8009270:	430b      	orrs	r3, r1
 8009272:	f040 80ad 	bne.w	80093d0 <HAL_RCCEx_GetPeriphCLKFreq+0x2a8>
 8009276:	4b51      	ldr	r3, [pc, #324]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009278:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800927a:	f403 73e0 	and.w	r3, r3, #448	@ 0x1c0
 800927e:	633b      	str	r3, [r7, #48]	@ 0x30
 8009280:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009282:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009286:	d056      	beq.n	8009336 <HAL_RCCEx_GetPeriphCLKFreq+0x20e>
 8009288:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800928a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800928e:	f200 8090 	bhi.w	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 8009292:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009294:	2bc0      	cmp	r3, #192	@ 0xc0
 8009296:	f000 8088 	beq.w	80093aa <HAL_RCCEx_GetPeriphCLKFreq+0x282>
 800929a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800929c:	2bc0      	cmp	r3, #192	@ 0xc0
 800929e:	f200 8088 	bhi.w	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80092a2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80092a4:	2b80      	cmp	r3, #128	@ 0x80
 80092a6:	d032      	beq.n	800930e <HAL_RCCEx_GetPeriphCLKFreq+0x1e6>
 80092a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80092aa:	2b80      	cmp	r3, #128	@ 0x80
 80092ac:	f200 8081 	bhi.w	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80092b0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d003      	beq.n	80092be <HAL_RCCEx_GetPeriphCLKFreq+0x196>
 80092b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80092b8:	2b40      	cmp	r3, #64	@ 0x40
 80092ba:	d014      	beq.n	80092e6 <HAL_RCCEx_GetPeriphCLKFreq+0x1be>
 80092bc:	e079      	b.n	80093b2 <HAL_RCCEx_GetPeriphCLKFreq+0x28a>
 80092be:	4b3f      	ldr	r3, [pc, #252]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80092c0:	681b      	ldr	r3, [r3, #0]
 80092c2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80092c6:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80092ca:	d108      	bne.n	80092de <HAL_RCCEx_GetPeriphCLKFreq+0x1b6>
 80092cc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80092d0:	4618      	mov	r0, r3
 80092d2:	f000 ff67 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 80092d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80092d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80092da:	f000 bc9c 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80092de:	2300      	movs	r3, #0
 80092e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80092e2:	f000 bc98 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80092e6:	4b35      	ldr	r3, [pc, #212]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80092ee:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80092f2:	d108      	bne.n	8009306 <HAL_RCCEx_GetPeriphCLKFreq+0x1de>
 80092f4:	f107 0318 	add.w	r3, r7, #24
 80092f8:	4618      	mov	r0, r3
 80092fa:	f000 fcab 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 80092fe:	69bb      	ldr	r3, [r7, #24]
 8009300:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009302:	f000 bc88 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009306:	2300      	movs	r3, #0
 8009308:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800930a:	f000 bc84 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800930e:	4b2b      	ldr	r3, [pc, #172]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8009316:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800931a:	d108      	bne.n	800932e <HAL_RCCEx_GetPeriphCLKFreq+0x206>
 800931c:	f107 030c 	add.w	r3, r7, #12
 8009320:	4618      	mov	r0, r3
 8009322:	f000 fdeb 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 8009326:	68fb      	ldr	r3, [r7, #12]
 8009328:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800932a:	f000 bc74 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800932e:	2300      	movs	r3, #0
 8009330:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009332:	f000 bc70 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009336:	4b21      	ldr	r3, [pc, #132]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009338:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800933a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800933e:	637b      	str	r3, [r7, #52]	@ 0x34
 8009340:	4b1e      	ldr	r3, [pc, #120]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009342:	681b      	ldr	r3, [r3, #0]
 8009344:	f003 0304 	and.w	r3, r3, #4
 8009348:	2b04      	cmp	r3, #4
 800934a:	d10c      	bne.n	8009366 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 800934c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800934e:	2b00      	cmp	r3, #0
 8009350:	d109      	bne.n	8009366 <HAL_RCCEx_GetPeriphCLKFreq+0x23e>
 8009352:	4b1a      	ldr	r3, [pc, #104]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009354:	681b      	ldr	r3, [r3, #0]
 8009356:	08db      	lsrs	r3, r3, #3
 8009358:	f003 0303 	and.w	r3, r3, #3
 800935c:	4a18      	ldr	r2, [pc, #96]	@ (80093c0 <HAL_RCCEx_GetPeriphCLKFreq+0x298>)
 800935e:	fa22 f303 	lsr.w	r3, r2, r3
 8009362:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009364:	e01f      	b.n	80093a6 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8009366:	4b15      	ldr	r3, [pc, #84]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009368:	681b      	ldr	r3, [r3, #0]
 800936a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800936e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009372:	d106      	bne.n	8009382 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 8009374:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009376:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800937a:	d102      	bne.n	8009382 <HAL_RCCEx_GetPeriphCLKFreq+0x25a>
 800937c:	4b11      	ldr	r3, [pc, #68]	@ (80093c4 <HAL_RCCEx_GetPeriphCLKFreq+0x29c>)
 800937e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009380:	e011      	b.n	80093a6 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 8009382:	4b0e      	ldr	r3, [pc, #56]	@ (80093bc <HAL_RCCEx_GetPeriphCLKFreq+0x294>)
 8009384:	681b      	ldr	r3, [r3, #0]
 8009386:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800938a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800938e:	d106      	bne.n	800939e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 8009390:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009392:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009396:	d102      	bne.n	800939e <HAL_RCCEx_GetPeriphCLKFreq+0x276>
 8009398:	4b0b      	ldr	r3, [pc, #44]	@ (80093c8 <HAL_RCCEx_GetPeriphCLKFreq+0x2a0>)
 800939a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800939c:	e003      	b.n	80093a6 <HAL_RCCEx_GetPeriphCLKFreq+0x27e>
 800939e:	2300      	movs	r3, #0
 80093a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80093a2:	f000 bc38 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80093a6:	f000 bc36 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80093aa:	4b08      	ldr	r3, [pc, #32]	@ (80093cc <HAL_RCCEx_GetPeriphCLKFreq+0x2a4>)
 80093ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80093ae:	f000 bc32 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80093b2:	2300      	movs	r3, #0
 80093b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80093b6:	f000 bc2e 	b.w	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80093ba:	bf00      	nop
 80093bc:	58024400 	.word	0x58024400
 80093c0:	03d09000 	.word	0x03d09000
 80093c4:	003d0900 	.word	0x003d0900
 80093c8:	017d7840 	.word	0x017d7840
 80093cc:	00bb8000 	.word	0x00bb8000
 80093d0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80093d4:	f5a2 6180 	sub.w	r1, r2, #1024	@ 0x400
 80093d8:	430b      	orrs	r3, r1
 80093da:	f040 809c 	bne.w	8009516 <HAL_RCCEx_GetPeriphCLKFreq+0x3ee>
 80093de:	4b9e      	ldr	r3, [pc, #632]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80093e0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80093e2:	f403 0360 	and.w	r3, r3, #14680064	@ 0xe00000
 80093e6:	633b      	str	r3, [r7, #48]	@ 0x30
 80093e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80093ea:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80093ee:	d054      	beq.n	800949a <HAL_RCCEx_GetPeriphCLKFreq+0x372>
 80093f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80093f2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 80093f6:	f200 808b 	bhi.w	8009510 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 80093fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80093fc:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8009400:	f000 8083 	beq.w	800950a <HAL_RCCEx_GetPeriphCLKFreq+0x3e2>
 8009404:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009406:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 800940a:	f200 8081 	bhi.w	8009510 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 800940e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009410:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8009414:	d02f      	beq.n	8009476 <HAL_RCCEx_GetPeriphCLKFreq+0x34e>
 8009416:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009418:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800941c:	d878      	bhi.n	8009510 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 800941e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009420:	2b00      	cmp	r3, #0
 8009422:	d004      	beq.n	800942e <HAL_RCCEx_GetPeriphCLKFreq+0x306>
 8009424:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009426:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800942a:	d012      	beq.n	8009452 <HAL_RCCEx_GetPeriphCLKFreq+0x32a>
 800942c:	e070      	b.n	8009510 <HAL_RCCEx_GetPeriphCLKFreq+0x3e8>
 800942e:	4b8a      	ldr	r3, [pc, #552]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009430:	681b      	ldr	r3, [r3, #0]
 8009432:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8009436:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800943a:	d107      	bne.n	800944c <HAL_RCCEx_GetPeriphCLKFreq+0x324>
 800943c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009440:	4618      	mov	r0, r3
 8009442:	f000 feaf 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 8009446:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009448:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800944a:	e3e4      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800944c:	2300      	movs	r3, #0
 800944e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009450:	e3e1      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009452:	4b81      	ldr	r3, [pc, #516]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800945a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 800945e:	d107      	bne.n	8009470 <HAL_RCCEx_GetPeriphCLKFreq+0x348>
 8009460:	f107 0318 	add.w	r3, r7, #24
 8009464:	4618      	mov	r0, r3
 8009466:	f000 fbf5 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 800946a:	69bb      	ldr	r3, [r7, #24]
 800946c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800946e:	e3d2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009470:	2300      	movs	r3, #0
 8009472:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009474:	e3cf      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009476:	4b78      	ldr	r3, [pc, #480]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009478:	681b      	ldr	r3, [r3, #0]
 800947a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800947e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009482:	d107      	bne.n	8009494 <HAL_RCCEx_GetPeriphCLKFreq+0x36c>
 8009484:	f107 030c 	add.w	r3, r7, #12
 8009488:	4618      	mov	r0, r3
 800948a:	f000 fd37 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 800948e:	68fb      	ldr	r3, [r7, #12]
 8009490:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009492:	e3c0      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009494:	2300      	movs	r3, #0
 8009496:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009498:	e3bd      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800949a:	4b6f      	ldr	r3, [pc, #444]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800949c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800949e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80094a2:	637b      	str	r3, [r7, #52]	@ 0x34
 80094a4:	4b6c      	ldr	r3, [pc, #432]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80094a6:	681b      	ldr	r3, [r3, #0]
 80094a8:	f003 0304 	and.w	r3, r3, #4
 80094ac:	2b04      	cmp	r3, #4
 80094ae:	d10c      	bne.n	80094ca <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 80094b0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80094b2:	2b00      	cmp	r3, #0
 80094b4:	d109      	bne.n	80094ca <HAL_RCCEx_GetPeriphCLKFreq+0x3a2>
 80094b6:	4b68      	ldr	r3, [pc, #416]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80094b8:	681b      	ldr	r3, [r3, #0]
 80094ba:	08db      	lsrs	r3, r3, #3
 80094bc:	f003 0303 	and.w	r3, r3, #3
 80094c0:	4a66      	ldr	r2, [pc, #408]	@ (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 80094c2:	fa22 f303 	lsr.w	r3, r2, r3
 80094c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80094c8:	e01e      	b.n	8009508 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 80094ca:	4b63      	ldr	r3, [pc, #396]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80094cc:	681b      	ldr	r3, [r3, #0]
 80094ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80094d2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80094d6:	d106      	bne.n	80094e6 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 80094d8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80094da:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80094de:	d102      	bne.n	80094e6 <HAL_RCCEx_GetPeriphCLKFreq+0x3be>
 80094e0:	4b5f      	ldr	r3, [pc, #380]	@ (8009660 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 80094e2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80094e4:	e010      	b.n	8009508 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 80094e6:	4b5c      	ldr	r3, [pc, #368]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80094e8:	681b      	ldr	r3, [r3, #0]
 80094ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80094ee:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80094f2:	d106      	bne.n	8009502 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 80094f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80094f6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80094fa:	d102      	bne.n	8009502 <HAL_RCCEx_GetPeriphCLKFreq+0x3da>
 80094fc:	4b59      	ldr	r3, [pc, #356]	@ (8009664 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 80094fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009500:	e002      	b.n	8009508 <HAL_RCCEx_GetPeriphCLKFreq+0x3e0>
 8009502:	2300      	movs	r3, #0
 8009504:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009506:	e386      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009508:	e385      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800950a:	4b57      	ldr	r3, [pc, #348]	@ (8009668 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 800950c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800950e:	e382      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009510:	2300      	movs	r3, #0
 8009512:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009514:	e37f      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009516:	e9d7 2300 	ldrd	r2, r3, [r7]
 800951a:	f5a2 6100 	sub.w	r1, r2, #2048	@ 0x800
 800951e:	430b      	orrs	r3, r1
 8009520:	f040 80a7 	bne.w	8009672 <HAL_RCCEx_GetPeriphCLKFreq+0x54a>
 8009524:	4b4c      	ldr	r3, [pc, #304]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009526:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8009528:	f003 63e0 	and.w	r3, r3, #117440512	@ 0x7000000
 800952c:	633b      	str	r3, [r7, #48]	@ 0x30
 800952e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009530:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8009534:	d055      	beq.n	80095e2 <HAL_RCCEx_GetPeriphCLKFreq+0x4ba>
 8009536:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009538:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800953c:	f200 8096 	bhi.w	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8009540:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009542:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8009546:	f000 8084 	beq.w	8009652 <HAL_RCCEx_GetPeriphCLKFreq+0x52a>
 800954a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800954c:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8009550:	f200 808c 	bhi.w	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8009554:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009556:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800955a:	d030      	beq.n	80095be <HAL_RCCEx_GetPeriphCLKFreq+0x496>
 800955c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800955e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009562:	f200 8083 	bhi.w	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8009566:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009568:	2b00      	cmp	r3, #0
 800956a:	d004      	beq.n	8009576 <HAL_RCCEx_GetPeriphCLKFreq+0x44e>
 800956c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800956e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8009572:	d012      	beq.n	800959a <HAL_RCCEx_GetPeriphCLKFreq+0x472>
 8009574:	e07a      	b.n	800966c <HAL_RCCEx_GetPeriphCLKFreq+0x544>
 8009576:	4b38      	ldr	r3, [pc, #224]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009578:	681b      	ldr	r3, [r3, #0]
 800957a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800957e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009582:	d107      	bne.n	8009594 <HAL_RCCEx_GetPeriphCLKFreq+0x46c>
 8009584:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009588:	4618      	mov	r0, r3
 800958a:	f000 fe0b 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 800958e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009590:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009592:	e340      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009594:	2300      	movs	r3, #0
 8009596:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009598:	e33d      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800959a:	4b2f      	ldr	r3, [pc, #188]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 800959c:	681b      	ldr	r3, [r3, #0]
 800959e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80095a2:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80095a6:	d107      	bne.n	80095b8 <HAL_RCCEx_GetPeriphCLKFreq+0x490>
 80095a8:	f107 0318 	add.w	r3, r7, #24
 80095ac:	4618      	mov	r0, r3
 80095ae:	f000 fb51 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 80095b2:	69bb      	ldr	r3, [r7, #24]
 80095b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095b6:	e32e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80095b8:	2300      	movs	r3, #0
 80095ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095bc:	e32b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80095be:	4b26      	ldr	r3, [pc, #152]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80095c0:	681b      	ldr	r3, [r3, #0]
 80095c2:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80095c6:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80095ca:	d107      	bne.n	80095dc <HAL_RCCEx_GetPeriphCLKFreq+0x4b4>
 80095cc:	f107 030c 	add.w	r3, r7, #12
 80095d0:	4618      	mov	r0, r3
 80095d2:	f000 fc93 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 80095d6:	68fb      	ldr	r3, [r7, #12]
 80095d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095da:	e31c      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80095dc:	2300      	movs	r3, #0
 80095de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095e0:	e319      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80095e2:	4b1d      	ldr	r3, [pc, #116]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80095e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80095e6:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80095ea:	637b      	str	r3, [r7, #52]	@ 0x34
 80095ec:	4b1a      	ldr	r3, [pc, #104]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	f003 0304 	and.w	r3, r3, #4
 80095f4:	2b04      	cmp	r3, #4
 80095f6:	d10c      	bne.n	8009612 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 80095f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80095fa:	2b00      	cmp	r3, #0
 80095fc:	d109      	bne.n	8009612 <HAL_RCCEx_GetPeriphCLKFreq+0x4ea>
 80095fe:	4b16      	ldr	r3, [pc, #88]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009600:	681b      	ldr	r3, [r3, #0]
 8009602:	08db      	lsrs	r3, r3, #3
 8009604:	f003 0303 	and.w	r3, r3, #3
 8009608:	4a14      	ldr	r2, [pc, #80]	@ (800965c <HAL_RCCEx_GetPeriphCLKFreq+0x534>)
 800960a:	fa22 f303 	lsr.w	r3, r2, r3
 800960e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009610:	e01e      	b.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 8009612:	4b11      	ldr	r3, [pc, #68]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009614:	681b      	ldr	r3, [r3, #0]
 8009616:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800961a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800961e:	d106      	bne.n	800962e <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 8009620:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009622:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009626:	d102      	bne.n	800962e <HAL_RCCEx_GetPeriphCLKFreq+0x506>
 8009628:	4b0d      	ldr	r3, [pc, #52]	@ (8009660 <HAL_RCCEx_GetPeriphCLKFreq+0x538>)
 800962a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800962c:	e010      	b.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 800962e:	4b0a      	ldr	r3, [pc, #40]	@ (8009658 <HAL_RCCEx_GetPeriphCLKFreq+0x530>)
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009636:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800963a:	d106      	bne.n	800964a <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 800963c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800963e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009642:	d102      	bne.n	800964a <HAL_RCCEx_GetPeriphCLKFreq+0x522>
 8009644:	4b07      	ldr	r3, [pc, #28]	@ (8009664 <HAL_RCCEx_GetPeriphCLKFreq+0x53c>)
 8009646:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009648:	e002      	b.n	8009650 <HAL_RCCEx_GetPeriphCLKFreq+0x528>
 800964a:	2300      	movs	r3, #0
 800964c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800964e:	e2e2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009650:	e2e1      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009652:	4b05      	ldr	r3, [pc, #20]	@ (8009668 <HAL_RCCEx_GetPeriphCLKFreq+0x540>)
 8009654:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009656:	e2de      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009658:	58024400 	.word	0x58024400
 800965c:	03d09000 	.word	0x03d09000
 8009660:	003d0900 	.word	0x003d0900
 8009664:	017d7840 	.word	0x017d7840
 8009668:	00bb8000 	.word	0x00bb8000
 800966c:	2300      	movs	r3, #0
 800966e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009670:	e2d1      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009672:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009676:	f5a2 5180 	sub.w	r1, r2, #4096	@ 0x1000
 800967a:	430b      	orrs	r3, r1
 800967c:	f040 809c 	bne.w	80097b8 <HAL_RCCEx_GetPeriphCLKFreq+0x690>
 8009680:	4b93      	ldr	r3, [pc, #588]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009682:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009684:	f403 43e0 	and.w	r3, r3, #28672	@ 0x7000
 8009688:	63bb      	str	r3, [r7, #56]	@ 0x38
 800968a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800968c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8009690:	d054      	beq.n	800973c <HAL_RCCEx_GetPeriphCLKFreq+0x614>
 8009692:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009694:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8009698:	f200 808b 	bhi.w	80097b2 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 800969c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800969e:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80096a2:	f000 8083 	beq.w	80097ac <HAL_RCCEx_GetPeriphCLKFreq+0x684>
 80096a6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80096a8:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80096ac:	f200 8081 	bhi.w	80097b2 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 80096b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80096b2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80096b6:	d02f      	beq.n	8009718 <HAL_RCCEx_GetPeriphCLKFreq+0x5f0>
 80096b8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80096ba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80096be:	d878      	bhi.n	80097b2 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 80096c0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80096c2:	2b00      	cmp	r3, #0
 80096c4:	d004      	beq.n	80096d0 <HAL_RCCEx_GetPeriphCLKFreq+0x5a8>
 80096c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80096c8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80096cc:	d012      	beq.n	80096f4 <HAL_RCCEx_GetPeriphCLKFreq+0x5cc>
 80096ce:	e070      	b.n	80097b2 <HAL_RCCEx_GetPeriphCLKFreq+0x68a>
 80096d0:	4b7f      	ldr	r3, [pc, #508]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80096d2:	681b      	ldr	r3, [r3, #0]
 80096d4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80096d8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80096dc:	d107      	bne.n	80096ee <HAL_RCCEx_GetPeriphCLKFreq+0x5c6>
 80096de:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80096e2:	4618      	mov	r0, r3
 80096e4:	f000 fd5e 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 80096e8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80096ea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80096ec:	e293      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80096ee:	2300      	movs	r3, #0
 80096f0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80096f2:	e290      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80096f4:	4b76      	ldr	r3, [pc, #472]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80096f6:	681b      	ldr	r3, [r3, #0]
 80096f8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80096fc:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009700:	d107      	bne.n	8009712 <HAL_RCCEx_GetPeriphCLKFreq+0x5ea>
 8009702:	f107 0318 	add.w	r3, r7, #24
 8009706:	4618      	mov	r0, r3
 8009708:	f000 faa4 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 800970c:	69bb      	ldr	r3, [r7, #24]
 800970e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009710:	e281      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009712:	2300      	movs	r3, #0
 8009714:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009716:	e27e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009718:	4b6d      	ldr	r3, [pc, #436]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800971a:	681b      	ldr	r3, [r3, #0]
 800971c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8009720:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009724:	d107      	bne.n	8009736 <HAL_RCCEx_GetPeriphCLKFreq+0x60e>
 8009726:	f107 030c 	add.w	r3, r7, #12
 800972a:	4618      	mov	r0, r3
 800972c:	f000 fbe6 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 8009730:	68fb      	ldr	r3, [r7, #12]
 8009732:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009734:	e26f      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009736:	2300      	movs	r3, #0
 8009738:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800973a:	e26c      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800973c:	4b64      	ldr	r3, [pc, #400]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800973e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8009740:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8009744:	637b      	str	r3, [r7, #52]	@ 0x34
 8009746:	4b62      	ldr	r3, [pc, #392]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	f003 0304 	and.w	r3, r3, #4
 800974e:	2b04      	cmp	r3, #4
 8009750:	d10c      	bne.n	800976c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8009752:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009754:	2b00      	cmp	r3, #0
 8009756:	d109      	bne.n	800976c <HAL_RCCEx_GetPeriphCLKFreq+0x644>
 8009758:	4b5d      	ldr	r3, [pc, #372]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800975a:	681b      	ldr	r3, [r3, #0]
 800975c:	08db      	lsrs	r3, r3, #3
 800975e:	f003 0303 	and.w	r3, r3, #3
 8009762:	4a5c      	ldr	r2, [pc, #368]	@ (80098d4 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8009764:	fa22 f303 	lsr.w	r3, r2, r3
 8009768:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800976a:	e01e      	b.n	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 800976c:	4b58      	ldr	r3, [pc, #352]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800976e:	681b      	ldr	r3, [r3, #0]
 8009770:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009774:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009778:	d106      	bne.n	8009788 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 800977a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800977c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009780:	d102      	bne.n	8009788 <HAL_RCCEx_GetPeriphCLKFreq+0x660>
 8009782:	4b55      	ldr	r3, [pc, #340]	@ (80098d8 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 8009784:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009786:	e010      	b.n	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 8009788:	4b51      	ldr	r3, [pc, #324]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009790:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009794:	d106      	bne.n	80097a4 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 8009796:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009798:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800979c:	d102      	bne.n	80097a4 <HAL_RCCEx_GetPeriphCLKFreq+0x67c>
 800979e:	4b4f      	ldr	r3, [pc, #316]	@ (80098dc <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 80097a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80097a2:	e002      	b.n	80097aa <HAL_RCCEx_GetPeriphCLKFreq+0x682>
 80097a4:	2300      	movs	r3, #0
 80097a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80097a8:	e235      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80097aa:	e234      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80097ac:	4b4c      	ldr	r3, [pc, #304]	@ (80098e0 <HAL_RCCEx_GetPeriphCLKFreq+0x7b8>)
 80097ae:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80097b0:	e231      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80097b2:	2300      	movs	r3, #0
 80097b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80097b6:	e22e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80097b8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80097bc:	f5a2 5100 	sub.w	r1, r2, #8192	@ 0x2000
 80097c0:	430b      	orrs	r3, r1
 80097c2:	f040 808f 	bne.w	80098e4 <HAL_RCCEx_GetPeriphCLKFreq+0x7bc>
 80097c6:	4b42      	ldr	r3, [pc, #264]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80097c8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80097ca:	f403 23e0 	and.w	r3, r3, #458752	@ 0x70000
 80097ce:	63bb      	str	r3, [r7, #56]	@ 0x38
 80097d0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097d2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80097d6:	d06b      	beq.n	80098b0 <HAL_RCCEx_GetPeriphCLKFreq+0x788>
 80097d8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097da:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80097de:	d874      	bhi.n	80098ca <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 80097e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097e2:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80097e6:	d056      	beq.n	8009896 <HAL_RCCEx_GetPeriphCLKFreq+0x76e>
 80097e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097ea:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 80097ee:	d86c      	bhi.n	80098ca <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 80097f0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097f2:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80097f6:	d03b      	beq.n	8009870 <HAL_RCCEx_GetPeriphCLKFreq+0x748>
 80097f8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80097fa:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 80097fe:	d864      	bhi.n	80098ca <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009800:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009802:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009806:	d021      	beq.n	800984c <HAL_RCCEx_GetPeriphCLKFreq+0x724>
 8009808:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800980a:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800980e:	d85c      	bhi.n	80098ca <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009810:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009812:	2b00      	cmp	r3, #0
 8009814:	d004      	beq.n	8009820 <HAL_RCCEx_GetPeriphCLKFreq+0x6f8>
 8009816:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009818:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800981c:	d004      	beq.n	8009828 <HAL_RCCEx_GetPeriphCLKFreq+0x700>
 800981e:	e054      	b.n	80098ca <HAL_RCCEx_GetPeriphCLKFreq+0x7a2>
 8009820:	f7fe fa62 	bl	8007ce8 <HAL_RCC_GetPCLK1Freq>
 8009824:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8009826:	e1f6      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009828:	4b29      	ldr	r3, [pc, #164]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800982a:	681b      	ldr	r3, [r3, #0]
 800982c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009830:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009834:	d107      	bne.n	8009846 <HAL_RCCEx_GetPeriphCLKFreq+0x71e>
 8009836:	f107 0318 	add.w	r3, r7, #24
 800983a:	4618      	mov	r0, r3
 800983c:	f000 fa0a 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 8009840:	69fb      	ldr	r3, [r7, #28]
 8009842:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009844:	e1e7      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009846:	2300      	movs	r3, #0
 8009848:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800984a:	e1e4      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800984c:	4b20      	ldr	r3, [pc, #128]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800984e:	681b      	ldr	r3, [r3, #0]
 8009850:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8009854:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009858:	d107      	bne.n	800986a <HAL_RCCEx_GetPeriphCLKFreq+0x742>
 800985a:	f107 030c 	add.w	r3, r7, #12
 800985e:	4618      	mov	r0, r3
 8009860:	f000 fb4c 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 8009864:	693b      	ldr	r3, [r7, #16]
 8009866:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009868:	e1d5      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800986a:	2300      	movs	r3, #0
 800986c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800986e:	e1d2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009870:	4b17      	ldr	r3, [pc, #92]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009872:	681b      	ldr	r3, [r3, #0]
 8009874:	f003 0304 	and.w	r3, r3, #4
 8009878:	2b04      	cmp	r3, #4
 800987a:	d109      	bne.n	8009890 <HAL_RCCEx_GetPeriphCLKFreq+0x768>
 800987c:	4b14      	ldr	r3, [pc, #80]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 800987e:	681b      	ldr	r3, [r3, #0]
 8009880:	08db      	lsrs	r3, r3, #3
 8009882:	f003 0303 	and.w	r3, r3, #3
 8009886:	4a13      	ldr	r2, [pc, #76]	@ (80098d4 <HAL_RCCEx_GetPeriphCLKFreq+0x7ac>)
 8009888:	fa22 f303 	lsr.w	r3, r2, r3
 800988c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800988e:	e1c2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009890:	2300      	movs	r3, #0
 8009892:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009894:	e1bf      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009896:	4b0e      	ldr	r3, [pc, #56]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800989e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80098a2:	d102      	bne.n	80098aa <HAL_RCCEx_GetPeriphCLKFreq+0x782>
 80098a4:	4b0c      	ldr	r3, [pc, #48]	@ (80098d8 <HAL_RCCEx_GetPeriphCLKFreq+0x7b0>)
 80098a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80098a8:	e1b5      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098aa:	2300      	movs	r3, #0
 80098ac:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80098ae:	e1b2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098b0:	4b07      	ldr	r3, [pc, #28]	@ (80098d0 <HAL_RCCEx_GetPeriphCLKFreq+0x7a8>)
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80098b8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80098bc:	d102      	bne.n	80098c4 <HAL_RCCEx_GetPeriphCLKFreq+0x79c>
 80098be:	4b07      	ldr	r3, [pc, #28]	@ (80098dc <HAL_RCCEx_GetPeriphCLKFreq+0x7b4>)
 80098c0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80098c2:	e1a8      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098c4:	2300      	movs	r3, #0
 80098c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80098c8:	e1a5      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098ca:	2300      	movs	r3, #0
 80098cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80098ce:	e1a2      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80098d0:	58024400 	.word	0x58024400
 80098d4:	03d09000 	.word	0x03d09000
 80098d8:	003d0900 	.word	0x003d0900
 80098dc:	017d7840 	.word	0x017d7840
 80098e0:	00bb8000 	.word	0x00bb8000
 80098e4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80098e8:	f5a2 2100 	sub.w	r1, r2, #524288	@ 0x80000
 80098ec:	430b      	orrs	r3, r1
 80098ee:	d173      	bne.n	80099d8 <HAL_RCCEx_GetPeriphCLKFreq+0x8b0>
 80098f0:	4b9c      	ldr	r3, [pc, #624]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 80098f2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80098f4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80098f8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80098fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80098fc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009900:	d02f      	beq.n	8009962 <HAL_RCCEx_GetPeriphCLKFreq+0x83a>
 8009902:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009904:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009908:	d863      	bhi.n	80099d2 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 800990a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800990c:	2b00      	cmp	r3, #0
 800990e:	d004      	beq.n	800991a <HAL_RCCEx_GetPeriphCLKFreq+0x7f2>
 8009910:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009912:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009916:	d012      	beq.n	800993e <HAL_RCCEx_GetPeriphCLKFreq+0x816>
 8009918:	e05b      	b.n	80099d2 <HAL_RCCEx_GetPeriphCLKFreq+0x8aa>
 800991a:	4b92      	ldr	r3, [pc, #584]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 800991c:	681b      	ldr	r3, [r3, #0]
 800991e:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009922:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009926:	d107      	bne.n	8009938 <HAL_RCCEx_GetPeriphCLKFreq+0x810>
 8009928:	f107 0318 	add.w	r3, r7, #24
 800992c:	4618      	mov	r0, r3
 800992e:	f000 f991 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 8009932:	69bb      	ldr	r3, [r7, #24]
 8009934:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009936:	e16e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009938:	2300      	movs	r3, #0
 800993a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800993c:	e16b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800993e:	4b89      	ldr	r3, [pc, #548]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009940:	681b      	ldr	r3, [r3, #0]
 8009942:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8009946:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800994a:	d107      	bne.n	800995c <HAL_RCCEx_GetPeriphCLKFreq+0x834>
 800994c:	f107 030c 	add.w	r3, r7, #12
 8009950:	4618      	mov	r0, r3
 8009952:	f000 fad3 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 8009956:	697b      	ldr	r3, [r7, #20]
 8009958:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800995a:	e15c      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 800995c:	2300      	movs	r3, #0
 800995e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009960:	e159      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009962:	4b80      	ldr	r3, [pc, #512]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009964:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8009966:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800996a:	637b      	str	r3, [r7, #52]	@ 0x34
 800996c:	4b7d      	ldr	r3, [pc, #500]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 800996e:	681b      	ldr	r3, [r3, #0]
 8009970:	f003 0304 	and.w	r3, r3, #4
 8009974:	2b04      	cmp	r3, #4
 8009976:	d10c      	bne.n	8009992 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 8009978:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800997a:	2b00      	cmp	r3, #0
 800997c:	d109      	bne.n	8009992 <HAL_RCCEx_GetPeriphCLKFreq+0x86a>
 800997e:	4b79      	ldr	r3, [pc, #484]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	08db      	lsrs	r3, r3, #3
 8009984:	f003 0303 	and.w	r3, r3, #3
 8009988:	4a77      	ldr	r2, [pc, #476]	@ (8009b68 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 800998a:	fa22 f303 	lsr.w	r3, r2, r3
 800998e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009990:	e01e      	b.n	80099d0 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 8009992:	4b74      	ldr	r3, [pc, #464]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800999a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800999e:	d106      	bne.n	80099ae <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 80099a0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80099a2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80099a6:	d102      	bne.n	80099ae <HAL_RCCEx_GetPeriphCLKFreq+0x886>
 80099a8:	4b70      	ldr	r3, [pc, #448]	@ (8009b6c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 80099aa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099ac:	e010      	b.n	80099d0 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 80099ae:	4b6d      	ldr	r3, [pc, #436]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 80099b0:	681b      	ldr	r3, [r3, #0]
 80099b2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80099b6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80099ba:	d106      	bne.n	80099ca <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 80099bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80099be:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80099c2:	d102      	bne.n	80099ca <HAL_RCCEx_GetPeriphCLKFreq+0x8a2>
 80099c4:	4b6a      	ldr	r3, [pc, #424]	@ (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 80099c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099c8:	e002      	b.n	80099d0 <HAL_RCCEx_GetPeriphCLKFreq+0x8a8>
 80099ca:	2300      	movs	r3, #0
 80099cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099ce:	e122      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80099d0:	e121      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80099d2:	2300      	movs	r3, #0
 80099d4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099d6:	e11e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 80099d8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80099dc:	f5a2 3180 	sub.w	r1, r2, #65536	@ 0x10000
 80099e0:	430b      	orrs	r3, r1
 80099e2:	d133      	bne.n	8009a4c <HAL_RCCEx_GetPeriphCLKFreq+0x924>
 80099e4:	4b5f      	ldr	r3, [pc, #380]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 80099e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80099e8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80099ec:	63bb      	str	r3, [r7, #56]	@ 0x38
 80099ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80099f0:	2b00      	cmp	r3, #0
 80099f2:	d004      	beq.n	80099fe <HAL_RCCEx_GetPeriphCLKFreq+0x8d6>
 80099f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80099f6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80099fa:	d012      	beq.n	8009a22 <HAL_RCCEx_GetPeriphCLKFreq+0x8fa>
 80099fc:	e023      	b.n	8009a46 <HAL_RCCEx_GetPeriphCLKFreq+0x91e>
 80099fe:	4b59      	ldr	r3, [pc, #356]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009a00:	681b      	ldr	r3, [r3, #0]
 8009a02:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8009a06:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009a0a:	d107      	bne.n	8009a1c <HAL_RCCEx_GetPeriphCLKFreq+0x8f4>
 8009a0c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009a10:	4618      	mov	r0, r3
 8009a12:	f000 fbc7 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 8009a16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009a18:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009a1a:	e0fc      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a1c:	2300      	movs	r3, #0
 8009a1e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009a20:	e0f9      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a22:	4b50      	ldr	r3, [pc, #320]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009a24:	681b      	ldr	r3, [r3, #0]
 8009a26:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009a2a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009a2e:	d107      	bne.n	8009a40 <HAL_RCCEx_GetPeriphCLKFreq+0x918>
 8009a30:	f107 0318 	add.w	r3, r7, #24
 8009a34:	4618      	mov	r0, r3
 8009a36:	f000 f90d 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 8009a3a:	6a3b      	ldr	r3, [r7, #32]
 8009a3c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009a3e:	e0ea      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a40:	2300      	movs	r3, #0
 8009a42:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009a44:	e0e7      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a46:	2300      	movs	r3, #0
 8009a48:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009a4a:	e0e4      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009a4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009a50:	f5a2 4180 	sub.w	r1, r2, #16384	@ 0x4000
 8009a54:	430b      	orrs	r3, r1
 8009a56:	f040 808d 	bne.w	8009b74 <HAL_RCCEx_GetPeriphCLKFreq+0xa4c>
 8009a5a:	4b42      	ldr	r3, [pc, #264]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009a5c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8009a5e:	f003 43e0 	and.w	r3, r3, #1879048192	@ 0x70000000
 8009a62:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009a64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a66:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8009a6a:	d06b      	beq.n	8009b44 <HAL_RCCEx_GetPeriphCLKFreq+0xa1c>
 8009a6c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a6e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8009a72:	d874      	bhi.n	8009b5e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009a74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a76:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009a7a:	d056      	beq.n	8009b2a <HAL_RCCEx_GetPeriphCLKFreq+0xa02>
 8009a7c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a7e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009a82:	d86c      	bhi.n	8009b5e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009a84:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a86:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8009a8a:	d03b      	beq.n	8009b04 <HAL_RCCEx_GetPeriphCLKFreq+0x9dc>
 8009a8c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a8e:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8009a92:	d864      	bhi.n	8009b5e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009a94:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a96:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009a9a:	d021      	beq.n	8009ae0 <HAL_RCCEx_GetPeriphCLKFreq+0x9b8>
 8009a9c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a9e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009aa2:	d85c      	bhi.n	8009b5e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009aa4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009aa6:	2b00      	cmp	r3, #0
 8009aa8:	d004      	beq.n	8009ab4 <HAL_RCCEx_GetPeriphCLKFreq+0x98c>
 8009aaa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009aac:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009ab0:	d004      	beq.n	8009abc <HAL_RCCEx_GetPeriphCLKFreq+0x994>
 8009ab2:	e054      	b.n	8009b5e <HAL_RCCEx_GetPeriphCLKFreq+0xa36>
 8009ab4:	f000 f8b8 	bl	8009c28 <HAL_RCCEx_GetD3PCLK1Freq>
 8009ab8:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8009aba:	e0ac      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009abc:	4b29      	ldr	r3, [pc, #164]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009ac4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009ac8:	d107      	bne.n	8009ada <HAL_RCCEx_GetPeriphCLKFreq+0x9b2>
 8009aca:	f107 0318 	add.w	r3, r7, #24
 8009ace:	4618      	mov	r0, r3
 8009ad0:	f000 f8c0 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 8009ad4:	69fb      	ldr	r3, [r7, #28]
 8009ad6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009ad8:	e09d      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009ada:	2300      	movs	r3, #0
 8009adc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009ade:	e09a      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009ae0:	4b20      	ldr	r3, [pc, #128]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009ae2:	681b      	ldr	r3, [r3, #0]
 8009ae4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8009ae8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009aec:	d107      	bne.n	8009afe <HAL_RCCEx_GetPeriphCLKFreq+0x9d6>
 8009aee:	f107 030c 	add.w	r3, r7, #12
 8009af2:	4618      	mov	r0, r3
 8009af4:	f000 fa02 	bl	8009efc <HAL_RCCEx_GetPLL3ClockFreq>
 8009af8:	693b      	ldr	r3, [r7, #16]
 8009afa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009afc:	e08b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009afe:	2300      	movs	r3, #0
 8009b00:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b02:	e088      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b04:	4b17      	ldr	r3, [pc, #92]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	f003 0304 	and.w	r3, r3, #4
 8009b0c:	2b04      	cmp	r3, #4
 8009b0e:	d109      	bne.n	8009b24 <HAL_RCCEx_GetPeriphCLKFreq+0x9fc>
 8009b10:	4b14      	ldr	r3, [pc, #80]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009b12:	681b      	ldr	r3, [r3, #0]
 8009b14:	08db      	lsrs	r3, r3, #3
 8009b16:	f003 0303 	and.w	r3, r3, #3
 8009b1a:	4a13      	ldr	r2, [pc, #76]	@ (8009b68 <HAL_RCCEx_GetPeriphCLKFreq+0xa40>)
 8009b1c:	fa22 f303 	lsr.w	r3, r2, r3
 8009b20:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b22:	e078      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b24:	2300      	movs	r3, #0
 8009b26:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b28:	e075      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b2a:	4b0e      	ldr	r3, [pc, #56]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009b32:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009b36:	d102      	bne.n	8009b3e <HAL_RCCEx_GetPeriphCLKFreq+0xa16>
 8009b38:	4b0c      	ldr	r3, [pc, #48]	@ (8009b6c <HAL_RCCEx_GetPeriphCLKFreq+0xa44>)
 8009b3a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b3c:	e06b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b3e:	2300      	movs	r3, #0
 8009b40:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b42:	e068      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b44:	4b07      	ldr	r3, [pc, #28]	@ (8009b64 <HAL_RCCEx_GetPeriphCLKFreq+0xa3c>)
 8009b46:	681b      	ldr	r3, [r3, #0]
 8009b48:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009b4c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009b50:	d102      	bne.n	8009b58 <HAL_RCCEx_GetPeriphCLKFreq+0xa30>
 8009b52:	4b07      	ldr	r3, [pc, #28]	@ (8009b70 <HAL_RCCEx_GetPeriphCLKFreq+0xa48>)
 8009b54:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b56:	e05e      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b58:	2300      	movs	r3, #0
 8009b5a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b5c:	e05b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b5e:	2300      	movs	r3, #0
 8009b60:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009b62:	e058      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009b64:	58024400 	.word	0x58024400
 8009b68:	03d09000 	.word	0x03d09000
 8009b6c:	003d0900 	.word	0x003d0900
 8009b70:	017d7840 	.word	0x017d7840
 8009b74:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009b78:	f5a2 4100 	sub.w	r1, r2, #32768	@ 0x8000
 8009b7c:	430b      	orrs	r3, r1
 8009b7e:	d148      	bne.n	8009c12 <HAL_RCCEx_GetPeriphCLKFreq+0xaea>
 8009b80:	4b27      	ldr	r3, [pc, #156]	@ (8009c20 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009b82:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8009b84:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8009b88:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009b8a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009b8c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009b90:	d02a      	beq.n	8009be8 <HAL_RCCEx_GetPeriphCLKFreq+0xac0>
 8009b92:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009b94:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009b98:	d838      	bhi.n	8009c0c <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 8009b9a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009b9c:	2b00      	cmp	r3, #0
 8009b9e:	d004      	beq.n	8009baa <HAL_RCCEx_GetPeriphCLKFreq+0xa82>
 8009ba0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ba2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009ba6:	d00d      	beq.n	8009bc4 <HAL_RCCEx_GetPeriphCLKFreq+0xa9c>
 8009ba8:	e030      	b.n	8009c0c <HAL_RCCEx_GetPeriphCLKFreq+0xae4>
 8009baa:	4b1d      	ldr	r3, [pc, #116]	@ (8009c20 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009bac:	681b      	ldr	r3, [r3, #0]
 8009bae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8009bb2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8009bb6:	d102      	bne.n	8009bbe <HAL_RCCEx_GetPeriphCLKFreq+0xa96>
 8009bb8:	4b1a      	ldr	r3, [pc, #104]	@ (8009c24 <HAL_RCCEx_GetPeriphCLKFreq+0xafc>)
 8009bba:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009bbc:	e02b      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009bbe:	2300      	movs	r3, #0
 8009bc0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009bc2:	e028      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009bc4:	4b16      	ldr	r3, [pc, #88]	@ (8009c20 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8009bcc:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8009bd0:	d107      	bne.n	8009be2 <HAL_RCCEx_GetPeriphCLKFreq+0xaba>
 8009bd2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009bd6:	4618      	mov	r0, r3
 8009bd8:	f000 fae4 	bl	800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>
 8009bdc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009bde:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009be0:	e019      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009be2:	2300      	movs	r3, #0
 8009be4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009be6:	e016      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009be8:	4b0d      	ldr	r3, [pc, #52]	@ (8009c20 <HAL_RCCEx_GetPeriphCLKFreq+0xaf8>)
 8009bea:	681b      	ldr	r3, [r3, #0]
 8009bec:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009bf0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8009bf4:	d107      	bne.n	8009c06 <HAL_RCCEx_GetPeriphCLKFreq+0xade>
 8009bf6:	f107 0318 	add.w	r3, r7, #24
 8009bfa:	4618      	mov	r0, r3
 8009bfc:	f000 f82a 	bl	8009c54 <HAL_RCCEx_GetPLL2ClockFreq>
 8009c00:	69fb      	ldr	r3, [r7, #28]
 8009c02:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009c04:	e007      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009c06:	2300      	movs	r3, #0
 8009c08:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009c0a:	e004      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009c0c:	2300      	movs	r3, #0
 8009c0e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009c10:	e001      	b.n	8009c16 <HAL_RCCEx_GetPeriphCLKFreq+0xaee>
 8009c12:	2300      	movs	r3, #0
 8009c14:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009c16:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009c18:	4618      	mov	r0, r3
 8009c1a:	3740      	adds	r7, #64	@ 0x40
 8009c1c:	46bd      	mov	sp, r7
 8009c1e:	bd80      	pop	{r7, pc}
 8009c20:	58024400 	.word	0x58024400
 8009c24:	017d7840 	.word	0x017d7840

08009c28 <HAL_RCCEx_GetD3PCLK1Freq>:
 8009c28:	b580      	push	{r7, lr}
 8009c2a:	af00      	add	r7, sp, #0
 8009c2c:	f7fe f82c 	bl	8007c88 <HAL_RCC_GetHCLKFreq>
 8009c30:	4602      	mov	r2, r0
 8009c32:	4b06      	ldr	r3, [pc, #24]	@ (8009c4c <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8009c34:	6a1b      	ldr	r3, [r3, #32]
 8009c36:	091b      	lsrs	r3, r3, #4
 8009c38:	f003 0307 	and.w	r3, r3, #7
 8009c3c:	4904      	ldr	r1, [pc, #16]	@ (8009c50 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009c3e:	5ccb      	ldrb	r3, [r1, r3]
 8009c40:	f003 031f 	and.w	r3, r3, #31
 8009c44:	fa22 f303 	lsr.w	r3, r2, r3
 8009c48:	4618      	mov	r0, r3
 8009c4a:	bd80      	pop	{r7, pc}
 8009c4c:	58024400 	.word	0x58024400
 8009c50:	08018128 	.word	0x08018128

08009c54 <HAL_RCCEx_GetPLL2ClockFreq>:
 8009c54:	b480      	push	{r7}
 8009c56:	b089      	sub	sp, #36	@ 0x24
 8009c58:	af00      	add	r7, sp, #0
 8009c5a:	6078      	str	r0, [r7, #4]
 8009c5c:	4ba1      	ldr	r3, [pc, #644]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009c5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009c60:	f003 0303 	and.w	r3, r3, #3
 8009c64:	61bb      	str	r3, [r7, #24]
 8009c66:	4b9f      	ldr	r3, [pc, #636]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009c68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009c6a:	0b1b      	lsrs	r3, r3, #12
 8009c6c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8009c70:	617b      	str	r3, [r7, #20]
 8009c72:	4b9c      	ldr	r3, [pc, #624]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009c74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009c76:	091b      	lsrs	r3, r3, #4
 8009c78:	f003 0301 	and.w	r3, r3, #1
 8009c7c:	613b      	str	r3, [r7, #16]
 8009c7e:	4b99      	ldr	r3, [pc, #612]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009c80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009c82:	08db      	lsrs	r3, r3, #3
 8009c84:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009c88:	693a      	ldr	r2, [r7, #16]
 8009c8a:	fb02 f303 	mul.w	r3, r2, r3
 8009c8e:	ee07 3a90 	vmov	s15, r3
 8009c92:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c96:	edc7 7a03 	vstr	s15, [r7, #12]
 8009c9a:	697b      	ldr	r3, [r7, #20]
 8009c9c:	2b00      	cmp	r3, #0
 8009c9e:	f000 8111 	beq.w	8009ec4 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 8009ca2:	69bb      	ldr	r3, [r7, #24]
 8009ca4:	2b02      	cmp	r3, #2
 8009ca6:	f000 8083 	beq.w	8009db0 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009caa:	69bb      	ldr	r3, [r7, #24]
 8009cac:	2b02      	cmp	r3, #2
 8009cae:	f200 80a1 	bhi.w	8009df4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009cb2:	69bb      	ldr	r3, [r7, #24]
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d003      	beq.n	8009cc0 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009cb8:	69bb      	ldr	r3, [r7, #24]
 8009cba:	2b01      	cmp	r3, #1
 8009cbc:	d056      	beq.n	8009d6c <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009cbe:	e099      	b.n	8009df4 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009cc0:	4b88      	ldr	r3, [pc, #544]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009cc2:	681b      	ldr	r3, [r3, #0]
 8009cc4:	f003 0320 	and.w	r3, r3, #32
 8009cc8:	2b00      	cmp	r3, #0
 8009cca:	d02d      	beq.n	8009d28 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8009ccc:	4b85      	ldr	r3, [pc, #532]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009cce:	681b      	ldr	r3, [r3, #0]
 8009cd0:	08db      	lsrs	r3, r3, #3
 8009cd2:	f003 0303 	and.w	r3, r3, #3
 8009cd6:	4a84      	ldr	r2, [pc, #528]	@ (8009ee8 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8009cd8:	fa22 f303 	lsr.w	r3, r2, r3
 8009cdc:	60bb      	str	r3, [r7, #8]
 8009cde:	68bb      	ldr	r3, [r7, #8]
 8009ce0:	ee07 3a90 	vmov	s15, r3
 8009ce4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ce8:	697b      	ldr	r3, [r7, #20]
 8009cea:	ee07 3a90 	vmov	s15, r3
 8009cee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009cf2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009cf6:	4b7b      	ldr	r3, [pc, #492]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009cf8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009cfa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009cfe:	ee07 3a90 	vmov	s15, r3
 8009d02:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d06:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d0a:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8009eec <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009d0e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d12:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d16:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009d1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d1e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d22:	edc7 7a07 	vstr	s15, [r7, #28]
 8009d26:	e087      	b.n	8009e38 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009d28:	697b      	ldr	r3, [r7, #20]
 8009d2a:	ee07 3a90 	vmov	s15, r3
 8009d2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d32:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 8009ef0 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8009d36:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d3a:	4b6a      	ldr	r3, [pc, #424]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009d3e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d42:	ee07 3a90 	vmov	s15, r3
 8009d46:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d4a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d4e:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8009eec <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009d52:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d56:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009d5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d62:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d66:	edc7 7a07 	vstr	s15, [r7, #28]
 8009d6a:	e065      	b.n	8009e38 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009d6c:	697b      	ldr	r3, [r7, #20]
 8009d6e:	ee07 3a90 	vmov	s15, r3
 8009d72:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d76:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8009ef4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009d7a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d7e:	4b59      	ldr	r3, [pc, #356]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009d80:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009d82:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d86:	ee07 3a90 	vmov	s15, r3
 8009d8a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d8e:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d92:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8009eec <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009d96:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d9a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d9e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009da2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009da6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009daa:	edc7 7a07 	vstr	s15, [r7, #28]
 8009dae:	e043      	b.n	8009e38 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009db0:	697b      	ldr	r3, [r7, #20]
 8009db2:	ee07 3a90 	vmov	s15, r3
 8009db6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dba:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8009ef8 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009dbe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009dc2:	4b48      	ldr	r3, [pc, #288]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009dc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009dc6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009dca:	ee07 3a90 	vmov	s15, r3
 8009dce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009dd2:	ed97 6a03 	vldr	s12, [r7, #12]
 8009dd6:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8009eec <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009dda:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009dde:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009de2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009de6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009dea:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009dee:	edc7 7a07 	vstr	s15, [r7, #28]
 8009df2:	e021      	b.n	8009e38 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009df4:	697b      	ldr	r3, [r7, #20]
 8009df6:	ee07 3a90 	vmov	s15, r3
 8009dfa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dfe:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8009ef4 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009e02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009e06:	4b37      	ldr	r3, [pc, #220]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009e0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009e0e:	ee07 3a90 	vmov	s15, r3
 8009e12:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009e16:	ed97 6a03 	vldr	s12, [r7, #12]
 8009e1a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8009eec <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009e1e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009e22:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009e26:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009e2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009e2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009e32:	edc7 7a07 	vstr	s15, [r7, #28]
 8009e36:	bf00      	nop
 8009e38:	4b2a      	ldr	r3, [pc, #168]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009e3c:	0a5b      	lsrs	r3, r3, #9
 8009e3e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009e42:	ee07 3a90 	vmov	s15, r3
 8009e46:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e4a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8009e4e:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009e52:	edd7 6a07 	vldr	s13, [r7, #28]
 8009e56:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009e5a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009e5e:	ee17 2a90 	vmov	r2, s15
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	601a      	str	r2, [r3, #0]
 8009e66:	4b1f      	ldr	r3, [pc, #124]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009e6a:	0c1b      	lsrs	r3, r3, #16
 8009e6c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009e70:	ee07 3a90 	vmov	s15, r3
 8009e74:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8009e7c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009e80:	edd7 6a07 	vldr	s13, [r7, #28]
 8009e84:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009e88:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009e8c:	ee17 2a90 	vmov	r2, s15
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	605a      	str	r2, [r3, #4]
 8009e94:	4b13      	ldr	r3, [pc, #76]	@ (8009ee4 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8009e98:	0e1b      	lsrs	r3, r3, #24
 8009e9a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8009e9e:	ee07 3a90 	vmov	s15, r3
 8009ea2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ea6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8009eaa:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009eae:	edd7 6a07 	vldr	s13, [r7, #28]
 8009eb2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009eb6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009eba:	ee17 2a90 	vmov	r2, s15
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	609a      	str	r2, [r3, #8]
 8009ec2:	e008      	b.n	8009ed6 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	2200      	movs	r2, #0
 8009ec8:	601a      	str	r2, [r3, #0]
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	2200      	movs	r2, #0
 8009ece:	605a      	str	r2, [r3, #4]
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	2200      	movs	r2, #0
 8009ed4:	609a      	str	r2, [r3, #8]
 8009ed6:	bf00      	nop
 8009ed8:	3724      	adds	r7, #36	@ 0x24
 8009eda:	46bd      	mov	sp, r7
 8009edc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee0:	4770      	bx	lr
 8009ee2:	bf00      	nop
 8009ee4:	58024400 	.word	0x58024400
 8009ee8:	03d09000 	.word	0x03d09000
 8009eec:	46000000 	.word	0x46000000
 8009ef0:	4c742400 	.word	0x4c742400
 8009ef4:	4a742400 	.word	0x4a742400
 8009ef8:	4bbebc20 	.word	0x4bbebc20

08009efc <HAL_RCCEx_GetPLL3ClockFreq>:
 8009efc:	b480      	push	{r7}
 8009efe:	b089      	sub	sp, #36	@ 0x24
 8009f00:	af00      	add	r7, sp, #0
 8009f02:	6078      	str	r0, [r7, #4]
 8009f04:	4ba1      	ldr	r3, [pc, #644]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f06:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009f08:	f003 0303 	and.w	r3, r3, #3
 8009f0c:	61bb      	str	r3, [r7, #24]
 8009f0e:	4b9f      	ldr	r3, [pc, #636]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009f12:	0d1b      	lsrs	r3, r3, #20
 8009f14:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8009f18:	617b      	str	r3, [r7, #20]
 8009f1a:	4b9c      	ldr	r3, [pc, #624]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f1c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009f1e:	0a1b      	lsrs	r3, r3, #8
 8009f20:	f003 0301 	and.w	r3, r3, #1
 8009f24:	613b      	str	r3, [r7, #16]
 8009f26:	4b99      	ldr	r3, [pc, #612]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8009f2a:	08db      	lsrs	r3, r3, #3
 8009f2c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009f30:	693a      	ldr	r2, [r7, #16]
 8009f32:	fb02 f303 	mul.w	r3, r2, r3
 8009f36:	ee07 3a90 	vmov	s15, r3
 8009f3a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f3e:	edc7 7a03 	vstr	s15, [r7, #12]
 8009f42:	697b      	ldr	r3, [r7, #20]
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	f000 8111 	beq.w	800a16c <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 8009f4a:	69bb      	ldr	r3, [r7, #24]
 8009f4c:	2b02      	cmp	r3, #2
 8009f4e:	f000 8083 	beq.w	800a058 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8009f52:	69bb      	ldr	r3, [r7, #24]
 8009f54:	2b02      	cmp	r3, #2
 8009f56:	f200 80a1 	bhi.w	800a09c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009f5a:	69bb      	ldr	r3, [r7, #24]
 8009f5c:	2b00      	cmp	r3, #0
 8009f5e:	d003      	beq.n	8009f68 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8009f60:	69bb      	ldr	r3, [r7, #24]
 8009f62:	2b01      	cmp	r3, #1
 8009f64:	d056      	beq.n	800a014 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8009f66:	e099      	b.n	800a09c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009f68:	4b88      	ldr	r3, [pc, #544]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f6a:	681b      	ldr	r3, [r3, #0]
 8009f6c:	f003 0320 	and.w	r3, r3, #32
 8009f70:	2b00      	cmp	r3, #0
 8009f72:	d02d      	beq.n	8009fd0 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 8009f74:	4b85      	ldr	r3, [pc, #532]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009f76:	681b      	ldr	r3, [r3, #0]
 8009f78:	08db      	lsrs	r3, r3, #3
 8009f7a:	f003 0303 	and.w	r3, r3, #3
 8009f7e:	4a84      	ldr	r2, [pc, #528]	@ (800a190 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8009f80:	fa22 f303 	lsr.w	r3, r2, r3
 8009f84:	60bb      	str	r3, [r7, #8]
 8009f86:	68bb      	ldr	r3, [r7, #8]
 8009f88:	ee07 3a90 	vmov	s15, r3
 8009f8c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f90:	697b      	ldr	r3, [r7, #20]
 8009f92:	ee07 3a90 	vmov	s15, r3
 8009f96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f9a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f9e:	4b7b      	ldr	r3, [pc, #492]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009fa0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009fa2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fa6:	ee07 3a90 	vmov	s15, r3
 8009faa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fae:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fb2:	eddf 5a78 	vldr	s11, [pc, #480]	@ 800a194 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009fb6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009fba:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009fbe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009fc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fc6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fca:	edc7 7a07 	vstr	s15, [r7, #28]
 8009fce:	e087      	b.n	800a0e0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8009fd0:	697b      	ldr	r3, [r7, #20]
 8009fd2:	ee07 3a90 	vmov	s15, r3
 8009fd6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009fda:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 800a198 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8009fde:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009fe2:	4b6a      	ldr	r3, [pc, #424]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009fe6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fea:	ee07 3a90 	vmov	s15, r3
 8009fee:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ff2:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ff6:	eddf 5a67 	vldr	s11, [pc, #412]	@ 800a194 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009ffa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ffe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a002:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a006:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a00a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a00e:	edc7 7a07 	vstr	s15, [r7, #28]
 800a012:	e065      	b.n	800a0e0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a014:	697b      	ldr	r3, [r7, #20]
 800a016:	ee07 3a90 	vmov	s15, r3
 800a01a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a01e:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800a19c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a022:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a026:	4b59      	ldr	r3, [pc, #356]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a028:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a02a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a02e:	ee07 3a90 	vmov	s15, r3
 800a032:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a036:	ed97 6a03 	vldr	s12, [r7, #12]
 800a03a:	eddf 5a56 	vldr	s11, [pc, #344]	@ 800a194 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a03e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a042:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a046:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a04a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a04e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a052:	edc7 7a07 	vstr	s15, [r7, #28]
 800a056:	e043      	b.n	800a0e0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a058:	697b      	ldr	r3, [r7, #20]
 800a05a:	ee07 3a90 	vmov	s15, r3
 800a05e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a062:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 800a1a0 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800a066:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a06a:	4b48      	ldr	r3, [pc, #288]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a06c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a06e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a072:	ee07 3a90 	vmov	s15, r3
 800a076:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a07a:	ed97 6a03 	vldr	s12, [r7, #12]
 800a07e:	eddf 5a45 	vldr	s11, [pc, #276]	@ 800a194 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a082:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a086:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a08a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a08e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a092:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a096:	edc7 7a07 	vstr	s15, [r7, #28]
 800a09a:	e021      	b.n	800a0e0 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a09c:	697b      	ldr	r3, [r7, #20]
 800a09e:	ee07 3a90 	vmov	s15, r3
 800a0a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0a6:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800a19c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a0aa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a0ae:	4b37      	ldr	r3, [pc, #220]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a0b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a0b6:	ee07 3a90 	vmov	s15, r3
 800a0ba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a0be:	ed97 6a03 	vldr	s12, [r7, #12]
 800a0c2:	eddf 5a34 	vldr	s11, [pc, #208]	@ 800a194 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a0c6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a0ca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a0ce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a0d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a0d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a0da:	edc7 7a07 	vstr	s15, [r7, #28]
 800a0de:	bf00      	nop
 800a0e0:	4b2a      	ldr	r3, [pc, #168]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a0e4:	0a5b      	lsrs	r3, r3, #9
 800a0e6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a0ea:	ee07 3a90 	vmov	s15, r3
 800a0ee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0f2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a0f6:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a0fa:	edd7 6a07 	vldr	s13, [r7, #28]
 800a0fe:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a102:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a106:	ee17 2a90 	vmov	r2, s15
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	601a      	str	r2, [r3, #0]
 800a10e:	4b1f      	ldr	r3, [pc, #124]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a110:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a112:	0c1b      	lsrs	r3, r3, #16
 800a114:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a118:	ee07 3a90 	vmov	s15, r3
 800a11c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a120:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a124:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a128:	edd7 6a07 	vldr	s13, [r7, #28]
 800a12c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a130:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a134:	ee17 2a90 	vmov	r2, s15
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	605a      	str	r2, [r3, #4]
 800a13c:	4b13      	ldr	r3, [pc, #76]	@ (800a18c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a13e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800a140:	0e1b      	lsrs	r3, r3, #24
 800a142:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a146:	ee07 3a90 	vmov	s15, r3
 800a14a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a14e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a152:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a156:	edd7 6a07 	vldr	s13, [r7, #28]
 800a15a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a15e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a162:	ee17 2a90 	vmov	r2, s15
 800a166:	687b      	ldr	r3, [r7, #4]
 800a168:	609a      	str	r2, [r3, #8]
 800a16a:	e008      	b.n	800a17e <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800a16c:	687b      	ldr	r3, [r7, #4]
 800a16e:	2200      	movs	r2, #0
 800a170:	601a      	str	r2, [r3, #0]
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	2200      	movs	r2, #0
 800a176:	605a      	str	r2, [r3, #4]
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	2200      	movs	r2, #0
 800a17c:	609a      	str	r2, [r3, #8]
 800a17e:	bf00      	nop
 800a180:	3724      	adds	r7, #36	@ 0x24
 800a182:	46bd      	mov	sp, r7
 800a184:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a188:	4770      	bx	lr
 800a18a:	bf00      	nop
 800a18c:	58024400 	.word	0x58024400
 800a190:	03d09000 	.word	0x03d09000
 800a194:	46000000 	.word	0x46000000
 800a198:	4c742400 	.word	0x4c742400
 800a19c:	4a742400 	.word	0x4a742400
 800a1a0:	4bbebc20 	.word	0x4bbebc20

0800a1a4 <HAL_RCCEx_GetPLL1ClockFreq>:
 800a1a4:	b480      	push	{r7}
 800a1a6:	b089      	sub	sp, #36	@ 0x24
 800a1a8:	af00      	add	r7, sp, #0
 800a1aa:	6078      	str	r0, [r7, #4]
 800a1ac:	4ba0      	ldr	r3, [pc, #640]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a1ae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a1b0:	f003 0303 	and.w	r3, r3, #3
 800a1b4:	61bb      	str	r3, [r7, #24]
 800a1b6:	4b9e      	ldr	r3, [pc, #632]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a1b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a1ba:	091b      	lsrs	r3, r3, #4
 800a1bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800a1c0:	617b      	str	r3, [r7, #20]
 800a1c2:	4b9b      	ldr	r3, [pc, #620]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a1c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a1c6:	f003 0301 	and.w	r3, r3, #1
 800a1ca:	613b      	str	r3, [r7, #16]
 800a1cc:	4b98      	ldr	r3, [pc, #608]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a1ce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a1d0:	08db      	lsrs	r3, r3, #3
 800a1d2:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a1d6:	693a      	ldr	r2, [r7, #16]
 800a1d8:	fb02 f303 	mul.w	r3, r2, r3
 800a1dc:	ee07 3a90 	vmov	s15, r3
 800a1e0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a1e4:	edc7 7a03 	vstr	s15, [r7, #12]
 800a1e8:	697b      	ldr	r3, [r7, #20]
 800a1ea:	2b00      	cmp	r3, #0
 800a1ec:	f000 8111 	beq.w	800a412 <HAL_RCCEx_GetPLL1ClockFreq+0x26e>
 800a1f0:	69bb      	ldr	r3, [r7, #24]
 800a1f2:	2b02      	cmp	r3, #2
 800a1f4:	f000 8083 	beq.w	800a2fe <HAL_RCCEx_GetPLL1ClockFreq+0x15a>
 800a1f8:	69bb      	ldr	r3, [r7, #24]
 800a1fa:	2b02      	cmp	r3, #2
 800a1fc:	f200 80a1 	bhi.w	800a342 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800a200:	69bb      	ldr	r3, [r7, #24]
 800a202:	2b00      	cmp	r3, #0
 800a204:	d003      	beq.n	800a20e <HAL_RCCEx_GetPLL1ClockFreq+0x6a>
 800a206:	69bb      	ldr	r3, [r7, #24]
 800a208:	2b01      	cmp	r3, #1
 800a20a:	d056      	beq.n	800a2ba <HAL_RCCEx_GetPLL1ClockFreq+0x116>
 800a20c:	e099      	b.n	800a342 <HAL_RCCEx_GetPLL1ClockFreq+0x19e>
 800a20e:	4b88      	ldr	r3, [pc, #544]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	f003 0320 	and.w	r3, r3, #32
 800a216:	2b00      	cmp	r3, #0
 800a218:	d02d      	beq.n	800a276 <HAL_RCCEx_GetPLL1ClockFreq+0xd2>
 800a21a:	4b85      	ldr	r3, [pc, #532]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	08db      	lsrs	r3, r3, #3
 800a220:	f003 0303 	and.w	r3, r3, #3
 800a224:	4a83      	ldr	r2, [pc, #524]	@ (800a434 <HAL_RCCEx_GetPLL1ClockFreq+0x290>)
 800a226:	fa22 f303 	lsr.w	r3, r2, r3
 800a22a:	60bb      	str	r3, [r7, #8]
 800a22c:	68bb      	ldr	r3, [r7, #8]
 800a22e:	ee07 3a90 	vmov	s15, r3
 800a232:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a236:	697b      	ldr	r3, [r7, #20]
 800a238:	ee07 3a90 	vmov	s15, r3
 800a23c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a240:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a244:	4b7a      	ldr	r3, [pc, #488]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a246:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a248:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a24c:	ee07 3a90 	vmov	s15, r3
 800a250:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a254:	ed97 6a03 	vldr	s12, [r7, #12]
 800a258:	eddf 5a77 	vldr	s11, [pc, #476]	@ 800a438 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a25c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a260:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a264:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a268:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a26c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a270:	edc7 7a07 	vstr	s15, [r7, #28]
 800a274:	e087      	b.n	800a386 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800a276:	697b      	ldr	r3, [r7, #20]
 800a278:	ee07 3a90 	vmov	s15, r3
 800a27c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a280:	eddf 6a6e 	vldr	s13, [pc, #440]	@ 800a43c <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a284:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a288:	4b69      	ldr	r3, [pc, #420]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a28a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a28c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a290:	ee07 3a90 	vmov	s15, r3
 800a294:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a298:	ed97 6a03 	vldr	s12, [r7, #12]
 800a29c:	eddf 5a66 	vldr	s11, [pc, #408]	@ 800a438 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a2a0:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a2a4:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a2a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a2ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a2b4:	edc7 7a07 	vstr	s15, [r7, #28]
 800a2b8:	e065      	b.n	800a386 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800a2ba:	697b      	ldr	r3, [r7, #20]
 800a2bc:	ee07 3a90 	vmov	s15, r3
 800a2c0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2c4:	eddf 6a5e 	vldr	s13, [pc, #376]	@ 800a440 <HAL_RCCEx_GetPLL1ClockFreq+0x29c>
 800a2c8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a2cc:	4b58      	ldr	r3, [pc, #352]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a2ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a2d0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a2d4:	ee07 3a90 	vmov	s15, r3
 800a2d8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a2dc:	ed97 6a03 	vldr	s12, [r7, #12]
 800a2e0:	eddf 5a55 	vldr	s11, [pc, #340]	@ 800a438 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a2e4:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a2e8:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a2ec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a2f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2f4:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a2f8:	edc7 7a07 	vstr	s15, [r7, #28]
 800a2fc:	e043      	b.n	800a386 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800a2fe:	697b      	ldr	r3, [r7, #20]
 800a300:	ee07 3a90 	vmov	s15, r3
 800a304:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a308:	eddf 6a4e 	vldr	s13, [pc, #312]	@ 800a444 <HAL_RCCEx_GetPLL1ClockFreq+0x2a0>
 800a30c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a310:	4b47      	ldr	r3, [pc, #284]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a314:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a318:	ee07 3a90 	vmov	s15, r3
 800a31c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a320:	ed97 6a03 	vldr	s12, [r7, #12]
 800a324:	eddf 5a44 	vldr	s11, [pc, #272]	@ 800a438 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a328:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a32c:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a330:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a334:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a338:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a33c:	edc7 7a07 	vstr	s15, [r7, #28]
 800a340:	e021      	b.n	800a386 <HAL_RCCEx_GetPLL1ClockFreq+0x1e2>
 800a342:	697b      	ldr	r3, [r7, #20]
 800a344:	ee07 3a90 	vmov	s15, r3
 800a348:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a34c:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 800a43c <HAL_RCCEx_GetPLL1ClockFreq+0x298>
 800a350:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a354:	4b36      	ldr	r3, [pc, #216]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a356:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a358:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a35c:	ee07 3a90 	vmov	s15, r3
 800a360:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a364:	ed97 6a03 	vldr	s12, [r7, #12]
 800a368:	eddf 5a33 	vldr	s11, [pc, #204]	@ 800a438 <HAL_RCCEx_GetPLL1ClockFreq+0x294>
 800a36c:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a370:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a374:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800a378:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a37c:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a380:	edc7 7a07 	vstr	s15, [r7, #28]
 800a384:	bf00      	nop
 800a386:	4b2a      	ldr	r3, [pc, #168]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a388:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a38a:	0a5b      	lsrs	r3, r3, #9
 800a38c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a390:	ee07 3a90 	vmov	s15, r3
 800a394:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a398:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a39c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a3a0:	edd7 6a07 	vldr	s13, [r7, #28]
 800a3a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a3a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a3ac:	ee17 2a90 	vmov	r2, s15
 800a3b0:	687b      	ldr	r3, [r7, #4]
 800a3b2:	601a      	str	r2, [r3, #0]
 800a3b4:	4b1e      	ldr	r3, [pc, #120]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a3b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3b8:	0c1b      	lsrs	r3, r3, #16
 800a3ba:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a3be:	ee07 3a90 	vmov	s15, r3
 800a3c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a3c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a3ca:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a3ce:	edd7 6a07 	vldr	s13, [r7, #28]
 800a3d2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a3d6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a3da:	ee17 2a90 	vmov	r2, s15
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	605a      	str	r2, [r3, #4]
 800a3e2:	4b13      	ldr	r3, [pc, #76]	@ (800a430 <HAL_RCCEx_GetPLL1ClockFreq+0x28c>)
 800a3e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a3e6:	0e1b      	lsrs	r3, r3, #24
 800a3e8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800a3ec:	ee07 3a90 	vmov	s15, r3
 800a3f0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a3f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800a3f8:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a3fc:	edd7 6a07 	vldr	s13, [r7, #28]
 800a400:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a404:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a408:	ee17 2a90 	vmov	r2, s15
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	609a      	str	r2, [r3, #8]
 800a410:	e008      	b.n	800a424 <HAL_RCCEx_GetPLL1ClockFreq+0x280>
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	2200      	movs	r2, #0
 800a416:	601a      	str	r2, [r3, #0]
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	2200      	movs	r2, #0
 800a41c:	605a      	str	r2, [r3, #4]
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	2200      	movs	r2, #0
 800a422:	609a      	str	r2, [r3, #8]
 800a424:	bf00      	nop
 800a426:	3724      	adds	r7, #36	@ 0x24
 800a428:	46bd      	mov	sp, r7
 800a42a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a42e:	4770      	bx	lr
 800a430:	58024400 	.word	0x58024400
 800a434:	03d09000 	.word	0x03d09000
 800a438:	46000000 	.word	0x46000000
 800a43c:	4c742400 	.word	0x4c742400
 800a440:	4a742400 	.word	0x4a742400
 800a444:	4bbebc20 	.word	0x4bbebc20

0800a448 <RCCEx_PLL2_Config>:
 800a448:	b580      	push	{r7, lr}
 800a44a:	b084      	sub	sp, #16
 800a44c:	af00      	add	r7, sp, #0
 800a44e:	6078      	str	r0, [r7, #4]
 800a450:	6039      	str	r1, [r7, #0]
 800a452:	2300      	movs	r3, #0
 800a454:	73fb      	strb	r3, [r7, #15]
 800a456:	4b53      	ldr	r3, [pc, #332]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a458:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a45a:	f003 0303 	and.w	r3, r3, #3
 800a45e:	2b03      	cmp	r3, #3
 800a460:	d101      	bne.n	800a466 <RCCEx_PLL2_Config+0x1e>
 800a462:	2301      	movs	r3, #1
 800a464:	e099      	b.n	800a59a <RCCEx_PLL2_Config+0x152>
 800a466:	4b4f      	ldr	r3, [pc, #316]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a468:	681b      	ldr	r3, [r3, #0]
 800a46a:	4a4e      	ldr	r2, [pc, #312]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a46c:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800a470:	6013      	str	r3, [r2, #0]
 800a472:	f7f9 f93f 	bl	80036f4 <HAL_GetTick>
 800a476:	60b8      	str	r0, [r7, #8]
 800a478:	e008      	b.n	800a48c <RCCEx_PLL2_Config+0x44>
 800a47a:	f7f9 f93b 	bl	80036f4 <HAL_GetTick>
 800a47e:	4602      	mov	r2, r0
 800a480:	68bb      	ldr	r3, [r7, #8]
 800a482:	1ad3      	subs	r3, r2, r3
 800a484:	2b02      	cmp	r3, #2
 800a486:	d901      	bls.n	800a48c <RCCEx_PLL2_Config+0x44>
 800a488:	2303      	movs	r3, #3
 800a48a:	e086      	b.n	800a59a <RCCEx_PLL2_Config+0x152>
 800a48c:	4b45      	ldr	r3, [pc, #276]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a48e:	681b      	ldr	r3, [r3, #0]
 800a490:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800a494:	2b00      	cmp	r3, #0
 800a496:	d1f0      	bne.n	800a47a <RCCEx_PLL2_Config+0x32>
 800a498:	4b42      	ldr	r3, [pc, #264]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a49a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a49c:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	031b      	lsls	r3, r3, #12
 800a4a6:	493f      	ldr	r1, [pc, #252]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a4a8:	4313      	orrs	r3, r2
 800a4aa:	628b      	str	r3, [r1, #40]	@ 0x28
 800a4ac:	687b      	ldr	r3, [r7, #4]
 800a4ae:	685b      	ldr	r3, [r3, #4]
 800a4b0:	3b01      	subs	r3, #1
 800a4b2:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	689b      	ldr	r3, [r3, #8]
 800a4ba:	3b01      	subs	r3, #1
 800a4bc:	025b      	lsls	r3, r3, #9
 800a4be:	b29b      	uxth	r3, r3
 800a4c0:	431a      	orrs	r2, r3
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	68db      	ldr	r3, [r3, #12]
 800a4c6:	3b01      	subs	r3, #1
 800a4c8:	041b      	lsls	r3, r3, #16
 800a4ca:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800a4ce:	431a      	orrs	r2, r3
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	691b      	ldr	r3, [r3, #16]
 800a4d4:	3b01      	subs	r3, #1
 800a4d6:	061b      	lsls	r3, r3, #24
 800a4d8:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800a4dc:	4931      	ldr	r1, [pc, #196]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a4de:	4313      	orrs	r3, r2
 800a4e0:	638b      	str	r3, [r1, #56]	@ 0x38
 800a4e2:	4b30      	ldr	r3, [pc, #192]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a4e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a4e6:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	695b      	ldr	r3, [r3, #20]
 800a4ee:	492d      	ldr	r1, [pc, #180]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a4f0:	4313      	orrs	r3, r2
 800a4f2:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800a4f4:	4b2b      	ldr	r3, [pc, #172]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a4f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a4f8:	f023 0220 	bic.w	r2, r3, #32
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	699b      	ldr	r3, [r3, #24]
 800a500:	4928      	ldr	r1, [pc, #160]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a502:	4313      	orrs	r3, r2
 800a504:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800a506:	4b27      	ldr	r3, [pc, #156]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a508:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a50a:	4a26      	ldr	r2, [pc, #152]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a50c:	f023 0310 	bic.w	r3, r3, #16
 800a510:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a512:	4b24      	ldr	r3, [pc, #144]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a514:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800a516:	4b24      	ldr	r3, [pc, #144]	@ (800a5a8 <RCCEx_PLL2_Config+0x160>)
 800a518:	4013      	ands	r3, r2
 800a51a:	687a      	ldr	r2, [r7, #4]
 800a51c:	69d2      	ldr	r2, [r2, #28]
 800a51e:	00d2      	lsls	r2, r2, #3
 800a520:	4920      	ldr	r1, [pc, #128]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a522:	4313      	orrs	r3, r2
 800a524:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800a526:	4b1f      	ldr	r3, [pc, #124]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a528:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a52a:	4a1e      	ldr	r2, [pc, #120]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a52c:	f043 0310 	orr.w	r3, r3, #16
 800a530:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a532:	683b      	ldr	r3, [r7, #0]
 800a534:	2b00      	cmp	r3, #0
 800a536:	d106      	bne.n	800a546 <RCCEx_PLL2_Config+0xfe>
 800a538:	4b1a      	ldr	r3, [pc, #104]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a53a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a53c:	4a19      	ldr	r2, [pc, #100]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a53e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800a542:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a544:	e00f      	b.n	800a566 <RCCEx_PLL2_Config+0x11e>
 800a546:	683b      	ldr	r3, [r7, #0]
 800a548:	2b01      	cmp	r3, #1
 800a54a:	d106      	bne.n	800a55a <RCCEx_PLL2_Config+0x112>
 800a54c:	4b15      	ldr	r3, [pc, #84]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a54e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a550:	4a14      	ldr	r2, [pc, #80]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a552:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800a556:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a558:	e005      	b.n	800a566 <RCCEx_PLL2_Config+0x11e>
 800a55a:	4b12      	ldr	r3, [pc, #72]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a55c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a55e:	4a11      	ldr	r2, [pc, #68]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a560:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800a564:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a566:	4b0f      	ldr	r3, [pc, #60]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a568:	681b      	ldr	r3, [r3, #0]
 800a56a:	4a0e      	ldr	r2, [pc, #56]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a56c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800a570:	6013      	str	r3, [r2, #0]
 800a572:	f7f9 f8bf 	bl	80036f4 <HAL_GetTick>
 800a576:	60b8      	str	r0, [r7, #8]
 800a578:	e008      	b.n	800a58c <RCCEx_PLL2_Config+0x144>
 800a57a:	f7f9 f8bb 	bl	80036f4 <HAL_GetTick>
 800a57e:	4602      	mov	r2, r0
 800a580:	68bb      	ldr	r3, [r7, #8]
 800a582:	1ad3      	subs	r3, r2, r3
 800a584:	2b02      	cmp	r3, #2
 800a586:	d901      	bls.n	800a58c <RCCEx_PLL2_Config+0x144>
 800a588:	2303      	movs	r3, #3
 800a58a:	e006      	b.n	800a59a <RCCEx_PLL2_Config+0x152>
 800a58c:	4b05      	ldr	r3, [pc, #20]	@ (800a5a4 <RCCEx_PLL2_Config+0x15c>)
 800a58e:	681b      	ldr	r3, [r3, #0]
 800a590:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800a594:	2b00      	cmp	r3, #0
 800a596:	d0f0      	beq.n	800a57a <RCCEx_PLL2_Config+0x132>
 800a598:	7bfb      	ldrb	r3, [r7, #15]
 800a59a:	4618      	mov	r0, r3
 800a59c:	3710      	adds	r7, #16
 800a59e:	46bd      	mov	sp, r7
 800a5a0:	bd80      	pop	{r7, pc}
 800a5a2:	bf00      	nop
 800a5a4:	58024400 	.word	0x58024400
 800a5a8:	ffff0007 	.word	0xffff0007

0800a5ac <RCCEx_PLL3_Config>:
 800a5ac:	b580      	push	{r7, lr}
 800a5ae:	b084      	sub	sp, #16
 800a5b0:	af00      	add	r7, sp, #0
 800a5b2:	6078      	str	r0, [r7, #4]
 800a5b4:	6039      	str	r1, [r7, #0]
 800a5b6:	2300      	movs	r3, #0
 800a5b8:	73fb      	strb	r3, [r7, #15]
 800a5ba:	4b53      	ldr	r3, [pc, #332]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a5bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a5be:	f003 0303 	and.w	r3, r3, #3
 800a5c2:	2b03      	cmp	r3, #3
 800a5c4:	d101      	bne.n	800a5ca <RCCEx_PLL3_Config+0x1e>
 800a5c6:	2301      	movs	r3, #1
 800a5c8:	e099      	b.n	800a6fe <RCCEx_PLL3_Config+0x152>
 800a5ca:	4b4f      	ldr	r3, [pc, #316]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a5cc:	681b      	ldr	r3, [r3, #0]
 800a5ce:	4a4e      	ldr	r2, [pc, #312]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a5d0:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a5d4:	6013      	str	r3, [r2, #0]
 800a5d6:	f7f9 f88d 	bl	80036f4 <HAL_GetTick>
 800a5da:	60b8      	str	r0, [r7, #8]
 800a5dc:	e008      	b.n	800a5f0 <RCCEx_PLL3_Config+0x44>
 800a5de:	f7f9 f889 	bl	80036f4 <HAL_GetTick>
 800a5e2:	4602      	mov	r2, r0
 800a5e4:	68bb      	ldr	r3, [r7, #8]
 800a5e6:	1ad3      	subs	r3, r2, r3
 800a5e8:	2b02      	cmp	r3, #2
 800a5ea:	d901      	bls.n	800a5f0 <RCCEx_PLL3_Config+0x44>
 800a5ec:	2303      	movs	r3, #3
 800a5ee:	e086      	b.n	800a6fe <RCCEx_PLL3_Config+0x152>
 800a5f0:	4b45      	ldr	r3, [pc, #276]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800a5f8:	2b00      	cmp	r3, #0
 800a5fa:	d1f0      	bne.n	800a5de <RCCEx_PLL3_Config+0x32>
 800a5fc:	4b42      	ldr	r3, [pc, #264]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a5fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a600:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 800a604:	687b      	ldr	r3, [r7, #4]
 800a606:	681b      	ldr	r3, [r3, #0]
 800a608:	051b      	lsls	r3, r3, #20
 800a60a:	493f      	ldr	r1, [pc, #252]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a60c:	4313      	orrs	r3, r2
 800a60e:	628b      	str	r3, [r1, #40]	@ 0x28
 800a610:	687b      	ldr	r3, [r7, #4]
 800a612:	685b      	ldr	r3, [r3, #4]
 800a614:	3b01      	subs	r3, #1
 800a616:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	689b      	ldr	r3, [r3, #8]
 800a61e:	3b01      	subs	r3, #1
 800a620:	025b      	lsls	r3, r3, #9
 800a622:	b29b      	uxth	r3, r3
 800a624:	431a      	orrs	r2, r3
 800a626:	687b      	ldr	r3, [r7, #4]
 800a628:	68db      	ldr	r3, [r3, #12]
 800a62a:	3b01      	subs	r3, #1
 800a62c:	041b      	lsls	r3, r3, #16
 800a62e:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800a632:	431a      	orrs	r2, r3
 800a634:	687b      	ldr	r3, [r7, #4]
 800a636:	691b      	ldr	r3, [r3, #16]
 800a638:	3b01      	subs	r3, #1
 800a63a:	061b      	lsls	r3, r3, #24
 800a63c:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800a640:	4931      	ldr	r1, [pc, #196]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a642:	4313      	orrs	r3, r2
 800a644:	640b      	str	r3, [r1, #64]	@ 0x40
 800a646:	4b30      	ldr	r3, [pc, #192]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a648:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a64a:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	695b      	ldr	r3, [r3, #20]
 800a652:	492d      	ldr	r1, [pc, #180]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a654:	4313      	orrs	r3, r2
 800a656:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800a658:	4b2b      	ldr	r3, [pc, #172]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a65a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a65c:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 800a660:	687b      	ldr	r3, [r7, #4]
 800a662:	699b      	ldr	r3, [r3, #24]
 800a664:	4928      	ldr	r1, [pc, #160]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a666:	4313      	orrs	r3, r2
 800a668:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800a66a:	4b27      	ldr	r3, [pc, #156]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a66c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a66e:	4a26      	ldr	r2, [pc, #152]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a670:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a674:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a676:	4b24      	ldr	r3, [pc, #144]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a678:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a67a:	4b24      	ldr	r3, [pc, #144]	@ (800a70c <RCCEx_PLL3_Config+0x160>)
 800a67c:	4013      	ands	r3, r2
 800a67e:	687a      	ldr	r2, [r7, #4]
 800a680:	69d2      	ldr	r2, [r2, #28]
 800a682:	00d2      	lsls	r2, r2, #3
 800a684:	4920      	ldr	r1, [pc, #128]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a686:	4313      	orrs	r3, r2
 800a688:	644b      	str	r3, [r1, #68]	@ 0x44
 800a68a:	4b1f      	ldr	r3, [pc, #124]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a68c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a68e:	4a1e      	ldr	r2, [pc, #120]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a690:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800a694:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a696:	683b      	ldr	r3, [r7, #0]
 800a698:	2b00      	cmp	r3, #0
 800a69a:	d106      	bne.n	800a6aa <RCCEx_PLL3_Config+0xfe>
 800a69c:	4b1a      	ldr	r3, [pc, #104]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a69e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6a0:	4a19      	ldr	r2, [pc, #100]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6a2:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800a6a6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a6a8:	e00f      	b.n	800a6ca <RCCEx_PLL3_Config+0x11e>
 800a6aa:	683b      	ldr	r3, [r7, #0]
 800a6ac:	2b01      	cmp	r3, #1
 800a6ae:	d106      	bne.n	800a6be <RCCEx_PLL3_Config+0x112>
 800a6b0:	4b15      	ldr	r3, [pc, #84]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6b4:	4a14      	ldr	r2, [pc, #80]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6b6:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800a6ba:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a6bc:	e005      	b.n	800a6ca <RCCEx_PLL3_Config+0x11e>
 800a6be:	4b12      	ldr	r3, [pc, #72]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a6c2:	4a11      	ldr	r2, [pc, #68]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6c4:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800a6c8:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800a6ca:	4b0f      	ldr	r3, [pc, #60]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6cc:	681b      	ldr	r3, [r3, #0]
 800a6ce:	4a0e      	ldr	r2, [pc, #56]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800a6d4:	6013      	str	r3, [r2, #0]
 800a6d6:	f7f9 f80d 	bl	80036f4 <HAL_GetTick>
 800a6da:	60b8      	str	r0, [r7, #8]
 800a6dc:	e008      	b.n	800a6f0 <RCCEx_PLL3_Config+0x144>
 800a6de:	f7f9 f809 	bl	80036f4 <HAL_GetTick>
 800a6e2:	4602      	mov	r2, r0
 800a6e4:	68bb      	ldr	r3, [r7, #8]
 800a6e6:	1ad3      	subs	r3, r2, r3
 800a6e8:	2b02      	cmp	r3, #2
 800a6ea:	d901      	bls.n	800a6f0 <RCCEx_PLL3_Config+0x144>
 800a6ec:	2303      	movs	r3, #3
 800a6ee:	e006      	b.n	800a6fe <RCCEx_PLL3_Config+0x152>
 800a6f0:	4b05      	ldr	r3, [pc, #20]	@ (800a708 <RCCEx_PLL3_Config+0x15c>)
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 800a6f8:	2b00      	cmp	r3, #0
 800a6fa:	d0f0      	beq.n	800a6de <RCCEx_PLL3_Config+0x132>
 800a6fc:	7bfb      	ldrb	r3, [r7, #15]
 800a6fe:	4618      	mov	r0, r3
 800a700:	3710      	adds	r7, #16
 800a702:	46bd      	mov	sp, r7
 800a704:	bd80      	pop	{r7, pc}
 800a706:	bf00      	nop
 800a708:	58024400 	.word	0x58024400
 800a70c:	ffff0007 	.word	0xffff0007

0800a710 <HAL_SPI_Init>:
 800a710:	b580      	push	{r7, lr}
 800a712:	b084      	sub	sp, #16
 800a714:	af00      	add	r7, sp, #0
 800a716:	6078      	str	r0, [r7, #4]
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	2b00      	cmp	r3, #0
 800a71c:	d101      	bne.n	800a722 <HAL_SPI_Init+0x12>
 800a71e:	2301      	movs	r3, #1
 800a720:	e10f      	b.n	800a942 <HAL_SPI_Init+0x232>
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	2200      	movs	r2, #0
 800a726:	629a      	str	r2, [r3, #40]	@ 0x28
 800a728:	687b      	ldr	r3, [r7, #4]
 800a72a:	681b      	ldr	r3, [r3, #0]
 800a72c:	4a87      	ldr	r2, [pc, #540]	@ (800a94c <HAL_SPI_Init+0x23c>)
 800a72e:	4293      	cmp	r3, r2
 800a730:	d00f      	beq.n	800a752 <HAL_SPI_Init+0x42>
 800a732:	687b      	ldr	r3, [r7, #4]
 800a734:	681b      	ldr	r3, [r3, #0]
 800a736:	4a86      	ldr	r2, [pc, #536]	@ (800a950 <HAL_SPI_Init+0x240>)
 800a738:	4293      	cmp	r3, r2
 800a73a:	d00a      	beq.n	800a752 <HAL_SPI_Init+0x42>
 800a73c:	687b      	ldr	r3, [r7, #4]
 800a73e:	681b      	ldr	r3, [r3, #0]
 800a740:	4a84      	ldr	r2, [pc, #528]	@ (800a954 <HAL_SPI_Init+0x244>)
 800a742:	4293      	cmp	r3, r2
 800a744:	d005      	beq.n	800a752 <HAL_SPI_Init+0x42>
 800a746:	687b      	ldr	r3, [r7, #4]
 800a748:	68db      	ldr	r3, [r3, #12]
 800a74a:	2b0f      	cmp	r3, #15
 800a74c:	d901      	bls.n	800a752 <HAL_SPI_Init+0x42>
 800a74e:	2301      	movs	r3, #1
 800a750:	e0f7      	b.n	800a942 <HAL_SPI_Init+0x232>
 800a752:	6878      	ldr	r0, [r7, #4]
 800a754:	f000 fe2e 	bl	800b3b4 <SPI_GetPacketSize>
 800a758:	60f8      	str	r0, [r7, #12]
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	681b      	ldr	r3, [r3, #0]
 800a75e:	4a7b      	ldr	r2, [pc, #492]	@ (800a94c <HAL_SPI_Init+0x23c>)
 800a760:	4293      	cmp	r3, r2
 800a762:	d00c      	beq.n	800a77e <HAL_SPI_Init+0x6e>
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	681b      	ldr	r3, [r3, #0]
 800a768:	4a79      	ldr	r2, [pc, #484]	@ (800a950 <HAL_SPI_Init+0x240>)
 800a76a:	4293      	cmp	r3, r2
 800a76c:	d007      	beq.n	800a77e <HAL_SPI_Init+0x6e>
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	681b      	ldr	r3, [r3, #0]
 800a772:	4a78      	ldr	r2, [pc, #480]	@ (800a954 <HAL_SPI_Init+0x244>)
 800a774:	4293      	cmp	r3, r2
 800a776:	d002      	beq.n	800a77e <HAL_SPI_Init+0x6e>
 800a778:	68fb      	ldr	r3, [r7, #12]
 800a77a:	2b08      	cmp	r3, #8
 800a77c:	d811      	bhi.n	800a7a2 <HAL_SPI_Init+0x92>
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	4a72      	ldr	r2, [pc, #456]	@ (800a94c <HAL_SPI_Init+0x23c>)
 800a784:	4293      	cmp	r3, r2
 800a786:	d009      	beq.n	800a79c <HAL_SPI_Init+0x8c>
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	681b      	ldr	r3, [r3, #0]
 800a78c:	4a70      	ldr	r2, [pc, #448]	@ (800a950 <HAL_SPI_Init+0x240>)
 800a78e:	4293      	cmp	r3, r2
 800a790:	d004      	beq.n	800a79c <HAL_SPI_Init+0x8c>
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	681b      	ldr	r3, [r3, #0]
 800a796:	4a6f      	ldr	r2, [pc, #444]	@ (800a954 <HAL_SPI_Init+0x244>)
 800a798:	4293      	cmp	r3, r2
 800a79a:	d104      	bne.n	800a7a6 <HAL_SPI_Init+0x96>
 800a79c:	68fb      	ldr	r3, [r7, #12]
 800a79e:	2b10      	cmp	r3, #16
 800a7a0:	d901      	bls.n	800a7a6 <HAL_SPI_Init+0x96>
 800a7a2:	2301      	movs	r3, #1
 800a7a4:	e0cd      	b.n	800a942 <HAL_SPI_Init+0x232>
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800a7ac:	b2db      	uxtb	r3, r3
 800a7ae:	2b00      	cmp	r3, #0
 800a7b0:	d106      	bne.n	800a7c0 <HAL_SPI_Init+0xb0>
 800a7b2:	687b      	ldr	r3, [r7, #4]
 800a7b4:	2200      	movs	r2, #0
 800a7b6:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800a7ba:	6878      	ldr	r0, [r7, #4]
 800a7bc:	f7f7 f88a 	bl	80018d4 <HAL_SPI_MspInit>
 800a7c0:	687b      	ldr	r3, [r7, #4]
 800a7c2:	2202      	movs	r2, #2
 800a7c4:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800a7c8:	687b      	ldr	r3, [r7, #4]
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	681a      	ldr	r2, [r3, #0]
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	681b      	ldr	r3, [r3, #0]
 800a7d2:	f022 0201 	bic.w	r2, r2, #1
 800a7d6:	601a      	str	r2, [r3, #0]
 800a7d8:	687b      	ldr	r3, [r7, #4]
 800a7da:	681b      	ldr	r3, [r3, #0]
 800a7dc:	689b      	ldr	r3, [r3, #8]
 800a7de:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 800a7e2:	60bb      	str	r3, [r7, #8]
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	699b      	ldr	r3, [r3, #24]
 800a7e8:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800a7ec:	d119      	bne.n	800a822 <HAL_SPI_Init+0x112>
 800a7ee:	687b      	ldr	r3, [r7, #4]
 800a7f0:	685b      	ldr	r3, [r3, #4]
 800a7f2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800a7f6:	d103      	bne.n	800a800 <HAL_SPI_Init+0xf0>
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a7fc:	2b00      	cmp	r3, #0
 800a7fe:	d008      	beq.n	800a812 <HAL_SPI_Init+0x102>
 800a800:	687b      	ldr	r3, [r7, #4]
 800a802:	685b      	ldr	r3, [r3, #4]
 800a804:	2b00      	cmp	r3, #0
 800a806:	d10c      	bne.n	800a822 <HAL_SPI_Init+0x112>
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a80c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800a810:	d107      	bne.n	800a822 <HAL_SPI_Init+0x112>
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	681b      	ldr	r3, [r3, #0]
 800a816:	681a      	ldr	r2, [r3, #0]
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	681b      	ldr	r3, [r3, #0]
 800a81c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800a820:	601a      	str	r2, [r3, #0]
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	685b      	ldr	r3, [r3, #4]
 800a826:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800a82a:	2b00      	cmp	r3, #0
 800a82c:	d00f      	beq.n	800a84e <HAL_SPI_Init+0x13e>
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	68db      	ldr	r3, [r3, #12]
 800a832:	2b06      	cmp	r3, #6
 800a834:	d90b      	bls.n	800a84e <HAL_SPI_Init+0x13e>
 800a836:	687b      	ldr	r3, [r7, #4]
 800a838:	681b      	ldr	r3, [r3, #0]
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	430a      	orrs	r2, r1
 800a84a:	601a      	str	r2, [r3, #0]
 800a84c:	e007      	b.n	800a85e <HAL_SPI_Init+0x14e>
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	681b      	ldr	r3, [r3, #0]
 800a852:	681a      	ldr	r2, [r3, #0]
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	681b      	ldr	r3, [r3, #0]
 800a858:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800a85c:	601a      	str	r2, [r3, #0]
 800a85e:	687b      	ldr	r3, [r7, #4]
 800a860:	69da      	ldr	r2, [r3, #28]
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a866:	431a      	orrs	r2, r3
 800a868:	68bb      	ldr	r3, [r7, #8]
 800a86a:	431a      	orrs	r2, r3
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800a870:	ea42 0103 	orr.w	r1, r2, r3
 800a874:	687b      	ldr	r3, [r7, #4]
 800a876:	68da      	ldr	r2, [r3, #12]
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	430a      	orrs	r2, r1
 800a87e:	609a      	str	r2, [r3, #8]
 800a880:	687b      	ldr	r3, [r7, #4]
 800a882:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a888:	431a      	orrs	r2, r3
 800a88a:	687b      	ldr	r3, [r7, #4]
 800a88c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a88e:	431a      	orrs	r2, r3
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	699b      	ldr	r3, [r3, #24]
 800a894:	431a      	orrs	r2, r3
 800a896:	687b      	ldr	r3, [r7, #4]
 800a898:	691b      	ldr	r3, [r3, #16]
 800a89a:	431a      	orrs	r2, r3
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	695b      	ldr	r3, [r3, #20]
 800a8a0:	431a      	orrs	r2, r3
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	6a1b      	ldr	r3, [r3, #32]
 800a8a6:	431a      	orrs	r2, r3
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	685b      	ldr	r3, [r3, #4]
 800a8ac:	431a      	orrs	r2, r3
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a8b2:	431a      	orrs	r2, r3
 800a8b4:	687b      	ldr	r3, [r7, #4]
 800a8b6:	689b      	ldr	r3, [r3, #8]
 800a8b8:	431a      	orrs	r2, r3
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800a8be:	ea42 0103 	orr.w	r1, r2, r3
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	681b      	ldr	r3, [r3, #0]
 800a8ca:	430a      	orrs	r2, r1
 800a8cc:	60da      	str	r2, [r3, #12]
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	685b      	ldr	r3, [r3, #4]
 800a8d2:	2b00      	cmp	r3, #0
 800a8d4:	d113      	bne.n	800a8fe <HAL_SPI_Init+0x1ee>
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	681b      	ldr	r3, [r3, #0]
 800a8da:	689b      	ldr	r3, [r3, #8]
 800a8dc:	f423 52c0 	bic.w	r2, r3, #6144	@ 0x1800
 800a8e0:	687b      	ldr	r3, [r7, #4]
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800a8e8:	609a      	str	r2, [r3, #8]
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	681b      	ldr	r3, [r3, #0]
 800a8ee:	689b      	ldr	r3, [r3, #8]
 800a8f0:	f423 62c0 	bic.w	r2, r3, #1536	@ 0x600
 800a8f4:	687b      	ldr	r3, [r7, #4]
 800a8f6:	681b      	ldr	r3, [r3, #0]
 800a8f8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800a8fc:	609a      	str	r2, [r3, #8]
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	681b      	ldr	r3, [r3, #0]
 800a902:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	681b      	ldr	r3, [r3, #0]
 800a908:	f022 0201 	bic.w	r2, r2, #1
 800a90c:	651a      	str	r2, [r3, #80]	@ 0x50
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	685b      	ldr	r3, [r3, #4]
 800a912:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800a916:	2b00      	cmp	r3, #0
 800a918:	d00a      	beq.n	800a930 <HAL_SPI_Init+0x220>
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	681b      	ldr	r3, [r3, #0]
 800a91e:	68db      	ldr	r3, [r3, #12]
 800a920:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	681b      	ldr	r3, [r3, #0]
 800a92c:	430a      	orrs	r2, r1
 800a92e:	60da      	str	r2, [r3, #12]
 800a930:	687b      	ldr	r3, [r7, #4]
 800a932:	2200      	movs	r2, #0
 800a934:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	2201      	movs	r2, #1
 800a93c:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800a940:	2300      	movs	r3, #0
 800a942:	4618      	mov	r0, r3
 800a944:	3710      	adds	r7, #16
 800a946:	46bd      	mov	sp, r7
 800a948:	bd80      	pop	{r7, pc}
 800a94a:	bf00      	nop
 800a94c:	40013000 	.word	0x40013000
 800a950:	40003800 	.word	0x40003800
 800a954:	40003c00 	.word	0x40003c00

0800a958 <HAL_SPI_Transmit>:
 800a958:	b580      	push	{r7, lr}
 800a95a:	b088      	sub	sp, #32
 800a95c:	af02      	add	r7, sp, #8
 800a95e:	60f8      	str	r0, [r7, #12]
 800a960:	60b9      	str	r1, [r7, #8]
 800a962:	603b      	str	r3, [r7, #0]
 800a964:	4613      	mov	r3, r2
 800a966:	80fb      	strh	r3, [r7, #6]
 800a968:	68fb      	ldr	r3, [r7, #12]
 800a96a:	681b      	ldr	r3, [r3, #0]
 800a96c:	3320      	adds	r3, #32
 800a96e:	617b      	str	r3, [r7, #20]
 800a970:	f7f8 fec0 	bl	80036f4 <HAL_GetTick>
 800a974:	6138      	str	r0, [r7, #16]
 800a976:	68fb      	ldr	r3, [r7, #12]
 800a978:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800a97c:	b2db      	uxtb	r3, r3
 800a97e:	2b01      	cmp	r3, #1
 800a980:	d001      	beq.n	800a986 <HAL_SPI_Transmit+0x2e>
 800a982:	2302      	movs	r3, #2
 800a984:	e1d1      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800a986:	68bb      	ldr	r3, [r7, #8]
 800a988:	2b00      	cmp	r3, #0
 800a98a:	d002      	beq.n	800a992 <HAL_SPI_Transmit+0x3a>
 800a98c:	88fb      	ldrh	r3, [r7, #6]
 800a98e:	2b00      	cmp	r3, #0
 800a990:	d101      	bne.n	800a996 <HAL_SPI_Transmit+0x3e>
 800a992:	2301      	movs	r3, #1
 800a994:	e1c9      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800a996:	68fb      	ldr	r3, [r7, #12]
 800a998:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 800a99c:	2b01      	cmp	r3, #1
 800a99e:	d101      	bne.n	800a9a4 <HAL_SPI_Transmit+0x4c>
 800a9a0:	2302      	movs	r3, #2
 800a9a2:	e1c2      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800a9a4:	68fb      	ldr	r3, [r7, #12]
 800a9a6:	2201      	movs	r2, #1
 800a9a8:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800a9ac:	68fb      	ldr	r3, [r7, #12]
 800a9ae:	2203      	movs	r2, #3
 800a9b0:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800a9b4:	68fb      	ldr	r3, [r7, #12]
 800a9b6:	2200      	movs	r2, #0
 800a9b8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800a9bc:	68fb      	ldr	r3, [r7, #12]
 800a9be:	68ba      	ldr	r2, [r7, #8]
 800a9c0:	65da      	str	r2, [r3, #92]	@ 0x5c
 800a9c2:	68fb      	ldr	r3, [r7, #12]
 800a9c4:	88fa      	ldrh	r2, [r7, #6]
 800a9c6:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800a9ca:	68fb      	ldr	r3, [r7, #12]
 800a9cc:	88fa      	ldrh	r2, [r7, #6]
 800a9ce:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	2200      	movs	r2, #0
 800a9d6:	665a      	str	r2, [r3, #100]	@ 0x64
 800a9d8:	68fb      	ldr	r3, [r7, #12]
 800a9da:	2200      	movs	r2, #0
 800a9dc:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800a9e0:	68fb      	ldr	r3, [r7, #12]
 800a9e2:	2200      	movs	r2, #0
 800a9e4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800a9e8:	68fb      	ldr	r3, [r7, #12]
 800a9ea:	2200      	movs	r2, #0
 800a9ec:	675a      	str	r2, [r3, #116]	@ 0x74
 800a9ee:	68fb      	ldr	r3, [r7, #12]
 800a9f0:	2200      	movs	r2, #0
 800a9f2:	671a      	str	r2, [r3, #112]	@ 0x70
 800a9f4:	68fb      	ldr	r3, [r7, #12]
 800a9f6:	689b      	ldr	r3, [r3, #8]
 800a9f8:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 800a9fc:	d108      	bne.n	800aa10 <HAL_SPI_Transmit+0xb8>
 800a9fe:	68fb      	ldr	r3, [r7, #12]
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	681a      	ldr	r2, [r3, #0]
 800aa04:	68fb      	ldr	r3, [r7, #12]
 800aa06:	681b      	ldr	r3, [r3, #0]
 800aa08:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800aa0c:	601a      	str	r2, [r3, #0]
 800aa0e:	e009      	b.n	800aa24 <HAL_SPI_Transmit+0xcc>
 800aa10:	68fb      	ldr	r3, [r7, #12]
 800aa12:	681b      	ldr	r3, [r3, #0]
 800aa14:	68db      	ldr	r3, [r3, #12]
 800aa16:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 800aa1a:	68fb      	ldr	r3, [r7, #12]
 800aa1c:	681b      	ldr	r3, [r3, #0]
 800aa1e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 800aa22:	60da      	str	r2, [r3, #12]
 800aa24:	68fb      	ldr	r3, [r7, #12]
 800aa26:	681b      	ldr	r3, [r3, #0]
 800aa28:	685a      	ldr	r2, [r3, #4]
 800aa2a:	4b96      	ldr	r3, [pc, #600]	@ (800ac84 <HAL_SPI_Transmit+0x32c>)
 800aa2c:	4013      	ands	r3, r2
 800aa2e:	88f9      	ldrh	r1, [r7, #6]
 800aa30:	68fa      	ldr	r2, [r7, #12]
 800aa32:	6812      	ldr	r2, [r2, #0]
 800aa34:	430b      	orrs	r3, r1
 800aa36:	6053      	str	r3, [r2, #4]
 800aa38:	68fb      	ldr	r3, [r7, #12]
 800aa3a:	681b      	ldr	r3, [r3, #0]
 800aa3c:	681a      	ldr	r2, [r3, #0]
 800aa3e:	68fb      	ldr	r3, [r7, #12]
 800aa40:	681b      	ldr	r3, [r3, #0]
 800aa42:	f042 0201 	orr.w	r2, r2, #1
 800aa46:	601a      	str	r2, [r3, #0]
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	685b      	ldr	r3, [r3, #4]
 800aa4c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800aa50:	d107      	bne.n	800aa62 <HAL_SPI_Transmit+0x10a>
 800aa52:	68fb      	ldr	r3, [r7, #12]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	681a      	ldr	r2, [r3, #0]
 800aa58:	68fb      	ldr	r3, [r7, #12]
 800aa5a:	681b      	ldr	r3, [r3, #0]
 800aa5c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800aa60:	601a      	str	r2, [r3, #0]
 800aa62:	68fb      	ldr	r3, [r7, #12]
 800aa64:	68db      	ldr	r3, [r3, #12]
 800aa66:	2b0f      	cmp	r3, #15
 800aa68:	d947      	bls.n	800aafa <HAL_SPI_Transmit+0x1a2>
 800aa6a:	e03f      	b.n	800aaec <HAL_SPI_Transmit+0x194>
 800aa6c:	68fb      	ldr	r3, [r7, #12]
 800aa6e:	681b      	ldr	r3, [r3, #0]
 800aa70:	695b      	ldr	r3, [r3, #20]
 800aa72:	f003 0302 	and.w	r3, r3, #2
 800aa76:	2b02      	cmp	r3, #2
 800aa78:	d114      	bne.n	800aaa4 <HAL_SPI_Transmit+0x14c>
 800aa7a:	68fb      	ldr	r3, [r7, #12]
 800aa7c:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800aa7e:	68fb      	ldr	r3, [r7, #12]
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	6812      	ldr	r2, [r2, #0]
 800aa84:	621a      	str	r2, [r3, #32]
 800aa86:	68fb      	ldr	r3, [r7, #12]
 800aa88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800aa8a:	1d1a      	adds	r2, r3, #4
 800aa8c:	68fb      	ldr	r3, [r7, #12]
 800aa8e:	65da      	str	r2, [r3, #92]	@ 0x5c
 800aa90:	68fb      	ldr	r3, [r7, #12]
 800aa92:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800aa96:	b29b      	uxth	r3, r3
 800aa98:	3b01      	subs	r3, #1
 800aa9a:	b29a      	uxth	r2, r3
 800aa9c:	68fb      	ldr	r3, [r7, #12]
 800aa9e:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800aaa2:	e023      	b.n	800aaec <HAL_SPI_Transmit+0x194>
 800aaa4:	f7f8 fe26 	bl	80036f4 <HAL_GetTick>
 800aaa8:	4602      	mov	r2, r0
 800aaaa:	693b      	ldr	r3, [r7, #16]
 800aaac:	1ad3      	subs	r3, r2, r3
 800aaae:	683a      	ldr	r2, [r7, #0]
 800aab0:	429a      	cmp	r2, r3
 800aab2:	d803      	bhi.n	800aabc <HAL_SPI_Transmit+0x164>
 800aab4:	683b      	ldr	r3, [r7, #0]
 800aab6:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800aaba:	d102      	bne.n	800aac2 <HAL_SPI_Transmit+0x16a>
 800aabc:	683b      	ldr	r3, [r7, #0]
 800aabe:	2b00      	cmp	r3, #0
 800aac0:	d114      	bne.n	800aaec <HAL_SPI_Transmit+0x194>
 800aac2:	68f8      	ldr	r0, [r7, #12]
 800aac4:	f000 fba8 	bl	800b218 <SPI_CloseTransfer>
 800aac8:	68fb      	ldr	r3, [r7, #12]
 800aaca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800aace:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800aad2:	68fb      	ldr	r3, [r7, #12]
 800aad4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800aad8:	68fb      	ldr	r3, [r7, #12]
 800aada:	2201      	movs	r2, #1
 800aadc:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	2200      	movs	r2, #0
 800aae4:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800aae8:	2303      	movs	r3, #3
 800aaea:	e11e      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800aaec:	68fb      	ldr	r3, [r7, #12]
 800aaee:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800aaf2:	b29b      	uxth	r3, r3
 800aaf4:	2b00      	cmp	r3, #0
 800aaf6:	d1b9      	bne.n	800aa6c <HAL_SPI_Transmit+0x114>
 800aaf8:	e0f1      	b.n	800acde <HAL_SPI_Transmit+0x386>
 800aafa:	68fb      	ldr	r3, [r7, #12]
 800aafc:	68db      	ldr	r3, [r3, #12]
 800aafe:	2b07      	cmp	r3, #7
 800ab00:	f240 80e6 	bls.w	800acd0 <HAL_SPI_Transmit+0x378>
 800ab04:	e05d      	b.n	800abc2 <HAL_SPI_Transmit+0x26a>
 800ab06:	68fb      	ldr	r3, [r7, #12]
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	695b      	ldr	r3, [r3, #20]
 800ab0c:	f003 0302 	and.w	r3, r3, #2
 800ab10:	2b02      	cmp	r3, #2
 800ab12:	d132      	bne.n	800ab7a <HAL_SPI_Transmit+0x222>
 800ab14:	68fb      	ldr	r3, [r7, #12]
 800ab16:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ab1a:	b29b      	uxth	r3, r3
 800ab1c:	2b01      	cmp	r3, #1
 800ab1e:	d918      	bls.n	800ab52 <HAL_SPI_Transmit+0x1fa>
 800ab20:	68fb      	ldr	r3, [r7, #12]
 800ab22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ab24:	2b00      	cmp	r3, #0
 800ab26:	d014      	beq.n	800ab52 <HAL_SPI_Transmit+0x1fa>
 800ab28:	68fb      	ldr	r3, [r7, #12]
 800ab2a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	681b      	ldr	r3, [r3, #0]
 800ab30:	6812      	ldr	r2, [r2, #0]
 800ab32:	621a      	str	r2, [r3, #32]
 800ab34:	68fb      	ldr	r3, [r7, #12]
 800ab36:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ab38:	1d1a      	adds	r2, r3, #4
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	65da      	str	r2, [r3, #92]	@ 0x5c
 800ab3e:	68fb      	ldr	r3, [r7, #12]
 800ab40:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ab44:	b29b      	uxth	r3, r3
 800ab46:	3b02      	subs	r3, #2
 800ab48:	b29a      	uxth	r2, r3
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800ab50:	e037      	b.n	800abc2 <HAL_SPI_Transmit+0x26a>
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ab56:	881a      	ldrh	r2, [r3, #0]
 800ab58:	697b      	ldr	r3, [r7, #20]
 800ab5a:	801a      	strh	r2, [r3, #0]
 800ab5c:	68fb      	ldr	r3, [r7, #12]
 800ab5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ab60:	1c9a      	adds	r2, r3, #2
 800ab62:	68fb      	ldr	r3, [r7, #12]
 800ab64:	65da      	str	r2, [r3, #92]	@ 0x5c
 800ab66:	68fb      	ldr	r3, [r7, #12]
 800ab68:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ab6c:	b29b      	uxth	r3, r3
 800ab6e:	3b01      	subs	r3, #1
 800ab70:	b29a      	uxth	r2, r3
 800ab72:	68fb      	ldr	r3, [r7, #12]
 800ab74:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800ab78:	e023      	b.n	800abc2 <HAL_SPI_Transmit+0x26a>
 800ab7a:	f7f8 fdbb 	bl	80036f4 <HAL_GetTick>
 800ab7e:	4602      	mov	r2, r0
 800ab80:	693b      	ldr	r3, [r7, #16]
 800ab82:	1ad3      	subs	r3, r2, r3
 800ab84:	683a      	ldr	r2, [r7, #0]
 800ab86:	429a      	cmp	r2, r3
 800ab88:	d803      	bhi.n	800ab92 <HAL_SPI_Transmit+0x23a>
 800ab8a:	683b      	ldr	r3, [r7, #0]
 800ab8c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800ab90:	d102      	bne.n	800ab98 <HAL_SPI_Transmit+0x240>
 800ab92:	683b      	ldr	r3, [r7, #0]
 800ab94:	2b00      	cmp	r3, #0
 800ab96:	d114      	bne.n	800abc2 <HAL_SPI_Transmit+0x26a>
 800ab98:	68f8      	ldr	r0, [r7, #12]
 800ab9a:	f000 fb3d 	bl	800b218 <SPI_CloseTransfer>
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800aba4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800aba8:	68fb      	ldr	r3, [r7, #12]
 800abaa:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800abae:	68fb      	ldr	r3, [r7, #12]
 800abb0:	2201      	movs	r2, #1
 800abb2:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800abb6:	68fb      	ldr	r3, [r7, #12]
 800abb8:	2200      	movs	r2, #0
 800abba:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800abbe:	2303      	movs	r3, #3
 800abc0:	e0b3      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800abc2:	68fb      	ldr	r3, [r7, #12]
 800abc4:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800abc8:	b29b      	uxth	r3, r3
 800abca:	2b00      	cmp	r3, #0
 800abcc:	d19b      	bne.n	800ab06 <HAL_SPI_Transmit+0x1ae>
 800abce:	e086      	b.n	800acde <HAL_SPI_Transmit+0x386>
 800abd0:	68fb      	ldr	r3, [r7, #12]
 800abd2:	681b      	ldr	r3, [r3, #0]
 800abd4:	695b      	ldr	r3, [r3, #20]
 800abd6:	f003 0302 	and.w	r3, r3, #2
 800abda:	2b02      	cmp	r3, #2
 800abdc:	d154      	bne.n	800ac88 <HAL_SPI_Transmit+0x330>
 800abde:	68fb      	ldr	r3, [r7, #12]
 800abe0:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800abe4:	b29b      	uxth	r3, r3
 800abe6:	2b03      	cmp	r3, #3
 800abe8:	d918      	bls.n	800ac1c <HAL_SPI_Transmit+0x2c4>
 800abea:	68fb      	ldr	r3, [r7, #12]
 800abec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800abee:	2b40      	cmp	r3, #64	@ 0x40
 800abf0:	d914      	bls.n	800ac1c <HAL_SPI_Transmit+0x2c4>
 800abf2:	68fb      	ldr	r3, [r7, #12]
 800abf4:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800abf6:	68fb      	ldr	r3, [r7, #12]
 800abf8:	681b      	ldr	r3, [r3, #0]
 800abfa:	6812      	ldr	r2, [r2, #0]
 800abfc:	621a      	str	r2, [r3, #32]
 800abfe:	68fb      	ldr	r3, [r7, #12]
 800ac00:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ac02:	1d1a      	adds	r2, r3, #4
 800ac04:	68fb      	ldr	r3, [r7, #12]
 800ac06:	65da      	str	r2, [r3, #92]	@ 0x5c
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ac0e:	b29b      	uxth	r3, r3
 800ac10:	3b04      	subs	r3, #4
 800ac12:	b29a      	uxth	r2, r3
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800ac1a:	e059      	b.n	800acd0 <HAL_SPI_Transmit+0x378>
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ac22:	b29b      	uxth	r3, r3
 800ac24:	2b01      	cmp	r3, #1
 800ac26:	d917      	bls.n	800ac58 <HAL_SPI_Transmit+0x300>
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	d013      	beq.n	800ac58 <HAL_SPI_Transmit+0x300>
 800ac30:	68fb      	ldr	r3, [r7, #12]
 800ac32:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ac34:	881a      	ldrh	r2, [r3, #0]
 800ac36:	697b      	ldr	r3, [r7, #20]
 800ac38:	801a      	strh	r2, [r3, #0]
 800ac3a:	68fb      	ldr	r3, [r7, #12]
 800ac3c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ac3e:	1c9a      	adds	r2, r3, #2
 800ac40:	68fb      	ldr	r3, [r7, #12]
 800ac42:	65da      	str	r2, [r3, #92]	@ 0x5c
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ac4a:	b29b      	uxth	r3, r3
 800ac4c:	3b02      	subs	r3, #2
 800ac4e:	b29a      	uxth	r2, r3
 800ac50:	68fb      	ldr	r3, [r7, #12]
 800ac52:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800ac56:	e03b      	b.n	800acd0 <HAL_SPI_Transmit+0x378>
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800ac5c:	68fb      	ldr	r3, [r7, #12]
 800ac5e:	681b      	ldr	r3, [r3, #0]
 800ac60:	3320      	adds	r3, #32
 800ac62:	7812      	ldrb	r2, [r2, #0]
 800ac64:	701a      	strb	r2, [r3, #0]
 800ac66:	68fb      	ldr	r3, [r7, #12]
 800ac68:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ac6a:	1c5a      	adds	r2, r3, #1
 800ac6c:	68fb      	ldr	r3, [r7, #12]
 800ac6e:	65da      	str	r2, [r3, #92]	@ 0x5c
 800ac70:	68fb      	ldr	r3, [r7, #12]
 800ac72:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800ac76:	b29b      	uxth	r3, r3
 800ac78:	3b01      	subs	r3, #1
 800ac7a:	b29a      	uxth	r2, r3
 800ac7c:	68fb      	ldr	r3, [r7, #12]
 800ac7e:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800ac82:	e025      	b.n	800acd0 <HAL_SPI_Transmit+0x378>
 800ac84:	ffff0000 	.word	0xffff0000
 800ac88:	f7f8 fd34 	bl	80036f4 <HAL_GetTick>
 800ac8c:	4602      	mov	r2, r0
 800ac8e:	693b      	ldr	r3, [r7, #16]
 800ac90:	1ad3      	subs	r3, r2, r3
 800ac92:	683a      	ldr	r2, [r7, #0]
 800ac94:	429a      	cmp	r2, r3
 800ac96:	d803      	bhi.n	800aca0 <HAL_SPI_Transmit+0x348>
 800ac98:	683b      	ldr	r3, [r7, #0]
 800ac9a:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800ac9e:	d102      	bne.n	800aca6 <HAL_SPI_Transmit+0x34e>
 800aca0:	683b      	ldr	r3, [r7, #0]
 800aca2:	2b00      	cmp	r3, #0
 800aca4:	d114      	bne.n	800acd0 <HAL_SPI_Transmit+0x378>
 800aca6:	68f8      	ldr	r0, [r7, #12]
 800aca8:	f000 fab6 	bl	800b218 <SPI_CloseTransfer>
 800acac:	68fb      	ldr	r3, [r7, #12]
 800acae:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800acb2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800acb6:	68fb      	ldr	r3, [r7, #12]
 800acb8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	2201      	movs	r2, #1
 800acc0:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800acc4:	68fb      	ldr	r3, [r7, #12]
 800acc6:	2200      	movs	r2, #0
 800acc8:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800accc:	2303      	movs	r3, #3
 800acce:	e02c      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800acd0:	68fb      	ldr	r3, [r7, #12]
 800acd2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 800acd6:	b29b      	uxth	r3, r3
 800acd8:	2b00      	cmp	r3, #0
 800acda:	f47f af79 	bne.w	800abd0 <HAL_SPI_Transmit+0x278>
 800acde:	693b      	ldr	r3, [r7, #16]
 800ace0:	9300      	str	r3, [sp, #0]
 800ace2:	683b      	ldr	r3, [r7, #0]
 800ace4:	2200      	movs	r2, #0
 800ace6:	2108      	movs	r1, #8
 800ace8:	68f8      	ldr	r0, [r7, #12]
 800acea:	f000 fb35 	bl	800b358 <SPI_WaitOnFlagUntilTimeout>
 800acee:	4603      	mov	r3, r0
 800acf0:	2b00      	cmp	r3, #0
 800acf2:	d007      	beq.n	800ad04 <HAL_SPI_Transmit+0x3ac>
 800acf4:	68fb      	ldr	r3, [r7, #12]
 800acf6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800acfa:	f043 0220 	orr.w	r2, r3, #32
 800acfe:	68fb      	ldr	r3, [r7, #12]
 800ad00:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800ad04:	68f8      	ldr	r0, [r7, #12]
 800ad06:	f000 fa87 	bl	800b218 <SPI_CloseTransfer>
 800ad0a:	68fb      	ldr	r3, [r7, #12]
 800ad0c:	2201      	movs	r2, #1
 800ad0e:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800ad12:	68fb      	ldr	r3, [r7, #12]
 800ad14:	2200      	movs	r2, #0
 800ad16:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800ad1a:	68fb      	ldr	r3, [r7, #12]
 800ad1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800ad20:	2b00      	cmp	r3, #0
 800ad22:	d001      	beq.n	800ad28 <HAL_SPI_Transmit+0x3d0>
 800ad24:	2301      	movs	r3, #1
 800ad26:	e000      	b.n	800ad2a <HAL_SPI_Transmit+0x3d2>
 800ad28:	2300      	movs	r3, #0
 800ad2a:	4618      	mov	r0, r3
 800ad2c:	3718      	adds	r7, #24
 800ad2e:	46bd      	mov	sp, r7
 800ad30:	bd80      	pop	{r7, pc}
 800ad32:	bf00      	nop

0800ad34 <HAL_SPI_Receive>:
 800ad34:	b580      	push	{r7, lr}
 800ad36:	b088      	sub	sp, #32
 800ad38:	af00      	add	r7, sp, #0
 800ad3a:	60f8      	str	r0, [r7, #12]
 800ad3c:	60b9      	str	r1, [r7, #8]
 800ad3e:	603b      	str	r3, [r7, #0]
 800ad40:	4613      	mov	r3, r2
 800ad42:	80fb      	strh	r3, [r7, #6]
 800ad44:	68fb      	ldr	r3, [r7, #12]
 800ad46:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ad48:	095b      	lsrs	r3, r3, #5
 800ad4a:	b29b      	uxth	r3, r3
 800ad4c:	3301      	adds	r3, #1
 800ad4e:	83fb      	strh	r3, [r7, #30]
 800ad50:	68fb      	ldr	r3, [r7, #12]
 800ad52:	681b      	ldr	r3, [r3, #0]
 800ad54:	3330      	adds	r3, #48	@ 0x30
 800ad56:	61bb      	str	r3, [r7, #24]
 800ad58:	f7f8 fccc 	bl	80036f4 <HAL_GetTick>
 800ad5c:	6178      	str	r0, [r7, #20]
 800ad5e:	68fb      	ldr	r3, [r7, #12]
 800ad60:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800ad64:	b2db      	uxtb	r3, r3
 800ad66:	2b01      	cmp	r3, #1
 800ad68:	d001      	beq.n	800ad6e <HAL_SPI_Receive+0x3a>
 800ad6a:	2302      	movs	r3, #2
 800ad6c:	e250      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800ad6e:	68bb      	ldr	r3, [r7, #8]
 800ad70:	2b00      	cmp	r3, #0
 800ad72:	d002      	beq.n	800ad7a <HAL_SPI_Receive+0x46>
 800ad74:	88fb      	ldrh	r3, [r7, #6]
 800ad76:	2b00      	cmp	r3, #0
 800ad78:	d101      	bne.n	800ad7e <HAL_SPI_Receive+0x4a>
 800ad7a:	2301      	movs	r3, #1
 800ad7c:	e248      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800ad7e:	68fb      	ldr	r3, [r7, #12]
 800ad80:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 800ad84:	2b01      	cmp	r3, #1
 800ad86:	d101      	bne.n	800ad8c <HAL_SPI_Receive+0x58>
 800ad88:	2302      	movs	r3, #2
 800ad8a:	e241      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800ad8c:	68fb      	ldr	r3, [r7, #12]
 800ad8e:	2201      	movs	r2, #1
 800ad90:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800ad94:	68fb      	ldr	r3, [r7, #12]
 800ad96:	2204      	movs	r2, #4
 800ad98:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800ad9c:	68fb      	ldr	r3, [r7, #12]
 800ad9e:	2200      	movs	r2, #0
 800ada0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800ada4:	68fb      	ldr	r3, [r7, #12]
 800ada6:	68ba      	ldr	r2, [r7, #8]
 800ada8:	665a      	str	r2, [r3, #100]	@ 0x64
 800adaa:	68fb      	ldr	r3, [r7, #12]
 800adac:	88fa      	ldrh	r2, [r7, #6]
 800adae:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800adb2:	68fb      	ldr	r3, [r7, #12]
 800adb4:	88fa      	ldrh	r2, [r7, #6]
 800adb6:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800adba:	68fb      	ldr	r3, [r7, #12]
 800adbc:	2200      	movs	r2, #0
 800adbe:	65da      	str	r2, [r3, #92]	@ 0x5c
 800adc0:	68fb      	ldr	r3, [r7, #12]
 800adc2:	2200      	movs	r2, #0
 800adc4:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800adc8:	68fb      	ldr	r3, [r7, #12]
 800adca:	2200      	movs	r2, #0
 800adcc:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800add0:	68fb      	ldr	r3, [r7, #12]
 800add2:	2200      	movs	r2, #0
 800add4:	671a      	str	r2, [r3, #112]	@ 0x70
 800add6:	68fb      	ldr	r3, [r7, #12]
 800add8:	2200      	movs	r2, #0
 800adda:	675a      	str	r2, [r3, #116]	@ 0x74
 800addc:	68fb      	ldr	r3, [r7, #12]
 800adde:	689b      	ldr	r3, [r3, #8]
 800ade0:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 800ade4:	d108      	bne.n	800adf8 <HAL_SPI_Receive+0xc4>
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	681b      	ldr	r3, [r3, #0]
 800adea:	681a      	ldr	r2, [r3, #0]
 800adec:	68fb      	ldr	r3, [r7, #12]
 800adee:	681b      	ldr	r3, [r3, #0]
 800adf0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800adf4:	601a      	str	r2, [r3, #0]
 800adf6:	e009      	b.n	800ae0c <HAL_SPI_Receive+0xd8>
 800adf8:	68fb      	ldr	r3, [r7, #12]
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	68db      	ldr	r3, [r3, #12]
 800adfe:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 800ae02:	68fb      	ldr	r3, [r7, #12]
 800ae04:	681b      	ldr	r3, [r3, #0]
 800ae06:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
 800ae0a:	60da      	str	r2, [r3, #12]
 800ae0c:	68fb      	ldr	r3, [r7, #12]
 800ae0e:	681b      	ldr	r3, [r3, #0]
 800ae10:	685a      	ldr	r2, [r3, #4]
 800ae12:	4b95      	ldr	r3, [pc, #596]	@ (800b068 <HAL_SPI_Receive+0x334>)
 800ae14:	4013      	ands	r3, r2
 800ae16:	88f9      	ldrh	r1, [r7, #6]
 800ae18:	68fa      	ldr	r2, [r7, #12]
 800ae1a:	6812      	ldr	r2, [r2, #0]
 800ae1c:	430b      	orrs	r3, r1
 800ae1e:	6053      	str	r3, [r2, #4]
 800ae20:	68fb      	ldr	r3, [r7, #12]
 800ae22:	681b      	ldr	r3, [r3, #0]
 800ae24:	681a      	ldr	r2, [r3, #0]
 800ae26:	68fb      	ldr	r3, [r7, #12]
 800ae28:	681b      	ldr	r3, [r3, #0]
 800ae2a:	f042 0201 	orr.w	r2, r2, #1
 800ae2e:	601a      	str	r2, [r3, #0]
 800ae30:	68fb      	ldr	r3, [r7, #12]
 800ae32:	685b      	ldr	r3, [r3, #4]
 800ae34:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800ae38:	d107      	bne.n	800ae4a <HAL_SPI_Receive+0x116>
 800ae3a:	68fb      	ldr	r3, [r7, #12]
 800ae3c:	681b      	ldr	r3, [r3, #0]
 800ae3e:	681a      	ldr	r2, [r3, #0]
 800ae40:	68fb      	ldr	r3, [r7, #12]
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800ae48:	601a      	str	r2, [r3, #0]
 800ae4a:	68fb      	ldr	r3, [r7, #12]
 800ae4c:	68db      	ldr	r3, [r3, #12]
 800ae4e:	2b0f      	cmp	r3, #15
 800ae50:	d96c      	bls.n	800af2c <HAL_SPI_Receive+0x1f8>
 800ae52:	e064      	b.n	800af1e <HAL_SPI_Receive+0x1ea>
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	681b      	ldr	r3, [r3, #0]
 800ae58:	695b      	ldr	r3, [r3, #20]
 800ae5a:	613b      	str	r3, [r7, #16]
 800ae5c:	68fb      	ldr	r3, [r7, #12]
 800ae5e:	681b      	ldr	r3, [r3, #0]
 800ae60:	695b      	ldr	r3, [r3, #20]
 800ae62:	f003 0301 	and.w	r3, r3, #1
 800ae66:	2b01      	cmp	r3, #1
 800ae68:	d114      	bne.n	800ae94 <HAL_SPI_Receive+0x160>
 800ae6a:	68fb      	ldr	r3, [r7, #12]
 800ae6c:	681a      	ldr	r2, [r3, #0]
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800ae72:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800ae74:	601a      	str	r2, [r3, #0]
 800ae76:	68fb      	ldr	r3, [r7, #12]
 800ae78:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800ae7a:	1d1a      	adds	r2, r3, #4
 800ae7c:	68fb      	ldr	r3, [r7, #12]
 800ae7e:	665a      	str	r2, [r3, #100]	@ 0x64
 800ae80:	68fb      	ldr	r3, [r7, #12]
 800ae82:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800ae86:	b29b      	uxth	r3, r3
 800ae88:	3b01      	subs	r3, #1
 800ae8a:	b29a      	uxth	r2, r3
 800ae8c:	68fb      	ldr	r3, [r7, #12]
 800ae8e:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800ae92:	e044      	b.n	800af1e <HAL_SPI_Receive+0x1ea>
 800ae94:	68fb      	ldr	r3, [r7, #12]
 800ae96:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800ae9a:	b29b      	uxth	r3, r3
 800ae9c:	8bfa      	ldrh	r2, [r7, #30]
 800ae9e:	429a      	cmp	r2, r3
 800aea0:	d919      	bls.n	800aed6 <HAL_SPI_Receive+0x1a2>
 800aea2:	693b      	ldr	r3, [r7, #16]
 800aea4:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800aea8:	2b00      	cmp	r3, #0
 800aeaa:	d014      	beq.n	800aed6 <HAL_SPI_Receive+0x1a2>
 800aeac:	68fb      	ldr	r3, [r7, #12]
 800aeae:	681a      	ldr	r2, [r3, #0]
 800aeb0:	68fb      	ldr	r3, [r7, #12]
 800aeb2:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800aeb4:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 800aeb6:	601a      	str	r2, [r3, #0]
 800aeb8:	68fb      	ldr	r3, [r7, #12]
 800aeba:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800aebc:	1d1a      	adds	r2, r3, #4
 800aebe:	68fb      	ldr	r3, [r7, #12]
 800aec0:	665a      	str	r2, [r3, #100]	@ 0x64
 800aec2:	68fb      	ldr	r3, [r7, #12]
 800aec4:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800aec8:	b29b      	uxth	r3, r3
 800aeca:	3b01      	subs	r3, #1
 800aecc:	b29a      	uxth	r2, r3
 800aece:	68fb      	ldr	r3, [r7, #12]
 800aed0:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800aed4:	e023      	b.n	800af1e <HAL_SPI_Receive+0x1ea>
 800aed6:	f7f8 fc0d 	bl	80036f4 <HAL_GetTick>
 800aeda:	4602      	mov	r2, r0
 800aedc:	697b      	ldr	r3, [r7, #20]
 800aede:	1ad3      	subs	r3, r2, r3
 800aee0:	683a      	ldr	r2, [r7, #0]
 800aee2:	429a      	cmp	r2, r3
 800aee4:	d803      	bhi.n	800aeee <HAL_SPI_Receive+0x1ba>
 800aee6:	683b      	ldr	r3, [r7, #0]
 800aee8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800aeec:	d102      	bne.n	800aef4 <HAL_SPI_Receive+0x1c0>
 800aeee:	683b      	ldr	r3, [r7, #0]
 800aef0:	2b00      	cmp	r3, #0
 800aef2:	d114      	bne.n	800af1e <HAL_SPI_Receive+0x1ea>
 800aef4:	68f8      	ldr	r0, [r7, #12]
 800aef6:	f000 f98f 	bl	800b218 <SPI_CloseTransfer>
 800aefa:	68fb      	ldr	r3, [r7, #12]
 800aefc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800af00:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800af04:	68fb      	ldr	r3, [r7, #12]
 800af06:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	2201      	movs	r2, #1
 800af0e:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800af12:	68fb      	ldr	r3, [r7, #12]
 800af14:	2200      	movs	r2, #0
 800af16:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800af1a:	2303      	movs	r3, #3
 800af1c:	e178      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800af1e:	68fb      	ldr	r3, [r7, #12]
 800af20:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800af24:	b29b      	uxth	r3, r3
 800af26:	2b00      	cmp	r3, #0
 800af28:	d194      	bne.n	800ae54 <HAL_SPI_Receive+0x120>
 800af2a:	e15e      	b.n	800b1ea <HAL_SPI_Receive+0x4b6>
 800af2c:	68fb      	ldr	r3, [r7, #12]
 800af2e:	68db      	ldr	r3, [r3, #12]
 800af30:	2b07      	cmp	r3, #7
 800af32:	f240 8153 	bls.w	800b1dc <HAL_SPI_Receive+0x4a8>
 800af36:	e08f      	b.n	800b058 <HAL_SPI_Receive+0x324>
 800af38:	68fb      	ldr	r3, [r7, #12]
 800af3a:	681b      	ldr	r3, [r3, #0]
 800af3c:	695b      	ldr	r3, [r3, #20]
 800af3e:	613b      	str	r3, [r7, #16]
 800af40:	68fb      	ldr	r3, [r7, #12]
 800af42:	681b      	ldr	r3, [r3, #0]
 800af44:	695b      	ldr	r3, [r3, #20]
 800af46:	f003 0301 	and.w	r3, r3, #1
 800af4a:	2b01      	cmp	r3, #1
 800af4c:	d114      	bne.n	800af78 <HAL_SPI_Receive+0x244>
 800af4e:	68fb      	ldr	r3, [r7, #12]
 800af50:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800af52:	69ba      	ldr	r2, [r7, #24]
 800af54:	8812      	ldrh	r2, [r2, #0]
 800af56:	b292      	uxth	r2, r2
 800af58:	801a      	strh	r2, [r3, #0]
 800af5a:	68fb      	ldr	r3, [r7, #12]
 800af5c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800af5e:	1c9a      	adds	r2, r3, #2
 800af60:	68fb      	ldr	r3, [r7, #12]
 800af62:	665a      	str	r2, [r3, #100]	@ 0x64
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800af6a:	b29b      	uxth	r3, r3
 800af6c:	3b01      	subs	r3, #1
 800af6e:	b29a      	uxth	r2, r3
 800af70:	68fb      	ldr	r3, [r7, #12]
 800af72:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800af76:	e06f      	b.n	800b058 <HAL_SPI_Receive+0x324>
 800af78:	68fb      	ldr	r3, [r7, #12]
 800af7a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800af7e:	b29b      	uxth	r3, r3
 800af80:	8bfa      	ldrh	r2, [r7, #30]
 800af82:	429a      	cmp	r2, r3
 800af84:	d924      	bls.n	800afd0 <HAL_SPI_Receive+0x29c>
 800af86:	693b      	ldr	r3, [r7, #16]
 800af88:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800af8c:	2b00      	cmp	r3, #0
 800af8e:	d01f      	beq.n	800afd0 <HAL_SPI_Receive+0x29c>
 800af90:	68fb      	ldr	r3, [r7, #12]
 800af92:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800af94:	69ba      	ldr	r2, [r7, #24]
 800af96:	8812      	ldrh	r2, [r2, #0]
 800af98:	b292      	uxth	r2, r2
 800af9a:	801a      	strh	r2, [r3, #0]
 800af9c:	68fb      	ldr	r3, [r7, #12]
 800af9e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800afa0:	1c9a      	adds	r2, r3, #2
 800afa2:	68fb      	ldr	r3, [r7, #12]
 800afa4:	665a      	str	r2, [r3, #100]	@ 0x64
 800afa6:	68fb      	ldr	r3, [r7, #12]
 800afa8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800afaa:	69ba      	ldr	r2, [r7, #24]
 800afac:	8812      	ldrh	r2, [r2, #0]
 800afae:	b292      	uxth	r2, r2
 800afb0:	801a      	strh	r2, [r3, #0]
 800afb2:	68fb      	ldr	r3, [r7, #12]
 800afb4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800afb6:	1c9a      	adds	r2, r3, #2
 800afb8:	68fb      	ldr	r3, [r7, #12]
 800afba:	665a      	str	r2, [r3, #100]	@ 0x64
 800afbc:	68fb      	ldr	r3, [r7, #12]
 800afbe:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800afc2:	b29b      	uxth	r3, r3
 800afc4:	3b02      	subs	r3, #2
 800afc6:	b29a      	uxth	r2, r3
 800afc8:	68fb      	ldr	r3, [r7, #12]
 800afca:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800afce:	e043      	b.n	800b058 <HAL_SPI_Receive+0x324>
 800afd0:	68fb      	ldr	r3, [r7, #12]
 800afd2:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800afd6:	b29b      	uxth	r3, r3
 800afd8:	2b01      	cmp	r3, #1
 800afda:	d119      	bne.n	800b010 <HAL_SPI_Receive+0x2dc>
 800afdc:	693b      	ldr	r3, [r7, #16]
 800afde:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800afe2:	2b00      	cmp	r3, #0
 800afe4:	d014      	beq.n	800b010 <HAL_SPI_Receive+0x2dc>
 800afe6:	68fb      	ldr	r3, [r7, #12]
 800afe8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800afea:	69ba      	ldr	r2, [r7, #24]
 800afec:	8812      	ldrh	r2, [r2, #0]
 800afee:	b292      	uxth	r2, r2
 800aff0:	801a      	strh	r2, [r3, #0]
 800aff2:	68fb      	ldr	r3, [r7, #12]
 800aff4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800aff6:	1c9a      	adds	r2, r3, #2
 800aff8:	68fb      	ldr	r3, [r7, #12]
 800affa:	665a      	str	r2, [r3, #100]	@ 0x64
 800affc:	68fb      	ldr	r3, [r7, #12]
 800affe:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b002:	b29b      	uxth	r3, r3
 800b004:	3b01      	subs	r3, #1
 800b006:	b29a      	uxth	r2, r3
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b00e:	e023      	b.n	800b058 <HAL_SPI_Receive+0x324>
 800b010:	f7f8 fb70 	bl	80036f4 <HAL_GetTick>
 800b014:	4602      	mov	r2, r0
 800b016:	697b      	ldr	r3, [r7, #20]
 800b018:	1ad3      	subs	r3, r2, r3
 800b01a:	683a      	ldr	r2, [r7, #0]
 800b01c:	429a      	cmp	r2, r3
 800b01e:	d803      	bhi.n	800b028 <HAL_SPI_Receive+0x2f4>
 800b020:	683b      	ldr	r3, [r7, #0]
 800b022:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800b026:	d102      	bne.n	800b02e <HAL_SPI_Receive+0x2fa>
 800b028:	683b      	ldr	r3, [r7, #0]
 800b02a:	2b00      	cmp	r3, #0
 800b02c:	d114      	bne.n	800b058 <HAL_SPI_Receive+0x324>
 800b02e:	68f8      	ldr	r0, [r7, #12]
 800b030:	f000 f8f2 	bl	800b218 <SPI_CloseTransfer>
 800b034:	68fb      	ldr	r3, [r7, #12]
 800b036:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b03a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800b03e:	68fb      	ldr	r3, [r7, #12]
 800b040:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b044:	68fb      	ldr	r3, [r7, #12]
 800b046:	2201      	movs	r2, #1
 800b048:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800b04c:	68fb      	ldr	r3, [r7, #12]
 800b04e:	2200      	movs	r2, #0
 800b050:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800b054:	2303      	movs	r3, #3
 800b056:	e0db      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800b058:	68fb      	ldr	r3, [r7, #12]
 800b05a:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b05e:	b29b      	uxth	r3, r3
 800b060:	2b00      	cmp	r3, #0
 800b062:	f47f af69 	bne.w	800af38 <HAL_SPI_Receive+0x204>
 800b066:	e0c0      	b.n	800b1ea <HAL_SPI_Receive+0x4b6>
 800b068:	ffff0000 	.word	0xffff0000
 800b06c:	68fb      	ldr	r3, [r7, #12]
 800b06e:	681b      	ldr	r3, [r3, #0]
 800b070:	695b      	ldr	r3, [r3, #20]
 800b072:	613b      	str	r3, [r7, #16]
 800b074:	68fb      	ldr	r3, [r7, #12]
 800b076:	681b      	ldr	r3, [r3, #0]
 800b078:	695b      	ldr	r3, [r3, #20]
 800b07a:	f003 0301 	and.w	r3, r3, #1
 800b07e:	2b01      	cmp	r3, #1
 800b080:	d117      	bne.n	800b0b2 <HAL_SPI_Receive+0x37e>
 800b082:	68fb      	ldr	r3, [r7, #12]
 800b084:	681b      	ldr	r3, [r3, #0]
 800b086:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b08e:	7812      	ldrb	r2, [r2, #0]
 800b090:	b2d2      	uxtb	r2, r2
 800b092:	701a      	strb	r2, [r3, #0]
 800b094:	68fb      	ldr	r3, [r7, #12]
 800b096:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b098:	1c5a      	adds	r2, r3, #1
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	665a      	str	r2, [r3, #100]	@ 0x64
 800b09e:	68fb      	ldr	r3, [r7, #12]
 800b0a0:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b0a4:	b29b      	uxth	r3, r3
 800b0a6:	3b01      	subs	r3, #1
 800b0a8:	b29a      	uxth	r2, r3
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b0b0:	e094      	b.n	800b1dc <HAL_SPI_Receive+0x4a8>
 800b0b2:	68fb      	ldr	r3, [r7, #12]
 800b0b4:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b0b8:	b29b      	uxth	r3, r3
 800b0ba:	8bfa      	ldrh	r2, [r7, #30]
 800b0bc:	429a      	cmp	r2, r3
 800b0be:	d946      	bls.n	800b14e <HAL_SPI_Receive+0x41a>
 800b0c0:	693b      	ldr	r3, [r7, #16]
 800b0c2:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800b0c6:	2b00      	cmp	r3, #0
 800b0c8:	d041      	beq.n	800b14e <HAL_SPI_Receive+0x41a>
 800b0ca:	68fb      	ldr	r3, [r7, #12]
 800b0cc:	681b      	ldr	r3, [r3, #0]
 800b0ce:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b0d6:	7812      	ldrb	r2, [r2, #0]
 800b0d8:	b2d2      	uxtb	r2, r2
 800b0da:	701a      	strb	r2, [r3, #0]
 800b0dc:	68fb      	ldr	r3, [r7, #12]
 800b0de:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b0e0:	1c5a      	adds	r2, r3, #1
 800b0e2:	68fb      	ldr	r3, [r7, #12]
 800b0e4:	665a      	str	r2, [r3, #100]	@ 0x64
 800b0e6:	68fb      	ldr	r3, [r7, #12]
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b0ee:	68fb      	ldr	r3, [r7, #12]
 800b0f0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b0f2:	7812      	ldrb	r2, [r2, #0]
 800b0f4:	b2d2      	uxtb	r2, r2
 800b0f6:	701a      	strb	r2, [r3, #0]
 800b0f8:	68fb      	ldr	r3, [r7, #12]
 800b0fa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b0fc:	1c5a      	adds	r2, r3, #1
 800b0fe:	68fb      	ldr	r3, [r7, #12]
 800b100:	665a      	str	r2, [r3, #100]	@ 0x64
 800b102:	68fb      	ldr	r3, [r7, #12]
 800b104:	681b      	ldr	r3, [r3, #0]
 800b106:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b10a:	68fb      	ldr	r3, [r7, #12]
 800b10c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b10e:	7812      	ldrb	r2, [r2, #0]
 800b110:	b2d2      	uxtb	r2, r2
 800b112:	701a      	strb	r2, [r3, #0]
 800b114:	68fb      	ldr	r3, [r7, #12]
 800b116:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b118:	1c5a      	adds	r2, r3, #1
 800b11a:	68fb      	ldr	r3, [r7, #12]
 800b11c:	665a      	str	r2, [r3, #100]	@ 0x64
 800b11e:	68fb      	ldr	r3, [r7, #12]
 800b120:	681b      	ldr	r3, [r3, #0]
 800b122:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b126:	68fb      	ldr	r3, [r7, #12]
 800b128:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b12a:	7812      	ldrb	r2, [r2, #0]
 800b12c:	b2d2      	uxtb	r2, r2
 800b12e:	701a      	strb	r2, [r3, #0]
 800b130:	68fb      	ldr	r3, [r7, #12]
 800b132:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b134:	1c5a      	adds	r2, r3, #1
 800b136:	68fb      	ldr	r3, [r7, #12]
 800b138:	665a      	str	r2, [r3, #100]	@ 0x64
 800b13a:	68fb      	ldr	r3, [r7, #12]
 800b13c:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b140:	b29b      	uxth	r3, r3
 800b142:	3b04      	subs	r3, #4
 800b144:	b29a      	uxth	r2, r3
 800b146:	68fb      	ldr	r3, [r7, #12]
 800b148:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b14c:	e046      	b.n	800b1dc <HAL_SPI_Receive+0x4a8>
 800b14e:	68fb      	ldr	r3, [r7, #12]
 800b150:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b154:	b29b      	uxth	r3, r3
 800b156:	2b03      	cmp	r3, #3
 800b158:	d81c      	bhi.n	800b194 <HAL_SPI_Receive+0x460>
 800b15a:	693b      	ldr	r3, [r7, #16]
 800b15c:	f403 43c0 	and.w	r3, r3, #24576	@ 0x6000
 800b160:	2b00      	cmp	r3, #0
 800b162:	d017      	beq.n	800b194 <HAL_SPI_Receive+0x460>
 800b164:	68fb      	ldr	r3, [r7, #12]
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	f103 0230 	add.w	r2, r3, #48	@ 0x30
 800b16c:	68fb      	ldr	r3, [r7, #12]
 800b16e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b170:	7812      	ldrb	r2, [r2, #0]
 800b172:	b2d2      	uxtb	r2, r2
 800b174:	701a      	strb	r2, [r3, #0]
 800b176:	68fb      	ldr	r3, [r7, #12]
 800b178:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800b17a:	1c5a      	adds	r2, r3, #1
 800b17c:	68fb      	ldr	r3, [r7, #12]
 800b17e:	665a      	str	r2, [r3, #100]	@ 0x64
 800b180:	68fb      	ldr	r3, [r7, #12]
 800b182:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b186:	b29b      	uxth	r3, r3
 800b188:	3b01      	subs	r3, #1
 800b18a:	b29a      	uxth	r2, r3
 800b18c:	68fb      	ldr	r3, [r7, #12]
 800b18e:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b192:	e023      	b.n	800b1dc <HAL_SPI_Receive+0x4a8>
 800b194:	f7f8 faae 	bl	80036f4 <HAL_GetTick>
 800b198:	4602      	mov	r2, r0
 800b19a:	697b      	ldr	r3, [r7, #20]
 800b19c:	1ad3      	subs	r3, r2, r3
 800b19e:	683a      	ldr	r2, [r7, #0]
 800b1a0:	429a      	cmp	r2, r3
 800b1a2:	d803      	bhi.n	800b1ac <HAL_SPI_Receive+0x478>
 800b1a4:	683b      	ldr	r3, [r7, #0]
 800b1a6:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800b1aa:	d102      	bne.n	800b1b2 <HAL_SPI_Receive+0x47e>
 800b1ac:	683b      	ldr	r3, [r7, #0]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d114      	bne.n	800b1dc <HAL_SPI_Receive+0x4a8>
 800b1b2:	68f8      	ldr	r0, [r7, #12]
 800b1b4:	f000 f830 	bl	800b218 <SPI_CloseTransfer>
 800b1b8:	68fb      	ldr	r3, [r7, #12]
 800b1ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b1be:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800b1c2:	68fb      	ldr	r3, [r7, #12]
 800b1c4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b1c8:	68fb      	ldr	r3, [r7, #12]
 800b1ca:	2201      	movs	r2, #1
 800b1cc:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800b1d0:	68fb      	ldr	r3, [r7, #12]
 800b1d2:	2200      	movs	r2, #0
 800b1d4:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800b1d8:	2303      	movs	r3, #3
 800b1da:	e019      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800b1dc:	68fb      	ldr	r3, [r7, #12]
 800b1de:	f8b3 306a 	ldrh.w	r3, [r3, #106]	@ 0x6a
 800b1e2:	b29b      	uxth	r3, r3
 800b1e4:	2b00      	cmp	r3, #0
 800b1e6:	f47f af41 	bne.w	800b06c <HAL_SPI_Receive+0x338>
 800b1ea:	68f8      	ldr	r0, [r7, #12]
 800b1ec:	f000 f814 	bl	800b218 <SPI_CloseTransfer>
 800b1f0:	68fb      	ldr	r3, [r7, #12]
 800b1f2:	2201      	movs	r2, #1
 800b1f4:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
 800b1f8:	68fb      	ldr	r3, [r7, #12]
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80
 800b200:	68fb      	ldr	r3, [r7, #12]
 800b202:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b206:	2b00      	cmp	r3, #0
 800b208:	d001      	beq.n	800b20e <HAL_SPI_Receive+0x4da>
 800b20a:	2301      	movs	r3, #1
 800b20c:	e000      	b.n	800b210 <HAL_SPI_Receive+0x4dc>
 800b20e:	2300      	movs	r3, #0
 800b210:	4618      	mov	r0, r3
 800b212:	3720      	adds	r7, #32
 800b214:	46bd      	mov	sp, r7
 800b216:	bd80      	pop	{r7, pc}

0800b218 <SPI_CloseTransfer>:
 800b218:	b480      	push	{r7}
 800b21a:	b085      	sub	sp, #20
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	681b      	ldr	r3, [r3, #0]
 800b224:	695b      	ldr	r3, [r3, #20]
 800b226:	60fb      	str	r3, [r7, #12]
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	699a      	ldr	r2, [r3, #24]
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	681b      	ldr	r3, [r3, #0]
 800b232:	f042 0208 	orr.w	r2, r2, #8
 800b236:	619a      	str	r2, [r3, #24]
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	699a      	ldr	r2, [r3, #24]
 800b23e:	687b      	ldr	r3, [r7, #4]
 800b240:	681b      	ldr	r3, [r3, #0]
 800b242:	f042 0210 	orr.w	r2, r2, #16
 800b246:	619a      	str	r2, [r3, #24]
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	681a      	ldr	r2, [r3, #0]
 800b24e:	687b      	ldr	r3, [r7, #4]
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	f022 0201 	bic.w	r2, r2, #1
 800b256:	601a      	str	r2, [r3, #0]
 800b258:	687b      	ldr	r3, [r7, #4]
 800b25a:	681b      	ldr	r3, [r3, #0]
 800b25c:	6919      	ldr	r1, [r3, #16]
 800b25e:	687b      	ldr	r3, [r7, #4]
 800b260:	681a      	ldr	r2, [r3, #0]
 800b262:	4b3c      	ldr	r3, [pc, #240]	@ (800b354 <SPI_CloseTransfer+0x13c>)
 800b264:	400b      	ands	r3, r1
 800b266:	6113      	str	r3, [r2, #16]
 800b268:	687b      	ldr	r3, [r7, #4]
 800b26a:	681b      	ldr	r3, [r3, #0]
 800b26c:	689a      	ldr	r2, [r3, #8]
 800b26e:	687b      	ldr	r3, [r7, #4]
 800b270:	681b      	ldr	r3, [r3, #0]
 800b272:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 800b276:	609a      	str	r2, [r3, #8]
 800b278:	687b      	ldr	r3, [r7, #4]
 800b27a:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800b27e:	b2db      	uxtb	r3, r3
 800b280:	2b04      	cmp	r3, #4
 800b282:	d014      	beq.n	800b2ae <SPI_CloseTransfer+0x96>
 800b284:	68fb      	ldr	r3, [r7, #12]
 800b286:	f003 0320 	and.w	r3, r3, #32
 800b28a:	2b00      	cmp	r3, #0
 800b28c:	d00f      	beq.n	800b2ae <SPI_CloseTransfer+0x96>
 800b28e:	687b      	ldr	r3, [r7, #4]
 800b290:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b294:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	681b      	ldr	r3, [r3, #0]
 800b2a2:	699a      	ldr	r2, [r3, #24]
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	681b      	ldr	r3, [r3, #0]
 800b2a8:	f042 0220 	orr.w	r2, r2, #32
 800b2ac:	619a      	str	r2, [r3, #24]
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 800b2b4:	b2db      	uxtb	r3, r3
 800b2b6:	2b03      	cmp	r3, #3
 800b2b8:	d014      	beq.n	800b2e4 <SPI_CloseTransfer+0xcc>
 800b2ba:	68fb      	ldr	r3, [r7, #12]
 800b2bc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b2c0:	2b00      	cmp	r3, #0
 800b2c2:	d00f      	beq.n	800b2e4 <SPI_CloseTransfer+0xcc>
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b2ca:	f043 0204 	orr.w	r2, r3, #4
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	681b      	ldr	r3, [r3, #0]
 800b2d8:	699a      	ldr	r2, [r3, #24]
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	681b      	ldr	r3, [r3, #0]
 800b2de:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800b2e2:	619a      	str	r2, [r3, #24]
 800b2e4:	68fb      	ldr	r3, [r7, #12]
 800b2e6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800b2ea:	2b00      	cmp	r3, #0
 800b2ec:	d00f      	beq.n	800b30e <SPI_CloseTransfer+0xf6>
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b2f4:	f043 0201 	orr.w	r2, r3, #1
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	681b      	ldr	r3, [r3, #0]
 800b302:	699a      	ldr	r2, [r3, #24]
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800b30c:	619a      	str	r2, [r3, #24]
 800b30e:	68fb      	ldr	r3, [r7, #12]
 800b310:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b314:	2b00      	cmp	r3, #0
 800b316:	d00f      	beq.n	800b338 <SPI_CloseTransfer+0x120>
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800b31e:	f043 0208 	orr.w	r2, r3, #8
 800b322:	687b      	ldr	r3, [r7, #4]
 800b324:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 800b328:	687b      	ldr	r3, [r7, #4]
 800b32a:	681b      	ldr	r3, [r3, #0]
 800b32c:	699a      	ldr	r2, [r3, #24]
 800b32e:	687b      	ldr	r3, [r7, #4]
 800b330:	681b      	ldr	r3, [r3, #0]
 800b332:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800b336:	619a      	str	r2, [r3, #24]
 800b338:	687b      	ldr	r3, [r7, #4]
 800b33a:	2200      	movs	r2, #0
 800b33c:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	2200      	movs	r2, #0
 800b344:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800b348:	bf00      	nop
 800b34a:	3714      	adds	r7, #20
 800b34c:	46bd      	mov	sp, r7
 800b34e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b352:	4770      	bx	lr
 800b354:	fffffc90 	.word	0xfffffc90

0800b358 <SPI_WaitOnFlagUntilTimeout>:
 800b358:	b580      	push	{r7, lr}
 800b35a:	b084      	sub	sp, #16
 800b35c:	af00      	add	r7, sp, #0
 800b35e:	60f8      	str	r0, [r7, #12]
 800b360:	60b9      	str	r1, [r7, #8]
 800b362:	603b      	str	r3, [r7, #0]
 800b364:	4613      	mov	r3, r2
 800b366:	71fb      	strb	r3, [r7, #7]
 800b368:	e010      	b.n	800b38c <SPI_WaitOnFlagUntilTimeout+0x34>
 800b36a:	f7f8 f9c3 	bl	80036f4 <HAL_GetTick>
 800b36e:	4602      	mov	r2, r0
 800b370:	69bb      	ldr	r3, [r7, #24]
 800b372:	1ad3      	subs	r3, r2, r3
 800b374:	683a      	ldr	r2, [r7, #0]
 800b376:	429a      	cmp	r2, r3
 800b378:	d803      	bhi.n	800b382 <SPI_WaitOnFlagUntilTimeout+0x2a>
 800b37a:	683b      	ldr	r3, [r7, #0]
 800b37c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800b380:	d102      	bne.n	800b388 <SPI_WaitOnFlagUntilTimeout+0x30>
 800b382:	683b      	ldr	r3, [r7, #0]
 800b384:	2b00      	cmp	r3, #0
 800b386:	d101      	bne.n	800b38c <SPI_WaitOnFlagUntilTimeout+0x34>
 800b388:	2303      	movs	r3, #3
 800b38a:	e00f      	b.n	800b3ac <SPI_WaitOnFlagUntilTimeout+0x54>
 800b38c:	68fb      	ldr	r3, [r7, #12]
 800b38e:	681b      	ldr	r3, [r3, #0]
 800b390:	695a      	ldr	r2, [r3, #20]
 800b392:	68bb      	ldr	r3, [r7, #8]
 800b394:	4013      	ands	r3, r2
 800b396:	68ba      	ldr	r2, [r7, #8]
 800b398:	429a      	cmp	r2, r3
 800b39a:	bf0c      	ite	eq
 800b39c:	2301      	moveq	r3, #1
 800b39e:	2300      	movne	r3, #0
 800b3a0:	b2db      	uxtb	r3, r3
 800b3a2:	461a      	mov	r2, r3
 800b3a4:	79fb      	ldrb	r3, [r7, #7]
 800b3a6:	429a      	cmp	r2, r3
 800b3a8:	d0df      	beq.n	800b36a <SPI_WaitOnFlagUntilTimeout+0x12>
 800b3aa:	2300      	movs	r3, #0
 800b3ac:	4618      	mov	r0, r3
 800b3ae:	3710      	adds	r7, #16
 800b3b0:	46bd      	mov	sp, r7
 800b3b2:	bd80      	pop	{r7, pc}

0800b3b4 <SPI_GetPacketSize>:
 800b3b4:	b480      	push	{r7}
 800b3b6:	b085      	sub	sp, #20
 800b3b8:	af00      	add	r7, sp, #0
 800b3ba:	6078      	str	r0, [r7, #4]
 800b3bc:	687b      	ldr	r3, [r7, #4]
 800b3be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b3c0:	095b      	lsrs	r3, r3, #5
 800b3c2:	3301      	adds	r3, #1
 800b3c4:	60fb      	str	r3, [r7, #12]
 800b3c6:	687b      	ldr	r3, [r7, #4]
 800b3c8:	68db      	ldr	r3, [r3, #12]
 800b3ca:	3301      	adds	r3, #1
 800b3cc:	60bb      	str	r3, [r7, #8]
 800b3ce:	68bb      	ldr	r3, [r7, #8]
 800b3d0:	3307      	adds	r3, #7
 800b3d2:	08db      	lsrs	r3, r3, #3
 800b3d4:	60bb      	str	r3, [r7, #8]
 800b3d6:	68bb      	ldr	r3, [r7, #8]
 800b3d8:	68fa      	ldr	r2, [r7, #12]
 800b3da:	fb02 f303 	mul.w	r3, r2, r3
 800b3de:	4618      	mov	r0, r3
 800b3e0:	3714      	adds	r7, #20
 800b3e2:	46bd      	mov	sp, r7
 800b3e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3e8:	4770      	bx	lr

0800b3ea <HAL_TIM_PWM_Init>:
 800b3ea:	b580      	push	{r7, lr}
 800b3ec:	b082      	sub	sp, #8
 800b3ee:	af00      	add	r7, sp, #0
 800b3f0:	6078      	str	r0, [r7, #4]
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	2b00      	cmp	r3, #0
 800b3f6:	d101      	bne.n	800b3fc <HAL_TIM_PWM_Init+0x12>
 800b3f8:	2301      	movs	r3, #1
 800b3fa:	e049      	b.n	800b490 <HAL_TIM_PWM_Init+0xa6>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800b402:	b2db      	uxtb	r3, r3
 800b404:	2b00      	cmp	r3, #0
 800b406:	d106      	bne.n	800b416 <HAL_TIM_PWM_Init+0x2c>
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	2200      	movs	r2, #0
 800b40c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b410:	6878      	ldr	r0, [r7, #4]
 800b412:	f7f8 f811 	bl	8003438 <HAL_TIM_PWM_MspInit>
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	2202      	movs	r2, #2
 800b41a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	681a      	ldr	r2, [r3, #0]
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	3304      	adds	r3, #4
 800b426:	4619      	mov	r1, r3
 800b428:	4610      	mov	r0, r2
 800b42a:	f000 fbb7 	bl	800bb9c <TIM_Base_SetConfig>
 800b42e:	687b      	ldr	r3, [r7, #4]
 800b430:	2201      	movs	r2, #1
 800b432:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	2201      	movs	r2, #1
 800b43a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	2201      	movs	r2, #1
 800b442:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	2201      	movs	r2, #1
 800b44a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	2201      	movs	r2, #1
 800b452:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800b456:	687b      	ldr	r3, [r7, #4]
 800b458:	2201      	movs	r2, #1
 800b45a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800b45e:	687b      	ldr	r3, [r7, #4]
 800b460:	2201      	movs	r2, #1
 800b462:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	2201      	movs	r2, #1
 800b46a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	2201      	movs	r2, #1
 800b472:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	2201      	movs	r2, #1
 800b47a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	2201      	movs	r2, #1
 800b482:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	2201      	movs	r2, #1
 800b48a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b48e:	2300      	movs	r3, #0
 800b490:	4618      	mov	r0, r3
 800b492:	3708      	adds	r7, #8
 800b494:	46bd      	mov	sp, r7
 800b496:	bd80      	pop	{r7, pc}

0800b498 <HAL_TIM_Encoder_Init>:
 800b498:	b580      	push	{r7, lr}
 800b49a:	b086      	sub	sp, #24
 800b49c:	af00      	add	r7, sp, #0
 800b49e:	6078      	str	r0, [r7, #4]
 800b4a0:	6039      	str	r1, [r7, #0]
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	2b00      	cmp	r3, #0
 800b4a6:	d101      	bne.n	800b4ac <HAL_TIM_Encoder_Init+0x14>
 800b4a8:	2301      	movs	r3, #1
 800b4aa:	e08f      	b.n	800b5cc <HAL_TIM_Encoder_Init+0x134>
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800b4b2:	b2db      	uxtb	r3, r3
 800b4b4:	2b00      	cmp	r3, #0
 800b4b6:	d106      	bne.n	800b4c6 <HAL_TIM_Encoder_Init+0x2e>
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	2200      	movs	r2, #0
 800b4bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b4c0:	6878      	ldr	r0, [r7, #4]
 800b4c2:	f7f7 ffdb 	bl	800347c <HAL_TIM_Encoder_MspInit>
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	2202      	movs	r2, #2
 800b4ca:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	6899      	ldr	r1, [r3, #8]
 800b4d4:	687b      	ldr	r3, [r7, #4]
 800b4d6:	681a      	ldr	r2, [r3, #0]
 800b4d8:	4b3e      	ldr	r3, [pc, #248]	@ (800b5d4 <HAL_TIM_Encoder_Init+0x13c>)
 800b4da:	400b      	ands	r3, r1
 800b4dc:	6093      	str	r3, [r2, #8]
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	681a      	ldr	r2, [r3, #0]
 800b4e2:	687b      	ldr	r3, [r7, #4]
 800b4e4:	3304      	adds	r3, #4
 800b4e6:	4619      	mov	r1, r3
 800b4e8:	4610      	mov	r0, r2
 800b4ea:	f000 fb57 	bl	800bb9c <TIM_Base_SetConfig>
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	681b      	ldr	r3, [r3, #0]
 800b4f2:	689b      	ldr	r3, [r3, #8]
 800b4f4:	617b      	str	r3, [r7, #20]
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	681b      	ldr	r3, [r3, #0]
 800b4fa:	699b      	ldr	r3, [r3, #24]
 800b4fc:	613b      	str	r3, [r7, #16]
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	6a1b      	ldr	r3, [r3, #32]
 800b504:	60fb      	str	r3, [r7, #12]
 800b506:	683b      	ldr	r3, [r7, #0]
 800b508:	681b      	ldr	r3, [r3, #0]
 800b50a:	697a      	ldr	r2, [r7, #20]
 800b50c:	4313      	orrs	r3, r2
 800b50e:	617b      	str	r3, [r7, #20]
 800b510:	693a      	ldr	r2, [r7, #16]
 800b512:	4b31      	ldr	r3, [pc, #196]	@ (800b5d8 <HAL_TIM_Encoder_Init+0x140>)
 800b514:	4013      	ands	r3, r2
 800b516:	613b      	str	r3, [r7, #16]
 800b518:	683b      	ldr	r3, [r7, #0]
 800b51a:	689a      	ldr	r2, [r3, #8]
 800b51c:	683b      	ldr	r3, [r7, #0]
 800b51e:	699b      	ldr	r3, [r3, #24]
 800b520:	021b      	lsls	r3, r3, #8
 800b522:	4313      	orrs	r3, r2
 800b524:	693a      	ldr	r2, [r7, #16]
 800b526:	4313      	orrs	r3, r2
 800b528:	613b      	str	r3, [r7, #16]
 800b52a:	693a      	ldr	r2, [r7, #16]
 800b52c:	4b2b      	ldr	r3, [pc, #172]	@ (800b5dc <HAL_TIM_Encoder_Init+0x144>)
 800b52e:	4013      	ands	r3, r2
 800b530:	613b      	str	r3, [r7, #16]
 800b532:	693a      	ldr	r2, [r7, #16]
 800b534:	4b2a      	ldr	r3, [pc, #168]	@ (800b5e0 <HAL_TIM_Encoder_Init+0x148>)
 800b536:	4013      	ands	r3, r2
 800b538:	613b      	str	r3, [r7, #16]
 800b53a:	683b      	ldr	r3, [r7, #0]
 800b53c:	68da      	ldr	r2, [r3, #12]
 800b53e:	683b      	ldr	r3, [r7, #0]
 800b540:	69db      	ldr	r3, [r3, #28]
 800b542:	021b      	lsls	r3, r3, #8
 800b544:	4313      	orrs	r3, r2
 800b546:	693a      	ldr	r2, [r7, #16]
 800b548:	4313      	orrs	r3, r2
 800b54a:	613b      	str	r3, [r7, #16]
 800b54c:	683b      	ldr	r3, [r7, #0]
 800b54e:	691b      	ldr	r3, [r3, #16]
 800b550:	011a      	lsls	r2, r3, #4
 800b552:	683b      	ldr	r3, [r7, #0]
 800b554:	6a1b      	ldr	r3, [r3, #32]
 800b556:	031b      	lsls	r3, r3, #12
 800b558:	4313      	orrs	r3, r2
 800b55a:	693a      	ldr	r2, [r7, #16]
 800b55c:	4313      	orrs	r3, r2
 800b55e:	613b      	str	r3, [r7, #16]
 800b560:	68fb      	ldr	r3, [r7, #12]
 800b562:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 800b566:	60fb      	str	r3, [r7, #12]
 800b568:	68fb      	ldr	r3, [r7, #12]
 800b56a:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 800b56e:	60fb      	str	r3, [r7, #12]
 800b570:	683b      	ldr	r3, [r7, #0]
 800b572:	685a      	ldr	r2, [r3, #4]
 800b574:	683b      	ldr	r3, [r7, #0]
 800b576:	695b      	ldr	r3, [r3, #20]
 800b578:	011b      	lsls	r3, r3, #4
 800b57a:	4313      	orrs	r3, r2
 800b57c:	68fa      	ldr	r2, [r7, #12]
 800b57e:	4313      	orrs	r3, r2
 800b580:	60fb      	str	r3, [r7, #12]
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	681b      	ldr	r3, [r3, #0]
 800b586:	697a      	ldr	r2, [r7, #20]
 800b588:	609a      	str	r2, [r3, #8]
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	681b      	ldr	r3, [r3, #0]
 800b58e:	693a      	ldr	r2, [r7, #16]
 800b590:	619a      	str	r2, [r3, #24]
 800b592:	687b      	ldr	r3, [r7, #4]
 800b594:	681b      	ldr	r3, [r3, #0]
 800b596:	68fa      	ldr	r2, [r7, #12]
 800b598:	621a      	str	r2, [r3, #32]
 800b59a:	687b      	ldr	r3, [r7, #4]
 800b59c:	2201      	movs	r2, #1
 800b59e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800b5a2:	687b      	ldr	r3, [r7, #4]
 800b5a4:	2201      	movs	r2, #1
 800b5a6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800b5aa:	687b      	ldr	r3, [r7, #4]
 800b5ac:	2201      	movs	r2, #1
 800b5ae:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800b5b2:	687b      	ldr	r3, [r7, #4]
 800b5b4:	2201      	movs	r2, #1
 800b5b6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	2201      	movs	r2, #1
 800b5be:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	2201      	movs	r2, #1
 800b5c6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	4618      	mov	r0, r3
 800b5ce:	3718      	adds	r7, #24
 800b5d0:	46bd      	mov	sp, r7
 800b5d2:	bd80      	pop	{r7, pc}
 800b5d4:	fffebff8 	.word	0xfffebff8
 800b5d8:	fffffcfc 	.word	0xfffffcfc
 800b5dc:	fffff3f3 	.word	0xfffff3f3
 800b5e0:	ffff0f0f 	.word	0xffff0f0f

0800b5e4 <HAL_TIM_Encoder_Start>:
 800b5e4:	b580      	push	{r7, lr}
 800b5e6:	b084      	sub	sp, #16
 800b5e8:	af00      	add	r7, sp, #0
 800b5ea:	6078      	str	r0, [r7, #4]
 800b5ec:	6039      	str	r1, [r7, #0]
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800b5f4:	73fb      	strb	r3, [r7, #15]
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800b5fc:	73bb      	strb	r3, [r7, #14]
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800b604:	737b      	strb	r3, [r7, #13]
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800b60c:	733b      	strb	r3, [r7, #12]
 800b60e:	683b      	ldr	r3, [r7, #0]
 800b610:	2b00      	cmp	r3, #0
 800b612:	d110      	bne.n	800b636 <HAL_TIM_Encoder_Start+0x52>
 800b614:	7bfb      	ldrb	r3, [r7, #15]
 800b616:	2b01      	cmp	r3, #1
 800b618:	d102      	bne.n	800b620 <HAL_TIM_Encoder_Start+0x3c>
 800b61a:	7b7b      	ldrb	r3, [r7, #13]
 800b61c:	2b01      	cmp	r3, #1
 800b61e:	d001      	beq.n	800b624 <HAL_TIM_Encoder_Start+0x40>
 800b620:	2301      	movs	r3, #1
 800b622:	e069      	b.n	800b6f8 <HAL_TIM_Encoder_Start+0x114>
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	2202      	movs	r2, #2
 800b628:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	2202      	movs	r2, #2
 800b630:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800b634:	e031      	b.n	800b69a <HAL_TIM_Encoder_Start+0xb6>
 800b636:	683b      	ldr	r3, [r7, #0]
 800b638:	2b04      	cmp	r3, #4
 800b63a:	d110      	bne.n	800b65e <HAL_TIM_Encoder_Start+0x7a>
 800b63c:	7bbb      	ldrb	r3, [r7, #14]
 800b63e:	2b01      	cmp	r3, #1
 800b640:	d102      	bne.n	800b648 <HAL_TIM_Encoder_Start+0x64>
 800b642:	7b3b      	ldrb	r3, [r7, #12]
 800b644:	2b01      	cmp	r3, #1
 800b646:	d001      	beq.n	800b64c <HAL_TIM_Encoder_Start+0x68>
 800b648:	2301      	movs	r3, #1
 800b64a:	e055      	b.n	800b6f8 <HAL_TIM_Encoder_Start+0x114>
 800b64c:	687b      	ldr	r3, [r7, #4]
 800b64e:	2202      	movs	r2, #2
 800b650:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	2202      	movs	r2, #2
 800b658:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800b65c:	e01d      	b.n	800b69a <HAL_TIM_Encoder_Start+0xb6>
 800b65e:	7bfb      	ldrb	r3, [r7, #15]
 800b660:	2b01      	cmp	r3, #1
 800b662:	d108      	bne.n	800b676 <HAL_TIM_Encoder_Start+0x92>
 800b664:	7bbb      	ldrb	r3, [r7, #14]
 800b666:	2b01      	cmp	r3, #1
 800b668:	d105      	bne.n	800b676 <HAL_TIM_Encoder_Start+0x92>
 800b66a:	7b7b      	ldrb	r3, [r7, #13]
 800b66c:	2b01      	cmp	r3, #1
 800b66e:	d102      	bne.n	800b676 <HAL_TIM_Encoder_Start+0x92>
 800b670:	7b3b      	ldrb	r3, [r7, #12]
 800b672:	2b01      	cmp	r3, #1
 800b674:	d001      	beq.n	800b67a <HAL_TIM_Encoder_Start+0x96>
 800b676:	2301      	movs	r3, #1
 800b678:	e03e      	b.n	800b6f8 <HAL_TIM_Encoder_Start+0x114>
 800b67a:	687b      	ldr	r3, [r7, #4]
 800b67c:	2202      	movs	r2, #2
 800b67e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	2202      	movs	r2, #2
 800b686:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800b68a:	687b      	ldr	r3, [r7, #4]
 800b68c:	2202      	movs	r2, #2
 800b68e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800b692:	687b      	ldr	r3, [r7, #4]
 800b694:	2202      	movs	r2, #2
 800b696:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800b69a:	683b      	ldr	r3, [r7, #0]
 800b69c:	2b00      	cmp	r3, #0
 800b69e:	d003      	beq.n	800b6a8 <HAL_TIM_Encoder_Start+0xc4>
 800b6a0:	683b      	ldr	r3, [r7, #0]
 800b6a2:	2b04      	cmp	r3, #4
 800b6a4:	d008      	beq.n	800b6b8 <HAL_TIM_Encoder_Start+0xd4>
 800b6a6:	e00f      	b.n	800b6c8 <HAL_TIM_Encoder_Start+0xe4>
 800b6a8:	687b      	ldr	r3, [r7, #4]
 800b6aa:	681b      	ldr	r3, [r3, #0]
 800b6ac:	2201      	movs	r2, #1
 800b6ae:	2100      	movs	r1, #0
 800b6b0:	4618      	mov	r0, r3
 800b6b2:	f000 fdef 	bl	800c294 <TIM_CCxChannelCmd>
 800b6b6:	e016      	b.n	800b6e6 <HAL_TIM_Encoder_Start+0x102>
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	681b      	ldr	r3, [r3, #0]
 800b6bc:	2201      	movs	r2, #1
 800b6be:	2104      	movs	r1, #4
 800b6c0:	4618      	mov	r0, r3
 800b6c2:	f000 fde7 	bl	800c294 <TIM_CCxChannelCmd>
 800b6c6:	e00e      	b.n	800b6e6 <HAL_TIM_Encoder_Start+0x102>
 800b6c8:	687b      	ldr	r3, [r7, #4]
 800b6ca:	681b      	ldr	r3, [r3, #0]
 800b6cc:	2201      	movs	r2, #1
 800b6ce:	2100      	movs	r1, #0
 800b6d0:	4618      	mov	r0, r3
 800b6d2:	f000 fddf 	bl	800c294 <TIM_CCxChannelCmd>
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	681b      	ldr	r3, [r3, #0]
 800b6da:	2201      	movs	r2, #1
 800b6dc:	2104      	movs	r1, #4
 800b6de:	4618      	mov	r0, r3
 800b6e0:	f000 fdd8 	bl	800c294 <TIM_CCxChannelCmd>
 800b6e4:	bf00      	nop
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	681b      	ldr	r3, [r3, #0]
 800b6ea:	681a      	ldr	r2, [r3, #0]
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	681b      	ldr	r3, [r3, #0]
 800b6f0:	f042 0201 	orr.w	r2, r2, #1
 800b6f4:	601a      	str	r2, [r3, #0]
 800b6f6:	2300      	movs	r3, #0
 800b6f8:	4618      	mov	r0, r3
 800b6fa:	3710      	adds	r7, #16
 800b6fc:	46bd      	mov	sp, r7
 800b6fe:	bd80      	pop	{r7, pc}

0800b700 <HAL_TIM_IRQHandler>:
 800b700:	b580      	push	{r7, lr}
 800b702:	b084      	sub	sp, #16
 800b704:	af00      	add	r7, sp, #0
 800b706:	6078      	str	r0, [r7, #4]
 800b708:	687b      	ldr	r3, [r7, #4]
 800b70a:	681b      	ldr	r3, [r3, #0]
 800b70c:	68db      	ldr	r3, [r3, #12]
 800b70e:	60fb      	str	r3, [r7, #12]
 800b710:	687b      	ldr	r3, [r7, #4]
 800b712:	681b      	ldr	r3, [r3, #0]
 800b714:	691b      	ldr	r3, [r3, #16]
 800b716:	60bb      	str	r3, [r7, #8]
 800b718:	68bb      	ldr	r3, [r7, #8]
 800b71a:	f003 0302 	and.w	r3, r3, #2
 800b71e:	2b00      	cmp	r3, #0
 800b720:	d020      	beq.n	800b764 <HAL_TIM_IRQHandler+0x64>
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	f003 0302 	and.w	r3, r3, #2
 800b728:	2b00      	cmp	r3, #0
 800b72a:	d01b      	beq.n	800b764 <HAL_TIM_IRQHandler+0x64>
 800b72c:	687b      	ldr	r3, [r7, #4]
 800b72e:	681b      	ldr	r3, [r3, #0]
 800b730:	f06f 0202 	mvn.w	r2, #2
 800b734:	611a      	str	r2, [r3, #16]
 800b736:	687b      	ldr	r3, [r7, #4]
 800b738:	2201      	movs	r2, #1
 800b73a:	771a      	strb	r2, [r3, #28]
 800b73c:	687b      	ldr	r3, [r7, #4]
 800b73e:	681b      	ldr	r3, [r3, #0]
 800b740:	699b      	ldr	r3, [r3, #24]
 800b742:	f003 0303 	and.w	r3, r3, #3
 800b746:	2b00      	cmp	r3, #0
 800b748:	d003      	beq.n	800b752 <HAL_TIM_IRQHandler+0x52>
 800b74a:	6878      	ldr	r0, [r7, #4]
 800b74c:	f000 fa08 	bl	800bb60 <HAL_TIM_IC_CaptureCallback>
 800b750:	e005      	b.n	800b75e <HAL_TIM_IRQHandler+0x5e>
 800b752:	6878      	ldr	r0, [r7, #4]
 800b754:	f000 f9fa 	bl	800bb4c <HAL_TIM_OC_DelayElapsedCallback>
 800b758:	6878      	ldr	r0, [r7, #4]
 800b75a:	f000 fa0b 	bl	800bb74 <HAL_TIM_PWM_PulseFinishedCallback>
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	2200      	movs	r2, #0
 800b762:	771a      	strb	r2, [r3, #28]
 800b764:	68bb      	ldr	r3, [r7, #8]
 800b766:	f003 0304 	and.w	r3, r3, #4
 800b76a:	2b00      	cmp	r3, #0
 800b76c:	d020      	beq.n	800b7b0 <HAL_TIM_IRQHandler+0xb0>
 800b76e:	68fb      	ldr	r3, [r7, #12]
 800b770:	f003 0304 	and.w	r3, r3, #4
 800b774:	2b00      	cmp	r3, #0
 800b776:	d01b      	beq.n	800b7b0 <HAL_TIM_IRQHandler+0xb0>
 800b778:	687b      	ldr	r3, [r7, #4]
 800b77a:	681b      	ldr	r3, [r3, #0]
 800b77c:	f06f 0204 	mvn.w	r2, #4
 800b780:	611a      	str	r2, [r3, #16]
 800b782:	687b      	ldr	r3, [r7, #4]
 800b784:	2202      	movs	r2, #2
 800b786:	771a      	strb	r2, [r3, #28]
 800b788:	687b      	ldr	r3, [r7, #4]
 800b78a:	681b      	ldr	r3, [r3, #0]
 800b78c:	699b      	ldr	r3, [r3, #24]
 800b78e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800b792:	2b00      	cmp	r3, #0
 800b794:	d003      	beq.n	800b79e <HAL_TIM_IRQHandler+0x9e>
 800b796:	6878      	ldr	r0, [r7, #4]
 800b798:	f000 f9e2 	bl	800bb60 <HAL_TIM_IC_CaptureCallback>
 800b79c:	e005      	b.n	800b7aa <HAL_TIM_IRQHandler+0xaa>
 800b79e:	6878      	ldr	r0, [r7, #4]
 800b7a0:	f000 f9d4 	bl	800bb4c <HAL_TIM_OC_DelayElapsedCallback>
 800b7a4:	6878      	ldr	r0, [r7, #4]
 800b7a6:	f000 f9e5 	bl	800bb74 <HAL_TIM_PWM_PulseFinishedCallback>
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	2200      	movs	r2, #0
 800b7ae:	771a      	strb	r2, [r3, #28]
 800b7b0:	68bb      	ldr	r3, [r7, #8]
 800b7b2:	f003 0308 	and.w	r3, r3, #8
 800b7b6:	2b00      	cmp	r3, #0
 800b7b8:	d020      	beq.n	800b7fc <HAL_TIM_IRQHandler+0xfc>
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	f003 0308 	and.w	r3, r3, #8
 800b7c0:	2b00      	cmp	r3, #0
 800b7c2:	d01b      	beq.n	800b7fc <HAL_TIM_IRQHandler+0xfc>
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	681b      	ldr	r3, [r3, #0]
 800b7c8:	f06f 0208 	mvn.w	r2, #8
 800b7cc:	611a      	str	r2, [r3, #16]
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	2204      	movs	r2, #4
 800b7d2:	771a      	strb	r2, [r3, #28]
 800b7d4:	687b      	ldr	r3, [r7, #4]
 800b7d6:	681b      	ldr	r3, [r3, #0]
 800b7d8:	69db      	ldr	r3, [r3, #28]
 800b7da:	f003 0303 	and.w	r3, r3, #3
 800b7de:	2b00      	cmp	r3, #0
 800b7e0:	d003      	beq.n	800b7ea <HAL_TIM_IRQHandler+0xea>
 800b7e2:	6878      	ldr	r0, [r7, #4]
 800b7e4:	f000 f9bc 	bl	800bb60 <HAL_TIM_IC_CaptureCallback>
 800b7e8:	e005      	b.n	800b7f6 <HAL_TIM_IRQHandler+0xf6>
 800b7ea:	6878      	ldr	r0, [r7, #4]
 800b7ec:	f000 f9ae 	bl	800bb4c <HAL_TIM_OC_DelayElapsedCallback>
 800b7f0:	6878      	ldr	r0, [r7, #4]
 800b7f2:	f000 f9bf 	bl	800bb74 <HAL_TIM_PWM_PulseFinishedCallback>
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	2200      	movs	r2, #0
 800b7fa:	771a      	strb	r2, [r3, #28]
 800b7fc:	68bb      	ldr	r3, [r7, #8]
 800b7fe:	f003 0310 	and.w	r3, r3, #16
 800b802:	2b00      	cmp	r3, #0
 800b804:	d020      	beq.n	800b848 <HAL_TIM_IRQHandler+0x148>
 800b806:	68fb      	ldr	r3, [r7, #12]
 800b808:	f003 0310 	and.w	r3, r3, #16
 800b80c:	2b00      	cmp	r3, #0
 800b80e:	d01b      	beq.n	800b848 <HAL_TIM_IRQHandler+0x148>
 800b810:	687b      	ldr	r3, [r7, #4]
 800b812:	681b      	ldr	r3, [r3, #0]
 800b814:	f06f 0210 	mvn.w	r2, #16
 800b818:	611a      	str	r2, [r3, #16]
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	2208      	movs	r2, #8
 800b81e:	771a      	strb	r2, [r3, #28]
 800b820:	687b      	ldr	r3, [r7, #4]
 800b822:	681b      	ldr	r3, [r3, #0]
 800b824:	69db      	ldr	r3, [r3, #28]
 800b826:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800b82a:	2b00      	cmp	r3, #0
 800b82c:	d003      	beq.n	800b836 <HAL_TIM_IRQHandler+0x136>
 800b82e:	6878      	ldr	r0, [r7, #4]
 800b830:	f000 f996 	bl	800bb60 <HAL_TIM_IC_CaptureCallback>
 800b834:	e005      	b.n	800b842 <HAL_TIM_IRQHandler+0x142>
 800b836:	6878      	ldr	r0, [r7, #4]
 800b838:	f000 f988 	bl	800bb4c <HAL_TIM_OC_DelayElapsedCallback>
 800b83c:	6878      	ldr	r0, [r7, #4]
 800b83e:	f000 f999 	bl	800bb74 <HAL_TIM_PWM_PulseFinishedCallback>
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	2200      	movs	r2, #0
 800b846:	771a      	strb	r2, [r3, #28]
 800b848:	68bb      	ldr	r3, [r7, #8]
 800b84a:	f003 0301 	and.w	r3, r3, #1
 800b84e:	2b00      	cmp	r3, #0
 800b850:	d00c      	beq.n	800b86c <HAL_TIM_IRQHandler+0x16c>
 800b852:	68fb      	ldr	r3, [r7, #12]
 800b854:	f003 0301 	and.w	r3, r3, #1
 800b858:	2b00      	cmp	r3, #0
 800b85a:	d007      	beq.n	800b86c <HAL_TIM_IRQHandler+0x16c>
 800b85c:	687b      	ldr	r3, [r7, #4]
 800b85e:	681b      	ldr	r3, [r3, #0]
 800b860:	f06f 0201 	mvn.w	r2, #1
 800b864:	611a      	str	r2, [r3, #16]
 800b866:	6878      	ldr	r0, [r7, #4]
 800b868:	f000 f966 	bl	800bb38 <HAL_TIM_PeriodElapsedCallback>
 800b86c:	68bb      	ldr	r3, [r7, #8]
 800b86e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800b872:	2b00      	cmp	r3, #0
 800b874:	d104      	bne.n	800b880 <HAL_TIM_IRQHandler+0x180>
 800b876:	68bb      	ldr	r3, [r7, #8]
 800b878:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800b87c:	2b00      	cmp	r3, #0
 800b87e:	d00c      	beq.n	800b89a <HAL_TIM_IRQHandler+0x19a>
 800b880:	68fb      	ldr	r3, [r7, #12]
 800b882:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800b886:	2b00      	cmp	r3, #0
 800b888:	d007      	beq.n	800b89a <HAL_TIM_IRQHandler+0x19a>
 800b88a:	687b      	ldr	r3, [r7, #4]
 800b88c:	681b      	ldr	r3, [r3, #0]
 800b88e:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 800b892:	611a      	str	r2, [r3, #16]
 800b894:	6878      	ldr	r0, [r7, #4]
 800b896:	f000 fefb 	bl	800c690 <HAL_TIMEx_BreakCallback>
 800b89a:	68bb      	ldr	r3, [r7, #8]
 800b89c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b8a0:	2b00      	cmp	r3, #0
 800b8a2:	d00c      	beq.n	800b8be <HAL_TIM_IRQHandler+0x1be>
 800b8a4:	68fb      	ldr	r3, [r7, #12]
 800b8a6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800b8aa:	2b00      	cmp	r3, #0
 800b8ac:	d007      	beq.n	800b8be <HAL_TIM_IRQHandler+0x1be>
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	681b      	ldr	r3, [r3, #0]
 800b8b2:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800b8b6:	611a      	str	r2, [r3, #16]
 800b8b8:	6878      	ldr	r0, [r7, #4]
 800b8ba:	f000 fef3 	bl	800c6a4 <HAL_TIMEx_Break2Callback>
 800b8be:	68bb      	ldr	r3, [r7, #8]
 800b8c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b8c4:	2b00      	cmp	r3, #0
 800b8c6:	d00c      	beq.n	800b8e2 <HAL_TIM_IRQHandler+0x1e2>
 800b8c8:	68fb      	ldr	r3, [r7, #12]
 800b8ca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800b8ce:	2b00      	cmp	r3, #0
 800b8d0:	d007      	beq.n	800b8e2 <HAL_TIM_IRQHandler+0x1e2>
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	681b      	ldr	r3, [r3, #0]
 800b8d6:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800b8da:	611a      	str	r2, [r3, #16]
 800b8dc:	6878      	ldr	r0, [r7, #4]
 800b8de:	f000 f953 	bl	800bb88 <HAL_TIM_TriggerCallback>
 800b8e2:	68bb      	ldr	r3, [r7, #8]
 800b8e4:	f003 0320 	and.w	r3, r3, #32
 800b8e8:	2b00      	cmp	r3, #0
 800b8ea:	d00c      	beq.n	800b906 <HAL_TIM_IRQHandler+0x206>
 800b8ec:	68fb      	ldr	r3, [r7, #12]
 800b8ee:	f003 0320 	and.w	r3, r3, #32
 800b8f2:	2b00      	cmp	r3, #0
 800b8f4:	d007      	beq.n	800b906 <HAL_TIM_IRQHandler+0x206>
 800b8f6:	687b      	ldr	r3, [r7, #4]
 800b8f8:	681b      	ldr	r3, [r3, #0]
 800b8fa:	f06f 0220 	mvn.w	r2, #32
 800b8fe:	611a      	str	r2, [r3, #16]
 800b900:	6878      	ldr	r0, [r7, #4]
 800b902:	f000 febb 	bl	800c67c <HAL_TIMEx_CommutCallback>
 800b906:	bf00      	nop
 800b908:	3710      	adds	r7, #16
 800b90a:	46bd      	mov	sp, r7
 800b90c:	bd80      	pop	{r7, pc}
	...

0800b910 <HAL_TIM_PWM_ConfigChannel>:
 800b910:	b580      	push	{r7, lr}
 800b912:	b086      	sub	sp, #24
 800b914:	af00      	add	r7, sp, #0
 800b916:	60f8      	str	r0, [r7, #12]
 800b918:	60b9      	str	r1, [r7, #8]
 800b91a:	607a      	str	r2, [r7, #4]
 800b91c:	2300      	movs	r3, #0
 800b91e:	75fb      	strb	r3, [r7, #23]
 800b920:	68fb      	ldr	r3, [r7, #12]
 800b922:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800b926:	2b01      	cmp	r3, #1
 800b928:	d101      	bne.n	800b92e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800b92a:	2302      	movs	r3, #2
 800b92c:	e0ff      	b.n	800bb2e <HAL_TIM_PWM_ConfigChannel+0x21e>
 800b92e:	68fb      	ldr	r3, [r7, #12]
 800b930:	2201      	movs	r2, #1
 800b932:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	2b14      	cmp	r3, #20
 800b93a:	f200 80f0 	bhi.w	800bb1e <HAL_TIM_PWM_ConfigChannel+0x20e>
 800b93e:	a201      	add	r2, pc, #4	@ (adr r2, 800b944 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800b940:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b944:	0800b999 	.word	0x0800b999
 800b948:	0800bb1f 	.word	0x0800bb1f
 800b94c:	0800bb1f 	.word	0x0800bb1f
 800b950:	0800bb1f 	.word	0x0800bb1f
 800b954:	0800b9d9 	.word	0x0800b9d9
 800b958:	0800bb1f 	.word	0x0800bb1f
 800b95c:	0800bb1f 	.word	0x0800bb1f
 800b960:	0800bb1f 	.word	0x0800bb1f
 800b964:	0800ba1b 	.word	0x0800ba1b
 800b968:	0800bb1f 	.word	0x0800bb1f
 800b96c:	0800bb1f 	.word	0x0800bb1f
 800b970:	0800bb1f 	.word	0x0800bb1f
 800b974:	0800ba5b 	.word	0x0800ba5b
 800b978:	0800bb1f 	.word	0x0800bb1f
 800b97c:	0800bb1f 	.word	0x0800bb1f
 800b980:	0800bb1f 	.word	0x0800bb1f
 800b984:	0800ba9d 	.word	0x0800ba9d
 800b988:	0800bb1f 	.word	0x0800bb1f
 800b98c:	0800bb1f 	.word	0x0800bb1f
 800b990:	0800bb1f 	.word	0x0800bb1f
 800b994:	0800badd 	.word	0x0800badd
 800b998:	68fb      	ldr	r3, [r7, #12]
 800b99a:	681b      	ldr	r3, [r3, #0]
 800b99c:	68b9      	ldr	r1, [r7, #8]
 800b99e:	4618      	mov	r0, r3
 800b9a0:	f000 f9a2 	bl	800bce8 <TIM_OC1_SetConfig>
 800b9a4:	68fb      	ldr	r3, [r7, #12]
 800b9a6:	681b      	ldr	r3, [r3, #0]
 800b9a8:	699a      	ldr	r2, [r3, #24]
 800b9aa:	68fb      	ldr	r3, [r7, #12]
 800b9ac:	681b      	ldr	r3, [r3, #0]
 800b9ae:	f042 0208 	orr.w	r2, r2, #8
 800b9b2:	619a      	str	r2, [r3, #24]
 800b9b4:	68fb      	ldr	r3, [r7, #12]
 800b9b6:	681b      	ldr	r3, [r3, #0]
 800b9b8:	699a      	ldr	r2, [r3, #24]
 800b9ba:	68fb      	ldr	r3, [r7, #12]
 800b9bc:	681b      	ldr	r3, [r3, #0]
 800b9be:	f022 0204 	bic.w	r2, r2, #4
 800b9c2:	619a      	str	r2, [r3, #24]
 800b9c4:	68fb      	ldr	r3, [r7, #12]
 800b9c6:	681b      	ldr	r3, [r3, #0]
 800b9c8:	6999      	ldr	r1, [r3, #24]
 800b9ca:	68bb      	ldr	r3, [r7, #8]
 800b9cc:	691a      	ldr	r2, [r3, #16]
 800b9ce:	68fb      	ldr	r3, [r7, #12]
 800b9d0:	681b      	ldr	r3, [r3, #0]
 800b9d2:	430a      	orrs	r2, r1
 800b9d4:	619a      	str	r2, [r3, #24]
 800b9d6:	e0a5      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b9d8:	68fb      	ldr	r3, [r7, #12]
 800b9da:	681b      	ldr	r3, [r3, #0]
 800b9dc:	68b9      	ldr	r1, [r7, #8]
 800b9de:	4618      	mov	r0, r3
 800b9e0:	f000 fa12 	bl	800be08 <TIM_OC2_SetConfig>
 800b9e4:	68fb      	ldr	r3, [r7, #12]
 800b9e6:	681b      	ldr	r3, [r3, #0]
 800b9e8:	699a      	ldr	r2, [r3, #24]
 800b9ea:	68fb      	ldr	r3, [r7, #12]
 800b9ec:	681b      	ldr	r3, [r3, #0]
 800b9ee:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b9f2:	619a      	str	r2, [r3, #24]
 800b9f4:	68fb      	ldr	r3, [r7, #12]
 800b9f6:	681b      	ldr	r3, [r3, #0]
 800b9f8:	699a      	ldr	r2, [r3, #24]
 800b9fa:	68fb      	ldr	r3, [r7, #12]
 800b9fc:	681b      	ldr	r3, [r3, #0]
 800b9fe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800ba02:	619a      	str	r2, [r3, #24]
 800ba04:	68fb      	ldr	r3, [r7, #12]
 800ba06:	681b      	ldr	r3, [r3, #0]
 800ba08:	6999      	ldr	r1, [r3, #24]
 800ba0a:	68bb      	ldr	r3, [r7, #8]
 800ba0c:	691b      	ldr	r3, [r3, #16]
 800ba0e:	021a      	lsls	r2, r3, #8
 800ba10:	68fb      	ldr	r3, [r7, #12]
 800ba12:	681b      	ldr	r3, [r3, #0]
 800ba14:	430a      	orrs	r2, r1
 800ba16:	619a      	str	r2, [r3, #24]
 800ba18:	e084      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800ba1a:	68fb      	ldr	r3, [r7, #12]
 800ba1c:	681b      	ldr	r3, [r3, #0]
 800ba1e:	68b9      	ldr	r1, [r7, #8]
 800ba20:	4618      	mov	r0, r3
 800ba22:	f000 fa7b 	bl	800bf1c <TIM_OC3_SetConfig>
 800ba26:	68fb      	ldr	r3, [r7, #12]
 800ba28:	681b      	ldr	r3, [r3, #0]
 800ba2a:	69da      	ldr	r2, [r3, #28]
 800ba2c:	68fb      	ldr	r3, [r7, #12]
 800ba2e:	681b      	ldr	r3, [r3, #0]
 800ba30:	f042 0208 	orr.w	r2, r2, #8
 800ba34:	61da      	str	r2, [r3, #28]
 800ba36:	68fb      	ldr	r3, [r7, #12]
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	69da      	ldr	r2, [r3, #28]
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	681b      	ldr	r3, [r3, #0]
 800ba40:	f022 0204 	bic.w	r2, r2, #4
 800ba44:	61da      	str	r2, [r3, #28]
 800ba46:	68fb      	ldr	r3, [r7, #12]
 800ba48:	681b      	ldr	r3, [r3, #0]
 800ba4a:	69d9      	ldr	r1, [r3, #28]
 800ba4c:	68bb      	ldr	r3, [r7, #8]
 800ba4e:	691a      	ldr	r2, [r3, #16]
 800ba50:	68fb      	ldr	r3, [r7, #12]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	430a      	orrs	r2, r1
 800ba56:	61da      	str	r2, [r3, #28]
 800ba58:	e064      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800ba5a:	68fb      	ldr	r3, [r7, #12]
 800ba5c:	681b      	ldr	r3, [r3, #0]
 800ba5e:	68b9      	ldr	r1, [r7, #8]
 800ba60:	4618      	mov	r0, r3
 800ba62:	f000 fae3 	bl	800c02c <TIM_OC4_SetConfig>
 800ba66:	68fb      	ldr	r3, [r7, #12]
 800ba68:	681b      	ldr	r3, [r3, #0]
 800ba6a:	69da      	ldr	r2, [r3, #28]
 800ba6c:	68fb      	ldr	r3, [r7, #12]
 800ba6e:	681b      	ldr	r3, [r3, #0]
 800ba70:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800ba74:	61da      	str	r2, [r3, #28]
 800ba76:	68fb      	ldr	r3, [r7, #12]
 800ba78:	681b      	ldr	r3, [r3, #0]
 800ba7a:	69da      	ldr	r2, [r3, #28]
 800ba7c:	68fb      	ldr	r3, [r7, #12]
 800ba7e:	681b      	ldr	r3, [r3, #0]
 800ba80:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800ba84:	61da      	str	r2, [r3, #28]
 800ba86:	68fb      	ldr	r3, [r7, #12]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	69d9      	ldr	r1, [r3, #28]
 800ba8c:	68bb      	ldr	r3, [r7, #8]
 800ba8e:	691b      	ldr	r3, [r3, #16]
 800ba90:	021a      	lsls	r2, r3, #8
 800ba92:	68fb      	ldr	r3, [r7, #12]
 800ba94:	681b      	ldr	r3, [r3, #0]
 800ba96:	430a      	orrs	r2, r1
 800ba98:	61da      	str	r2, [r3, #28]
 800ba9a:	e043      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800ba9c:	68fb      	ldr	r3, [r7, #12]
 800ba9e:	681b      	ldr	r3, [r3, #0]
 800baa0:	68b9      	ldr	r1, [r7, #8]
 800baa2:	4618      	mov	r0, r3
 800baa4:	f000 fb2c 	bl	800c100 <TIM_OC5_SetConfig>
 800baa8:	68fb      	ldr	r3, [r7, #12]
 800baaa:	681b      	ldr	r3, [r3, #0]
 800baac:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800baae:	68fb      	ldr	r3, [r7, #12]
 800bab0:	681b      	ldr	r3, [r3, #0]
 800bab2:	f042 0208 	orr.w	r2, r2, #8
 800bab6:	655a      	str	r2, [r3, #84]	@ 0x54
 800bab8:	68fb      	ldr	r3, [r7, #12]
 800baba:	681b      	ldr	r3, [r3, #0]
 800babc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800babe:	68fb      	ldr	r3, [r7, #12]
 800bac0:	681b      	ldr	r3, [r3, #0]
 800bac2:	f022 0204 	bic.w	r2, r2, #4
 800bac6:	655a      	str	r2, [r3, #84]	@ 0x54
 800bac8:	68fb      	ldr	r3, [r7, #12]
 800baca:	681b      	ldr	r3, [r3, #0]
 800bacc:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800bace:	68bb      	ldr	r3, [r7, #8]
 800bad0:	691a      	ldr	r2, [r3, #16]
 800bad2:	68fb      	ldr	r3, [r7, #12]
 800bad4:	681b      	ldr	r3, [r3, #0]
 800bad6:	430a      	orrs	r2, r1
 800bad8:	655a      	str	r2, [r3, #84]	@ 0x54
 800bada:	e023      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800badc:	68fb      	ldr	r3, [r7, #12]
 800bade:	681b      	ldr	r3, [r3, #0]
 800bae0:	68b9      	ldr	r1, [r7, #8]
 800bae2:	4618      	mov	r0, r3
 800bae4:	f000 fb70 	bl	800c1c8 <TIM_OC6_SetConfig>
 800bae8:	68fb      	ldr	r3, [r7, #12]
 800baea:	681b      	ldr	r3, [r3, #0]
 800baec:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800baee:	68fb      	ldr	r3, [r7, #12]
 800baf0:	681b      	ldr	r3, [r3, #0]
 800baf2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800baf6:	655a      	str	r2, [r3, #84]	@ 0x54
 800baf8:	68fb      	ldr	r3, [r7, #12]
 800bafa:	681b      	ldr	r3, [r3, #0]
 800bafc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800bafe:	68fb      	ldr	r3, [r7, #12]
 800bb00:	681b      	ldr	r3, [r3, #0]
 800bb02:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800bb06:	655a      	str	r2, [r3, #84]	@ 0x54
 800bb08:	68fb      	ldr	r3, [r7, #12]
 800bb0a:	681b      	ldr	r3, [r3, #0]
 800bb0c:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800bb0e:	68bb      	ldr	r3, [r7, #8]
 800bb10:	691b      	ldr	r3, [r3, #16]
 800bb12:	021a      	lsls	r2, r3, #8
 800bb14:	68fb      	ldr	r3, [r7, #12]
 800bb16:	681b      	ldr	r3, [r3, #0]
 800bb18:	430a      	orrs	r2, r1
 800bb1a:	655a      	str	r2, [r3, #84]	@ 0x54
 800bb1c:	e002      	b.n	800bb24 <HAL_TIM_PWM_ConfigChannel+0x214>
 800bb1e:	2301      	movs	r3, #1
 800bb20:	75fb      	strb	r3, [r7, #23]
 800bb22:	bf00      	nop
 800bb24:	68fb      	ldr	r3, [r7, #12]
 800bb26:	2200      	movs	r2, #0
 800bb28:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800bb2c:	7dfb      	ldrb	r3, [r7, #23]
 800bb2e:	4618      	mov	r0, r3
 800bb30:	3718      	adds	r7, #24
 800bb32:	46bd      	mov	sp, r7
 800bb34:	bd80      	pop	{r7, pc}
 800bb36:	bf00      	nop

0800bb38 <HAL_TIM_PeriodElapsedCallback>:
 800bb38:	b480      	push	{r7}
 800bb3a:	b083      	sub	sp, #12
 800bb3c:	af00      	add	r7, sp, #0
 800bb3e:	6078      	str	r0, [r7, #4]
 800bb40:	bf00      	nop
 800bb42:	370c      	adds	r7, #12
 800bb44:	46bd      	mov	sp, r7
 800bb46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb4a:	4770      	bx	lr

0800bb4c <HAL_TIM_OC_DelayElapsedCallback>:
 800bb4c:	b480      	push	{r7}
 800bb4e:	b083      	sub	sp, #12
 800bb50:	af00      	add	r7, sp, #0
 800bb52:	6078      	str	r0, [r7, #4]
 800bb54:	bf00      	nop
 800bb56:	370c      	adds	r7, #12
 800bb58:	46bd      	mov	sp, r7
 800bb5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb5e:	4770      	bx	lr

0800bb60 <HAL_TIM_IC_CaptureCallback>:
 800bb60:	b480      	push	{r7}
 800bb62:	b083      	sub	sp, #12
 800bb64:	af00      	add	r7, sp, #0
 800bb66:	6078      	str	r0, [r7, #4]
 800bb68:	bf00      	nop
 800bb6a:	370c      	adds	r7, #12
 800bb6c:	46bd      	mov	sp, r7
 800bb6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb72:	4770      	bx	lr

0800bb74 <HAL_TIM_PWM_PulseFinishedCallback>:
 800bb74:	b480      	push	{r7}
 800bb76:	b083      	sub	sp, #12
 800bb78:	af00      	add	r7, sp, #0
 800bb7a:	6078      	str	r0, [r7, #4]
 800bb7c:	bf00      	nop
 800bb7e:	370c      	adds	r7, #12
 800bb80:	46bd      	mov	sp, r7
 800bb82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb86:	4770      	bx	lr

0800bb88 <HAL_TIM_TriggerCallback>:
 800bb88:	b480      	push	{r7}
 800bb8a:	b083      	sub	sp, #12
 800bb8c:	af00      	add	r7, sp, #0
 800bb8e:	6078      	str	r0, [r7, #4]
 800bb90:	bf00      	nop
 800bb92:	370c      	adds	r7, #12
 800bb94:	46bd      	mov	sp, r7
 800bb96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb9a:	4770      	bx	lr

0800bb9c <TIM_Base_SetConfig>:
 800bb9c:	b480      	push	{r7}
 800bb9e:	b085      	sub	sp, #20
 800bba0:	af00      	add	r7, sp, #0
 800bba2:	6078      	str	r0, [r7, #4]
 800bba4:	6039      	str	r1, [r7, #0]
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	681b      	ldr	r3, [r3, #0]
 800bbaa:	60fb      	str	r3, [r7, #12]
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	4a46      	ldr	r2, [pc, #280]	@ (800bcc8 <TIM_Base_SetConfig+0x12c>)
 800bbb0:	4293      	cmp	r3, r2
 800bbb2:	d013      	beq.n	800bbdc <TIM_Base_SetConfig+0x40>
 800bbb4:	687b      	ldr	r3, [r7, #4]
 800bbb6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800bbba:	d00f      	beq.n	800bbdc <TIM_Base_SetConfig+0x40>
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	4a43      	ldr	r2, [pc, #268]	@ (800bccc <TIM_Base_SetConfig+0x130>)
 800bbc0:	4293      	cmp	r3, r2
 800bbc2:	d00b      	beq.n	800bbdc <TIM_Base_SetConfig+0x40>
 800bbc4:	687b      	ldr	r3, [r7, #4]
 800bbc6:	4a42      	ldr	r2, [pc, #264]	@ (800bcd0 <TIM_Base_SetConfig+0x134>)
 800bbc8:	4293      	cmp	r3, r2
 800bbca:	d007      	beq.n	800bbdc <TIM_Base_SetConfig+0x40>
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	4a41      	ldr	r2, [pc, #260]	@ (800bcd4 <TIM_Base_SetConfig+0x138>)
 800bbd0:	4293      	cmp	r3, r2
 800bbd2:	d003      	beq.n	800bbdc <TIM_Base_SetConfig+0x40>
 800bbd4:	687b      	ldr	r3, [r7, #4]
 800bbd6:	4a40      	ldr	r2, [pc, #256]	@ (800bcd8 <TIM_Base_SetConfig+0x13c>)
 800bbd8:	4293      	cmp	r3, r2
 800bbda:	d108      	bne.n	800bbee <TIM_Base_SetConfig+0x52>
 800bbdc:	68fb      	ldr	r3, [r7, #12]
 800bbde:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800bbe2:	60fb      	str	r3, [r7, #12]
 800bbe4:	683b      	ldr	r3, [r7, #0]
 800bbe6:	685b      	ldr	r3, [r3, #4]
 800bbe8:	68fa      	ldr	r2, [r7, #12]
 800bbea:	4313      	orrs	r3, r2
 800bbec:	60fb      	str	r3, [r7, #12]
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	4a35      	ldr	r2, [pc, #212]	@ (800bcc8 <TIM_Base_SetConfig+0x12c>)
 800bbf2:	4293      	cmp	r3, r2
 800bbf4:	d01f      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800bbfc:	d01b      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	4a32      	ldr	r2, [pc, #200]	@ (800bccc <TIM_Base_SetConfig+0x130>)
 800bc02:	4293      	cmp	r3, r2
 800bc04:	d017      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	4a31      	ldr	r2, [pc, #196]	@ (800bcd0 <TIM_Base_SetConfig+0x134>)
 800bc0a:	4293      	cmp	r3, r2
 800bc0c:	d013      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc0e:	687b      	ldr	r3, [r7, #4]
 800bc10:	4a30      	ldr	r2, [pc, #192]	@ (800bcd4 <TIM_Base_SetConfig+0x138>)
 800bc12:	4293      	cmp	r3, r2
 800bc14:	d00f      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	4a2f      	ldr	r2, [pc, #188]	@ (800bcd8 <TIM_Base_SetConfig+0x13c>)
 800bc1a:	4293      	cmp	r3, r2
 800bc1c:	d00b      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc1e:	687b      	ldr	r3, [r7, #4]
 800bc20:	4a2e      	ldr	r2, [pc, #184]	@ (800bcdc <TIM_Base_SetConfig+0x140>)
 800bc22:	4293      	cmp	r3, r2
 800bc24:	d007      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc26:	687b      	ldr	r3, [r7, #4]
 800bc28:	4a2d      	ldr	r2, [pc, #180]	@ (800bce0 <TIM_Base_SetConfig+0x144>)
 800bc2a:	4293      	cmp	r3, r2
 800bc2c:	d003      	beq.n	800bc36 <TIM_Base_SetConfig+0x9a>
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	4a2c      	ldr	r2, [pc, #176]	@ (800bce4 <TIM_Base_SetConfig+0x148>)
 800bc32:	4293      	cmp	r3, r2
 800bc34:	d108      	bne.n	800bc48 <TIM_Base_SetConfig+0xac>
 800bc36:	68fb      	ldr	r3, [r7, #12]
 800bc38:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800bc3c:	60fb      	str	r3, [r7, #12]
 800bc3e:	683b      	ldr	r3, [r7, #0]
 800bc40:	68db      	ldr	r3, [r3, #12]
 800bc42:	68fa      	ldr	r2, [r7, #12]
 800bc44:	4313      	orrs	r3, r2
 800bc46:	60fb      	str	r3, [r7, #12]
 800bc48:	68fb      	ldr	r3, [r7, #12]
 800bc4a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800bc4e:	683b      	ldr	r3, [r7, #0]
 800bc50:	695b      	ldr	r3, [r3, #20]
 800bc52:	4313      	orrs	r3, r2
 800bc54:	60fb      	str	r3, [r7, #12]
 800bc56:	687b      	ldr	r3, [r7, #4]
 800bc58:	68fa      	ldr	r2, [r7, #12]
 800bc5a:	601a      	str	r2, [r3, #0]
 800bc5c:	683b      	ldr	r3, [r7, #0]
 800bc5e:	689a      	ldr	r2, [r3, #8]
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	62da      	str	r2, [r3, #44]	@ 0x2c
 800bc64:	683b      	ldr	r3, [r7, #0]
 800bc66:	681a      	ldr	r2, [r3, #0]
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	629a      	str	r2, [r3, #40]	@ 0x28
 800bc6c:	687b      	ldr	r3, [r7, #4]
 800bc6e:	4a16      	ldr	r2, [pc, #88]	@ (800bcc8 <TIM_Base_SetConfig+0x12c>)
 800bc70:	4293      	cmp	r3, r2
 800bc72:	d00f      	beq.n	800bc94 <TIM_Base_SetConfig+0xf8>
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	4a18      	ldr	r2, [pc, #96]	@ (800bcd8 <TIM_Base_SetConfig+0x13c>)
 800bc78:	4293      	cmp	r3, r2
 800bc7a:	d00b      	beq.n	800bc94 <TIM_Base_SetConfig+0xf8>
 800bc7c:	687b      	ldr	r3, [r7, #4]
 800bc7e:	4a17      	ldr	r2, [pc, #92]	@ (800bcdc <TIM_Base_SetConfig+0x140>)
 800bc80:	4293      	cmp	r3, r2
 800bc82:	d007      	beq.n	800bc94 <TIM_Base_SetConfig+0xf8>
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	4a16      	ldr	r2, [pc, #88]	@ (800bce0 <TIM_Base_SetConfig+0x144>)
 800bc88:	4293      	cmp	r3, r2
 800bc8a:	d003      	beq.n	800bc94 <TIM_Base_SetConfig+0xf8>
 800bc8c:	687b      	ldr	r3, [r7, #4]
 800bc8e:	4a15      	ldr	r2, [pc, #84]	@ (800bce4 <TIM_Base_SetConfig+0x148>)
 800bc90:	4293      	cmp	r3, r2
 800bc92:	d103      	bne.n	800bc9c <TIM_Base_SetConfig+0x100>
 800bc94:	683b      	ldr	r3, [r7, #0]
 800bc96:	691a      	ldr	r2, [r3, #16]
 800bc98:	687b      	ldr	r3, [r7, #4]
 800bc9a:	631a      	str	r2, [r3, #48]	@ 0x30
 800bc9c:	687b      	ldr	r3, [r7, #4]
 800bc9e:	2201      	movs	r2, #1
 800bca0:	615a      	str	r2, [r3, #20]
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	691b      	ldr	r3, [r3, #16]
 800bca6:	f003 0301 	and.w	r3, r3, #1
 800bcaa:	2b01      	cmp	r3, #1
 800bcac:	d105      	bne.n	800bcba <TIM_Base_SetConfig+0x11e>
 800bcae:	687b      	ldr	r3, [r7, #4]
 800bcb0:	691b      	ldr	r3, [r3, #16]
 800bcb2:	f023 0201 	bic.w	r2, r3, #1
 800bcb6:	687b      	ldr	r3, [r7, #4]
 800bcb8:	611a      	str	r2, [r3, #16]
 800bcba:	bf00      	nop
 800bcbc:	3714      	adds	r7, #20
 800bcbe:	46bd      	mov	sp, r7
 800bcc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcc4:	4770      	bx	lr
 800bcc6:	bf00      	nop
 800bcc8:	40010000 	.word	0x40010000
 800bccc:	40000400 	.word	0x40000400
 800bcd0:	40000800 	.word	0x40000800
 800bcd4:	40000c00 	.word	0x40000c00
 800bcd8:	40010400 	.word	0x40010400
 800bcdc:	40014000 	.word	0x40014000
 800bce0:	40014400 	.word	0x40014400
 800bce4:	40014800 	.word	0x40014800

0800bce8 <TIM_OC1_SetConfig>:
 800bce8:	b480      	push	{r7}
 800bcea:	b087      	sub	sp, #28
 800bcec:	af00      	add	r7, sp, #0
 800bcee:	6078      	str	r0, [r7, #4]
 800bcf0:	6039      	str	r1, [r7, #0]
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	6a1b      	ldr	r3, [r3, #32]
 800bcf6:	617b      	str	r3, [r7, #20]
 800bcf8:	687b      	ldr	r3, [r7, #4]
 800bcfa:	6a1b      	ldr	r3, [r3, #32]
 800bcfc:	f023 0201 	bic.w	r2, r3, #1
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	621a      	str	r2, [r3, #32]
 800bd04:	687b      	ldr	r3, [r7, #4]
 800bd06:	685b      	ldr	r3, [r3, #4]
 800bd08:	613b      	str	r3, [r7, #16]
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	699b      	ldr	r3, [r3, #24]
 800bd0e:	60fb      	str	r3, [r7, #12]
 800bd10:	68fa      	ldr	r2, [r7, #12]
 800bd12:	4b37      	ldr	r3, [pc, #220]	@ (800bdf0 <TIM_OC1_SetConfig+0x108>)
 800bd14:	4013      	ands	r3, r2
 800bd16:	60fb      	str	r3, [r7, #12]
 800bd18:	68fb      	ldr	r3, [r7, #12]
 800bd1a:	f023 0303 	bic.w	r3, r3, #3
 800bd1e:	60fb      	str	r3, [r7, #12]
 800bd20:	683b      	ldr	r3, [r7, #0]
 800bd22:	681b      	ldr	r3, [r3, #0]
 800bd24:	68fa      	ldr	r2, [r7, #12]
 800bd26:	4313      	orrs	r3, r2
 800bd28:	60fb      	str	r3, [r7, #12]
 800bd2a:	697b      	ldr	r3, [r7, #20]
 800bd2c:	f023 0302 	bic.w	r3, r3, #2
 800bd30:	617b      	str	r3, [r7, #20]
 800bd32:	683b      	ldr	r3, [r7, #0]
 800bd34:	689b      	ldr	r3, [r3, #8]
 800bd36:	697a      	ldr	r2, [r7, #20]
 800bd38:	4313      	orrs	r3, r2
 800bd3a:	617b      	str	r3, [r7, #20]
 800bd3c:	687b      	ldr	r3, [r7, #4]
 800bd3e:	4a2d      	ldr	r2, [pc, #180]	@ (800bdf4 <TIM_OC1_SetConfig+0x10c>)
 800bd40:	4293      	cmp	r3, r2
 800bd42:	d00f      	beq.n	800bd64 <TIM_OC1_SetConfig+0x7c>
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	4a2c      	ldr	r2, [pc, #176]	@ (800bdf8 <TIM_OC1_SetConfig+0x110>)
 800bd48:	4293      	cmp	r3, r2
 800bd4a:	d00b      	beq.n	800bd64 <TIM_OC1_SetConfig+0x7c>
 800bd4c:	687b      	ldr	r3, [r7, #4]
 800bd4e:	4a2b      	ldr	r2, [pc, #172]	@ (800bdfc <TIM_OC1_SetConfig+0x114>)
 800bd50:	4293      	cmp	r3, r2
 800bd52:	d007      	beq.n	800bd64 <TIM_OC1_SetConfig+0x7c>
 800bd54:	687b      	ldr	r3, [r7, #4]
 800bd56:	4a2a      	ldr	r2, [pc, #168]	@ (800be00 <TIM_OC1_SetConfig+0x118>)
 800bd58:	4293      	cmp	r3, r2
 800bd5a:	d003      	beq.n	800bd64 <TIM_OC1_SetConfig+0x7c>
 800bd5c:	687b      	ldr	r3, [r7, #4]
 800bd5e:	4a29      	ldr	r2, [pc, #164]	@ (800be04 <TIM_OC1_SetConfig+0x11c>)
 800bd60:	4293      	cmp	r3, r2
 800bd62:	d10c      	bne.n	800bd7e <TIM_OC1_SetConfig+0x96>
 800bd64:	697b      	ldr	r3, [r7, #20]
 800bd66:	f023 0308 	bic.w	r3, r3, #8
 800bd6a:	617b      	str	r3, [r7, #20]
 800bd6c:	683b      	ldr	r3, [r7, #0]
 800bd6e:	68db      	ldr	r3, [r3, #12]
 800bd70:	697a      	ldr	r2, [r7, #20]
 800bd72:	4313      	orrs	r3, r2
 800bd74:	617b      	str	r3, [r7, #20]
 800bd76:	697b      	ldr	r3, [r7, #20]
 800bd78:	f023 0304 	bic.w	r3, r3, #4
 800bd7c:	617b      	str	r3, [r7, #20]
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	4a1c      	ldr	r2, [pc, #112]	@ (800bdf4 <TIM_OC1_SetConfig+0x10c>)
 800bd82:	4293      	cmp	r3, r2
 800bd84:	d00f      	beq.n	800bda6 <TIM_OC1_SetConfig+0xbe>
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	4a1b      	ldr	r2, [pc, #108]	@ (800bdf8 <TIM_OC1_SetConfig+0x110>)
 800bd8a:	4293      	cmp	r3, r2
 800bd8c:	d00b      	beq.n	800bda6 <TIM_OC1_SetConfig+0xbe>
 800bd8e:	687b      	ldr	r3, [r7, #4]
 800bd90:	4a1a      	ldr	r2, [pc, #104]	@ (800bdfc <TIM_OC1_SetConfig+0x114>)
 800bd92:	4293      	cmp	r3, r2
 800bd94:	d007      	beq.n	800bda6 <TIM_OC1_SetConfig+0xbe>
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	4a19      	ldr	r2, [pc, #100]	@ (800be00 <TIM_OC1_SetConfig+0x118>)
 800bd9a:	4293      	cmp	r3, r2
 800bd9c:	d003      	beq.n	800bda6 <TIM_OC1_SetConfig+0xbe>
 800bd9e:	687b      	ldr	r3, [r7, #4]
 800bda0:	4a18      	ldr	r2, [pc, #96]	@ (800be04 <TIM_OC1_SetConfig+0x11c>)
 800bda2:	4293      	cmp	r3, r2
 800bda4:	d111      	bne.n	800bdca <TIM_OC1_SetConfig+0xe2>
 800bda6:	693b      	ldr	r3, [r7, #16]
 800bda8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800bdac:	613b      	str	r3, [r7, #16]
 800bdae:	693b      	ldr	r3, [r7, #16]
 800bdb0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800bdb4:	613b      	str	r3, [r7, #16]
 800bdb6:	683b      	ldr	r3, [r7, #0]
 800bdb8:	695b      	ldr	r3, [r3, #20]
 800bdba:	693a      	ldr	r2, [r7, #16]
 800bdbc:	4313      	orrs	r3, r2
 800bdbe:	613b      	str	r3, [r7, #16]
 800bdc0:	683b      	ldr	r3, [r7, #0]
 800bdc2:	699b      	ldr	r3, [r3, #24]
 800bdc4:	693a      	ldr	r2, [r7, #16]
 800bdc6:	4313      	orrs	r3, r2
 800bdc8:	613b      	str	r3, [r7, #16]
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	693a      	ldr	r2, [r7, #16]
 800bdce:	605a      	str	r2, [r3, #4]
 800bdd0:	687b      	ldr	r3, [r7, #4]
 800bdd2:	68fa      	ldr	r2, [r7, #12]
 800bdd4:	619a      	str	r2, [r3, #24]
 800bdd6:	683b      	ldr	r3, [r7, #0]
 800bdd8:	685a      	ldr	r2, [r3, #4]
 800bdda:	687b      	ldr	r3, [r7, #4]
 800bddc:	635a      	str	r2, [r3, #52]	@ 0x34
 800bdde:	687b      	ldr	r3, [r7, #4]
 800bde0:	697a      	ldr	r2, [r7, #20]
 800bde2:	621a      	str	r2, [r3, #32]
 800bde4:	bf00      	nop
 800bde6:	371c      	adds	r7, #28
 800bde8:	46bd      	mov	sp, r7
 800bdea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdee:	4770      	bx	lr
 800bdf0:	fffeff8f 	.word	0xfffeff8f
 800bdf4:	40010000 	.word	0x40010000
 800bdf8:	40010400 	.word	0x40010400
 800bdfc:	40014000 	.word	0x40014000
 800be00:	40014400 	.word	0x40014400
 800be04:	40014800 	.word	0x40014800

0800be08 <TIM_OC2_SetConfig>:
 800be08:	b480      	push	{r7}
 800be0a:	b087      	sub	sp, #28
 800be0c:	af00      	add	r7, sp, #0
 800be0e:	6078      	str	r0, [r7, #4]
 800be10:	6039      	str	r1, [r7, #0]
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	6a1b      	ldr	r3, [r3, #32]
 800be16:	617b      	str	r3, [r7, #20]
 800be18:	687b      	ldr	r3, [r7, #4]
 800be1a:	6a1b      	ldr	r3, [r3, #32]
 800be1c:	f023 0210 	bic.w	r2, r3, #16
 800be20:	687b      	ldr	r3, [r7, #4]
 800be22:	621a      	str	r2, [r3, #32]
 800be24:	687b      	ldr	r3, [r7, #4]
 800be26:	685b      	ldr	r3, [r3, #4]
 800be28:	613b      	str	r3, [r7, #16]
 800be2a:	687b      	ldr	r3, [r7, #4]
 800be2c:	699b      	ldr	r3, [r3, #24]
 800be2e:	60fb      	str	r3, [r7, #12]
 800be30:	68fa      	ldr	r2, [r7, #12]
 800be32:	4b34      	ldr	r3, [pc, #208]	@ (800bf04 <TIM_OC2_SetConfig+0xfc>)
 800be34:	4013      	ands	r3, r2
 800be36:	60fb      	str	r3, [r7, #12]
 800be38:	68fb      	ldr	r3, [r7, #12]
 800be3a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800be3e:	60fb      	str	r3, [r7, #12]
 800be40:	683b      	ldr	r3, [r7, #0]
 800be42:	681b      	ldr	r3, [r3, #0]
 800be44:	021b      	lsls	r3, r3, #8
 800be46:	68fa      	ldr	r2, [r7, #12]
 800be48:	4313      	orrs	r3, r2
 800be4a:	60fb      	str	r3, [r7, #12]
 800be4c:	697b      	ldr	r3, [r7, #20]
 800be4e:	f023 0320 	bic.w	r3, r3, #32
 800be52:	617b      	str	r3, [r7, #20]
 800be54:	683b      	ldr	r3, [r7, #0]
 800be56:	689b      	ldr	r3, [r3, #8]
 800be58:	011b      	lsls	r3, r3, #4
 800be5a:	697a      	ldr	r2, [r7, #20]
 800be5c:	4313      	orrs	r3, r2
 800be5e:	617b      	str	r3, [r7, #20]
 800be60:	687b      	ldr	r3, [r7, #4]
 800be62:	4a29      	ldr	r2, [pc, #164]	@ (800bf08 <TIM_OC2_SetConfig+0x100>)
 800be64:	4293      	cmp	r3, r2
 800be66:	d003      	beq.n	800be70 <TIM_OC2_SetConfig+0x68>
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	4a28      	ldr	r2, [pc, #160]	@ (800bf0c <TIM_OC2_SetConfig+0x104>)
 800be6c:	4293      	cmp	r3, r2
 800be6e:	d10d      	bne.n	800be8c <TIM_OC2_SetConfig+0x84>
 800be70:	697b      	ldr	r3, [r7, #20]
 800be72:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800be76:	617b      	str	r3, [r7, #20]
 800be78:	683b      	ldr	r3, [r7, #0]
 800be7a:	68db      	ldr	r3, [r3, #12]
 800be7c:	011b      	lsls	r3, r3, #4
 800be7e:	697a      	ldr	r2, [r7, #20]
 800be80:	4313      	orrs	r3, r2
 800be82:	617b      	str	r3, [r7, #20]
 800be84:	697b      	ldr	r3, [r7, #20]
 800be86:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800be8a:	617b      	str	r3, [r7, #20]
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	4a1e      	ldr	r2, [pc, #120]	@ (800bf08 <TIM_OC2_SetConfig+0x100>)
 800be90:	4293      	cmp	r3, r2
 800be92:	d00f      	beq.n	800beb4 <TIM_OC2_SetConfig+0xac>
 800be94:	687b      	ldr	r3, [r7, #4]
 800be96:	4a1d      	ldr	r2, [pc, #116]	@ (800bf0c <TIM_OC2_SetConfig+0x104>)
 800be98:	4293      	cmp	r3, r2
 800be9a:	d00b      	beq.n	800beb4 <TIM_OC2_SetConfig+0xac>
 800be9c:	687b      	ldr	r3, [r7, #4]
 800be9e:	4a1c      	ldr	r2, [pc, #112]	@ (800bf10 <TIM_OC2_SetConfig+0x108>)
 800bea0:	4293      	cmp	r3, r2
 800bea2:	d007      	beq.n	800beb4 <TIM_OC2_SetConfig+0xac>
 800bea4:	687b      	ldr	r3, [r7, #4]
 800bea6:	4a1b      	ldr	r2, [pc, #108]	@ (800bf14 <TIM_OC2_SetConfig+0x10c>)
 800bea8:	4293      	cmp	r3, r2
 800beaa:	d003      	beq.n	800beb4 <TIM_OC2_SetConfig+0xac>
 800beac:	687b      	ldr	r3, [r7, #4]
 800beae:	4a1a      	ldr	r2, [pc, #104]	@ (800bf18 <TIM_OC2_SetConfig+0x110>)
 800beb0:	4293      	cmp	r3, r2
 800beb2:	d113      	bne.n	800bedc <TIM_OC2_SetConfig+0xd4>
 800beb4:	693b      	ldr	r3, [r7, #16]
 800beb6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800beba:	613b      	str	r3, [r7, #16]
 800bebc:	693b      	ldr	r3, [r7, #16]
 800bebe:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800bec2:	613b      	str	r3, [r7, #16]
 800bec4:	683b      	ldr	r3, [r7, #0]
 800bec6:	695b      	ldr	r3, [r3, #20]
 800bec8:	009b      	lsls	r3, r3, #2
 800beca:	693a      	ldr	r2, [r7, #16]
 800becc:	4313      	orrs	r3, r2
 800bece:	613b      	str	r3, [r7, #16]
 800bed0:	683b      	ldr	r3, [r7, #0]
 800bed2:	699b      	ldr	r3, [r3, #24]
 800bed4:	009b      	lsls	r3, r3, #2
 800bed6:	693a      	ldr	r2, [r7, #16]
 800bed8:	4313      	orrs	r3, r2
 800beda:	613b      	str	r3, [r7, #16]
 800bedc:	687b      	ldr	r3, [r7, #4]
 800bede:	693a      	ldr	r2, [r7, #16]
 800bee0:	605a      	str	r2, [r3, #4]
 800bee2:	687b      	ldr	r3, [r7, #4]
 800bee4:	68fa      	ldr	r2, [r7, #12]
 800bee6:	619a      	str	r2, [r3, #24]
 800bee8:	683b      	ldr	r3, [r7, #0]
 800beea:	685a      	ldr	r2, [r3, #4]
 800beec:	687b      	ldr	r3, [r7, #4]
 800beee:	639a      	str	r2, [r3, #56]	@ 0x38
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	697a      	ldr	r2, [r7, #20]
 800bef4:	621a      	str	r2, [r3, #32]
 800bef6:	bf00      	nop
 800bef8:	371c      	adds	r7, #28
 800befa:	46bd      	mov	sp, r7
 800befc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf00:	4770      	bx	lr
 800bf02:	bf00      	nop
 800bf04:	feff8fff 	.word	0xfeff8fff
 800bf08:	40010000 	.word	0x40010000
 800bf0c:	40010400 	.word	0x40010400
 800bf10:	40014000 	.word	0x40014000
 800bf14:	40014400 	.word	0x40014400
 800bf18:	40014800 	.word	0x40014800

0800bf1c <TIM_OC3_SetConfig>:
 800bf1c:	b480      	push	{r7}
 800bf1e:	b087      	sub	sp, #28
 800bf20:	af00      	add	r7, sp, #0
 800bf22:	6078      	str	r0, [r7, #4]
 800bf24:	6039      	str	r1, [r7, #0]
 800bf26:	687b      	ldr	r3, [r7, #4]
 800bf28:	6a1b      	ldr	r3, [r3, #32]
 800bf2a:	617b      	str	r3, [r7, #20]
 800bf2c:	687b      	ldr	r3, [r7, #4]
 800bf2e:	6a1b      	ldr	r3, [r3, #32]
 800bf30:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800bf34:	687b      	ldr	r3, [r7, #4]
 800bf36:	621a      	str	r2, [r3, #32]
 800bf38:	687b      	ldr	r3, [r7, #4]
 800bf3a:	685b      	ldr	r3, [r3, #4]
 800bf3c:	613b      	str	r3, [r7, #16]
 800bf3e:	687b      	ldr	r3, [r7, #4]
 800bf40:	69db      	ldr	r3, [r3, #28]
 800bf42:	60fb      	str	r3, [r7, #12]
 800bf44:	68fa      	ldr	r2, [r7, #12]
 800bf46:	4b33      	ldr	r3, [pc, #204]	@ (800c014 <TIM_OC3_SetConfig+0xf8>)
 800bf48:	4013      	ands	r3, r2
 800bf4a:	60fb      	str	r3, [r7, #12]
 800bf4c:	68fb      	ldr	r3, [r7, #12]
 800bf4e:	f023 0303 	bic.w	r3, r3, #3
 800bf52:	60fb      	str	r3, [r7, #12]
 800bf54:	683b      	ldr	r3, [r7, #0]
 800bf56:	681b      	ldr	r3, [r3, #0]
 800bf58:	68fa      	ldr	r2, [r7, #12]
 800bf5a:	4313      	orrs	r3, r2
 800bf5c:	60fb      	str	r3, [r7, #12]
 800bf5e:	697b      	ldr	r3, [r7, #20]
 800bf60:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800bf64:	617b      	str	r3, [r7, #20]
 800bf66:	683b      	ldr	r3, [r7, #0]
 800bf68:	689b      	ldr	r3, [r3, #8]
 800bf6a:	021b      	lsls	r3, r3, #8
 800bf6c:	697a      	ldr	r2, [r7, #20]
 800bf6e:	4313      	orrs	r3, r2
 800bf70:	617b      	str	r3, [r7, #20]
 800bf72:	687b      	ldr	r3, [r7, #4]
 800bf74:	4a28      	ldr	r2, [pc, #160]	@ (800c018 <TIM_OC3_SetConfig+0xfc>)
 800bf76:	4293      	cmp	r3, r2
 800bf78:	d003      	beq.n	800bf82 <TIM_OC3_SetConfig+0x66>
 800bf7a:	687b      	ldr	r3, [r7, #4]
 800bf7c:	4a27      	ldr	r2, [pc, #156]	@ (800c01c <TIM_OC3_SetConfig+0x100>)
 800bf7e:	4293      	cmp	r3, r2
 800bf80:	d10d      	bne.n	800bf9e <TIM_OC3_SetConfig+0x82>
 800bf82:	697b      	ldr	r3, [r7, #20]
 800bf84:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800bf88:	617b      	str	r3, [r7, #20]
 800bf8a:	683b      	ldr	r3, [r7, #0]
 800bf8c:	68db      	ldr	r3, [r3, #12]
 800bf8e:	021b      	lsls	r3, r3, #8
 800bf90:	697a      	ldr	r2, [r7, #20]
 800bf92:	4313      	orrs	r3, r2
 800bf94:	617b      	str	r3, [r7, #20]
 800bf96:	697b      	ldr	r3, [r7, #20]
 800bf98:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800bf9c:	617b      	str	r3, [r7, #20]
 800bf9e:	687b      	ldr	r3, [r7, #4]
 800bfa0:	4a1d      	ldr	r2, [pc, #116]	@ (800c018 <TIM_OC3_SetConfig+0xfc>)
 800bfa2:	4293      	cmp	r3, r2
 800bfa4:	d00f      	beq.n	800bfc6 <TIM_OC3_SetConfig+0xaa>
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	4a1c      	ldr	r2, [pc, #112]	@ (800c01c <TIM_OC3_SetConfig+0x100>)
 800bfaa:	4293      	cmp	r3, r2
 800bfac:	d00b      	beq.n	800bfc6 <TIM_OC3_SetConfig+0xaa>
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	4a1b      	ldr	r2, [pc, #108]	@ (800c020 <TIM_OC3_SetConfig+0x104>)
 800bfb2:	4293      	cmp	r3, r2
 800bfb4:	d007      	beq.n	800bfc6 <TIM_OC3_SetConfig+0xaa>
 800bfb6:	687b      	ldr	r3, [r7, #4]
 800bfb8:	4a1a      	ldr	r2, [pc, #104]	@ (800c024 <TIM_OC3_SetConfig+0x108>)
 800bfba:	4293      	cmp	r3, r2
 800bfbc:	d003      	beq.n	800bfc6 <TIM_OC3_SetConfig+0xaa>
 800bfbe:	687b      	ldr	r3, [r7, #4]
 800bfc0:	4a19      	ldr	r2, [pc, #100]	@ (800c028 <TIM_OC3_SetConfig+0x10c>)
 800bfc2:	4293      	cmp	r3, r2
 800bfc4:	d113      	bne.n	800bfee <TIM_OC3_SetConfig+0xd2>
 800bfc6:	693b      	ldr	r3, [r7, #16]
 800bfc8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800bfcc:	613b      	str	r3, [r7, #16]
 800bfce:	693b      	ldr	r3, [r7, #16]
 800bfd0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800bfd4:	613b      	str	r3, [r7, #16]
 800bfd6:	683b      	ldr	r3, [r7, #0]
 800bfd8:	695b      	ldr	r3, [r3, #20]
 800bfda:	011b      	lsls	r3, r3, #4
 800bfdc:	693a      	ldr	r2, [r7, #16]
 800bfde:	4313      	orrs	r3, r2
 800bfe0:	613b      	str	r3, [r7, #16]
 800bfe2:	683b      	ldr	r3, [r7, #0]
 800bfe4:	699b      	ldr	r3, [r3, #24]
 800bfe6:	011b      	lsls	r3, r3, #4
 800bfe8:	693a      	ldr	r2, [r7, #16]
 800bfea:	4313      	orrs	r3, r2
 800bfec:	613b      	str	r3, [r7, #16]
 800bfee:	687b      	ldr	r3, [r7, #4]
 800bff0:	693a      	ldr	r2, [r7, #16]
 800bff2:	605a      	str	r2, [r3, #4]
 800bff4:	687b      	ldr	r3, [r7, #4]
 800bff6:	68fa      	ldr	r2, [r7, #12]
 800bff8:	61da      	str	r2, [r3, #28]
 800bffa:	683b      	ldr	r3, [r7, #0]
 800bffc:	685a      	ldr	r2, [r3, #4]
 800bffe:	687b      	ldr	r3, [r7, #4]
 800c000:	63da      	str	r2, [r3, #60]	@ 0x3c
 800c002:	687b      	ldr	r3, [r7, #4]
 800c004:	697a      	ldr	r2, [r7, #20]
 800c006:	621a      	str	r2, [r3, #32]
 800c008:	bf00      	nop
 800c00a:	371c      	adds	r7, #28
 800c00c:	46bd      	mov	sp, r7
 800c00e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c012:	4770      	bx	lr
 800c014:	fffeff8f 	.word	0xfffeff8f
 800c018:	40010000 	.word	0x40010000
 800c01c:	40010400 	.word	0x40010400
 800c020:	40014000 	.word	0x40014000
 800c024:	40014400 	.word	0x40014400
 800c028:	40014800 	.word	0x40014800

0800c02c <TIM_OC4_SetConfig>:
 800c02c:	b480      	push	{r7}
 800c02e:	b087      	sub	sp, #28
 800c030:	af00      	add	r7, sp, #0
 800c032:	6078      	str	r0, [r7, #4]
 800c034:	6039      	str	r1, [r7, #0]
 800c036:	687b      	ldr	r3, [r7, #4]
 800c038:	6a1b      	ldr	r3, [r3, #32]
 800c03a:	613b      	str	r3, [r7, #16]
 800c03c:	687b      	ldr	r3, [r7, #4]
 800c03e:	6a1b      	ldr	r3, [r3, #32]
 800c040:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800c044:	687b      	ldr	r3, [r7, #4]
 800c046:	621a      	str	r2, [r3, #32]
 800c048:	687b      	ldr	r3, [r7, #4]
 800c04a:	685b      	ldr	r3, [r3, #4]
 800c04c:	617b      	str	r3, [r7, #20]
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	69db      	ldr	r3, [r3, #28]
 800c052:	60fb      	str	r3, [r7, #12]
 800c054:	68fa      	ldr	r2, [r7, #12]
 800c056:	4b24      	ldr	r3, [pc, #144]	@ (800c0e8 <TIM_OC4_SetConfig+0xbc>)
 800c058:	4013      	ands	r3, r2
 800c05a:	60fb      	str	r3, [r7, #12]
 800c05c:	68fb      	ldr	r3, [r7, #12]
 800c05e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800c062:	60fb      	str	r3, [r7, #12]
 800c064:	683b      	ldr	r3, [r7, #0]
 800c066:	681b      	ldr	r3, [r3, #0]
 800c068:	021b      	lsls	r3, r3, #8
 800c06a:	68fa      	ldr	r2, [r7, #12]
 800c06c:	4313      	orrs	r3, r2
 800c06e:	60fb      	str	r3, [r7, #12]
 800c070:	693b      	ldr	r3, [r7, #16]
 800c072:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800c076:	613b      	str	r3, [r7, #16]
 800c078:	683b      	ldr	r3, [r7, #0]
 800c07a:	689b      	ldr	r3, [r3, #8]
 800c07c:	031b      	lsls	r3, r3, #12
 800c07e:	693a      	ldr	r2, [r7, #16]
 800c080:	4313      	orrs	r3, r2
 800c082:	613b      	str	r3, [r7, #16]
 800c084:	687b      	ldr	r3, [r7, #4]
 800c086:	4a19      	ldr	r2, [pc, #100]	@ (800c0ec <TIM_OC4_SetConfig+0xc0>)
 800c088:	4293      	cmp	r3, r2
 800c08a:	d00f      	beq.n	800c0ac <TIM_OC4_SetConfig+0x80>
 800c08c:	687b      	ldr	r3, [r7, #4]
 800c08e:	4a18      	ldr	r2, [pc, #96]	@ (800c0f0 <TIM_OC4_SetConfig+0xc4>)
 800c090:	4293      	cmp	r3, r2
 800c092:	d00b      	beq.n	800c0ac <TIM_OC4_SetConfig+0x80>
 800c094:	687b      	ldr	r3, [r7, #4]
 800c096:	4a17      	ldr	r2, [pc, #92]	@ (800c0f4 <TIM_OC4_SetConfig+0xc8>)
 800c098:	4293      	cmp	r3, r2
 800c09a:	d007      	beq.n	800c0ac <TIM_OC4_SetConfig+0x80>
 800c09c:	687b      	ldr	r3, [r7, #4]
 800c09e:	4a16      	ldr	r2, [pc, #88]	@ (800c0f8 <TIM_OC4_SetConfig+0xcc>)
 800c0a0:	4293      	cmp	r3, r2
 800c0a2:	d003      	beq.n	800c0ac <TIM_OC4_SetConfig+0x80>
 800c0a4:	687b      	ldr	r3, [r7, #4]
 800c0a6:	4a15      	ldr	r2, [pc, #84]	@ (800c0fc <TIM_OC4_SetConfig+0xd0>)
 800c0a8:	4293      	cmp	r3, r2
 800c0aa:	d109      	bne.n	800c0c0 <TIM_OC4_SetConfig+0x94>
 800c0ac:	697b      	ldr	r3, [r7, #20]
 800c0ae:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800c0b2:	617b      	str	r3, [r7, #20]
 800c0b4:	683b      	ldr	r3, [r7, #0]
 800c0b6:	695b      	ldr	r3, [r3, #20]
 800c0b8:	019b      	lsls	r3, r3, #6
 800c0ba:	697a      	ldr	r2, [r7, #20]
 800c0bc:	4313      	orrs	r3, r2
 800c0be:	617b      	str	r3, [r7, #20]
 800c0c0:	687b      	ldr	r3, [r7, #4]
 800c0c2:	697a      	ldr	r2, [r7, #20]
 800c0c4:	605a      	str	r2, [r3, #4]
 800c0c6:	687b      	ldr	r3, [r7, #4]
 800c0c8:	68fa      	ldr	r2, [r7, #12]
 800c0ca:	61da      	str	r2, [r3, #28]
 800c0cc:	683b      	ldr	r3, [r7, #0]
 800c0ce:	685a      	ldr	r2, [r3, #4]
 800c0d0:	687b      	ldr	r3, [r7, #4]
 800c0d2:	641a      	str	r2, [r3, #64]	@ 0x40
 800c0d4:	687b      	ldr	r3, [r7, #4]
 800c0d6:	693a      	ldr	r2, [r7, #16]
 800c0d8:	621a      	str	r2, [r3, #32]
 800c0da:	bf00      	nop
 800c0dc:	371c      	adds	r7, #28
 800c0de:	46bd      	mov	sp, r7
 800c0e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0e4:	4770      	bx	lr
 800c0e6:	bf00      	nop
 800c0e8:	feff8fff 	.word	0xfeff8fff
 800c0ec:	40010000 	.word	0x40010000
 800c0f0:	40010400 	.word	0x40010400
 800c0f4:	40014000 	.word	0x40014000
 800c0f8:	40014400 	.word	0x40014400
 800c0fc:	40014800 	.word	0x40014800

0800c100 <TIM_OC5_SetConfig>:
 800c100:	b480      	push	{r7}
 800c102:	b087      	sub	sp, #28
 800c104:	af00      	add	r7, sp, #0
 800c106:	6078      	str	r0, [r7, #4]
 800c108:	6039      	str	r1, [r7, #0]
 800c10a:	687b      	ldr	r3, [r7, #4]
 800c10c:	6a1b      	ldr	r3, [r3, #32]
 800c10e:	613b      	str	r3, [r7, #16]
 800c110:	687b      	ldr	r3, [r7, #4]
 800c112:	6a1b      	ldr	r3, [r3, #32]
 800c114:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	621a      	str	r2, [r3, #32]
 800c11c:	687b      	ldr	r3, [r7, #4]
 800c11e:	685b      	ldr	r3, [r3, #4]
 800c120:	617b      	str	r3, [r7, #20]
 800c122:	687b      	ldr	r3, [r7, #4]
 800c124:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c126:	60fb      	str	r3, [r7, #12]
 800c128:	68fa      	ldr	r2, [r7, #12]
 800c12a:	4b21      	ldr	r3, [pc, #132]	@ (800c1b0 <TIM_OC5_SetConfig+0xb0>)
 800c12c:	4013      	ands	r3, r2
 800c12e:	60fb      	str	r3, [r7, #12]
 800c130:	683b      	ldr	r3, [r7, #0]
 800c132:	681b      	ldr	r3, [r3, #0]
 800c134:	68fa      	ldr	r2, [r7, #12]
 800c136:	4313      	orrs	r3, r2
 800c138:	60fb      	str	r3, [r7, #12]
 800c13a:	693b      	ldr	r3, [r7, #16]
 800c13c:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 800c140:	613b      	str	r3, [r7, #16]
 800c142:	683b      	ldr	r3, [r7, #0]
 800c144:	689b      	ldr	r3, [r3, #8]
 800c146:	041b      	lsls	r3, r3, #16
 800c148:	693a      	ldr	r2, [r7, #16]
 800c14a:	4313      	orrs	r3, r2
 800c14c:	613b      	str	r3, [r7, #16]
 800c14e:	687b      	ldr	r3, [r7, #4]
 800c150:	4a18      	ldr	r2, [pc, #96]	@ (800c1b4 <TIM_OC5_SetConfig+0xb4>)
 800c152:	4293      	cmp	r3, r2
 800c154:	d00f      	beq.n	800c176 <TIM_OC5_SetConfig+0x76>
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	4a17      	ldr	r2, [pc, #92]	@ (800c1b8 <TIM_OC5_SetConfig+0xb8>)
 800c15a:	4293      	cmp	r3, r2
 800c15c:	d00b      	beq.n	800c176 <TIM_OC5_SetConfig+0x76>
 800c15e:	687b      	ldr	r3, [r7, #4]
 800c160:	4a16      	ldr	r2, [pc, #88]	@ (800c1bc <TIM_OC5_SetConfig+0xbc>)
 800c162:	4293      	cmp	r3, r2
 800c164:	d007      	beq.n	800c176 <TIM_OC5_SetConfig+0x76>
 800c166:	687b      	ldr	r3, [r7, #4]
 800c168:	4a15      	ldr	r2, [pc, #84]	@ (800c1c0 <TIM_OC5_SetConfig+0xc0>)
 800c16a:	4293      	cmp	r3, r2
 800c16c:	d003      	beq.n	800c176 <TIM_OC5_SetConfig+0x76>
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	4a14      	ldr	r2, [pc, #80]	@ (800c1c4 <TIM_OC5_SetConfig+0xc4>)
 800c172:	4293      	cmp	r3, r2
 800c174:	d109      	bne.n	800c18a <TIM_OC5_SetConfig+0x8a>
 800c176:	697b      	ldr	r3, [r7, #20]
 800c178:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800c17c:	617b      	str	r3, [r7, #20]
 800c17e:	683b      	ldr	r3, [r7, #0]
 800c180:	695b      	ldr	r3, [r3, #20]
 800c182:	021b      	lsls	r3, r3, #8
 800c184:	697a      	ldr	r2, [r7, #20]
 800c186:	4313      	orrs	r3, r2
 800c188:	617b      	str	r3, [r7, #20]
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	697a      	ldr	r2, [r7, #20]
 800c18e:	605a      	str	r2, [r3, #4]
 800c190:	687b      	ldr	r3, [r7, #4]
 800c192:	68fa      	ldr	r2, [r7, #12]
 800c194:	655a      	str	r2, [r3, #84]	@ 0x54
 800c196:	683b      	ldr	r3, [r7, #0]
 800c198:	685a      	ldr	r2, [r3, #4]
 800c19a:	687b      	ldr	r3, [r7, #4]
 800c19c:	659a      	str	r2, [r3, #88]	@ 0x58
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	693a      	ldr	r2, [r7, #16]
 800c1a2:	621a      	str	r2, [r3, #32]
 800c1a4:	bf00      	nop
 800c1a6:	371c      	adds	r7, #28
 800c1a8:	46bd      	mov	sp, r7
 800c1aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1ae:	4770      	bx	lr
 800c1b0:	fffeff8f 	.word	0xfffeff8f
 800c1b4:	40010000 	.word	0x40010000
 800c1b8:	40010400 	.word	0x40010400
 800c1bc:	40014000 	.word	0x40014000
 800c1c0:	40014400 	.word	0x40014400
 800c1c4:	40014800 	.word	0x40014800

0800c1c8 <TIM_OC6_SetConfig>:
 800c1c8:	b480      	push	{r7}
 800c1ca:	b087      	sub	sp, #28
 800c1cc:	af00      	add	r7, sp, #0
 800c1ce:	6078      	str	r0, [r7, #4]
 800c1d0:	6039      	str	r1, [r7, #0]
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	6a1b      	ldr	r3, [r3, #32]
 800c1d6:	613b      	str	r3, [r7, #16]
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	6a1b      	ldr	r3, [r3, #32]
 800c1dc:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800c1e0:	687b      	ldr	r3, [r7, #4]
 800c1e2:	621a      	str	r2, [r3, #32]
 800c1e4:	687b      	ldr	r3, [r7, #4]
 800c1e6:	685b      	ldr	r3, [r3, #4]
 800c1e8:	617b      	str	r3, [r7, #20]
 800c1ea:	687b      	ldr	r3, [r7, #4]
 800c1ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c1ee:	60fb      	str	r3, [r7, #12]
 800c1f0:	68fa      	ldr	r2, [r7, #12]
 800c1f2:	4b22      	ldr	r3, [pc, #136]	@ (800c27c <TIM_OC6_SetConfig+0xb4>)
 800c1f4:	4013      	ands	r3, r2
 800c1f6:	60fb      	str	r3, [r7, #12]
 800c1f8:	683b      	ldr	r3, [r7, #0]
 800c1fa:	681b      	ldr	r3, [r3, #0]
 800c1fc:	021b      	lsls	r3, r3, #8
 800c1fe:	68fa      	ldr	r2, [r7, #12]
 800c200:	4313      	orrs	r3, r2
 800c202:	60fb      	str	r3, [r7, #12]
 800c204:	693b      	ldr	r3, [r7, #16]
 800c206:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800c20a:	613b      	str	r3, [r7, #16]
 800c20c:	683b      	ldr	r3, [r7, #0]
 800c20e:	689b      	ldr	r3, [r3, #8]
 800c210:	051b      	lsls	r3, r3, #20
 800c212:	693a      	ldr	r2, [r7, #16]
 800c214:	4313      	orrs	r3, r2
 800c216:	613b      	str	r3, [r7, #16]
 800c218:	687b      	ldr	r3, [r7, #4]
 800c21a:	4a19      	ldr	r2, [pc, #100]	@ (800c280 <TIM_OC6_SetConfig+0xb8>)
 800c21c:	4293      	cmp	r3, r2
 800c21e:	d00f      	beq.n	800c240 <TIM_OC6_SetConfig+0x78>
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	4a18      	ldr	r2, [pc, #96]	@ (800c284 <TIM_OC6_SetConfig+0xbc>)
 800c224:	4293      	cmp	r3, r2
 800c226:	d00b      	beq.n	800c240 <TIM_OC6_SetConfig+0x78>
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	4a17      	ldr	r2, [pc, #92]	@ (800c288 <TIM_OC6_SetConfig+0xc0>)
 800c22c:	4293      	cmp	r3, r2
 800c22e:	d007      	beq.n	800c240 <TIM_OC6_SetConfig+0x78>
 800c230:	687b      	ldr	r3, [r7, #4]
 800c232:	4a16      	ldr	r2, [pc, #88]	@ (800c28c <TIM_OC6_SetConfig+0xc4>)
 800c234:	4293      	cmp	r3, r2
 800c236:	d003      	beq.n	800c240 <TIM_OC6_SetConfig+0x78>
 800c238:	687b      	ldr	r3, [r7, #4]
 800c23a:	4a15      	ldr	r2, [pc, #84]	@ (800c290 <TIM_OC6_SetConfig+0xc8>)
 800c23c:	4293      	cmp	r3, r2
 800c23e:	d109      	bne.n	800c254 <TIM_OC6_SetConfig+0x8c>
 800c240:	697b      	ldr	r3, [r7, #20]
 800c242:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800c246:	617b      	str	r3, [r7, #20]
 800c248:	683b      	ldr	r3, [r7, #0]
 800c24a:	695b      	ldr	r3, [r3, #20]
 800c24c:	029b      	lsls	r3, r3, #10
 800c24e:	697a      	ldr	r2, [r7, #20]
 800c250:	4313      	orrs	r3, r2
 800c252:	617b      	str	r3, [r7, #20]
 800c254:	687b      	ldr	r3, [r7, #4]
 800c256:	697a      	ldr	r2, [r7, #20]
 800c258:	605a      	str	r2, [r3, #4]
 800c25a:	687b      	ldr	r3, [r7, #4]
 800c25c:	68fa      	ldr	r2, [r7, #12]
 800c25e:	655a      	str	r2, [r3, #84]	@ 0x54
 800c260:	683b      	ldr	r3, [r7, #0]
 800c262:	685a      	ldr	r2, [r3, #4]
 800c264:	687b      	ldr	r3, [r7, #4]
 800c266:	65da      	str	r2, [r3, #92]	@ 0x5c
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	693a      	ldr	r2, [r7, #16]
 800c26c:	621a      	str	r2, [r3, #32]
 800c26e:	bf00      	nop
 800c270:	371c      	adds	r7, #28
 800c272:	46bd      	mov	sp, r7
 800c274:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c278:	4770      	bx	lr
 800c27a:	bf00      	nop
 800c27c:	feff8fff 	.word	0xfeff8fff
 800c280:	40010000 	.word	0x40010000
 800c284:	40010400 	.word	0x40010400
 800c288:	40014000 	.word	0x40014000
 800c28c:	40014400 	.word	0x40014400
 800c290:	40014800 	.word	0x40014800

0800c294 <TIM_CCxChannelCmd>:
 800c294:	b480      	push	{r7}
 800c296:	b087      	sub	sp, #28
 800c298:	af00      	add	r7, sp, #0
 800c29a:	60f8      	str	r0, [r7, #12]
 800c29c:	60b9      	str	r1, [r7, #8]
 800c29e:	607a      	str	r2, [r7, #4]
 800c2a0:	68bb      	ldr	r3, [r7, #8]
 800c2a2:	f003 031f 	and.w	r3, r3, #31
 800c2a6:	2201      	movs	r2, #1
 800c2a8:	fa02 f303 	lsl.w	r3, r2, r3
 800c2ac:	617b      	str	r3, [r7, #20]
 800c2ae:	68fb      	ldr	r3, [r7, #12]
 800c2b0:	6a1a      	ldr	r2, [r3, #32]
 800c2b2:	697b      	ldr	r3, [r7, #20]
 800c2b4:	43db      	mvns	r3, r3
 800c2b6:	401a      	ands	r2, r3
 800c2b8:	68fb      	ldr	r3, [r7, #12]
 800c2ba:	621a      	str	r2, [r3, #32]
 800c2bc:	68fb      	ldr	r3, [r7, #12]
 800c2be:	6a1a      	ldr	r2, [r3, #32]
 800c2c0:	68bb      	ldr	r3, [r7, #8]
 800c2c2:	f003 031f 	and.w	r3, r3, #31
 800c2c6:	6879      	ldr	r1, [r7, #4]
 800c2c8:	fa01 f303 	lsl.w	r3, r1, r3
 800c2cc:	431a      	orrs	r2, r3
 800c2ce:	68fb      	ldr	r3, [r7, #12]
 800c2d0:	621a      	str	r2, [r3, #32]
 800c2d2:	bf00      	nop
 800c2d4:	371c      	adds	r7, #28
 800c2d6:	46bd      	mov	sp, r7
 800c2d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2dc:	4770      	bx	lr
	...

0800c2e0 <HAL_TIMEx_PWMN_Start>:
 800c2e0:	b580      	push	{r7, lr}
 800c2e2:	b084      	sub	sp, #16
 800c2e4:	af00      	add	r7, sp, #0
 800c2e6:	6078      	str	r0, [r7, #4]
 800c2e8:	6039      	str	r1, [r7, #0]
 800c2ea:	683b      	ldr	r3, [r7, #0]
 800c2ec:	2b00      	cmp	r3, #0
 800c2ee:	d109      	bne.n	800c304 <HAL_TIMEx_PWMN_Start+0x24>
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 800c2f6:	b2db      	uxtb	r3, r3
 800c2f8:	2b01      	cmp	r3, #1
 800c2fa:	bf14      	ite	ne
 800c2fc:	2301      	movne	r3, #1
 800c2fe:	2300      	moveq	r3, #0
 800c300:	b2db      	uxtb	r3, r3
 800c302:	e022      	b.n	800c34a <HAL_TIMEx_PWMN_Start+0x6a>
 800c304:	683b      	ldr	r3, [r7, #0]
 800c306:	2b04      	cmp	r3, #4
 800c308:	d109      	bne.n	800c31e <HAL_TIMEx_PWMN_Start+0x3e>
 800c30a:	687b      	ldr	r3, [r7, #4]
 800c30c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 800c310:	b2db      	uxtb	r3, r3
 800c312:	2b01      	cmp	r3, #1
 800c314:	bf14      	ite	ne
 800c316:	2301      	movne	r3, #1
 800c318:	2300      	moveq	r3, #0
 800c31a:	b2db      	uxtb	r3, r3
 800c31c:	e015      	b.n	800c34a <HAL_TIMEx_PWMN_Start+0x6a>
 800c31e:	683b      	ldr	r3, [r7, #0]
 800c320:	2b08      	cmp	r3, #8
 800c322:	d109      	bne.n	800c338 <HAL_TIMEx_PWMN_Start+0x58>
 800c324:	687b      	ldr	r3, [r7, #4]
 800c326:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 800c32a:	b2db      	uxtb	r3, r3
 800c32c:	2b01      	cmp	r3, #1
 800c32e:	bf14      	ite	ne
 800c330:	2301      	movne	r3, #1
 800c332:	2300      	moveq	r3, #0
 800c334:	b2db      	uxtb	r3, r3
 800c336:	e008      	b.n	800c34a <HAL_TIMEx_PWMN_Start+0x6a>
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	f893 3047 	ldrb.w	r3, [r3, #71]	@ 0x47
 800c33e:	b2db      	uxtb	r3, r3
 800c340:	2b01      	cmp	r3, #1
 800c342:	bf14      	ite	ne
 800c344:	2301      	movne	r3, #1
 800c346:	2300      	moveq	r3, #0
 800c348:	b2db      	uxtb	r3, r3
 800c34a:	2b00      	cmp	r3, #0
 800c34c:	d001      	beq.n	800c352 <HAL_TIMEx_PWMN_Start+0x72>
 800c34e:	2301      	movs	r3, #1
 800c350:	e073      	b.n	800c43a <HAL_TIMEx_PWMN_Start+0x15a>
 800c352:	683b      	ldr	r3, [r7, #0]
 800c354:	2b00      	cmp	r3, #0
 800c356:	d104      	bne.n	800c362 <HAL_TIMEx_PWMN_Start+0x82>
 800c358:	687b      	ldr	r3, [r7, #4]
 800c35a:	2202      	movs	r2, #2
 800c35c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800c360:	e013      	b.n	800c38a <HAL_TIMEx_PWMN_Start+0xaa>
 800c362:	683b      	ldr	r3, [r7, #0]
 800c364:	2b04      	cmp	r3, #4
 800c366:	d104      	bne.n	800c372 <HAL_TIMEx_PWMN_Start+0x92>
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	2202      	movs	r2, #2
 800c36c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800c370:	e00b      	b.n	800c38a <HAL_TIMEx_PWMN_Start+0xaa>
 800c372:	683b      	ldr	r3, [r7, #0]
 800c374:	2b08      	cmp	r3, #8
 800c376:	d104      	bne.n	800c382 <HAL_TIMEx_PWMN_Start+0xa2>
 800c378:	687b      	ldr	r3, [r7, #4]
 800c37a:	2202      	movs	r2, #2
 800c37c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800c380:	e003      	b.n	800c38a <HAL_TIMEx_PWMN_Start+0xaa>
 800c382:	687b      	ldr	r3, [r7, #4]
 800c384:	2202      	movs	r2, #2
 800c386:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800c38a:	687b      	ldr	r3, [r7, #4]
 800c38c:	681b      	ldr	r3, [r3, #0]
 800c38e:	2204      	movs	r2, #4
 800c390:	6839      	ldr	r1, [r7, #0]
 800c392:	4618      	mov	r0, r3
 800c394:	f000 f990 	bl	800c6b8 <TIM_CCxNChannelCmd>
 800c398:	687b      	ldr	r3, [r7, #4]
 800c39a:	681b      	ldr	r3, [r3, #0]
 800c39c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800c39e:	687b      	ldr	r3, [r7, #4]
 800c3a0:	681b      	ldr	r3, [r3, #0]
 800c3a2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800c3a6:	645a      	str	r2, [r3, #68]	@ 0x44
 800c3a8:	687b      	ldr	r3, [r7, #4]
 800c3aa:	681b      	ldr	r3, [r3, #0]
 800c3ac:	4a25      	ldr	r2, [pc, #148]	@ (800c444 <HAL_TIMEx_PWMN_Start+0x164>)
 800c3ae:	4293      	cmp	r3, r2
 800c3b0:	d022      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	681b      	ldr	r3, [r3, #0]
 800c3b6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c3ba:	d01d      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3bc:	687b      	ldr	r3, [r7, #4]
 800c3be:	681b      	ldr	r3, [r3, #0]
 800c3c0:	4a21      	ldr	r2, [pc, #132]	@ (800c448 <HAL_TIMEx_PWMN_Start+0x168>)
 800c3c2:	4293      	cmp	r3, r2
 800c3c4:	d018      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3c6:	687b      	ldr	r3, [r7, #4]
 800c3c8:	681b      	ldr	r3, [r3, #0]
 800c3ca:	4a20      	ldr	r2, [pc, #128]	@ (800c44c <HAL_TIMEx_PWMN_Start+0x16c>)
 800c3cc:	4293      	cmp	r3, r2
 800c3ce:	d013      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3d0:	687b      	ldr	r3, [r7, #4]
 800c3d2:	681b      	ldr	r3, [r3, #0]
 800c3d4:	4a1e      	ldr	r2, [pc, #120]	@ (800c450 <HAL_TIMEx_PWMN_Start+0x170>)
 800c3d6:	4293      	cmp	r3, r2
 800c3d8:	d00e      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3da:	687b      	ldr	r3, [r7, #4]
 800c3dc:	681b      	ldr	r3, [r3, #0]
 800c3de:	4a1d      	ldr	r2, [pc, #116]	@ (800c454 <HAL_TIMEx_PWMN_Start+0x174>)
 800c3e0:	4293      	cmp	r3, r2
 800c3e2:	d009      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3e4:	687b      	ldr	r3, [r7, #4]
 800c3e6:	681b      	ldr	r3, [r3, #0]
 800c3e8:	4a1b      	ldr	r2, [pc, #108]	@ (800c458 <HAL_TIMEx_PWMN_Start+0x178>)
 800c3ea:	4293      	cmp	r3, r2
 800c3ec:	d004      	beq.n	800c3f8 <HAL_TIMEx_PWMN_Start+0x118>
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	681b      	ldr	r3, [r3, #0]
 800c3f2:	4a1a      	ldr	r2, [pc, #104]	@ (800c45c <HAL_TIMEx_PWMN_Start+0x17c>)
 800c3f4:	4293      	cmp	r3, r2
 800c3f6:	d115      	bne.n	800c424 <HAL_TIMEx_PWMN_Start+0x144>
 800c3f8:	687b      	ldr	r3, [r7, #4]
 800c3fa:	681b      	ldr	r3, [r3, #0]
 800c3fc:	689a      	ldr	r2, [r3, #8]
 800c3fe:	4b18      	ldr	r3, [pc, #96]	@ (800c460 <HAL_TIMEx_PWMN_Start+0x180>)
 800c400:	4013      	ands	r3, r2
 800c402:	60fb      	str	r3, [r7, #12]
 800c404:	68fb      	ldr	r3, [r7, #12]
 800c406:	2b06      	cmp	r3, #6
 800c408:	d015      	beq.n	800c436 <HAL_TIMEx_PWMN_Start+0x156>
 800c40a:	68fb      	ldr	r3, [r7, #12]
 800c40c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800c410:	d011      	beq.n	800c436 <HAL_TIMEx_PWMN_Start+0x156>
 800c412:	687b      	ldr	r3, [r7, #4]
 800c414:	681b      	ldr	r3, [r3, #0]
 800c416:	681a      	ldr	r2, [r3, #0]
 800c418:	687b      	ldr	r3, [r7, #4]
 800c41a:	681b      	ldr	r3, [r3, #0]
 800c41c:	f042 0201 	orr.w	r2, r2, #1
 800c420:	601a      	str	r2, [r3, #0]
 800c422:	e008      	b.n	800c436 <HAL_TIMEx_PWMN_Start+0x156>
 800c424:	687b      	ldr	r3, [r7, #4]
 800c426:	681b      	ldr	r3, [r3, #0]
 800c428:	681a      	ldr	r2, [r3, #0]
 800c42a:	687b      	ldr	r3, [r7, #4]
 800c42c:	681b      	ldr	r3, [r3, #0]
 800c42e:	f042 0201 	orr.w	r2, r2, #1
 800c432:	601a      	str	r2, [r3, #0]
 800c434:	e000      	b.n	800c438 <HAL_TIMEx_PWMN_Start+0x158>
 800c436:	bf00      	nop
 800c438:	2300      	movs	r3, #0
 800c43a:	4618      	mov	r0, r3
 800c43c:	3710      	adds	r7, #16
 800c43e:	46bd      	mov	sp, r7
 800c440:	bd80      	pop	{r7, pc}
 800c442:	bf00      	nop
 800c444:	40010000 	.word	0x40010000
 800c448:	40000400 	.word	0x40000400
 800c44c:	40000800 	.word	0x40000800
 800c450:	40000c00 	.word	0x40000c00
 800c454:	40010400 	.word	0x40010400
 800c458:	40001800 	.word	0x40001800
 800c45c:	40014000 	.word	0x40014000
 800c460:	00010007 	.word	0x00010007

0800c464 <HAL_TIMEx_MasterConfigSynchronization>:
 800c464:	b480      	push	{r7}
 800c466:	b085      	sub	sp, #20
 800c468:	af00      	add	r7, sp, #0
 800c46a:	6078      	str	r0, [r7, #4]
 800c46c:	6039      	str	r1, [r7, #0]
 800c46e:	687b      	ldr	r3, [r7, #4]
 800c470:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800c474:	2b01      	cmp	r3, #1
 800c476:	d101      	bne.n	800c47c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800c478:	2302      	movs	r3, #2
 800c47a:	e06d      	b.n	800c558 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	2201      	movs	r2, #1
 800c480:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800c484:	687b      	ldr	r3, [r7, #4]
 800c486:	2202      	movs	r2, #2
 800c488:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800c48c:	687b      	ldr	r3, [r7, #4]
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	685b      	ldr	r3, [r3, #4]
 800c492:	60fb      	str	r3, [r7, #12]
 800c494:	687b      	ldr	r3, [r7, #4]
 800c496:	681b      	ldr	r3, [r3, #0]
 800c498:	689b      	ldr	r3, [r3, #8]
 800c49a:	60bb      	str	r3, [r7, #8]
 800c49c:	687b      	ldr	r3, [r7, #4]
 800c49e:	681b      	ldr	r3, [r3, #0]
 800c4a0:	4a30      	ldr	r2, [pc, #192]	@ (800c564 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800c4a2:	4293      	cmp	r3, r2
 800c4a4:	d004      	beq.n	800c4b0 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800c4a6:	687b      	ldr	r3, [r7, #4]
 800c4a8:	681b      	ldr	r3, [r3, #0]
 800c4aa:	4a2f      	ldr	r2, [pc, #188]	@ (800c568 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800c4ac:	4293      	cmp	r3, r2
 800c4ae:	d108      	bne.n	800c4c2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800c4b0:	68fb      	ldr	r3, [r7, #12]
 800c4b2:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800c4b6:	60fb      	str	r3, [r7, #12]
 800c4b8:	683b      	ldr	r3, [r7, #0]
 800c4ba:	685b      	ldr	r3, [r3, #4]
 800c4bc:	68fa      	ldr	r2, [r7, #12]
 800c4be:	4313      	orrs	r3, r2
 800c4c0:	60fb      	str	r3, [r7, #12]
 800c4c2:	68fb      	ldr	r3, [r7, #12]
 800c4c4:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800c4c8:	60fb      	str	r3, [r7, #12]
 800c4ca:	683b      	ldr	r3, [r7, #0]
 800c4cc:	681b      	ldr	r3, [r3, #0]
 800c4ce:	68fa      	ldr	r2, [r7, #12]
 800c4d0:	4313      	orrs	r3, r2
 800c4d2:	60fb      	str	r3, [r7, #12]
 800c4d4:	687b      	ldr	r3, [r7, #4]
 800c4d6:	681b      	ldr	r3, [r3, #0]
 800c4d8:	68fa      	ldr	r2, [r7, #12]
 800c4da:	605a      	str	r2, [r3, #4]
 800c4dc:	687b      	ldr	r3, [r7, #4]
 800c4de:	681b      	ldr	r3, [r3, #0]
 800c4e0:	4a20      	ldr	r2, [pc, #128]	@ (800c564 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800c4e2:	4293      	cmp	r3, r2
 800c4e4:	d022      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c4e6:	687b      	ldr	r3, [r7, #4]
 800c4e8:	681b      	ldr	r3, [r3, #0]
 800c4ea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800c4ee:	d01d      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	681b      	ldr	r3, [r3, #0]
 800c4f4:	4a1d      	ldr	r2, [pc, #116]	@ (800c56c <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800c4f6:	4293      	cmp	r3, r2
 800c4f8:	d018      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c4fa:	687b      	ldr	r3, [r7, #4]
 800c4fc:	681b      	ldr	r3, [r3, #0]
 800c4fe:	4a1c      	ldr	r2, [pc, #112]	@ (800c570 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800c500:	4293      	cmp	r3, r2
 800c502:	d013      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c504:	687b      	ldr	r3, [r7, #4]
 800c506:	681b      	ldr	r3, [r3, #0]
 800c508:	4a1a      	ldr	r2, [pc, #104]	@ (800c574 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800c50a:	4293      	cmp	r3, r2
 800c50c:	d00e      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	681b      	ldr	r3, [r3, #0]
 800c512:	4a15      	ldr	r2, [pc, #84]	@ (800c568 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800c514:	4293      	cmp	r3, r2
 800c516:	d009      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c518:	687b      	ldr	r3, [r7, #4]
 800c51a:	681b      	ldr	r3, [r3, #0]
 800c51c:	4a16      	ldr	r2, [pc, #88]	@ (800c578 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800c51e:	4293      	cmp	r3, r2
 800c520:	d004      	beq.n	800c52c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	681b      	ldr	r3, [r3, #0]
 800c526:	4a15      	ldr	r2, [pc, #84]	@ (800c57c <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800c528:	4293      	cmp	r3, r2
 800c52a:	d10c      	bne.n	800c546 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800c52c:	68bb      	ldr	r3, [r7, #8]
 800c52e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800c532:	60bb      	str	r3, [r7, #8]
 800c534:	683b      	ldr	r3, [r7, #0]
 800c536:	689b      	ldr	r3, [r3, #8]
 800c538:	68ba      	ldr	r2, [r7, #8]
 800c53a:	4313      	orrs	r3, r2
 800c53c:	60bb      	str	r3, [r7, #8]
 800c53e:	687b      	ldr	r3, [r7, #4]
 800c540:	681b      	ldr	r3, [r3, #0]
 800c542:	68ba      	ldr	r2, [r7, #8]
 800c544:	609a      	str	r2, [r3, #8]
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	2201      	movs	r2, #1
 800c54a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	2200      	movs	r2, #0
 800c552:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800c556:	2300      	movs	r3, #0
 800c558:	4618      	mov	r0, r3
 800c55a:	3714      	adds	r7, #20
 800c55c:	46bd      	mov	sp, r7
 800c55e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c562:	4770      	bx	lr
 800c564:	40010000 	.word	0x40010000
 800c568:	40010400 	.word	0x40010400
 800c56c:	40000400 	.word	0x40000400
 800c570:	40000800 	.word	0x40000800
 800c574:	40000c00 	.word	0x40000c00
 800c578:	40001800 	.word	0x40001800
 800c57c:	40014000 	.word	0x40014000

0800c580 <HAL_TIMEx_ConfigBreakDeadTime>:
 800c580:	b480      	push	{r7}
 800c582:	b085      	sub	sp, #20
 800c584:	af00      	add	r7, sp, #0
 800c586:	6078      	str	r0, [r7, #4]
 800c588:	6039      	str	r1, [r7, #0]
 800c58a:	2300      	movs	r3, #0
 800c58c:	60fb      	str	r3, [r7, #12]
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800c594:	2b01      	cmp	r3, #1
 800c596:	d101      	bne.n	800c59c <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800c598:	2302      	movs	r3, #2
 800c59a:	e065      	b.n	800c668 <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 800c59c:	687b      	ldr	r3, [r7, #4]
 800c59e:	2201      	movs	r2, #1
 800c5a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800c5a4:	68fb      	ldr	r3, [r7, #12]
 800c5a6:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 800c5aa:	683b      	ldr	r3, [r7, #0]
 800c5ac:	68db      	ldr	r3, [r3, #12]
 800c5ae:	4313      	orrs	r3, r2
 800c5b0:	60fb      	str	r3, [r7, #12]
 800c5b2:	68fb      	ldr	r3, [r7, #12]
 800c5b4:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800c5b8:	683b      	ldr	r3, [r7, #0]
 800c5ba:	689b      	ldr	r3, [r3, #8]
 800c5bc:	4313      	orrs	r3, r2
 800c5be:	60fb      	str	r3, [r7, #12]
 800c5c0:	68fb      	ldr	r3, [r7, #12]
 800c5c2:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800c5c6:	683b      	ldr	r3, [r7, #0]
 800c5c8:	685b      	ldr	r3, [r3, #4]
 800c5ca:	4313      	orrs	r3, r2
 800c5cc:	60fb      	str	r3, [r7, #12]
 800c5ce:	68fb      	ldr	r3, [r7, #12]
 800c5d0:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 800c5d4:	683b      	ldr	r3, [r7, #0]
 800c5d6:	681b      	ldr	r3, [r3, #0]
 800c5d8:	4313      	orrs	r3, r2
 800c5da:	60fb      	str	r3, [r7, #12]
 800c5dc:	68fb      	ldr	r3, [r7, #12]
 800c5de:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800c5e2:	683b      	ldr	r3, [r7, #0]
 800c5e4:	691b      	ldr	r3, [r3, #16]
 800c5e6:	4313      	orrs	r3, r2
 800c5e8:	60fb      	str	r3, [r7, #12]
 800c5ea:	68fb      	ldr	r3, [r7, #12]
 800c5ec:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 800c5f0:	683b      	ldr	r3, [r7, #0]
 800c5f2:	695b      	ldr	r3, [r3, #20]
 800c5f4:	4313      	orrs	r3, r2
 800c5f6:	60fb      	str	r3, [r7, #12]
 800c5f8:	68fb      	ldr	r3, [r7, #12]
 800c5fa:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 800c5fe:	683b      	ldr	r3, [r7, #0]
 800c600:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c602:	4313      	orrs	r3, r2
 800c604:	60fb      	str	r3, [r7, #12]
 800c606:	68fb      	ldr	r3, [r7, #12]
 800c608:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 800c60c:	683b      	ldr	r3, [r7, #0]
 800c60e:	699b      	ldr	r3, [r3, #24]
 800c610:	041b      	lsls	r3, r3, #16
 800c612:	4313      	orrs	r3, r2
 800c614:	60fb      	str	r3, [r7, #12]
 800c616:	687b      	ldr	r3, [r7, #4]
 800c618:	681b      	ldr	r3, [r3, #0]
 800c61a:	4a16      	ldr	r2, [pc, #88]	@ (800c674 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 800c61c:	4293      	cmp	r3, r2
 800c61e:	d004      	beq.n	800c62a <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 800c620:	687b      	ldr	r3, [r7, #4]
 800c622:	681b      	ldr	r3, [r3, #0]
 800c624:	4a14      	ldr	r2, [pc, #80]	@ (800c678 <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 800c626:	4293      	cmp	r3, r2
 800c628:	d115      	bne.n	800c656 <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
 800c62a:	68fb      	ldr	r3, [r7, #12]
 800c62c:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 800c630:	683b      	ldr	r3, [r7, #0]
 800c632:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c634:	051b      	lsls	r3, r3, #20
 800c636:	4313      	orrs	r3, r2
 800c638:	60fb      	str	r3, [r7, #12]
 800c63a:	68fb      	ldr	r3, [r7, #12]
 800c63c:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 800c640:	683b      	ldr	r3, [r7, #0]
 800c642:	69db      	ldr	r3, [r3, #28]
 800c644:	4313      	orrs	r3, r2
 800c646:	60fb      	str	r3, [r7, #12]
 800c648:	68fb      	ldr	r3, [r7, #12]
 800c64a:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 800c64e:	683b      	ldr	r3, [r7, #0]
 800c650:	6a1b      	ldr	r3, [r3, #32]
 800c652:	4313      	orrs	r3, r2
 800c654:	60fb      	str	r3, [r7, #12]
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	681b      	ldr	r3, [r3, #0]
 800c65a:	68fa      	ldr	r2, [r7, #12]
 800c65c:	645a      	str	r2, [r3, #68]	@ 0x44
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	2200      	movs	r2, #0
 800c662:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800c666:	2300      	movs	r3, #0
 800c668:	4618      	mov	r0, r3
 800c66a:	3714      	adds	r7, #20
 800c66c:	46bd      	mov	sp, r7
 800c66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c672:	4770      	bx	lr
 800c674:	40010000 	.word	0x40010000
 800c678:	40010400 	.word	0x40010400

0800c67c <HAL_TIMEx_CommutCallback>:
 800c67c:	b480      	push	{r7}
 800c67e:	b083      	sub	sp, #12
 800c680:	af00      	add	r7, sp, #0
 800c682:	6078      	str	r0, [r7, #4]
 800c684:	bf00      	nop
 800c686:	370c      	adds	r7, #12
 800c688:	46bd      	mov	sp, r7
 800c68a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c68e:	4770      	bx	lr

0800c690 <HAL_TIMEx_BreakCallback>:
 800c690:	b480      	push	{r7}
 800c692:	b083      	sub	sp, #12
 800c694:	af00      	add	r7, sp, #0
 800c696:	6078      	str	r0, [r7, #4]
 800c698:	bf00      	nop
 800c69a:	370c      	adds	r7, #12
 800c69c:	46bd      	mov	sp, r7
 800c69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6a2:	4770      	bx	lr

0800c6a4 <HAL_TIMEx_Break2Callback>:
 800c6a4:	b480      	push	{r7}
 800c6a6:	b083      	sub	sp, #12
 800c6a8:	af00      	add	r7, sp, #0
 800c6aa:	6078      	str	r0, [r7, #4]
 800c6ac:	bf00      	nop
 800c6ae:	370c      	adds	r7, #12
 800c6b0:	46bd      	mov	sp, r7
 800c6b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6b6:	4770      	bx	lr

0800c6b8 <TIM_CCxNChannelCmd>:
 800c6b8:	b480      	push	{r7}
 800c6ba:	b087      	sub	sp, #28
 800c6bc:	af00      	add	r7, sp, #0
 800c6be:	60f8      	str	r0, [r7, #12]
 800c6c0:	60b9      	str	r1, [r7, #8]
 800c6c2:	607a      	str	r2, [r7, #4]
 800c6c4:	68bb      	ldr	r3, [r7, #8]
 800c6c6:	f003 030f 	and.w	r3, r3, #15
 800c6ca:	2204      	movs	r2, #4
 800c6cc:	fa02 f303 	lsl.w	r3, r2, r3
 800c6d0:	617b      	str	r3, [r7, #20]
 800c6d2:	68fb      	ldr	r3, [r7, #12]
 800c6d4:	6a1a      	ldr	r2, [r3, #32]
 800c6d6:	697b      	ldr	r3, [r7, #20]
 800c6d8:	43db      	mvns	r3, r3
 800c6da:	401a      	ands	r2, r3
 800c6dc:	68fb      	ldr	r3, [r7, #12]
 800c6de:	621a      	str	r2, [r3, #32]
 800c6e0:	68fb      	ldr	r3, [r7, #12]
 800c6e2:	6a1a      	ldr	r2, [r3, #32]
 800c6e4:	68bb      	ldr	r3, [r7, #8]
 800c6e6:	f003 030f 	and.w	r3, r3, #15
 800c6ea:	6879      	ldr	r1, [r7, #4]
 800c6ec:	fa01 f303 	lsl.w	r3, r1, r3
 800c6f0:	431a      	orrs	r2, r3
 800c6f2:	68fb      	ldr	r3, [r7, #12]
 800c6f4:	621a      	str	r2, [r3, #32]
 800c6f6:	bf00      	nop
 800c6f8:	371c      	adds	r7, #28
 800c6fa:	46bd      	mov	sp, r7
 800c6fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c700:	4770      	bx	lr
	...

0800c704 <USB_CoreInit>:
 800c704:	b084      	sub	sp, #16
 800c706:	b580      	push	{r7, lr}
 800c708:	b084      	sub	sp, #16
 800c70a:	af00      	add	r7, sp, #0
 800c70c:	6078      	str	r0, [r7, #4]
 800c70e:	f107 001c 	add.w	r0, r7, #28
 800c712:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800c716:	f897 3021 	ldrb.w	r3, [r7, #33]	@ 0x21
 800c71a:	2b01      	cmp	r3, #1
 800c71c:	d121      	bne.n	800c762 <USB_CoreInit+0x5e>
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c722:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800c726:	687b      	ldr	r3, [r7, #4]
 800c728:	639a      	str	r2, [r3, #56]	@ 0x38
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	68da      	ldr	r2, [r3, #12]
 800c72e:	4b2c      	ldr	r3, [pc, #176]	@ (800c7e0 <USB_CoreInit+0xdc>)
 800c730:	4013      	ands	r3, r2
 800c732:	687a      	ldr	r2, [r7, #4]
 800c734:	60d3      	str	r3, [r2, #12]
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	68db      	ldr	r3, [r3, #12]
 800c73a:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	60da      	str	r2, [r3, #12]
 800c742:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800c746:	2b01      	cmp	r3, #1
 800c748:	d105      	bne.n	800c756 <USB_CoreInit+0x52>
 800c74a:	687b      	ldr	r3, [r7, #4]
 800c74c:	68db      	ldr	r3, [r3, #12]
 800c74e:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 800c752:	687b      	ldr	r3, [r7, #4]
 800c754:	60da      	str	r2, [r3, #12]
 800c756:	6878      	ldr	r0, [r7, #4]
 800c758:	f001 faf6 	bl	800dd48 <USB_CoreReset>
 800c75c:	4603      	mov	r3, r0
 800c75e:	73fb      	strb	r3, [r7, #15]
 800c760:	e01b      	b.n	800c79a <USB_CoreInit+0x96>
 800c762:	687b      	ldr	r3, [r7, #4]
 800c764:	68db      	ldr	r3, [r3, #12]
 800c766:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	60da      	str	r2, [r3, #12]
 800c76e:	6878      	ldr	r0, [r7, #4]
 800c770:	f001 faea 	bl	800dd48 <USB_CoreReset>
 800c774:	4603      	mov	r3, r0
 800c776:	73fb      	strb	r3, [r7, #15]
 800c778:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 800c77c:	2b00      	cmp	r3, #0
 800c77e:	d106      	bne.n	800c78e <USB_CoreInit+0x8a>
 800c780:	687b      	ldr	r3, [r7, #4]
 800c782:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c784:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800c788:	687b      	ldr	r3, [r7, #4]
 800c78a:	639a      	str	r2, [r3, #56]	@ 0x38
 800c78c:	e005      	b.n	800c79a <USB_CoreInit+0x96>
 800c78e:	687b      	ldr	r3, [r7, #4]
 800c790:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c792:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	639a      	str	r2, [r3, #56]	@ 0x38
 800c79a:	7fbb      	ldrb	r3, [r7, #30]
 800c79c:	2b01      	cmp	r3, #1
 800c79e:	d116      	bne.n	800c7ce <USB_CoreInit+0xca>
 800c7a0:	687b      	ldr	r3, [r7, #4]
 800c7a2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c7a4:	b29a      	uxth	r2, r3
 800c7a6:	687b      	ldr	r3, [r7, #4]
 800c7a8:	65da      	str	r2, [r3, #92]	@ 0x5c
 800c7aa:	687b      	ldr	r3, [r7, #4]
 800c7ac:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 800c7ae:	4b0d      	ldr	r3, [pc, #52]	@ (800c7e4 <USB_CoreInit+0xe0>)
 800c7b0:	4313      	orrs	r3, r2
 800c7b2:	687a      	ldr	r2, [r7, #4]
 800c7b4:	65d3      	str	r3, [r2, #92]	@ 0x5c
 800c7b6:	687b      	ldr	r3, [r7, #4]
 800c7b8:	689b      	ldr	r3, [r3, #8]
 800c7ba:	f043 0206 	orr.w	r2, r3, #6
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	609a      	str	r2, [r3, #8]
 800c7c2:	687b      	ldr	r3, [r7, #4]
 800c7c4:	689b      	ldr	r3, [r3, #8]
 800c7c6:	f043 0220 	orr.w	r2, r3, #32
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	609a      	str	r2, [r3, #8]
 800c7ce:	7bfb      	ldrb	r3, [r7, #15]
 800c7d0:	4618      	mov	r0, r3
 800c7d2:	3710      	adds	r7, #16
 800c7d4:	46bd      	mov	sp, r7
 800c7d6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800c7da:	b004      	add	sp, #16
 800c7dc:	4770      	bx	lr
 800c7de:	bf00      	nop
 800c7e0:	ffbdffbf 	.word	0xffbdffbf
 800c7e4:	03ee0000 	.word	0x03ee0000

0800c7e8 <USB_SetTurnaroundTime>:
 800c7e8:	b480      	push	{r7}
 800c7ea:	b087      	sub	sp, #28
 800c7ec:	af00      	add	r7, sp, #0
 800c7ee:	60f8      	str	r0, [r7, #12]
 800c7f0:	60b9      	str	r1, [r7, #8]
 800c7f2:	4613      	mov	r3, r2
 800c7f4:	71fb      	strb	r3, [r7, #7]
 800c7f6:	79fb      	ldrb	r3, [r7, #7]
 800c7f8:	2b02      	cmp	r3, #2
 800c7fa:	d165      	bne.n	800c8c8 <USB_SetTurnaroundTime+0xe0>
 800c7fc:	68bb      	ldr	r3, [r7, #8]
 800c7fe:	4a41      	ldr	r2, [pc, #260]	@ (800c904 <USB_SetTurnaroundTime+0x11c>)
 800c800:	4293      	cmp	r3, r2
 800c802:	d906      	bls.n	800c812 <USB_SetTurnaroundTime+0x2a>
 800c804:	68bb      	ldr	r3, [r7, #8]
 800c806:	4a40      	ldr	r2, [pc, #256]	@ (800c908 <USB_SetTurnaroundTime+0x120>)
 800c808:	4293      	cmp	r3, r2
 800c80a:	d202      	bcs.n	800c812 <USB_SetTurnaroundTime+0x2a>
 800c80c:	230f      	movs	r3, #15
 800c80e:	617b      	str	r3, [r7, #20]
 800c810:	e062      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c812:	68bb      	ldr	r3, [r7, #8]
 800c814:	4a3c      	ldr	r2, [pc, #240]	@ (800c908 <USB_SetTurnaroundTime+0x120>)
 800c816:	4293      	cmp	r3, r2
 800c818:	d306      	bcc.n	800c828 <USB_SetTurnaroundTime+0x40>
 800c81a:	68bb      	ldr	r3, [r7, #8]
 800c81c:	4a3b      	ldr	r2, [pc, #236]	@ (800c90c <USB_SetTurnaroundTime+0x124>)
 800c81e:	4293      	cmp	r3, r2
 800c820:	d202      	bcs.n	800c828 <USB_SetTurnaroundTime+0x40>
 800c822:	230e      	movs	r3, #14
 800c824:	617b      	str	r3, [r7, #20]
 800c826:	e057      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c828:	68bb      	ldr	r3, [r7, #8]
 800c82a:	4a38      	ldr	r2, [pc, #224]	@ (800c90c <USB_SetTurnaroundTime+0x124>)
 800c82c:	4293      	cmp	r3, r2
 800c82e:	d306      	bcc.n	800c83e <USB_SetTurnaroundTime+0x56>
 800c830:	68bb      	ldr	r3, [r7, #8]
 800c832:	4a37      	ldr	r2, [pc, #220]	@ (800c910 <USB_SetTurnaroundTime+0x128>)
 800c834:	4293      	cmp	r3, r2
 800c836:	d202      	bcs.n	800c83e <USB_SetTurnaroundTime+0x56>
 800c838:	230d      	movs	r3, #13
 800c83a:	617b      	str	r3, [r7, #20]
 800c83c:	e04c      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c83e:	68bb      	ldr	r3, [r7, #8]
 800c840:	4a33      	ldr	r2, [pc, #204]	@ (800c910 <USB_SetTurnaroundTime+0x128>)
 800c842:	4293      	cmp	r3, r2
 800c844:	d306      	bcc.n	800c854 <USB_SetTurnaroundTime+0x6c>
 800c846:	68bb      	ldr	r3, [r7, #8]
 800c848:	4a32      	ldr	r2, [pc, #200]	@ (800c914 <USB_SetTurnaroundTime+0x12c>)
 800c84a:	4293      	cmp	r3, r2
 800c84c:	d802      	bhi.n	800c854 <USB_SetTurnaroundTime+0x6c>
 800c84e:	230c      	movs	r3, #12
 800c850:	617b      	str	r3, [r7, #20]
 800c852:	e041      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c854:	68bb      	ldr	r3, [r7, #8]
 800c856:	4a2f      	ldr	r2, [pc, #188]	@ (800c914 <USB_SetTurnaroundTime+0x12c>)
 800c858:	4293      	cmp	r3, r2
 800c85a:	d906      	bls.n	800c86a <USB_SetTurnaroundTime+0x82>
 800c85c:	68bb      	ldr	r3, [r7, #8]
 800c85e:	4a2e      	ldr	r2, [pc, #184]	@ (800c918 <USB_SetTurnaroundTime+0x130>)
 800c860:	4293      	cmp	r3, r2
 800c862:	d802      	bhi.n	800c86a <USB_SetTurnaroundTime+0x82>
 800c864:	230b      	movs	r3, #11
 800c866:	617b      	str	r3, [r7, #20]
 800c868:	e036      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c86a:	68bb      	ldr	r3, [r7, #8]
 800c86c:	4a2a      	ldr	r2, [pc, #168]	@ (800c918 <USB_SetTurnaroundTime+0x130>)
 800c86e:	4293      	cmp	r3, r2
 800c870:	d906      	bls.n	800c880 <USB_SetTurnaroundTime+0x98>
 800c872:	68bb      	ldr	r3, [r7, #8]
 800c874:	4a29      	ldr	r2, [pc, #164]	@ (800c91c <USB_SetTurnaroundTime+0x134>)
 800c876:	4293      	cmp	r3, r2
 800c878:	d802      	bhi.n	800c880 <USB_SetTurnaroundTime+0x98>
 800c87a:	230a      	movs	r3, #10
 800c87c:	617b      	str	r3, [r7, #20]
 800c87e:	e02b      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c880:	68bb      	ldr	r3, [r7, #8]
 800c882:	4a26      	ldr	r2, [pc, #152]	@ (800c91c <USB_SetTurnaroundTime+0x134>)
 800c884:	4293      	cmp	r3, r2
 800c886:	d906      	bls.n	800c896 <USB_SetTurnaroundTime+0xae>
 800c888:	68bb      	ldr	r3, [r7, #8]
 800c88a:	4a25      	ldr	r2, [pc, #148]	@ (800c920 <USB_SetTurnaroundTime+0x138>)
 800c88c:	4293      	cmp	r3, r2
 800c88e:	d202      	bcs.n	800c896 <USB_SetTurnaroundTime+0xae>
 800c890:	2309      	movs	r3, #9
 800c892:	617b      	str	r3, [r7, #20]
 800c894:	e020      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c896:	68bb      	ldr	r3, [r7, #8]
 800c898:	4a21      	ldr	r2, [pc, #132]	@ (800c920 <USB_SetTurnaroundTime+0x138>)
 800c89a:	4293      	cmp	r3, r2
 800c89c:	d306      	bcc.n	800c8ac <USB_SetTurnaroundTime+0xc4>
 800c89e:	68bb      	ldr	r3, [r7, #8]
 800c8a0:	4a20      	ldr	r2, [pc, #128]	@ (800c924 <USB_SetTurnaroundTime+0x13c>)
 800c8a2:	4293      	cmp	r3, r2
 800c8a4:	d802      	bhi.n	800c8ac <USB_SetTurnaroundTime+0xc4>
 800c8a6:	2308      	movs	r3, #8
 800c8a8:	617b      	str	r3, [r7, #20]
 800c8aa:	e015      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c8ac:	68bb      	ldr	r3, [r7, #8]
 800c8ae:	4a1d      	ldr	r2, [pc, #116]	@ (800c924 <USB_SetTurnaroundTime+0x13c>)
 800c8b0:	4293      	cmp	r3, r2
 800c8b2:	d906      	bls.n	800c8c2 <USB_SetTurnaroundTime+0xda>
 800c8b4:	68bb      	ldr	r3, [r7, #8]
 800c8b6:	4a1c      	ldr	r2, [pc, #112]	@ (800c928 <USB_SetTurnaroundTime+0x140>)
 800c8b8:	4293      	cmp	r3, r2
 800c8ba:	d202      	bcs.n	800c8c2 <USB_SetTurnaroundTime+0xda>
 800c8bc:	2307      	movs	r3, #7
 800c8be:	617b      	str	r3, [r7, #20]
 800c8c0:	e00a      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c8c2:	2306      	movs	r3, #6
 800c8c4:	617b      	str	r3, [r7, #20]
 800c8c6:	e007      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c8c8:	79fb      	ldrb	r3, [r7, #7]
 800c8ca:	2b00      	cmp	r3, #0
 800c8cc:	d102      	bne.n	800c8d4 <USB_SetTurnaroundTime+0xec>
 800c8ce:	2309      	movs	r3, #9
 800c8d0:	617b      	str	r3, [r7, #20]
 800c8d2:	e001      	b.n	800c8d8 <USB_SetTurnaroundTime+0xf0>
 800c8d4:	2309      	movs	r3, #9
 800c8d6:	617b      	str	r3, [r7, #20]
 800c8d8:	68fb      	ldr	r3, [r7, #12]
 800c8da:	68db      	ldr	r3, [r3, #12]
 800c8dc:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 800c8e0:	68fb      	ldr	r3, [r7, #12]
 800c8e2:	60da      	str	r2, [r3, #12]
 800c8e4:	68fb      	ldr	r3, [r7, #12]
 800c8e6:	68da      	ldr	r2, [r3, #12]
 800c8e8:	697b      	ldr	r3, [r7, #20]
 800c8ea:	029b      	lsls	r3, r3, #10
 800c8ec:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 800c8f0:	431a      	orrs	r2, r3
 800c8f2:	68fb      	ldr	r3, [r7, #12]
 800c8f4:	60da      	str	r2, [r3, #12]
 800c8f6:	2300      	movs	r3, #0
 800c8f8:	4618      	mov	r0, r3
 800c8fa:	371c      	adds	r7, #28
 800c8fc:	46bd      	mov	sp, r7
 800c8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c902:	4770      	bx	lr
 800c904:	00d8acbf 	.word	0x00d8acbf
 800c908:	00e4e1c0 	.word	0x00e4e1c0
 800c90c:	00f42400 	.word	0x00f42400
 800c910:	01067380 	.word	0x01067380
 800c914:	011a499f 	.word	0x011a499f
 800c918:	01312cff 	.word	0x01312cff
 800c91c:	014ca43f 	.word	0x014ca43f
 800c920:	016e3600 	.word	0x016e3600
 800c924:	01a6ab1f 	.word	0x01a6ab1f
 800c928:	01e84800 	.word	0x01e84800

0800c92c <USB_EnableGlobalInt>:
 800c92c:	b480      	push	{r7}
 800c92e:	b083      	sub	sp, #12
 800c930:	af00      	add	r7, sp, #0
 800c932:	6078      	str	r0, [r7, #4]
 800c934:	687b      	ldr	r3, [r7, #4]
 800c936:	689b      	ldr	r3, [r3, #8]
 800c938:	f043 0201 	orr.w	r2, r3, #1
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	609a      	str	r2, [r3, #8]
 800c940:	2300      	movs	r3, #0
 800c942:	4618      	mov	r0, r3
 800c944:	370c      	adds	r7, #12
 800c946:	46bd      	mov	sp, r7
 800c948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c94c:	4770      	bx	lr

0800c94e <USB_DisableGlobalInt>:
 800c94e:	b480      	push	{r7}
 800c950:	b083      	sub	sp, #12
 800c952:	af00      	add	r7, sp, #0
 800c954:	6078      	str	r0, [r7, #4]
 800c956:	687b      	ldr	r3, [r7, #4]
 800c958:	689b      	ldr	r3, [r3, #8]
 800c95a:	f023 0201 	bic.w	r2, r3, #1
 800c95e:	687b      	ldr	r3, [r7, #4]
 800c960:	609a      	str	r2, [r3, #8]
 800c962:	2300      	movs	r3, #0
 800c964:	4618      	mov	r0, r3
 800c966:	370c      	adds	r7, #12
 800c968:	46bd      	mov	sp, r7
 800c96a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c96e:	4770      	bx	lr

0800c970 <USB_SetCurrentMode>:
 800c970:	b580      	push	{r7, lr}
 800c972:	b084      	sub	sp, #16
 800c974:	af00      	add	r7, sp, #0
 800c976:	6078      	str	r0, [r7, #4]
 800c978:	460b      	mov	r3, r1
 800c97a:	70fb      	strb	r3, [r7, #3]
 800c97c:	2300      	movs	r3, #0
 800c97e:	60fb      	str	r3, [r7, #12]
 800c980:	687b      	ldr	r3, [r7, #4]
 800c982:	68db      	ldr	r3, [r3, #12]
 800c984:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 800c988:	687b      	ldr	r3, [r7, #4]
 800c98a:	60da      	str	r2, [r3, #12]
 800c98c:	78fb      	ldrb	r3, [r7, #3]
 800c98e:	2b01      	cmp	r3, #1
 800c990:	d115      	bne.n	800c9be <USB_SetCurrentMode+0x4e>
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	68db      	ldr	r3, [r3, #12]
 800c996:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 800c99a:	687b      	ldr	r3, [r7, #4]
 800c99c:	60da      	str	r2, [r3, #12]
 800c99e:	200a      	movs	r0, #10
 800c9a0:	f7f6 feb4 	bl	800370c <HAL_Delay>
 800c9a4:	68fb      	ldr	r3, [r7, #12]
 800c9a6:	330a      	adds	r3, #10
 800c9a8:	60fb      	str	r3, [r7, #12]
 800c9aa:	6878      	ldr	r0, [r7, #4]
 800c9ac:	f001 f93b 	bl	800dc26 <USB_GetMode>
 800c9b0:	4603      	mov	r3, r0
 800c9b2:	2b01      	cmp	r3, #1
 800c9b4:	d01e      	beq.n	800c9f4 <USB_SetCurrentMode+0x84>
 800c9b6:	68fb      	ldr	r3, [r7, #12]
 800c9b8:	2bc7      	cmp	r3, #199	@ 0xc7
 800c9ba:	d9f0      	bls.n	800c99e <USB_SetCurrentMode+0x2e>
 800c9bc:	e01a      	b.n	800c9f4 <USB_SetCurrentMode+0x84>
 800c9be:	78fb      	ldrb	r3, [r7, #3]
 800c9c0:	2b00      	cmp	r3, #0
 800c9c2:	d115      	bne.n	800c9f0 <USB_SetCurrentMode+0x80>
 800c9c4:	687b      	ldr	r3, [r7, #4]
 800c9c6:	68db      	ldr	r3, [r3, #12]
 800c9c8:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	60da      	str	r2, [r3, #12]
 800c9d0:	200a      	movs	r0, #10
 800c9d2:	f7f6 fe9b 	bl	800370c <HAL_Delay>
 800c9d6:	68fb      	ldr	r3, [r7, #12]
 800c9d8:	330a      	adds	r3, #10
 800c9da:	60fb      	str	r3, [r7, #12]
 800c9dc:	6878      	ldr	r0, [r7, #4]
 800c9de:	f001 f922 	bl	800dc26 <USB_GetMode>
 800c9e2:	4603      	mov	r3, r0
 800c9e4:	2b00      	cmp	r3, #0
 800c9e6:	d005      	beq.n	800c9f4 <USB_SetCurrentMode+0x84>
 800c9e8:	68fb      	ldr	r3, [r7, #12]
 800c9ea:	2bc7      	cmp	r3, #199	@ 0xc7
 800c9ec:	d9f0      	bls.n	800c9d0 <USB_SetCurrentMode+0x60>
 800c9ee:	e001      	b.n	800c9f4 <USB_SetCurrentMode+0x84>
 800c9f0:	2301      	movs	r3, #1
 800c9f2:	e005      	b.n	800ca00 <USB_SetCurrentMode+0x90>
 800c9f4:	68fb      	ldr	r3, [r7, #12]
 800c9f6:	2bc8      	cmp	r3, #200	@ 0xc8
 800c9f8:	d101      	bne.n	800c9fe <USB_SetCurrentMode+0x8e>
 800c9fa:	2301      	movs	r3, #1
 800c9fc:	e000      	b.n	800ca00 <USB_SetCurrentMode+0x90>
 800c9fe:	2300      	movs	r3, #0
 800ca00:	4618      	mov	r0, r3
 800ca02:	3710      	adds	r7, #16
 800ca04:	46bd      	mov	sp, r7
 800ca06:	bd80      	pop	{r7, pc}

0800ca08 <USB_DevInit>:
 800ca08:	b084      	sub	sp, #16
 800ca0a:	b580      	push	{r7, lr}
 800ca0c:	b086      	sub	sp, #24
 800ca0e:	af00      	add	r7, sp, #0
 800ca10:	6078      	str	r0, [r7, #4]
 800ca12:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 800ca16:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800ca1a:	2300      	movs	r3, #0
 800ca1c:	75fb      	strb	r3, [r7, #23]
 800ca1e:	687b      	ldr	r3, [r7, #4]
 800ca20:	60fb      	str	r3, [r7, #12]
 800ca22:	2300      	movs	r3, #0
 800ca24:	613b      	str	r3, [r7, #16]
 800ca26:	e009      	b.n	800ca3c <USB_DevInit+0x34>
 800ca28:	687a      	ldr	r2, [r7, #4]
 800ca2a:	693b      	ldr	r3, [r7, #16]
 800ca2c:	3340      	adds	r3, #64	@ 0x40
 800ca2e:	009b      	lsls	r3, r3, #2
 800ca30:	4413      	add	r3, r2
 800ca32:	2200      	movs	r2, #0
 800ca34:	605a      	str	r2, [r3, #4]
 800ca36:	693b      	ldr	r3, [r7, #16]
 800ca38:	3301      	adds	r3, #1
 800ca3a:	613b      	str	r3, [r7, #16]
 800ca3c:	693b      	ldr	r3, [r7, #16]
 800ca3e:	2b0e      	cmp	r3, #14
 800ca40:	d9f2      	bls.n	800ca28 <USB_DevInit+0x20>
 800ca42:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800ca46:	2b00      	cmp	r3, #0
 800ca48:	d11c      	bne.n	800ca84 <USB_DevInit+0x7c>
 800ca4a:	68fb      	ldr	r3, [r7, #12]
 800ca4c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ca50:	685b      	ldr	r3, [r3, #4]
 800ca52:	68fa      	ldr	r2, [r7, #12]
 800ca54:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800ca58:	f043 0302 	orr.w	r3, r3, #2
 800ca5c:	6053      	str	r3, [r2, #4]
 800ca5e:	687b      	ldr	r3, [r7, #4]
 800ca60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ca62:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	639a      	str	r2, [r3, #56]	@ 0x38
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	681b      	ldr	r3, [r3, #0]
 800ca6e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	601a      	str	r2, [r3, #0]
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	601a      	str	r2, [r3, #0]
 800ca82:	e005      	b.n	800ca90 <USB_DevInit+0x88>
 800ca84:	687b      	ldr	r3, [r7, #4]
 800ca86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ca88:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	639a      	str	r2, [r3, #56]	@ 0x38
 800ca90:	68fb      	ldr	r3, [r7, #12]
 800ca92:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800ca96:	461a      	mov	r2, r3
 800ca98:	2300      	movs	r3, #0
 800ca9a:	6013      	str	r3, [r2, #0]
 800ca9c:	f897 3029 	ldrb.w	r3, [r7, #41]	@ 0x29
 800caa0:	2b01      	cmp	r3, #1
 800caa2:	d10d      	bne.n	800cac0 <USB_DevInit+0xb8>
 800caa4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800caa8:	2b00      	cmp	r3, #0
 800caaa:	d104      	bne.n	800cab6 <USB_DevInit+0xae>
 800caac:	2100      	movs	r1, #0
 800caae:	6878      	ldr	r0, [r7, #4]
 800cab0:	f000 f968 	bl	800cd84 <USB_SetDevSpeed>
 800cab4:	e008      	b.n	800cac8 <USB_DevInit+0xc0>
 800cab6:	2101      	movs	r1, #1
 800cab8:	6878      	ldr	r0, [r7, #4]
 800caba:	f000 f963 	bl	800cd84 <USB_SetDevSpeed>
 800cabe:	e003      	b.n	800cac8 <USB_DevInit+0xc0>
 800cac0:	2103      	movs	r1, #3
 800cac2:	6878      	ldr	r0, [r7, #4]
 800cac4:	f000 f95e 	bl	800cd84 <USB_SetDevSpeed>
 800cac8:	2110      	movs	r1, #16
 800caca:	6878      	ldr	r0, [r7, #4]
 800cacc:	f000 f8fa 	bl	800ccc4 <USB_FlushTxFifo>
 800cad0:	4603      	mov	r3, r0
 800cad2:	2b00      	cmp	r3, #0
 800cad4:	d001      	beq.n	800cada <USB_DevInit+0xd2>
 800cad6:	2301      	movs	r3, #1
 800cad8:	75fb      	strb	r3, [r7, #23]
 800cada:	6878      	ldr	r0, [r7, #4]
 800cadc:	f000 f924 	bl	800cd28 <USB_FlushRxFifo>
 800cae0:	4603      	mov	r3, r0
 800cae2:	2b00      	cmp	r3, #0
 800cae4:	d001      	beq.n	800caea <USB_DevInit+0xe2>
 800cae6:	2301      	movs	r3, #1
 800cae8:	75fb      	strb	r3, [r7, #23]
 800caea:	68fb      	ldr	r3, [r7, #12]
 800caec:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800caf0:	461a      	mov	r2, r3
 800caf2:	2300      	movs	r3, #0
 800caf4:	6113      	str	r3, [r2, #16]
 800caf6:	68fb      	ldr	r3, [r7, #12]
 800caf8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cafc:	461a      	mov	r2, r3
 800cafe:	2300      	movs	r3, #0
 800cb00:	6153      	str	r3, [r2, #20]
 800cb02:	68fb      	ldr	r3, [r7, #12]
 800cb04:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cb08:	461a      	mov	r2, r3
 800cb0a:	2300      	movs	r3, #0
 800cb0c:	61d3      	str	r3, [r2, #28]
 800cb0e:	2300      	movs	r3, #0
 800cb10:	613b      	str	r3, [r7, #16]
 800cb12:	e043      	b.n	800cb9c <USB_DevInit+0x194>
 800cb14:	693b      	ldr	r3, [r7, #16]
 800cb16:	015a      	lsls	r2, r3, #5
 800cb18:	68fb      	ldr	r3, [r7, #12]
 800cb1a:	4413      	add	r3, r2
 800cb1c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb20:	681b      	ldr	r3, [r3, #0]
 800cb22:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800cb26:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800cb2a:	d118      	bne.n	800cb5e <USB_DevInit+0x156>
 800cb2c:	693b      	ldr	r3, [r7, #16]
 800cb2e:	2b00      	cmp	r3, #0
 800cb30:	d10a      	bne.n	800cb48 <USB_DevInit+0x140>
 800cb32:	693b      	ldr	r3, [r7, #16]
 800cb34:	015a      	lsls	r2, r3, #5
 800cb36:	68fb      	ldr	r3, [r7, #12]
 800cb38:	4413      	add	r3, r2
 800cb3a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb3e:	461a      	mov	r2, r3
 800cb40:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800cb44:	6013      	str	r3, [r2, #0]
 800cb46:	e013      	b.n	800cb70 <USB_DevInit+0x168>
 800cb48:	693b      	ldr	r3, [r7, #16]
 800cb4a:	015a      	lsls	r2, r3, #5
 800cb4c:	68fb      	ldr	r3, [r7, #12]
 800cb4e:	4413      	add	r3, r2
 800cb50:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb54:	461a      	mov	r2, r3
 800cb56:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800cb5a:	6013      	str	r3, [r2, #0]
 800cb5c:	e008      	b.n	800cb70 <USB_DevInit+0x168>
 800cb5e:	693b      	ldr	r3, [r7, #16]
 800cb60:	015a      	lsls	r2, r3, #5
 800cb62:	68fb      	ldr	r3, [r7, #12]
 800cb64:	4413      	add	r3, r2
 800cb66:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb6a:	461a      	mov	r2, r3
 800cb6c:	2300      	movs	r3, #0
 800cb6e:	6013      	str	r3, [r2, #0]
 800cb70:	693b      	ldr	r3, [r7, #16]
 800cb72:	015a      	lsls	r2, r3, #5
 800cb74:	68fb      	ldr	r3, [r7, #12]
 800cb76:	4413      	add	r3, r2
 800cb78:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb7c:	461a      	mov	r2, r3
 800cb7e:	2300      	movs	r3, #0
 800cb80:	6113      	str	r3, [r2, #16]
 800cb82:	693b      	ldr	r3, [r7, #16]
 800cb84:	015a      	lsls	r2, r3, #5
 800cb86:	68fb      	ldr	r3, [r7, #12]
 800cb88:	4413      	add	r3, r2
 800cb8a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cb8e:	461a      	mov	r2, r3
 800cb90:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800cb94:	6093      	str	r3, [r2, #8]
 800cb96:	693b      	ldr	r3, [r7, #16]
 800cb98:	3301      	adds	r3, #1
 800cb9a:	613b      	str	r3, [r7, #16]
 800cb9c:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800cba0:	461a      	mov	r2, r3
 800cba2:	693b      	ldr	r3, [r7, #16]
 800cba4:	4293      	cmp	r3, r2
 800cba6:	d3b5      	bcc.n	800cb14 <USB_DevInit+0x10c>
 800cba8:	2300      	movs	r3, #0
 800cbaa:	613b      	str	r3, [r7, #16]
 800cbac:	e043      	b.n	800cc36 <USB_DevInit+0x22e>
 800cbae:	693b      	ldr	r3, [r7, #16]
 800cbb0:	015a      	lsls	r2, r3, #5
 800cbb2:	68fb      	ldr	r3, [r7, #12]
 800cbb4:	4413      	add	r3, r2
 800cbb6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cbba:	681b      	ldr	r3, [r3, #0]
 800cbbc:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800cbc0:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800cbc4:	d118      	bne.n	800cbf8 <USB_DevInit+0x1f0>
 800cbc6:	693b      	ldr	r3, [r7, #16]
 800cbc8:	2b00      	cmp	r3, #0
 800cbca:	d10a      	bne.n	800cbe2 <USB_DevInit+0x1da>
 800cbcc:	693b      	ldr	r3, [r7, #16]
 800cbce:	015a      	lsls	r2, r3, #5
 800cbd0:	68fb      	ldr	r3, [r7, #12]
 800cbd2:	4413      	add	r3, r2
 800cbd4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cbd8:	461a      	mov	r2, r3
 800cbda:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 800cbde:	6013      	str	r3, [r2, #0]
 800cbe0:	e013      	b.n	800cc0a <USB_DevInit+0x202>
 800cbe2:	693b      	ldr	r3, [r7, #16]
 800cbe4:	015a      	lsls	r2, r3, #5
 800cbe6:	68fb      	ldr	r3, [r7, #12]
 800cbe8:	4413      	add	r3, r2
 800cbea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cbee:	461a      	mov	r2, r3
 800cbf0:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800cbf4:	6013      	str	r3, [r2, #0]
 800cbf6:	e008      	b.n	800cc0a <USB_DevInit+0x202>
 800cbf8:	693b      	ldr	r3, [r7, #16]
 800cbfa:	015a      	lsls	r2, r3, #5
 800cbfc:	68fb      	ldr	r3, [r7, #12]
 800cbfe:	4413      	add	r3, r2
 800cc00:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cc04:	461a      	mov	r2, r3
 800cc06:	2300      	movs	r3, #0
 800cc08:	6013      	str	r3, [r2, #0]
 800cc0a:	693b      	ldr	r3, [r7, #16]
 800cc0c:	015a      	lsls	r2, r3, #5
 800cc0e:	68fb      	ldr	r3, [r7, #12]
 800cc10:	4413      	add	r3, r2
 800cc12:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cc16:	461a      	mov	r2, r3
 800cc18:	2300      	movs	r3, #0
 800cc1a:	6113      	str	r3, [r2, #16]
 800cc1c:	693b      	ldr	r3, [r7, #16]
 800cc1e:	015a      	lsls	r2, r3, #5
 800cc20:	68fb      	ldr	r3, [r7, #12]
 800cc22:	4413      	add	r3, r2
 800cc24:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cc28:	461a      	mov	r2, r3
 800cc2a:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800cc2e:	6093      	str	r3, [r2, #8]
 800cc30:	693b      	ldr	r3, [r7, #16]
 800cc32:	3301      	adds	r3, #1
 800cc34:	613b      	str	r3, [r7, #16]
 800cc36:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800cc3a:	461a      	mov	r2, r3
 800cc3c:	693b      	ldr	r3, [r7, #16]
 800cc3e:	4293      	cmp	r3, r2
 800cc40:	d3b5      	bcc.n	800cbae <USB_DevInit+0x1a6>
 800cc42:	68fb      	ldr	r3, [r7, #12]
 800cc44:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cc48:	691b      	ldr	r3, [r3, #16]
 800cc4a:	68fa      	ldr	r2, [r7, #12]
 800cc4c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800cc50:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800cc54:	6113      	str	r3, [r2, #16]
 800cc56:	687b      	ldr	r3, [r7, #4]
 800cc58:	2200      	movs	r2, #0
 800cc5a:	619a      	str	r2, [r3, #24]
 800cc5c:	687b      	ldr	r3, [r7, #4]
 800cc5e:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 800cc62:	615a      	str	r2, [r3, #20]
 800cc64:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800cc68:	2b00      	cmp	r3, #0
 800cc6a:	d105      	bne.n	800cc78 <USB_DevInit+0x270>
 800cc6c:	687b      	ldr	r3, [r7, #4]
 800cc6e:	699b      	ldr	r3, [r3, #24]
 800cc70:	f043 0210 	orr.w	r2, r3, #16
 800cc74:	687b      	ldr	r3, [r7, #4]
 800cc76:	619a      	str	r2, [r3, #24]
 800cc78:	687b      	ldr	r3, [r7, #4]
 800cc7a:	699a      	ldr	r2, [r3, #24]
 800cc7c:	4b0f      	ldr	r3, [pc, #60]	@ (800ccbc <USB_DevInit+0x2b4>)
 800cc7e:	4313      	orrs	r3, r2
 800cc80:	687a      	ldr	r2, [r7, #4]
 800cc82:	6193      	str	r3, [r2, #24]
 800cc84:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 800cc88:	2b00      	cmp	r3, #0
 800cc8a:	d005      	beq.n	800cc98 <USB_DevInit+0x290>
 800cc8c:	687b      	ldr	r3, [r7, #4]
 800cc8e:	699b      	ldr	r3, [r3, #24]
 800cc90:	f043 0208 	orr.w	r2, r3, #8
 800cc94:	687b      	ldr	r3, [r7, #4]
 800cc96:	619a      	str	r2, [r3, #24]
 800cc98:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 800cc9c:	2b01      	cmp	r3, #1
 800cc9e:	d105      	bne.n	800ccac <USB_DevInit+0x2a4>
 800cca0:	687b      	ldr	r3, [r7, #4]
 800cca2:	699a      	ldr	r2, [r3, #24]
 800cca4:	4b06      	ldr	r3, [pc, #24]	@ (800ccc0 <USB_DevInit+0x2b8>)
 800cca6:	4313      	orrs	r3, r2
 800cca8:	687a      	ldr	r2, [r7, #4]
 800ccaa:	6193      	str	r3, [r2, #24]
 800ccac:	7dfb      	ldrb	r3, [r7, #23]
 800ccae:	4618      	mov	r0, r3
 800ccb0:	3718      	adds	r7, #24
 800ccb2:	46bd      	mov	sp, r7
 800ccb4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ccb8:	b004      	add	sp, #16
 800ccba:	4770      	bx	lr
 800ccbc:	803c3800 	.word	0x803c3800
 800ccc0:	40000004 	.word	0x40000004

0800ccc4 <USB_FlushTxFifo>:
 800ccc4:	b480      	push	{r7}
 800ccc6:	b085      	sub	sp, #20
 800ccc8:	af00      	add	r7, sp, #0
 800ccca:	6078      	str	r0, [r7, #4]
 800cccc:	6039      	str	r1, [r7, #0]
 800ccce:	2300      	movs	r3, #0
 800ccd0:	60fb      	str	r3, [r7, #12]
 800ccd2:	68fb      	ldr	r3, [r7, #12]
 800ccd4:	3301      	adds	r3, #1
 800ccd6:	60fb      	str	r3, [r7, #12]
 800ccd8:	68fb      	ldr	r3, [r7, #12]
 800ccda:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800ccde:	d901      	bls.n	800cce4 <USB_FlushTxFifo+0x20>
 800cce0:	2303      	movs	r3, #3
 800cce2:	e01b      	b.n	800cd1c <USB_FlushTxFifo+0x58>
 800cce4:	687b      	ldr	r3, [r7, #4]
 800cce6:	691b      	ldr	r3, [r3, #16]
 800cce8:	2b00      	cmp	r3, #0
 800ccea:	daf2      	bge.n	800ccd2 <USB_FlushTxFifo+0xe>
 800ccec:	2300      	movs	r3, #0
 800ccee:	60fb      	str	r3, [r7, #12]
 800ccf0:	683b      	ldr	r3, [r7, #0]
 800ccf2:	019b      	lsls	r3, r3, #6
 800ccf4:	f043 0220 	orr.w	r2, r3, #32
 800ccf8:	687b      	ldr	r3, [r7, #4]
 800ccfa:	611a      	str	r2, [r3, #16]
 800ccfc:	68fb      	ldr	r3, [r7, #12]
 800ccfe:	3301      	adds	r3, #1
 800cd00:	60fb      	str	r3, [r7, #12]
 800cd02:	68fb      	ldr	r3, [r7, #12]
 800cd04:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800cd08:	d901      	bls.n	800cd0e <USB_FlushTxFifo+0x4a>
 800cd0a:	2303      	movs	r3, #3
 800cd0c:	e006      	b.n	800cd1c <USB_FlushTxFifo+0x58>
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	691b      	ldr	r3, [r3, #16]
 800cd12:	f003 0320 	and.w	r3, r3, #32
 800cd16:	2b20      	cmp	r3, #32
 800cd18:	d0f0      	beq.n	800ccfc <USB_FlushTxFifo+0x38>
 800cd1a:	2300      	movs	r3, #0
 800cd1c:	4618      	mov	r0, r3
 800cd1e:	3714      	adds	r7, #20
 800cd20:	46bd      	mov	sp, r7
 800cd22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd26:	4770      	bx	lr

0800cd28 <USB_FlushRxFifo>:
 800cd28:	b480      	push	{r7}
 800cd2a:	b085      	sub	sp, #20
 800cd2c:	af00      	add	r7, sp, #0
 800cd2e:	6078      	str	r0, [r7, #4]
 800cd30:	2300      	movs	r3, #0
 800cd32:	60fb      	str	r3, [r7, #12]
 800cd34:	68fb      	ldr	r3, [r7, #12]
 800cd36:	3301      	adds	r3, #1
 800cd38:	60fb      	str	r3, [r7, #12]
 800cd3a:	68fb      	ldr	r3, [r7, #12]
 800cd3c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800cd40:	d901      	bls.n	800cd46 <USB_FlushRxFifo+0x1e>
 800cd42:	2303      	movs	r3, #3
 800cd44:	e018      	b.n	800cd78 <USB_FlushRxFifo+0x50>
 800cd46:	687b      	ldr	r3, [r7, #4]
 800cd48:	691b      	ldr	r3, [r3, #16]
 800cd4a:	2b00      	cmp	r3, #0
 800cd4c:	daf2      	bge.n	800cd34 <USB_FlushRxFifo+0xc>
 800cd4e:	2300      	movs	r3, #0
 800cd50:	60fb      	str	r3, [r7, #12]
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	2210      	movs	r2, #16
 800cd56:	611a      	str	r2, [r3, #16]
 800cd58:	68fb      	ldr	r3, [r7, #12]
 800cd5a:	3301      	adds	r3, #1
 800cd5c:	60fb      	str	r3, [r7, #12]
 800cd5e:	68fb      	ldr	r3, [r7, #12]
 800cd60:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800cd64:	d901      	bls.n	800cd6a <USB_FlushRxFifo+0x42>
 800cd66:	2303      	movs	r3, #3
 800cd68:	e006      	b.n	800cd78 <USB_FlushRxFifo+0x50>
 800cd6a:	687b      	ldr	r3, [r7, #4]
 800cd6c:	691b      	ldr	r3, [r3, #16]
 800cd6e:	f003 0310 	and.w	r3, r3, #16
 800cd72:	2b10      	cmp	r3, #16
 800cd74:	d0f0      	beq.n	800cd58 <USB_FlushRxFifo+0x30>
 800cd76:	2300      	movs	r3, #0
 800cd78:	4618      	mov	r0, r3
 800cd7a:	3714      	adds	r7, #20
 800cd7c:	46bd      	mov	sp, r7
 800cd7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd82:	4770      	bx	lr

0800cd84 <USB_SetDevSpeed>:
 800cd84:	b480      	push	{r7}
 800cd86:	b085      	sub	sp, #20
 800cd88:	af00      	add	r7, sp, #0
 800cd8a:	6078      	str	r0, [r7, #4]
 800cd8c:	460b      	mov	r3, r1
 800cd8e:	70fb      	strb	r3, [r7, #3]
 800cd90:	687b      	ldr	r3, [r7, #4]
 800cd92:	60fb      	str	r3, [r7, #12]
 800cd94:	68fb      	ldr	r3, [r7, #12]
 800cd96:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cd9a:	681a      	ldr	r2, [r3, #0]
 800cd9c:	78fb      	ldrb	r3, [r7, #3]
 800cd9e:	68f9      	ldr	r1, [r7, #12]
 800cda0:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800cda4:	4313      	orrs	r3, r2
 800cda6:	600b      	str	r3, [r1, #0]
 800cda8:	2300      	movs	r3, #0
 800cdaa:	4618      	mov	r0, r3
 800cdac:	3714      	adds	r7, #20
 800cdae:	46bd      	mov	sp, r7
 800cdb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdb4:	4770      	bx	lr

0800cdb6 <USB_GetDevSpeed>:
 800cdb6:	b480      	push	{r7}
 800cdb8:	b087      	sub	sp, #28
 800cdba:	af00      	add	r7, sp, #0
 800cdbc:	6078      	str	r0, [r7, #4]
 800cdbe:	687b      	ldr	r3, [r7, #4]
 800cdc0:	613b      	str	r3, [r7, #16]
 800cdc2:	693b      	ldr	r3, [r7, #16]
 800cdc4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cdc8:	689b      	ldr	r3, [r3, #8]
 800cdca:	f003 0306 	and.w	r3, r3, #6
 800cdce:	60fb      	str	r3, [r7, #12]
 800cdd0:	68fb      	ldr	r3, [r7, #12]
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	d102      	bne.n	800cddc <USB_GetDevSpeed+0x26>
 800cdd6:	2300      	movs	r3, #0
 800cdd8:	75fb      	strb	r3, [r7, #23]
 800cdda:	e00a      	b.n	800cdf2 <USB_GetDevSpeed+0x3c>
 800cddc:	68fb      	ldr	r3, [r7, #12]
 800cdde:	2b02      	cmp	r3, #2
 800cde0:	d002      	beq.n	800cde8 <USB_GetDevSpeed+0x32>
 800cde2:	68fb      	ldr	r3, [r7, #12]
 800cde4:	2b06      	cmp	r3, #6
 800cde6:	d102      	bne.n	800cdee <USB_GetDevSpeed+0x38>
 800cde8:	2302      	movs	r3, #2
 800cdea:	75fb      	strb	r3, [r7, #23]
 800cdec:	e001      	b.n	800cdf2 <USB_GetDevSpeed+0x3c>
 800cdee:	230f      	movs	r3, #15
 800cdf0:	75fb      	strb	r3, [r7, #23]
 800cdf2:	7dfb      	ldrb	r3, [r7, #23]
 800cdf4:	4618      	mov	r0, r3
 800cdf6:	371c      	adds	r7, #28
 800cdf8:	46bd      	mov	sp, r7
 800cdfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdfe:	4770      	bx	lr

0800ce00 <USB_ActivateEndpoint>:
 800ce00:	b480      	push	{r7}
 800ce02:	b085      	sub	sp, #20
 800ce04:	af00      	add	r7, sp, #0
 800ce06:	6078      	str	r0, [r7, #4]
 800ce08:	6039      	str	r1, [r7, #0]
 800ce0a:	687b      	ldr	r3, [r7, #4]
 800ce0c:	60fb      	str	r3, [r7, #12]
 800ce0e:	683b      	ldr	r3, [r7, #0]
 800ce10:	781b      	ldrb	r3, [r3, #0]
 800ce12:	60bb      	str	r3, [r7, #8]
 800ce14:	683b      	ldr	r3, [r7, #0]
 800ce16:	785b      	ldrb	r3, [r3, #1]
 800ce18:	2b01      	cmp	r3, #1
 800ce1a:	d139      	bne.n	800ce90 <USB_ActivateEndpoint+0x90>
 800ce1c:	68fb      	ldr	r3, [r7, #12]
 800ce1e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ce22:	69da      	ldr	r2, [r3, #28]
 800ce24:	683b      	ldr	r3, [r7, #0]
 800ce26:	781b      	ldrb	r3, [r3, #0]
 800ce28:	f003 030f 	and.w	r3, r3, #15
 800ce2c:	2101      	movs	r1, #1
 800ce2e:	fa01 f303 	lsl.w	r3, r1, r3
 800ce32:	b29b      	uxth	r3, r3
 800ce34:	68f9      	ldr	r1, [r7, #12]
 800ce36:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800ce3a:	4313      	orrs	r3, r2
 800ce3c:	61cb      	str	r3, [r1, #28]
 800ce3e:	68bb      	ldr	r3, [r7, #8]
 800ce40:	015a      	lsls	r2, r3, #5
 800ce42:	68fb      	ldr	r3, [r7, #12]
 800ce44:	4413      	add	r3, r2
 800ce46:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800ce4a:	681b      	ldr	r3, [r3, #0]
 800ce4c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ce50:	2b00      	cmp	r3, #0
 800ce52:	d153      	bne.n	800cefc <USB_ActivateEndpoint+0xfc>
 800ce54:	68bb      	ldr	r3, [r7, #8]
 800ce56:	015a      	lsls	r2, r3, #5
 800ce58:	68fb      	ldr	r3, [r7, #12]
 800ce5a:	4413      	add	r3, r2
 800ce5c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800ce60:	681a      	ldr	r2, [r3, #0]
 800ce62:	683b      	ldr	r3, [r7, #0]
 800ce64:	689b      	ldr	r3, [r3, #8]
 800ce66:	f3c3 010a 	ubfx	r1, r3, #0, #11
 800ce6a:	683b      	ldr	r3, [r7, #0]
 800ce6c:	791b      	ldrb	r3, [r3, #4]
 800ce6e:	049b      	lsls	r3, r3, #18
 800ce70:	4319      	orrs	r1, r3
 800ce72:	68bb      	ldr	r3, [r7, #8]
 800ce74:	059b      	lsls	r3, r3, #22
 800ce76:	430b      	orrs	r3, r1
 800ce78:	431a      	orrs	r2, r3
 800ce7a:	68bb      	ldr	r3, [r7, #8]
 800ce7c:	0159      	lsls	r1, r3, #5
 800ce7e:	68fb      	ldr	r3, [r7, #12]
 800ce80:	440b      	add	r3, r1
 800ce82:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800ce86:	4619      	mov	r1, r3
 800ce88:	4b20      	ldr	r3, [pc, #128]	@ (800cf0c <USB_ActivateEndpoint+0x10c>)
 800ce8a:	4313      	orrs	r3, r2
 800ce8c:	600b      	str	r3, [r1, #0]
 800ce8e:	e035      	b.n	800cefc <USB_ActivateEndpoint+0xfc>
 800ce90:	68fb      	ldr	r3, [r7, #12]
 800ce92:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ce96:	69da      	ldr	r2, [r3, #28]
 800ce98:	683b      	ldr	r3, [r7, #0]
 800ce9a:	781b      	ldrb	r3, [r3, #0]
 800ce9c:	f003 030f 	and.w	r3, r3, #15
 800cea0:	2101      	movs	r1, #1
 800cea2:	fa01 f303 	lsl.w	r3, r1, r3
 800cea6:	041b      	lsls	r3, r3, #16
 800cea8:	68f9      	ldr	r1, [r7, #12]
 800ceaa:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800ceae:	4313      	orrs	r3, r2
 800ceb0:	61cb      	str	r3, [r1, #28]
 800ceb2:	68bb      	ldr	r3, [r7, #8]
 800ceb4:	015a      	lsls	r2, r3, #5
 800ceb6:	68fb      	ldr	r3, [r7, #12]
 800ceb8:	4413      	add	r3, r2
 800ceba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cebe:	681b      	ldr	r3, [r3, #0]
 800cec0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800cec4:	2b00      	cmp	r3, #0
 800cec6:	d119      	bne.n	800cefc <USB_ActivateEndpoint+0xfc>
 800cec8:	68bb      	ldr	r3, [r7, #8]
 800ceca:	015a      	lsls	r2, r3, #5
 800cecc:	68fb      	ldr	r3, [r7, #12]
 800cece:	4413      	add	r3, r2
 800ced0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ced4:	681a      	ldr	r2, [r3, #0]
 800ced6:	683b      	ldr	r3, [r7, #0]
 800ced8:	689b      	ldr	r3, [r3, #8]
 800ceda:	f3c3 010a 	ubfx	r1, r3, #0, #11
 800cede:	683b      	ldr	r3, [r7, #0]
 800cee0:	791b      	ldrb	r3, [r3, #4]
 800cee2:	049b      	lsls	r3, r3, #18
 800cee4:	430b      	orrs	r3, r1
 800cee6:	431a      	orrs	r2, r3
 800cee8:	68bb      	ldr	r3, [r7, #8]
 800ceea:	0159      	lsls	r1, r3, #5
 800ceec:	68fb      	ldr	r3, [r7, #12]
 800ceee:	440b      	add	r3, r1
 800cef0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cef4:	4619      	mov	r1, r3
 800cef6:	4b05      	ldr	r3, [pc, #20]	@ (800cf0c <USB_ActivateEndpoint+0x10c>)
 800cef8:	4313      	orrs	r3, r2
 800cefa:	600b      	str	r3, [r1, #0]
 800cefc:	2300      	movs	r3, #0
 800cefe:	4618      	mov	r0, r3
 800cf00:	3714      	adds	r7, #20
 800cf02:	46bd      	mov	sp, r7
 800cf04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf08:	4770      	bx	lr
 800cf0a:	bf00      	nop
 800cf0c:	10008000 	.word	0x10008000

0800cf10 <USB_DeactivateEndpoint>:
 800cf10:	b480      	push	{r7}
 800cf12:	b085      	sub	sp, #20
 800cf14:	af00      	add	r7, sp, #0
 800cf16:	6078      	str	r0, [r7, #4]
 800cf18:	6039      	str	r1, [r7, #0]
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	60fb      	str	r3, [r7, #12]
 800cf1e:	683b      	ldr	r3, [r7, #0]
 800cf20:	781b      	ldrb	r3, [r3, #0]
 800cf22:	60bb      	str	r3, [r7, #8]
 800cf24:	683b      	ldr	r3, [r7, #0]
 800cf26:	785b      	ldrb	r3, [r3, #1]
 800cf28:	2b01      	cmp	r3, #1
 800cf2a:	d161      	bne.n	800cff0 <USB_DeactivateEndpoint+0xe0>
 800cf2c:	68bb      	ldr	r3, [r7, #8]
 800cf2e:	015a      	lsls	r2, r3, #5
 800cf30:	68fb      	ldr	r3, [r7, #12]
 800cf32:	4413      	add	r3, r2
 800cf34:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cf38:	681b      	ldr	r3, [r3, #0]
 800cf3a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800cf3e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800cf42:	d11f      	bne.n	800cf84 <USB_DeactivateEndpoint+0x74>
 800cf44:	68bb      	ldr	r3, [r7, #8]
 800cf46:	015a      	lsls	r2, r3, #5
 800cf48:	68fb      	ldr	r3, [r7, #12]
 800cf4a:	4413      	add	r3, r2
 800cf4c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cf50:	681b      	ldr	r3, [r3, #0]
 800cf52:	68ba      	ldr	r2, [r7, #8]
 800cf54:	0151      	lsls	r1, r2, #5
 800cf56:	68fa      	ldr	r2, [r7, #12]
 800cf58:	440a      	add	r2, r1
 800cf5a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800cf5e:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800cf62:	6013      	str	r3, [r2, #0]
 800cf64:	68bb      	ldr	r3, [r7, #8]
 800cf66:	015a      	lsls	r2, r3, #5
 800cf68:	68fb      	ldr	r3, [r7, #12]
 800cf6a:	4413      	add	r3, r2
 800cf6c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cf70:	681b      	ldr	r3, [r3, #0]
 800cf72:	68ba      	ldr	r2, [r7, #8]
 800cf74:	0151      	lsls	r1, r2, #5
 800cf76:	68fa      	ldr	r2, [r7, #12]
 800cf78:	440a      	add	r2, r1
 800cf7a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800cf7e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800cf82:	6013      	str	r3, [r2, #0]
 800cf84:	68fb      	ldr	r3, [r7, #12]
 800cf86:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cf8a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800cf8c:	683b      	ldr	r3, [r7, #0]
 800cf8e:	781b      	ldrb	r3, [r3, #0]
 800cf90:	f003 030f 	and.w	r3, r3, #15
 800cf94:	2101      	movs	r1, #1
 800cf96:	fa01 f303 	lsl.w	r3, r1, r3
 800cf9a:	b29b      	uxth	r3, r3
 800cf9c:	43db      	mvns	r3, r3
 800cf9e:	68f9      	ldr	r1, [r7, #12]
 800cfa0:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800cfa4:	4013      	ands	r3, r2
 800cfa6:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800cfa8:	68fb      	ldr	r3, [r7, #12]
 800cfaa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800cfae:	69da      	ldr	r2, [r3, #28]
 800cfb0:	683b      	ldr	r3, [r7, #0]
 800cfb2:	781b      	ldrb	r3, [r3, #0]
 800cfb4:	f003 030f 	and.w	r3, r3, #15
 800cfb8:	2101      	movs	r1, #1
 800cfba:	fa01 f303 	lsl.w	r3, r1, r3
 800cfbe:	b29b      	uxth	r3, r3
 800cfc0:	43db      	mvns	r3, r3
 800cfc2:	68f9      	ldr	r1, [r7, #12]
 800cfc4:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800cfc8:	4013      	ands	r3, r2
 800cfca:	61cb      	str	r3, [r1, #28]
 800cfcc:	68bb      	ldr	r3, [r7, #8]
 800cfce:	015a      	lsls	r2, r3, #5
 800cfd0:	68fb      	ldr	r3, [r7, #12]
 800cfd2:	4413      	add	r3, r2
 800cfd4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cfd8:	681a      	ldr	r2, [r3, #0]
 800cfda:	68bb      	ldr	r3, [r7, #8]
 800cfdc:	0159      	lsls	r1, r3, #5
 800cfde:	68fb      	ldr	r3, [r7, #12]
 800cfe0:	440b      	add	r3, r1
 800cfe2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800cfe6:	4619      	mov	r1, r3
 800cfe8:	4b35      	ldr	r3, [pc, #212]	@ (800d0c0 <USB_DeactivateEndpoint+0x1b0>)
 800cfea:	4013      	ands	r3, r2
 800cfec:	600b      	str	r3, [r1, #0]
 800cfee:	e060      	b.n	800d0b2 <USB_DeactivateEndpoint+0x1a2>
 800cff0:	68bb      	ldr	r3, [r7, #8]
 800cff2:	015a      	lsls	r2, r3, #5
 800cff4:	68fb      	ldr	r3, [r7, #12]
 800cff6:	4413      	add	r3, r2
 800cff8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800cffc:	681b      	ldr	r3, [r3, #0]
 800cffe:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800d002:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800d006:	d11f      	bne.n	800d048 <USB_DeactivateEndpoint+0x138>
 800d008:	68bb      	ldr	r3, [r7, #8]
 800d00a:	015a      	lsls	r2, r3, #5
 800d00c:	68fb      	ldr	r3, [r7, #12]
 800d00e:	4413      	add	r3, r2
 800d010:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d014:	681b      	ldr	r3, [r3, #0]
 800d016:	68ba      	ldr	r2, [r7, #8]
 800d018:	0151      	lsls	r1, r2, #5
 800d01a:	68fa      	ldr	r2, [r7, #12]
 800d01c:	440a      	add	r2, r1
 800d01e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d022:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800d026:	6013      	str	r3, [r2, #0]
 800d028:	68bb      	ldr	r3, [r7, #8]
 800d02a:	015a      	lsls	r2, r3, #5
 800d02c:	68fb      	ldr	r3, [r7, #12]
 800d02e:	4413      	add	r3, r2
 800d030:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d034:	681b      	ldr	r3, [r3, #0]
 800d036:	68ba      	ldr	r2, [r7, #8]
 800d038:	0151      	lsls	r1, r2, #5
 800d03a:	68fa      	ldr	r2, [r7, #12]
 800d03c:	440a      	add	r2, r1
 800d03e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d042:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800d046:	6013      	str	r3, [r2, #0]
 800d048:	68fb      	ldr	r3, [r7, #12]
 800d04a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d04e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800d050:	683b      	ldr	r3, [r7, #0]
 800d052:	781b      	ldrb	r3, [r3, #0]
 800d054:	f003 030f 	and.w	r3, r3, #15
 800d058:	2101      	movs	r1, #1
 800d05a:	fa01 f303 	lsl.w	r3, r1, r3
 800d05e:	041b      	lsls	r3, r3, #16
 800d060:	43db      	mvns	r3, r3
 800d062:	68f9      	ldr	r1, [r7, #12]
 800d064:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800d068:	4013      	ands	r3, r2
 800d06a:	63cb      	str	r3, [r1, #60]	@ 0x3c
 800d06c:	68fb      	ldr	r3, [r7, #12]
 800d06e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d072:	69da      	ldr	r2, [r3, #28]
 800d074:	683b      	ldr	r3, [r7, #0]
 800d076:	781b      	ldrb	r3, [r3, #0]
 800d078:	f003 030f 	and.w	r3, r3, #15
 800d07c:	2101      	movs	r1, #1
 800d07e:	fa01 f303 	lsl.w	r3, r1, r3
 800d082:	041b      	lsls	r3, r3, #16
 800d084:	43db      	mvns	r3, r3
 800d086:	68f9      	ldr	r1, [r7, #12]
 800d088:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800d08c:	4013      	ands	r3, r2
 800d08e:	61cb      	str	r3, [r1, #28]
 800d090:	68bb      	ldr	r3, [r7, #8]
 800d092:	015a      	lsls	r2, r3, #5
 800d094:	68fb      	ldr	r3, [r7, #12]
 800d096:	4413      	add	r3, r2
 800d098:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d09c:	681a      	ldr	r2, [r3, #0]
 800d09e:	68bb      	ldr	r3, [r7, #8]
 800d0a0:	0159      	lsls	r1, r3, #5
 800d0a2:	68fb      	ldr	r3, [r7, #12]
 800d0a4:	440b      	add	r3, r1
 800d0a6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d0aa:	4619      	mov	r1, r3
 800d0ac:	4b05      	ldr	r3, [pc, #20]	@ (800d0c4 <USB_DeactivateEndpoint+0x1b4>)
 800d0ae:	4013      	ands	r3, r2
 800d0b0:	600b      	str	r3, [r1, #0]
 800d0b2:	2300      	movs	r3, #0
 800d0b4:	4618      	mov	r0, r3
 800d0b6:	3714      	adds	r7, #20
 800d0b8:	46bd      	mov	sp, r7
 800d0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0be:	4770      	bx	lr
 800d0c0:	ec337800 	.word	0xec337800
 800d0c4:	eff37800 	.word	0xeff37800

0800d0c8 <USB_EPStartXfer>:
 800d0c8:	b580      	push	{r7, lr}
 800d0ca:	b08a      	sub	sp, #40	@ 0x28
 800d0cc:	af02      	add	r7, sp, #8
 800d0ce:	60f8      	str	r0, [r7, #12]
 800d0d0:	60b9      	str	r1, [r7, #8]
 800d0d2:	4613      	mov	r3, r2
 800d0d4:	71fb      	strb	r3, [r7, #7]
 800d0d6:	68fb      	ldr	r3, [r7, #12]
 800d0d8:	61fb      	str	r3, [r7, #28]
 800d0da:	68bb      	ldr	r3, [r7, #8]
 800d0dc:	781b      	ldrb	r3, [r3, #0]
 800d0de:	61bb      	str	r3, [r7, #24]
 800d0e0:	68bb      	ldr	r3, [r7, #8]
 800d0e2:	785b      	ldrb	r3, [r3, #1]
 800d0e4:	2b01      	cmp	r3, #1
 800d0e6:	f040 8181 	bne.w	800d3ec <USB_EPStartXfer+0x324>
 800d0ea:	68bb      	ldr	r3, [r7, #8]
 800d0ec:	691b      	ldr	r3, [r3, #16]
 800d0ee:	2b00      	cmp	r3, #0
 800d0f0:	d132      	bne.n	800d158 <USB_EPStartXfer+0x90>
 800d0f2:	69bb      	ldr	r3, [r7, #24]
 800d0f4:	015a      	lsls	r2, r3, #5
 800d0f6:	69fb      	ldr	r3, [r7, #28]
 800d0f8:	4413      	add	r3, r2
 800d0fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d0fe:	691a      	ldr	r2, [r3, #16]
 800d100:	69bb      	ldr	r3, [r7, #24]
 800d102:	0159      	lsls	r1, r3, #5
 800d104:	69fb      	ldr	r3, [r7, #28]
 800d106:	440b      	add	r3, r1
 800d108:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d10c:	4619      	mov	r1, r3
 800d10e:	4ba5      	ldr	r3, [pc, #660]	@ (800d3a4 <USB_EPStartXfer+0x2dc>)
 800d110:	4013      	ands	r3, r2
 800d112:	610b      	str	r3, [r1, #16]
 800d114:	69bb      	ldr	r3, [r7, #24]
 800d116:	015a      	lsls	r2, r3, #5
 800d118:	69fb      	ldr	r3, [r7, #28]
 800d11a:	4413      	add	r3, r2
 800d11c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d120:	691b      	ldr	r3, [r3, #16]
 800d122:	69ba      	ldr	r2, [r7, #24]
 800d124:	0151      	lsls	r1, r2, #5
 800d126:	69fa      	ldr	r2, [r7, #28]
 800d128:	440a      	add	r2, r1
 800d12a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d12e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800d132:	6113      	str	r3, [r2, #16]
 800d134:	69bb      	ldr	r3, [r7, #24]
 800d136:	015a      	lsls	r2, r3, #5
 800d138:	69fb      	ldr	r3, [r7, #28]
 800d13a:	4413      	add	r3, r2
 800d13c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d140:	691a      	ldr	r2, [r3, #16]
 800d142:	69bb      	ldr	r3, [r7, #24]
 800d144:	0159      	lsls	r1, r3, #5
 800d146:	69fb      	ldr	r3, [r7, #28]
 800d148:	440b      	add	r3, r1
 800d14a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d14e:	4619      	mov	r1, r3
 800d150:	4b95      	ldr	r3, [pc, #596]	@ (800d3a8 <USB_EPStartXfer+0x2e0>)
 800d152:	4013      	ands	r3, r2
 800d154:	610b      	str	r3, [r1, #16]
 800d156:	e092      	b.n	800d27e <USB_EPStartXfer+0x1b6>
 800d158:	69bb      	ldr	r3, [r7, #24]
 800d15a:	015a      	lsls	r2, r3, #5
 800d15c:	69fb      	ldr	r3, [r7, #28]
 800d15e:	4413      	add	r3, r2
 800d160:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d164:	691a      	ldr	r2, [r3, #16]
 800d166:	69bb      	ldr	r3, [r7, #24]
 800d168:	0159      	lsls	r1, r3, #5
 800d16a:	69fb      	ldr	r3, [r7, #28]
 800d16c:	440b      	add	r3, r1
 800d16e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d172:	4619      	mov	r1, r3
 800d174:	4b8c      	ldr	r3, [pc, #560]	@ (800d3a8 <USB_EPStartXfer+0x2e0>)
 800d176:	4013      	ands	r3, r2
 800d178:	610b      	str	r3, [r1, #16]
 800d17a:	69bb      	ldr	r3, [r7, #24]
 800d17c:	015a      	lsls	r2, r3, #5
 800d17e:	69fb      	ldr	r3, [r7, #28]
 800d180:	4413      	add	r3, r2
 800d182:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d186:	691a      	ldr	r2, [r3, #16]
 800d188:	69bb      	ldr	r3, [r7, #24]
 800d18a:	0159      	lsls	r1, r3, #5
 800d18c:	69fb      	ldr	r3, [r7, #28]
 800d18e:	440b      	add	r3, r1
 800d190:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d194:	4619      	mov	r1, r3
 800d196:	4b83      	ldr	r3, [pc, #524]	@ (800d3a4 <USB_EPStartXfer+0x2dc>)
 800d198:	4013      	ands	r3, r2
 800d19a:	610b      	str	r3, [r1, #16]
 800d19c:	69bb      	ldr	r3, [r7, #24]
 800d19e:	2b00      	cmp	r3, #0
 800d1a0:	d11a      	bne.n	800d1d8 <USB_EPStartXfer+0x110>
 800d1a2:	68bb      	ldr	r3, [r7, #8]
 800d1a4:	691a      	ldr	r2, [r3, #16]
 800d1a6:	68bb      	ldr	r3, [r7, #8]
 800d1a8:	689b      	ldr	r3, [r3, #8]
 800d1aa:	429a      	cmp	r2, r3
 800d1ac:	d903      	bls.n	800d1b6 <USB_EPStartXfer+0xee>
 800d1ae:	68bb      	ldr	r3, [r7, #8]
 800d1b0:	689a      	ldr	r2, [r3, #8]
 800d1b2:	68bb      	ldr	r3, [r7, #8]
 800d1b4:	611a      	str	r2, [r3, #16]
 800d1b6:	69bb      	ldr	r3, [r7, #24]
 800d1b8:	015a      	lsls	r2, r3, #5
 800d1ba:	69fb      	ldr	r3, [r7, #28]
 800d1bc:	4413      	add	r3, r2
 800d1be:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d1c2:	691b      	ldr	r3, [r3, #16]
 800d1c4:	69ba      	ldr	r2, [r7, #24]
 800d1c6:	0151      	lsls	r1, r2, #5
 800d1c8:	69fa      	ldr	r2, [r7, #28]
 800d1ca:	440a      	add	r2, r1
 800d1cc:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d1d0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800d1d4:	6113      	str	r3, [r2, #16]
 800d1d6:	e01b      	b.n	800d210 <USB_EPStartXfer+0x148>
 800d1d8:	69bb      	ldr	r3, [r7, #24]
 800d1da:	015a      	lsls	r2, r3, #5
 800d1dc:	69fb      	ldr	r3, [r7, #28]
 800d1de:	4413      	add	r3, r2
 800d1e0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d1e4:	691a      	ldr	r2, [r3, #16]
 800d1e6:	68bb      	ldr	r3, [r7, #8]
 800d1e8:	6919      	ldr	r1, [r3, #16]
 800d1ea:	68bb      	ldr	r3, [r7, #8]
 800d1ec:	689b      	ldr	r3, [r3, #8]
 800d1ee:	440b      	add	r3, r1
 800d1f0:	1e59      	subs	r1, r3, #1
 800d1f2:	68bb      	ldr	r3, [r7, #8]
 800d1f4:	689b      	ldr	r3, [r3, #8]
 800d1f6:	fbb1 f3f3 	udiv	r3, r1, r3
 800d1fa:	04d9      	lsls	r1, r3, #19
 800d1fc:	4b6b      	ldr	r3, [pc, #428]	@ (800d3ac <USB_EPStartXfer+0x2e4>)
 800d1fe:	400b      	ands	r3, r1
 800d200:	69b9      	ldr	r1, [r7, #24]
 800d202:	0148      	lsls	r0, r1, #5
 800d204:	69f9      	ldr	r1, [r7, #28]
 800d206:	4401      	add	r1, r0
 800d208:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 800d20c:	4313      	orrs	r3, r2
 800d20e:	610b      	str	r3, [r1, #16]
 800d210:	69bb      	ldr	r3, [r7, #24]
 800d212:	015a      	lsls	r2, r3, #5
 800d214:	69fb      	ldr	r3, [r7, #28]
 800d216:	4413      	add	r3, r2
 800d218:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d21c:	691a      	ldr	r2, [r3, #16]
 800d21e:	68bb      	ldr	r3, [r7, #8]
 800d220:	691b      	ldr	r3, [r3, #16]
 800d222:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800d226:	69b9      	ldr	r1, [r7, #24]
 800d228:	0148      	lsls	r0, r1, #5
 800d22a:	69f9      	ldr	r1, [r7, #28]
 800d22c:	4401      	add	r1, r0
 800d22e:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 800d232:	4313      	orrs	r3, r2
 800d234:	610b      	str	r3, [r1, #16]
 800d236:	68bb      	ldr	r3, [r7, #8]
 800d238:	791b      	ldrb	r3, [r3, #4]
 800d23a:	2b01      	cmp	r3, #1
 800d23c:	d11f      	bne.n	800d27e <USB_EPStartXfer+0x1b6>
 800d23e:	69bb      	ldr	r3, [r7, #24]
 800d240:	015a      	lsls	r2, r3, #5
 800d242:	69fb      	ldr	r3, [r7, #28]
 800d244:	4413      	add	r3, r2
 800d246:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d24a:	691b      	ldr	r3, [r3, #16]
 800d24c:	69ba      	ldr	r2, [r7, #24]
 800d24e:	0151      	lsls	r1, r2, #5
 800d250:	69fa      	ldr	r2, [r7, #28]
 800d252:	440a      	add	r2, r1
 800d254:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d258:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 800d25c:	6113      	str	r3, [r2, #16]
 800d25e:	69bb      	ldr	r3, [r7, #24]
 800d260:	015a      	lsls	r2, r3, #5
 800d262:	69fb      	ldr	r3, [r7, #28]
 800d264:	4413      	add	r3, r2
 800d266:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d26a:	691b      	ldr	r3, [r3, #16]
 800d26c:	69ba      	ldr	r2, [r7, #24]
 800d26e:	0151      	lsls	r1, r2, #5
 800d270:	69fa      	ldr	r2, [r7, #28]
 800d272:	440a      	add	r2, r1
 800d274:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d278:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800d27c:	6113      	str	r3, [r2, #16]
 800d27e:	79fb      	ldrb	r3, [r7, #7]
 800d280:	2b01      	cmp	r3, #1
 800d282:	d14b      	bne.n	800d31c <USB_EPStartXfer+0x254>
 800d284:	68bb      	ldr	r3, [r7, #8]
 800d286:	69db      	ldr	r3, [r3, #28]
 800d288:	2b00      	cmp	r3, #0
 800d28a:	d009      	beq.n	800d2a0 <USB_EPStartXfer+0x1d8>
 800d28c:	69bb      	ldr	r3, [r7, #24]
 800d28e:	015a      	lsls	r2, r3, #5
 800d290:	69fb      	ldr	r3, [r7, #28]
 800d292:	4413      	add	r3, r2
 800d294:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d298:	461a      	mov	r2, r3
 800d29a:	68bb      	ldr	r3, [r7, #8]
 800d29c:	69db      	ldr	r3, [r3, #28]
 800d29e:	6153      	str	r3, [r2, #20]
 800d2a0:	68bb      	ldr	r3, [r7, #8]
 800d2a2:	791b      	ldrb	r3, [r3, #4]
 800d2a4:	2b01      	cmp	r3, #1
 800d2a6:	d128      	bne.n	800d2fa <USB_EPStartXfer+0x232>
 800d2a8:	69fb      	ldr	r3, [r7, #28]
 800d2aa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d2ae:	689b      	ldr	r3, [r3, #8]
 800d2b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d2b4:	2b00      	cmp	r3, #0
 800d2b6:	d110      	bne.n	800d2da <USB_EPStartXfer+0x212>
 800d2b8:	69bb      	ldr	r3, [r7, #24]
 800d2ba:	015a      	lsls	r2, r3, #5
 800d2bc:	69fb      	ldr	r3, [r7, #28]
 800d2be:	4413      	add	r3, r2
 800d2c0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d2c4:	681b      	ldr	r3, [r3, #0]
 800d2c6:	69ba      	ldr	r2, [r7, #24]
 800d2c8:	0151      	lsls	r1, r2, #5
 800d2ca:	69fa      	ldr	r2, [r7, #28]
 800d2cc:	440a      	add	r2, r1
 800d2ce:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d2d2:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800d2d6:	6013      	str	r3, [r2, #0]
 800d2d8:	e00f      	b.n	800d2fa <USB_EPStartXfer+0x232>
 800d2da:	69bb      	ldr	r3, [r7, #24]
 800d2dc:	015a      	lsls	r2, r3, #5
 800d2de:	69fb      	ldr	r3, [r7, #28]
 800d2e0:	4413      	add	r3, r2
 800d2e2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d2e6:	681b      	ldr	r3, [r3, #0]
 800d2e8:	69ba      	ldr	r2, [r7, #24]
 800d2ea:	0151      	lsls	r1, r2, #5
 800d2ec:	69fa      	ldr	r2, [r7, #28]
 800d2ee:	440a      	add	r2, r1
 800d2f0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d2f4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800d2f8:	6013      	str	r3, [r2, #0]
 800d2fa:	69bb      	ldr	r3, [r7, #24]
 800d2fc:	015a      	lsls	r2, r3, #5
 800d2fe:	69fb      	ldr	r3, [r7, #28]
 800d300:	4413      	add	r3, r2
 800d302:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d306:	681b      	ldr	r3, [r3, #0]
 800d308:	69ba      	ldr	r2, [r7, #24]
 800d30a:	0151      	lsls	r1, r2, #5
 800d30c:	69fa      	ldr	r2, [r7, #28]
 800d30e:	440a      	add	r2, r1
 800d310:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d314:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800d318:	6013      	str	r3, [r2, #0]
 800d31a:	e16a      	b.n	800d5f2 <USB_EPStartXfer+0x52a>
 800d31c:	69bb      	ldr	r3, [r7, #24]
 800d31e:	015a      	lsls	r2, r3, #5
 800d320:	69fb      	ldr	r3, [r7, #28]
 800d322:	4413      	add	r3, r2
 800d324:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d328:	681b      	ldr	r3, [r3, #0]
 800d32a:	69ba      	ldr	r2, [r7, #24]
 800d32c:	0151      	lsls	r1, r2, #5
 800d32e:	69fa      	ldr	r2, [r7, #28]
 800d330:	440a      	add	r2, r1
 800d332:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d336:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800d33a:	6013      	str	r3, [r2, #0]
 800d33c:	68bb      	ldr	r3, [r7, #8]
 800d33e:	791b      	ldrb	r3, [r3, #4]
 800d340:	2b01      	cmp	r3, #1
 800d342:	d015      	beq.n	800d370 <USB_EPStartXfer+0x2a8>
 800d344:	68bb      	ldr	r3, [r7, #8]
 800d346:	691b      	ldr	r3, [r3, #16]
 800d348:	2b00      	cmp	r3, #0
 800d34a:	f000 8152 	beq.w	800d5f2 <USB_EPStartXfer+0x52a>
 800d34e:	69fb      	ldr	r3, [r7, #28]
 800d350:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d354:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800d356:	68bb      	ldr	r3, [r7, #8]
 800d358:	781b      	ldrb	r3, [r3, #0]
 800d35a:	f003 030f 	and.w	r3, r3, #15
 800d35e:	2101      	movs	r1, #1
 800d360:	fa01 f303 	lsl.w	r3, r1, r3
 800d364:	69f9      	ldr	r1, [r7, #28]
 800d366:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800d36a:	4313      	orrs	r3, r2
 800d36c:	634b      	str	r3, [r1, #52]	@ 0x34
 800d36e:	e140      	b.n	800d5f2 <USB_EPStartXfer+0x52a>
 800d370:	69fb      	ldr	r3, [r7, #28]
 800d372:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d376:	689b      	ldr	r3, [r3, #8]
 800d378:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d37c:	2b00      	cmp	r3, #0
 800d37e:	d117      	bne.n	800d3b0 <USB_EPStartXfer+0x2e8>
 800d380:	69bb      	ldr	r3, [r7, #24]
 800d382:	015a      	lsls	r2, r3, #5
 800d384:	69fb      	ldr	r3, [r7, #28]
 800d386:	4413      	add	r3, r2
 800d388:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d38c:	681b      	ldr	r3, [r3, #0]
 800d38e:	69ba      	ldr	r2, [r7, #24]
 800d390:	0151      	lsls	r1, r2, #5
 800d392:	69fa      	ldr	r2, [r7, #28]
 800d394:	440a      	add	r2, r1
 800d396:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d39a:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800d39e:	6013      	str	r3, [r2, #0]
 800d3a0:	e016      	b.n	800d3d0 <USB_EPStartXfer+0x308>
 800d3a2:	bf00      	nop
 800d3a4:	e007ffff 	.word	0xe007ffff
 800d3a8:	fff80000 	.word	0xfff80000
 800d3ac:	1ff80000 	.word	0x1ff80000
 800d3b0:	69bb      	ldr	r3, [r7, #24]
 800d3b2:	015a      	lsls	r2, r3, #5
 800d3b4:	69fb      	ldr	r3, [r7, #28]
 800d3b6:	4413      	add	r3, r2
 800d3b8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d3bc:	681b      	ldr	r3, [r3, #0]
 800d3be:	69ba      	ldr	r2, [r7, #24]
 800d3c0:	0151      	lsls	r1, r2, #5
 800d3c2:	69fa      	ldr	r2, [r7, #28]
 800d3c4:	440a      	add	r2, r1
 800d3c6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d3ca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800d3ce:	6013      	str	r3, [r2, #0]
 800d3d0:	68bb      	ldr	r3, [r7, #8]
 800d3d2:	68d9      	ldr	r1, [r3, #12]
 800d3d4:	68bb      	ldr	r3, [r7, #8]
 800d3d6:	781a      	ldrb	r2, [r3, #0]
 800d3d8:	68bb      	ldr	r3, [r7, #8]
 800d3da:	691b      	ldr	r3, [r3, #16]
 800d3dc:	b298      	uxth	r0, r3
 800d3de:	79fb      	ldrb	r3, [r7, #7]
 800d3e0:	9300      	str	r3, [sp, #0]
 800d3e2:	4603      	mov	r3, r0
 800d3e4:	68f8      	ldr	r0, [r7, #12]
 800d3e6:	f000 f9b9 	bl	800d75c <USB_WritePacket>
 800d3ea:	e102      	b.n	800d5f2 <USB_EPStartXfer+0x52a>
 800d3ec:	69bb      	ldr	r3, [r7, #24]
 800d3ee:	015a      	lsls	r2, r3, #5
 800d3f0:	69fb      	ldr	r3, [r7, #28]
 800d3f2:	4413      	add	r3, r2
 800d3f4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d3f8:	691a      	ldr	r2, [r3, #16]
 800d3fa:	69bb      	ldr	r3, [r7, #24]
 800d3fc:	0159      	lsls	r1, r3, #5
 800d3fe:	69fb      	ldr	r3, [r7, #28]
 800d400:	440b      	add	r3, r1
 800d402:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d406:	4619      	mov	r1, r3
 800d408:	4b7c      	ldr	r3, [pc, #496]	@ (800d5fc <USB_EPStartXfer+0x534>)
 800d40a:	4013      	ands	r3, r2
 800d40c:	610b      	str	r3, [r1, #16]
 800d40e:	69bb      	ldr	r3, [r7, #24]
 800d410:	015a      	lsls	r2, r3, #5
 800d412:	69fb      	ldr	r3, [r7, #28]
 800d414:	4413      	add	r3, r2
 800d416:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d41a:	691a      	ldr	r2, [r3, #16]
 800d41c:	69bb      	ldr	r3, [r7, #24]
 800d41e:	0159      	lsls	r1, r3, #5
 800d420:	69fb      	ldr	r3, [r7, #28]
 800d422:	440b      	add	r3, r1
 800d424:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d428:	4619      	mov	r1, r3
 800d42a:	4b75      	ldr	r3, [pc, #468]	@ (800d600 <USB_EPStartXfer+0x538>)
 800d42c:	4013      	ands	r3, r2
 800d42e:	610b      	str	r3, [r1, #16]
 800d430:	69bb      	ldr	r3, [r7, #24]
 800d432:	2b00      	cmp	r3, #0
 800d434:	d12f      	bne.n	800d496 <USB_EPStartXfer+0x3ce>
 800d436:	68bb      	ldr	r3, [r7, #8]
 800d438:	691b      	ldr	r3, [r3, #16]
 800d43a:	2b00      	cmp	r3, #0
 800d43c:	d003      	beq.n	800d446 <USB_EPStartXfer+0x37e>
 800d43e:	68bb      	ldr	r3, [r7, #8]
 800d440:	689a      	ldr	r2, [r3, #8]
 800d442:	68bb      	ldr	r3, [r7, #8]
 800d444:	611a      	str	r2, [r3, #16]
 800d446:	68bb      	ldr	r3, [r7, #8]
 800d448:	689a      	ldr	r2, [r3, #8]
 800d44a:	68bb      	ldr	r3, [r7, #8]
 800d44c:	621a      	str	r2, [r3, #32]
 800d44e:	69bb      	ldr	r3, [r7, #24]
 800d450:	015a      	lsls	r2, r3, #5
 800d452:	69fb      	ldr	r3, [r7, #28]
 800d454:	4413      	add	r3, r2
 800d456:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d45a:	691a      	ldr	r2, [r3, #16]
 800d45c:	68bb      	ldr	r3, [r7, #8]
 800d45e:	6a1b      	ldr	r3, [r3, #32]
 800d460:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800d464:	69b9      	ldr	r1, [r7, #24]
 800d466:	0148      	lsls	r0, r1, #5
 800d468:	69f9      	ldr	r1, [r7, #28]
 800d46a:	4401      	add	r1, r0
 800d46c:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 800d470:	4313      	orrs	r3, r2
 800d472:	610b      	str	r3, [r1, #16]
 800d474:	69bb      	ldr	r3, [r7, #24]
 800d476:	015a      	lsls	r2, r3, #5
 800d478:	69fb      	ldr	r3, [r7, #28]
 800d47a:	4413      	add	r3, r2
 800d47c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d480:	691b      	ldr	r3, [r3, #16]
 800d482:	69ba      	ldr	r2, [r7, #24]
 800d484:	0151      	lsls	r1, r2, #5
 800d486:	69fa      	ldr	r2, [r7, #28]
 800d488:	440a      	add	r2, r1
 800d48a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d48e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800d492:	6113      	str	r3, [r2, #16]
 800d494:	e05f      	b.n	800d556 <USB_EPStartXfer+0x48e>
 800d496:	68bb      	ldr	r3, [r7, #8]
 800d498:	691b      	ldr	r3, [r3, #16]
 800d49a:	2b00      	cmp	r3, #0
 800d49c:	d123      	bne.n	800d4e6 <USB_EPStartXfer+0x41e>
 800d49e:	69bb      	ldr	r3, [r7, #24]
 800d4a0:	015a      	lsls	r2, r3, #5
 800d4a2:	69fb      	ldr	r3, [r7, #28]
 800d4a4:	4413      	add	r3, r2
 800d4a6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d4aa:	691a      	ldr	r2, [r3, #16]
 800d4ac:	68bb      	ldr	r3, [r7, #8]
 800d4ae:	689b      	ldr	r3, [r3, #8]
 800d4b0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800d4b4:	69b9      	ldr	r1, [r7, #24]
 800d4b6:	0148      	lsls	r0, r1, #5
 800d4b8:	69f9      	ldr	r1, [r7, #28]
 800d4ba:	4401      	add	r1, r0
 800d4bc:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 800d4c0:	4313      	orrs	r3, r2
 800d4c2:	610b      	str	r3, [r1, #16]
 800d4c4:	69bb      	ldr	r3, [r7, #24]
 800d4c6:	015a      	lsls	r2, r3, #5
 800d4c8:	69fb      	ldr	r3, [r7, #28]
 800d4ca:	4413      	add	r3, r2
 800d4cc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d4d0:	691b      	ldr	r3, [r3, #16]
 800d4d2:	69ba      	ldr	r2, [r7, #24]
 800d4d4:	0151      	lsls	r1, r2, #5
 800d4d6:	69fa      	ldr	r2, [r7, #28]
 800d4d8:	440a      	add	r2, r1
 800d4da:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d4de:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800d4e2:	6113      	str	r3, [r2, #16]
 800d4e4:	e037      	b.n	800d556 <USB_EPStartXfer+0x48e>
 800d4e6:	68bb      	ldr	r3, [r7, #8]
 800d4e8:	691a      	ldr	r2, [r3, #16]
 800d4ea:	68bb      	ldr	r3, [r7, #8]
 800d4ec:	689b      	ldr	r3, [r3, #8]
 800d4ee:	4413      	add	r3, r2
 800d4f0:	1e5a      	subs	r2, r3, #1
 800d4f2:	68bb      	ldr	r3, [r7, #8]
 800d4f4:	689b      	ldr	r3, [r3, #8]
 800d4f6:	fbb2 f3f3 	udiv	r3, r2, r3
 800d4fa:	82fb      	strh	r3, [r7, #22]
 800d4fc:	68bb      	ldr	r3, [r7, #8]
 800d4fe:	689b      	ldr	r3, [r3, #8]
 800d500:	8afa      	ldrh	r2, [r7, #22]
 800d502:	fb03 f202 	mul.w	r2, r3, r2
 800d506:	68bb      	ldr	r3, [r7, #8]
 800d508:	621a      	str	r2, [r3, #32]
 800d50a:	69bb      	ldr	r3, [r7, #24]
 800d50c:	015a      	lsls	r2, r3, #5
 800d50e:	69fb      	ldr	r3, [r7, #28]
 800d510:	4413      	add	r3, r2
 800d512:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d516:	691a      	ldr	r2, [r3, #16]
 800d518:	8afb      	ldrh	r3, [r7, #22]
 800d51a:	04d9      	lsls	r1, r3, #19
 800d51c:	4b39      	ldr	r3, [pc, #228]	@ (800d604 <USB_EPStartXfer+0x53c>)
 800d51e:	400b      	ands	r3, r1
 800d520:	69b9      	ldr	r1, [r7, #24]
 800d522:	0148      	lsls	r0, r1, #5
 800d524:	69f9      	ldr	r1, [r7, #28]
 800d526:	4401      	add	r1, r0
 800d528:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 800d52c:	4313      	orrs	r3, r2
 800d52e:	610b      	str	r3, [r1, #16]
 800d530:	69bb      	ldr	r3, [r7, #24]
 800d532:	015a      	lsls	r2, r3, #5
 800d534:	69fb      	ldr	r3, [r7, #28]
 800d536:	4413      	add	r3, r2
 800d538:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d53c:	691a      	ldr	r2, [r3, #16]
 800d53e:	68bb      	ldr	r3, [r7, #8]
 800d540:	6a1b      	ldr	r3, [r3, #32]
 800d542:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800d546:	69b9      	ldr	r1, [r7, #24]
 800d548:	0148      	lsls	r0, r1, #5
 800d54a:	69f9      	ldr	r1, [r7, #28]
 800d54c:	4401      	add	r1, r0
 800d54e:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 800d552:	4313      	orrs	r3, r2
 800d554:	610b      	str	r3, [r1, #16]
 800d556:	79fb      	ldrb	r3, [r7, #7]
 800d558:	2b01      	cmp	r3, #1
 800d55a:	d10d      	bne.n	800d578 <USB_EPStartXfer+0x4b0>
 800d55c:	68bb      	ldr	r3, [r7, #8]
 800d55e:	68db      	ldr	r3, [r3, #12]
 800d560:	2b00      	cmp	r3, #0
 800d562:	d009      	beq.n	800d578 <USB_EPStartXfer+0x4b0>
 800d564:	68bb      	ldr	r3, [r7, #8]
 800d566:	68d9      	ldr	r1, [r3, #12]
 800d568:	69bb      	ldr	r3, [r7, #24]
 800d56a:	015a      	lsls	r2, r3, #5
 800d56c:	69fb      	ldr	r3, [r7, #28]
 800d56e:	4413      	add	r3, r2
 800d570:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d574:	460a      	mov	r2, r1
 800d576:	615a      	str	r2, [r3, #20]
 800d578:	68bb      	ldr	r3, [r7, #8]
 800d57a:	791b      	ldrb	r3, [r3, #4]
 800d57c:	2b01      	cmp	r3, #1
 800d57e:	d128      	bne.n	800d5d2 <USB_EPStartXfer+0x50a>
 800d580:	69fb      	ldr	r3, [r7, #28]
 800d582:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800d586:	689b      	ldr	r3, [r3, #8]
 800d588:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800d58c:	2b00      	cmp	r3, #0
 800d58e:	d110      	bne.n	800d5b2 <USB_EPStartXfer+0x4ea>
 800d590:	69bb      	ldr	r3, [r7, #24]
 800d592:	015a      	lsls	r2, r3, #5
 800d594:	69fb      	ldr	r3, [r7, #28]
 800d596:	4413      	add	r3, r2
 800d598:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d59c:	681b      	ldr	r3, [r3, #0]
 800d59e:	69ba      	ldr	r2, [r7, #24]
 800d5a0:	0151      	lsls	r1, r2, #5
 800d5a2:	69fa      	ldr	r2, [r7, #28]
 800d5a4:	440a      	add	r2, r1
 800d5a6:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d5aa:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 800d5ae:	6013      	str	r3, [r2, #0]
 800d5b0:	e00f      	b.n	800d5d2 <USB_EPStartXfer+0x50a>
 800d5b2:	69bb      	ldr	r3, [r7, #24]
 800d5b4:	015a      	lsls	r2, r3, #5
 800d5b6:	69fb      	ldr	r3, [r7, #28]
 800d5b8:	4413      	add	r3, r2
 800d5ba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d5be:	681b      	ldr	r3, [r3, #0]
 800d5c0:	69ba      	ldr	r2, [r7, #24]
 800d5c2:	0151      	lsls	r1, r2, #5
 800d5c4:	69fa      	ldr	r2, [r7, #28]
 800d5c6:	440a      	add	r2, r1
 800d5c8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d5cc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800d5d0:	6013      	str	r3, [r2, #0]
 800d5d2:	69bb      	ldr	r3, [r7, #24]
 800d5d4:	015a      	lsls	r2, r3, #5
 800d5d6:	69fb      	ldr	r3, [r7, #28]
 800d5d8:	4413      	add	r3, r2
 800d5da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d5de:	681b      	ldr	r3, [r3, #0]
 800d5e0:	69ba      	ldr	r2, [r7, #24]
 800d5e2:	0151      	lsls	r1, r2, #5
 800d5e4:	69fa      	ldr	r2, [r7, #28]
 800d5e6:	440a      	add	r2, r1
 800d5e8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d5ec:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 800d5f0:	6013      	str	r3, [r2, #0]
 800d5f2:	2300      	movs	r3, #0
 800d5f4:	4618      	mov	r0, r3
 800d5f6:	3720      	adds	r7, #32
 800d5f8:	46bd      	mov	sp, r7
 800d5fa:	bd80      	pop	{r7, pc}
 800d5fc:	fff80000 	.word	0xfff80000
 800d600:	e007ffff 	.word	0xe007ffff
 800d604:	1ff80000 	.word	0x1ff80000

0800d608 <USB_EPStopXfer>:
 800d608:	b480      	push	{r7}
 800d60a:	b087      	sub	sp, #28
 800d60c:	af00      	add	r7, sp, #0
 800d60e:	6078      	str	r0, [r7, #4]
 800d610:	6039      	str	r1, [r7, #0]
 800d612:	2300      	movs	r3, #0
 800d614:	60fb      	str	r3, [r7, #12]
 800d616:	2300      	movs	r3, #0
 800d618:	75fb      	strb	r3, [r7, #23]
 800d61a:	687b      	ldr	r3, [r7, #4]
 800d61c:	613b      	str	r3, [r7, #16]
 800d61e:	683b      	ldr	r3, [r7, #0]
 800d620:	785b      	ldrb	r3, [r3, #1]
 800d622:	2b01      	cmp	r3, #1
 800d624:	d14a      	bne.n	800d6bc <USB_EPStopXfer+0xb4>
 800d626:	683b      	ldr	r3, [r7, #0]
 800d628:	781b      	ldrb	r3, [r3, #0]
 800d62a:	015a      	lsls	r2, r3, #5
 800d62c:	693b      	ldr	r3, [r7, #16]
 800d62e:	4413      	add	r3, r2
 800d630:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d634:	681b      	ldr	r3, [r3, #0]
 800d636:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800d63a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800d63e:	f040 8086 	bne.w	800d74e <USB_EPStopXfer+0x146>
 800d642:	683b      	ldr	r3, [r7, #0]
 800d644:	781b      	ldrb	r3, [r3, #0]
 800d646:	015a      	lsls	r2, r3, #5
 800d648:	693b      	ldr	r3, [r7, #16]
 800d64a:	4413      	add	r3, r2
 800d64c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d650:	681b      	ldr	r3, [r3, #0]
 800d652:	683a      	ldr	r2, [r7, #0]
 800d654:	7812      	ldrb	r2, [r2, #0]
 800d656:	0151      	lsls	r1, r2, #5
 800d658:	693a      	ldr	r2, [r7, #16]
 800d65a:	440a      	add	r2, r1
 800d65c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d660:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800d664:	6013      	str	r3, [r2, #0]
 800d666:	683b      	ldr	r3, [r7, #0]
 800d668:	781b      	ldrb	r3, [r3, #0]
 800d66a:	015a      	lsls	r2, r3, #5
 800d66c:	693b      	ldr	r3, [r7, #16]
 800d66e:	4413      	add	r3, r2
 800d670:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d674:	681b      	ldr	r3, [r3, #0]
 800d676:	683a      	ldr	r2, [r7, #0]
 800d678:	7812      	ldrb	r2, [r2, #0]
 800d67a:	0151      	lsls	r1, r2, #5
 800d67c:	693a      	ldr	r2, [r7, #16]
 800d67e:	440a      	add	r2, r1
 800d680:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d684:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800d688:	6013      	str	r3, [r2, #0]
 800d68a:	68fb      	ldr	r3, [r7, #12]
 800d68c:	3301      	adds	r3, #1
 800d68e:	60fb      	str	r3, [r7, #12]
 800d690:	68fb      	ldr	r3, [r7, #12]
 800d692:	f242 7210 	movw	r2, #10000	@ 0x2710
 800d696:	4293      	cmp	r3, r2
 800d698:	d902      	bls.n	800d6a0 <USB_EPStopXfer+0x98>
 800d69a:	2301      	movs	r3, #1
 800d69c:	75fb      	strb	r3, [r7, #23]
 800d69e:	e056      	b.n	800d74e <USB_EPStopXfer+0x146>
 800d6a0:	683b      	ldr	r3, [r7, #0]
 800d6a2:	781b      	ldrb	r3, [r3, #0]
 800d6a4:	015a      	lsls	r2, r3, #5
 800d6a6:	693b      	ldr	r3, [r7, #16]
 800d6a8:	4413      	add	r3, r2
 800d6aa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d6ae:	681b      	ldr	r3, [r3, #0]
 800d6b0:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800d6b4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800d6b8:	d0e7      	beq.n	800d68a <USB_EPStopXfer+0x82>
 800d6ba:	e048      	b.n	800d74e <USB_EPStopXfer+0x146>
 800d6bc:	683b      	ldr	r3, [r7, #0]
 800d6be:	781b      	ldrb	r3, [r3, #0]
 800d6c0:	015a      	lsls	r2, r3, #5
 800d6c2:	693b      	ldr	r3, [r7, #16]
 800d6c4:	4413      	add	r3, r2
 800d6c6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d6ca:	681b      	ldr	r3, [r3, #0]
 800d6cc:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800d6d0:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800d6d4:	d13b      	bne.n	800d74e <USB_EPStopXfer+0x146>
 800d6d6:	683b      	ldr	r3, [r7, #0]
 800d6d8:	781b      	ldrb	r3, [r3, #0]
 800d6da:	015a      	lsls	r2, r3, #5
 800d6dc:	693b      	ldr	r3, [r7, #16]
 800d6de:	4413      	add	r3, r2
 800d6e0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d6e4:	681b      	ldr	r3, [r3, #0]
 800d6e6:	683a      	ldr	r2, [r7, #0]
 800d6e8:	7812      	ldrb	r2, [r2, #0]
 800d6ea:	0151      	lsls	r1, r2, #5
 800d6ec:	693a      	ldr	r2, [r7, #16]
 800d6ee:	440a      	add	r2, r1
 800d6f0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d6f4:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800d6f8:	6013      	str	r3, [r2, #0]
 800d6fa:	683b      	ldr	r3, [r7, #0]
 800d6fc:	781b      	ldrb	r3, [r3, #0]
 800d6fe:	015a      	lsls	r2, r3, #5
 800d700:	693b      	ldr	r3, [r7, #16]
 800d702:	4413      	add	r3, r2
 800d704:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d708:	681b      	ldr	r3, [r3, #0]
 800d70a:	683a      	ldr	r2, [r7, #0]
 800d70c:	7812      	ldrb	r2, [r2, #0]
 800d70e:	0151      	lsls	r1, r2, #5
 800d710:	693a      	ldr	r2, [r7, #16]
 800d712:	440a      	add	r2, r1
 800d714:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d718:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800d71c:	6013      	str	r3, [r2, #0]
 800d71e:	68fb      	ldr	r3, [r7, #12]
 800d720:	3301      	adds	r3, #1
 800d722:	60fb      	str	r3, [r7, #12]
 800d724:	68fb      	ldr	r3, [r7, #12]
 800d726:	f242 7210 	movw	r2, #10000	@ 0x2710
 800d72a:	4293      	cmp	r3, r2
 800d72c:	d902      	bls.n	800d734 <USB_EPStopXfer+0x12c>
 800d72e:	2301      	movs	r3, #1
 800d730:	75fb      	strb	r3, [r7, #23]
 800d732:	e00c      	b.n	800d74e <USB_EPStopXfer+0x146>
 800d734:	683b      	ldr	r3, [r7, #0]
 800d736:	781b      	ldrb	r3, [r3, #0]
 800d738:	015a      	lsls	r2, r3, #5
 800d73a:	693b      	ldr	r3, [r7, #16]
 800d73c:	4413      	add	r3, r2
 800d73e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800d748:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800d74c:	d0e7      	beq.n	800d71e <USB_EPStopXfer+0x116>
 800d74e:	7dfb      	ldrb	r3, [r7, #23]
 800d750:	4618      	mov	r0, r3
 800d752:	371c      	adds	r7, #28
 800d754:	46bd      	mov	sp, r7
 800d756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d75a:	4770      	bx	lr

0800d75c <USB_WritePacket>:
 800d75c:	b480      	push	{r7}
 800d75e:	b089      	sub	sp, #36	@ 0x24
 800d760:	af00      	add	r7, sp, #0
 800d762:	60f8      	str	r0, [r7, #12]
 800d764:	60b9      	str	r1, [r7, #8]
 800d766:	4611      	mov	r1, r2
 800d768:	461a      	mov	r2, r3
 800d76a:	460b      	mov	r3, r1
 800d76c:	71fb      	strb	r3, [r7, #7]
 800d76e:	4613      	mov	r3, r2
 800d770:	80bb      	strh	r3, [r7, #4]
 800d772:	68fb      	ldr	r3, [r7, #12]
 800d774:	617b      	str	r3, [r7, #20]
 800d776:	68bb      	ldr	r3, [r7, #8]
 800d778:	61fb      	str	r3, [r7, #28]
 800d77a:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800d77e:	2b00      	cmp	r3, #0
 800d780:	d123      	bne.n	800d7ca <USB_WritePacket+0x6e>
 800d782:	88bb      	ldrh	r3, [r7, #4]
 800d784:	3303      	adds	r3, #3
 800d786:	089b      	lsrs	r3, r3, #2
 800d788:	613b      	str	r3, [r7, #16]
 800d78a:	2300      	movs	r3, #0
 800d78c:	61bb      	str	r3, [r7, #24]
 800d78e:	e018      	b.n	800d7c2 <USB_WritePacket+0x66>
 800d790:	79fb      	ldrb	r3, [r7, #7]
 800d792:	031a      	lsls	r2, r3, #12
 800d794:	697b      	ldr	r3, [r7, #20]
 800d796:	4413      	add	r3, r2
 800d798:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800d79c:	461a      	mov	r2, r3
 800d79e:	69fb      	ldr	r3, [r7, #28]
 800d7a0:	681b      	ldr	r3, [r3, #0]
 800d7a2:	6013      	str	r3, [r2, #0]
 800d7a4:	69fb      	ldr	r3, [r7, #28]
 800d7a6:	3301      	adds	r3, #1
 800d7a8:	61fb      	str	r3, [r7, #28]
 800d7aa:	69fb      	ldr	r3, [r7, #28]
 800d7ac:	3301      	adds	r3, #1
 800d7ae:	61fb      	str	r3, [r7, #28]
 800d7b0:	69fb      	ldr	r3, [r7, #28]
 800d7b2:	3301      	adds	r3, #1
 800d7b4:	61fb      	str	r3, [r7, #28]
 800d7b6:	69fb      	ldr	r3, [r7, #28]
 800d7b8:	3301      	adds	r3, #1
 800d7ba:	61fb      	str	r3, [r7, #28]
 800d7bc:	69bb      	ldr	r3, [r7, #24]
 800d7be:	3301      	adds	r3, #1
 800d7c0:	61bb      	str	r3, [r7, #24]
 800d7c2:	69ba      	ldr	r2, [r7, #24]
 800d7c4:	693b      	ldr	r3, [r7, #16]
 800d7c6:	429a      	cmp	r2, r3
 800d7c8:	d3e2      	bcc.n	800d790 <USB_WritePacket+0x34>
 800d7ca:	2300      	movs	r3, #0
 800d7cc:	4618      	mov	r0, r3
 800d7ce:	3724      	adds	r7, #36	@ 0x24
 800d7d0:	46bd      	mov	sp, r7
 800d7d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7d6:	4770      	bx	lr

0800d7d8 <USB_ReadPacket>:
 800d7d8:	b480      	push	{r7}
 800d7da:	b08b      	sub	sp, #44	@ 0x2c
 800d7dc:	af00      	add	r7, sp, #0
 800d7de:	60f8      	str	r0, [r7, #12]
 800d7e0:	60b9      	str	r1, [r7, #8]
 800d7e2:	4613      	mov	r3, r2
 800d7e4:	80fb      	strh	r3, [r7, #6]
 800d7e6:	68fb      	ldr	r3, [r7, #12]
 800d7e8:	61bb      	str	r3, [r7, #24]
 800d7ea:	68bb      	ldr	r3, [r7, #8]
 800d7ec:	627b      	str	r3, [r7, #36]	@ 0x24
 800d7ee:	88fb      	ldrh	r3, [r7, #6]
 800d7f0:	089b      	lsrs	r3, r3, #2
 800d7f2:	b29b      	uxth	r3, r3
 800d7f4:	617b      	str	r3, [r7, #20]
 800d7f6:	88fb      	ldrh	r3, [r7, #6]
 800d7f8:	f003 0303 	and.w	r3, r3, #3
 800d7fc:	83fb      	strh	r3, [r7, #30]
 800d7fe:	2300      	movs	r3, #0
 800d800:	623b      	str	r3, [r7, #32]
 800d802:	e014      	b.n	800d82e <USB_ReadPacket+0x56>
 800d804:	69bb      	ldr	r3, [r7, #24]
 800d806:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800d80a:	681a      	ldr	r2, [r3, #0]
 800d80c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d80e:	601a      	str	r2, [r3, #0]
 800d810:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d812:	3301      	adds	r3, #1
 800d814:	627b      	str	r3, [r7, #36]	@ 0x24
 800d816:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d818:	3301      	adds	r3, #1
 800d81a:	627b      	str	r3, [r7, #36]	@ 0x24
 800d81c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d81e:	3301      	adds	r3, #1
 800d820:	627b      	str	r3, [r7, #36]	@ 0x24
 800d822:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d824:	3301      	adds	r3, #1
 800d826:	627b      	str	r3, [r7, #36]	@ 0x24
 800d828:	6a3b      	ldr	r3, [r7, #32]
 800d82a:	3301      	adds	r3, #1
 800d82c:	623b      	str	r3, [r7, #32]
 800d82e:	6a3a      	ldr	r2, [r7, #32]
 800d830:	697b      	ldr	r3, [r7, #20]
 800d832:	429a      	cmp	r2, r3
 800d834:	d3e6      	bcc.n	800d804 <USB_ReadPacket+0x2c>
 800d836:	8bfb      	ldrh	r3, [r7, #30]
 800d838:	2b00      	cmp	r3, #0
 800d83a:	d01e      	beq.n	800d87a <USB_ReadPacket+0xa2>
 800d83c:	2300      	movs	r3, #0
 800d83e:	623b      	str	r3, [r7, #32]
 800d840:	69bb      	ldr	r3, [r7, #24]
 800d842:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800d846:	461a      	mov	r2, r3
 800d848:	f107 0310 	add.w	r3, r7, #16
 800d84c:	6812      	ldr	r2, [r2, #0]
 800d84e:	601a      	str	r2, [r3, #0]
 800d850:	693a      	ldr	r2, [r7, #16]
 800d852:	6a3b      	ldr	r3, [r7, #32]
 800d854:	b2db      	uxtb	r3, r3
 800d856:	00db      	lsls	r3, r3, #3
 800d858:	fa22 f303 	lsr.w	r3, r2, r3
 800d85c:	b2da      	uxtb	r2, r3
 800d85e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d860:	701a      	strb	r2, [r3, #0]
 800d862:	6a3b      	ldr	r3, [r7, #32]
 800d864:	3301      	adds	r3, #1
 800d866:	623b      	str	r3, [r7, #32]
 800d868:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d86a:	3301      	adds	r3, #1
 800d86c:	627b      	str	r3, [r7, #36]	@ 0x24
 800d86e:	8bfb      	ldrh	r3, [r7, #30]
 800d870:	3b01      	subs	r3, #1
 800d872:	83fb      	strh	r3, [r7, #30]
 800d874:	8bfb      	ldrh	r3, [r7, #30]
 800d876:	2b00      	cmp	r3, #0
 800d878:	d1ea      	bne.n	800d850 <USB_ReadPacket+0x78>
 800d87a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d87c:	4618      	mov	r0, r3
 800d87e:	372c      	adds	r7, #44	@ 0x2c
 800d880:	46bd      	mov	sp, r7
 800d882:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d886:	4770      	bx	lr

0800d888 <USB_EPSetStall>:
 800d888:	b480      	push	{r7}
 800d88a:	b085      	sub	sp, #20
 800d88c:	af00      	add	r7, sp, #0
 800d88e:	6078      	str	r0, [r7, #4]
 800d890:	6039      	str	r1, [r7, #0]
 800d892:	687b      	ldr	r3, [r7, #4]
 800d894:	60fb      	str	r3, [r7, #12]
 800d896:	683b      	ldr	r3, [r7, #0]
 800d898:	781b      	ldrb	r3, [r3, #0]
 800d89a:	60bb      	str	r3, [r7, #8]
 800d89c:	683b      	ldr	r3, [r7, #0]
 800d89e:	785b      	ldrb	r3, [r3, #1]
 800d8a0:	2b01      	cmp	r3, #1
 800d8a2:	d12c      	bne.n	800d8fe <USB_EPSetStall+0x76>
 800d8a4:	68bb      	ldr	r3, [r7, #8]
 800d8a6:	015a      	lsls	r2, r3, #5
 800d8a8:	68fb      	ldr	r3, [r7, #12]
 800d8aa:	4413      	add	r3, r2
 800d8ac:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d8b0:	681b      	ldr	r3, [r3, #0]
 800d8b2:	2b00      	cmp	r3, #0
 800d8b4:	db12      	blt.n	800d8dc <USB_EPSetStall+0x54>
 800d8b6:	68bb      	ldr	r3, [r7, #8]
 800d8b8:	2b00      	cmp	r3, #0
 800d8ba:	d00f      	beq.n	800d8dc <USB_EPSetStall+0x54>
 800d8bc:	68bb      	ldr	r3, [r7, #8]
 800d8be:	015a      	lsls	r2, r3, #5
 800d8c0:	68fb      	ldr	r3, [r7, #12]
 800d8c2:	4413      	add	r3, r2
 800d8c4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d8c8:	681b      	ldr	r3, [r3, #0]
 800d8ca:	68ba      	ldr	r2, [r7, #8]
 800d8cc:	0151      	lsls	r1, r2, #5
 800d8ce:	68fa      	ldr	r2, [r7, #12]
 800d8d0:	440a      	add	r2, r1
 800d8d2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d8d6:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800d8da:	6013      	str	r3, [r2, #0]
 800d8dc:	68bb      	ldr	r3, [r7, #8]
 800d8de:	015a      	lsls	r2, r3, #5
 800d8e0:	68fb      	ldr	r3, [r7, #12]
 800d8e2:	4413      	add	r3, r2
 800d8e4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d8e8:	681b      	ldr	r3, [r3, #0]
 800d8ea:	68ba      	ldr	r2, [r7, #8]
 800d8ec:	0151      	lsls	r1, r2, #5
 800d8ee:	68fa      	ldr	r2, [r7, #12]
 800d8f0:	440a      	add	r2, r1
 800d8f2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d8f6:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800d8fa:	6013      	str	r3, [r2, #0]
 800d8fc:	e02b      	b.n	800d956 <USB_EPSetStall+0xce>
 800d8fe:	68bb      	ldr	r3, [r7, #8]
 800d900:	015a      	lsls	r2, r3, #5
 800d902:	68fb      	ldr	r3, [r7, #12]
 800d904:	4413      	add	r3, r2
 800d906:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d90a:	681b      	ldr	r3, [r3, #0]
 800d90c:	2b00      	cmp	r3, #0
 800d90e:	db12      	blt.n	800d936 <USB_EPSetStall+0xae>
 800d910:	68bb      	ldr	r3, [r7, #8]
 800d912:	2b00      	cmp	r3, #0
 800d914:	d00f      	beq.n	800d936 <USB_EPSetStall+0xae>
 800d916:	68bb      	ldr	r3, [r7, #8]
 800d918:	015a      	lsls	r2, r3, #5
 800d91a:	68fb      	ldr	r3, [r7, #12]
 800d91c:	4413      	add	r3, r2
 800d91e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d922:	681b      	ldr	r3, [r3, #0]
 800d924:	68ba      	ldr	r2, [r7, #8]
 800d926:	0151      	lsls	r1, r2, #5
 800d928:	68fa      	ldr	r2, [r7, #12]
 800d92a:	440a      	add	r2, r1
 800d92c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d930:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 800d934:	6013      	str	r3, [r2, #0]
 800d936:	68bb      	ldr	r3, [r7, #8]
 800d938:	015a      	lsls	r2, r3, #5
 800d93a:	68fb      	ldr	r3, [r7, #12]
 800d93c:	4413      	add	r3, r2
 800d93e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d942:	681b      	ldr	r3, [r3, #0]
 800d944:	68ba      	ldr	r2, [r7, #8]
 800d946:	0151      	lsls	r1, r2, #5
 800d948:	68fa      	ldr	r2, [r7, #12]
 800d94a:	440a      	add	r2, r1
 800d94c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d950:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800d954:	6013      	str	r3, [r2, #0]
 800d956:	2300      	movs	r3, #0
 800d958:	4618      	mov	r0, r3
 800d95a:	3714      	adds	r7, #20
 800d95c:	46bd      	mov	sp, r7
 800d95e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d962:	4770      	bx	lr

0800d964 <USB_EPClearStall>:
 800d964:	b480      	push	{r7}
 800d966:	b085      	sub	sp, #20
 800d968:	af00      	add	r7, sp, #0
 800d96a:	6078      	str	r0, [r7, #4]
 800d96c:	6039      	str	r1, [r7, #0]
 800d96e:	687b      	ldr	r3, [r7, #4]
 800d970:	60fb      	str	r3, [r7, #12]
 800d972:	683b      	ldr	r3, [r7, #0]
 800d974:	781b      	ldrb	r3, [r3, #0]
 800d976:	60bb      	str	r3, [r7, #8]
 800d978:	683b      	ldr	r3, [r7, #0]
 800d97a:	785b      	ldrb	r3, [r3, #1]
 800d97c:	2b01      	cmp	r3, #1
 800d97e:	d128      	bne.n	800d9d2 <USB_EPClearStall+0x6e>
 800d980:	68bb      	ldr	r3, [r7, #8]
 800d982:	015a      	lsls	r2, r3, #5
 800d984:	68fb      	ldr	r3, [r7, #12]
 800d986:	4413      	add	r3, r2
 800d988:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d98c:	681b      	ldr	r3, [r3, #0]
 800d98e:	68ba      	ldr	r2, [r7, #8]
 800d990:	0151      	lsls	r1, r2, #5
 800d992:	68fa      	ldr	r2, [r7, #12]
 800d994:	440a      	add	r2, r1
 800d996:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d99a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800d99e:	6013      	str	r3, [r2, #0]
 800d9a0:	683b      	ldr	r3, [r7, #0]
 800d9a2:	791b      	ldrb	r3, [r3, #4]
 800d9a4:	2b03      	cmp	r3, #3
 800d9a6:	d003      	beq.n	800d9b0 <USB_EPClearStall+0x4c>
 800d9a8:	683b      	ldr	r3, [r7, #0]
 800d9aa:	791b      	ldrb	r3, [r3, #4]
 800d9ac:	2b02      	cmp	r3, #2
 800d9ae:	d138      	bne.n	800da22 <USB_EPClearStall+0xbe>
 800d9b0:	68bb      	ldr	r3, [r7, #8]
 800d9b2:	015a      	lsls	r2, r3, #5
 800d9b4:	68fb      	ldr	r3, [r7, #12]
 800d9b6:	4413      	add	r3, r2
 800d9b8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800d9bc:	681b      	ldr	r3, [r3, #0]
 800d9be:	68ba      	ldr	r2, [r7, #8]
 800d9c0:	0151      	lsls	r1, r2, #5
 800d9c2:	68fa      	ldr	r2, [r7, #12]
 800d9c4:	440a      	add	r2, r1
 800d9c6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800d9ca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800d9ce:	6013      	str	r3, [r2, #0]
 800d9d0:	e027      	b.n	800da22 <USB_EPClearStall+0xbe>
 800d9d2:	68bb      	ldr	r3, [r7, #8]
 800d9d4:	015a      	lsls	r2, r3, #5
 800d9d6:	68fb      	ldr	r3, [r7, #12]
 800d9d8:	4413      	add	r3, r2
 800d9da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800d9de:	681b      	ldr	r3, [r3, #0]
 800d9e0:	68ba      	ldr	r2, [r7, #8]
 800d9e2:	0151      	lsls	r1, r2, #5
 800d9e4:	68fa      	ldr	r2, [r7, #12]
 800d9e6:	440a      	add	r2, r1
 800d9e8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800d9ec:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800d9f0:	6013      	str	r3, [r2, #0]
 800d9f2:	683b      	ldr	r3, [r7, #0]
 800d9f4:	791b      	ldrb	r3, [r3, #4]
 800d9f6:	2b03      	cmp	r3, #3
 800d9f8:	d003      	beq.n	800da02 <USB_EPClearStall+0x9e>
 800d9fa:	683b      	ldr	r3, [r7, #0]
 800d9fc:	791b      	ldrb	r3, [r3, #4]
 800d9fe:	2b02      	cmp	r3, #2
 800da00:	d10f      	bne.n	800da22 <USB_EPClearStall+0xbe>
 800da02:	68bb      	ldr	r3, [r7, #8]
 800da04:	015a      	lsls	r2, r3, #5
 800da06:	68fb      	ldr	r3, [r7, #12]
 800da08:	4413      	add	r3, r2
 800da0a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800da0e:	681b      	ldr	r3, [r3, #0]
 800da10:	68ba      	ldr	r2, [r7, #8]
 800da12:	0151      	lsls	r1, r2, #5
 800da14:	68fa      	ldr	r2, [r7, #12]
 800da16:	440a      	add	r2, r1
 800da18:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800da1c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800da20:	6013      	str	r3, [r2, #0]
 800da22:	2300      	movs	r3, #0
 800da24:	4618      	mov	r0, r3
 800da26:	3714      	adds	r7, #20
 800da28:	46bd      	mov	sp, r7
 800da2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da2e:	4770      	bx	lr

0800da30 <USB_SetDevAddress>:
 800da30:	b480      	push	{r7}
 800da32:	b085      	sub	sp, #20
 800da34:	af00      	add	r7, sp, #0
 800da36:	6078      	str	r0, [r7, #4]
 800da38:	460b      	mov	r3, r1
 800da3a:	70fb      	strb	r3, [r7, #3]
 800da3c:	687b      	ldr	r3, [r7, #4]
 800da3e:	60fb      	str	r3, [r7, #12]
 800da40:	68fb      	ldr	r3, [r7, #12]
 800da42:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800da46:	681b      	ldr	r3, [r3, #0]
 800da48:	68fa      	ldr	r2, [r7, #12]
 800da4a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800da4e:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800da52:	6013      	str	r3, [r2, #0]
 800da54:	68fb      	ldr	r3, [r7, #12]
 800da56:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800da5a:	681a      	ldr	r2, [r3, #0]
 800da5c:	78fb      	ldrb	r3, [r7, #3]
 800da5e:	011b      	lsls	r3, r3, #4
 800da60:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 800da64:	68f9      	ldr	r1, [r7, #12]
 800da66:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800da6a:	4313      	orrs	r3, r2
 800da6c:	600b      	str	r3, [r1, #0]
 800da6e:	2300      	movs	r3, #0
 800da70:	4618      	mov	r0, r3
 800da72:	3714      	adds	r7, #20
 800da74:	46bd      	mov	sp, r7
 800da76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da7a:	4770      	bx	lr

0800da7c <USB_DevConnect>:
 800da7c:	b480      	push	{r7}
 800da7e:	b085      	sub	sp, #20
 800da80:	af00      	add	r7, sp, #0
 800da82:	6078      	str	r0, [r7, #4]
 800da84:	687b      	ldr	r3, [r7, #4]
 800da86:	60fb      	str	r3, [r7, #12]
 800da88:	68fb      	ldr	r3, [r7, #12]
 800da8a:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800da8e:	681b      	ldr	r3, [r3, #0]
 800da90:	68fa      	ldr	r2, [r7, #12]
 800da92:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 800da96:	f023 0303 	bic.w	r3, r3, #3
 800da9a:	6013      	str	r3, [r2, #0]
 800da9c:	68fb      	ldr	r3, [r7, #12]
 800da9e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800daa2:	685b      	ldr	r3, [r3, #4]
 800daa4:	68fa      	ldr	r2, [r7, #12]
 800daa6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800daaa:	f023 0302 	bic.w	r3, r3, #2
 800daae:	6053      	str	r3, [r2, #4]
 800dab0:	2300      	movs	r3, #0
 800dab2:	4618      	mov	r0, r3
 800dab4:	3714      	adds	r7, #20
 800dab6:	46bd      	mov	sp, r7
 800dab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dabc:	4770      	bx	lr

0800dabe <USB_DevDisconnect>:
 800dabe:	b480      	push	{r7}
 800dac0:	b085      	sub	sp, #20
 800dac2:	af00      	add	r7, sp, #0
 800dac4:	6078      	str	r0, [r7, #4]
 800dac6:	687b      	ldr	r3, [r7, #4]
 800dac8:	60fb      	str	r3, [r7, #12]
 800daca:	68fb      	ldr	r3, [r7, #12]
 800dacc:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 800dad0:	681b      	ldr	r3, [r3, #0]
 800dad2:	68fa      	ldr	r2, [r7, #12]
 800dad4:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 800dad8:	f023 0303 	bic.w	r3, r3, #3
 800dadc:	6013      	str	r3, [r2, #0]
 800dade:	68fb      	ldr	r3, [r7, #12]
 800dae0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800dae4:	685b      	ldr	r3, [r3, #4]
 800dae6:	68fa      	ldr	r2, [r7, #12]
 800dae8:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800daec:	f043 0302 	orr.w	r3, r3, #2
 800daf0:	6053      	str	r3, [r2, #4]
 800daf2:	2300      	movs	r3, #0
 800daf4:	4618      	mov	r0, r3
 800daf6:	3714      	adds	r7, #20
 800daf8:	46bd      	mov	sp, r7
 800dafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dafe:	4770      	bx	lr

0800db00 <USB_ReadInterrupts>:
 800db00:	b480      	push	{r7}
 800db02:	b085      	sub	sp, #20
 800db04:	af00      	add	r7, sp, #0
 800db06:	6078      	str	r0, [r7, #4]
 800db08:	687b      	ldr	r3, [r7, #4]
 800db0a:	695b      	ldr	r3, [r3, #20]
 800db0c:	60fb      	str	r3, [r7, #12]
 800db0e:	687b      	ldr	r3, [r7, #4]
 800db10:	699b      	ldr	r3, [r3, #24]
 800db12:	68fa      	ldr	r2, [r7, #12]
 800db14:	4013      	ands	r3, r2
 800db16:	60fb      	str	r3, [r7, #12]
 800db18:	68fb      	ldr	r3, [r7, #12]
 800db1a:	4618      	mov	r0, r3
 800db1c:	3714      	adds	r7, #20
 800db1e:	46bd      	mov	sp, r7
 800db20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db24:	4770      	bx	lr

0800db26 <USB_ReadDevAllOutEpInterrupt>:
 800db26:	b480      	push	{r7}
 800db28:	b085      	sub	sp, #20
 800db2a:	af00      	add	r7, sp, #0
 800db2c:	6078      	str	r0, [r7, #4]
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	60fb      	str	r3, [r7, #12]
 800db32:	68fb      	ldr	r3, [r7, #12]
 800db34:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800db38:	699b      	ldr	r3, [r3, #24]
 800db3a:	60bb      	str	r3, [r7, #8]
 800db3c:	68fb      	ldr	r3, [r7, #12]
 800db3e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800db42:	69db      	ldr	r3, [r3, #28]
 800db44:	68ba      	ldr	r2, [r7, #8]
 800db46:	4013      	ands	r3, r2
 800db48:	60bb      	str	r3, [r7, #8]
 800db4a:	68bb      	ldr	r3, [r7, #8]
 800db4c:	0c1b      	lsrs	r3, r3, #16
 800db4e:	4618      	mov	r0, r3
 800db50:	3714      	adds	r7, #20
 800db52:	46bd      	mov	sp, r7
 800db54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db58:	4770      	bx	lr

0800db5a <USB_ReadDevAllInEpInterrupt>:
 800db5a:	b480      	push	{r7}
 800db5c:	b085      	sub	sp, #20
 800db5e:	af00      	add	r7, sp, #0
 800db60:	6078      	str	r0, [r7, #4]
 800db62:	687b      	ldr	r3, [r7, #4]
 800db64:	60fb      	str	r3, [r7, #12]
 800db66:	68fb      	ldr	r3, [r7, #12]
 800db68:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800db6c:	699b      	ldr	r3, [r3, #24]
 800db6e:	60bb      	str	r3, [r7, #8]
 800db70:	68fb      	ldr	r3, [r7, #12]
 800db72:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800db76:	69db      	ldr	r3, [r3, #28]
 800db78:	68ba      	ldr	r2, [r7, #8]
 800db7a:	4013      	ands	r3, r2
 800db7c:	60bb      	str	r3, [r7, #8]
 800db7e:	68bb      	ldr	r3, [r7, #8]
 800db80:	b29b      	uxth	r3, r3
 800db82:	4618      	mov	r0, r3
 800db84:	3714      	adds	r7, #20
 800db86:	46bd      	mov	sp, r7
 800db88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db8c:	4770      	bx	lr

0800db8e <USB_ReadDevOutEPInterrupt>:
 800db8e:	b480      	push	{r7}
 800db90:	b085      	sub	sp, #20
 800db92:	af00      	add	r7, sp, #0
 800db94:	6078      	str	r0, [r7, #4]
 800db96:	460b      	mov	r3, r1
 800db98:	70fb      	strb	r3, [r7, #3]
 800db9a:	687b      	ldr	r3, [r7, #4]
 800db9c:	60fb      	str	r3, [r7, #12]
 800db9e:	78fb      	ldrb	r3, [r7, #3]
 800dba0:	015a      	lsls	r2, r3, #5
 800dba2:	68fb      	ldr	r3, [r7, #12]
 800dba4:	4413      	add	r3, r2
 800dba6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dbaa:	689b      	ldr	r3, [r3, #8]
 800dbac:	60bb      	str	r3, [r7, #8]
 800dbae:	68fb      	ldr	r3, [r7, #12]
 800dbb0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800dbb4:	695b      	ldr	r3, [r3, #20]
 800dbb6:	68ba      	ldr	r2, [r7, #8]
 800dbb8:	4013      	ands	r3, r2
 800dbba:	60bb      	str	r3, [r7, #8]
 800dbbc:	68bb      	ldr	r3, [r7, #8]
 800dbbe:	4618      	mov	r0, r3
 800dbc0:	3714      	adds	r7, #20
 800dbc2:	46bd      	mov	sp, r7
 800dbc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbc8:	4770      	bx	lr

0800dbca <USB_ReadDevInEPInterrupt>:
 800dbca:	b480      	push	{r7}
 800dbcc:	b087      	sub	sp, #28
 800dbce:	af00      	add	r7, sp, #0
 800dbd0:	6078      	str	r0, [r7, #4]
 800dbd2:	460b      	mov	r3, r1
 800dbd4:	70fb      	strb	r3, [r7, #3]
 800dbd6:	687b      	ldr	r3, [r7, #4]
 800dbd8:	617b      	str	r3, [r7, #20]
 800dbda:	697b      	ldr	r3, [r7, #20]
 800dbdc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800dbe0:	691b      	ldr	r3, [r3, #16]
 800dbe2:	613b      	str	r3, [r7, #16]
 800dbe4:	697b      	ldr	r3, [r7, #20]
 800dbe6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800dbea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dbec:	60fb      	str	r3, [r7, #12]
 800dbee:	78fb      	ldrb	r3, [r7, #3]
 800dbf0:	f003 030f 	and.w	r3, r3, #15
 800dbf4:	68fa      	ldr	r2, [r7, #12]
 800dbf6:	fa22 f303 	lsr.w	r3, r2, r3
 800dbfa:	01db      	lsls	r3, r3, #7
 800dbfc:	b2db      	uxtb	r3, r3
 800dbfe:	693a      	ldr	r2, [r7, #16]
 800dc00:	4313      	orrs	r3, r2
 800dc02:	613b      	str	r3, [r7, #16]
 800dc04:	78fb      	ldrb	r3, [r7, #3]
 800dc06:	015a      	lsls	r2, r3, #5
 800dc08:	697b      	ldr	r3, [r7, #20]
 800dc0a:	4413      	add	r3, r2
 800dc0c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800dc10:	689b      	ldr	r3, [r3, #8]
 800dc12:	693a      	ldr	r2, [r7, #16]
 800dc14:	4013      	ands	r3, r2
 800dc16:	60bb      	str	r3, [r7, #8]
 800dc18:	68bb      	ldr	r3, [r7, #8]
 800dc1a:	4618      	mov	r0, r3
 800dc1c:	371c      	adds	r7, #28
 800dc1e:	46bd      	mov	sp, r7
 800dc20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc24:	4770      	bx	lr

0800dc26 <USB_GetMode>:
 800dc26:	b480      	push	{r7}
 800dc28:	b083      	sub	sp, #12
 800dc2a:	af00      	add	r7, sp, #0
 800dc2c:	6078      	str	r0, [r7, #4]
 800dc2e:	687b      	ldr	r3, [r7, #4]
 800dc30:	695b      	ldr	r3, [r3, #20]
 800dc32:	f003 0301 	and.w	r3, r3, #1
 800dc36:	4618      	mov	r0, r3
 800dc38:	370c      	adds	r7, #12
 800dc3a:	46bd      	mov	sp, r7
 800dc3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc40:	4770      	bx	lr
	...

0800dc44 <USB_ActivateSetup>:
 800dc44:	b480      	push	{r7}
 800dc46:	b085      	sub	sp, #20
 800dc48:	af00      	add	r7, sp, #0
 800dc4a:	6078      	str	r0, [r7, #4]
 800dc4c:	687b      	ldr	r3, [r7, #4]
 800dc4e:	60fb      	str	r3, [r7, #12]
 800dc50:	68fb      	ldr	r3, [r7, #12]
 800dc52:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800dc56:	681a      	ldr	r2, [r3, #0]
 800dc58:	68fb      	ldr	r3, [r7, #12]
 800dc5a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800dc5e:	4619      	mov	r1, r3
 800dc60:	4b09      	ldr	r3, [pc, #36]	@ (800dc88 <USB_ActivateSetup+0x44>)
 800dc62:	4013      	ands	r3, r2
 800dc64:	600b      	str	r3, [r1, #0]
 800dc66:	68fb      	ldr	r3, [r7, #12]
 800dc68:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800dc6c:	685b      	ldr	r3, [r3, #4]
 800dc6e:	68fa      	ldr	r2, [r7, #12]
 800dc70:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800dc74:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800dc78:	6053      	str	r3, [r2, #4]
 800dc7a:	2300      	movs	r3, #0
 800dc7c:	4618      	mov	r0, r3
 800dc7e:	3714      	adds	r7, #20
 800dc80:	46bd      	mov	sp, r7
 800dc82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc86:	4770      	bx	lr
 800dc88:	fffff800 	.word	0xfffff800

0800dc8c <USB_EP0_OutStart>:
 800dc8c:	b480      	push	{r7}
 800dc8e:	b087      	sub	sp, #28
 800dc90:	af00      	add	r7, sp, #0
 800dc92:	60f8      	str	r0, [r7, #12]
 800dc94:	460b      	mov	r3, r1
 800dc96:	607a      	str	r2, [r7, #4]
 800dc98:	72fb      	strb	r3, [r7, #11]
 800dc9a:	68fb      	ldr	r3, [r7, #12]
 800dc9c:	617b      	str	r3, [r7, #20]
 800dc9e:	68fb      	ldr	r3, [r7, #12]
 800dca0:	333c      	adds	r3, #60	@ 0x3c
 800dca2:	3304      	adds	r3, #4
 800dca4:	681b      	ldr	r3, [r3, #0]
 800dca6:	613b      	str	r3, [r7, #16]
 800dca8:	693b      	ldr	r3, [r7, #16]
 800dcaa:	4a26      	ldr	r2, [pc, #152]	@ (800dd44 <USB_EP0_OutStart+0xb8>)
 800dcac:	4293      	cmp	r3, r2
 800dcae:	d90a      	bls.n	800dcc6 <USB_EP0_OutStart+0x3a>
 800dcb0:	697b      	ldr	r3, [r7, #20]
 800dcb2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dcb6:	681b      	ldr	r3, [r3, #0]
 800dcb8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800dcbc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800dcc0:	d101      	bne.n	800dcc6 <USB_EP0_OutStart+0x3a>
 800dcc2:	2300      	movs	r3, #0
 800dcc4:	e037      	b.n	800dd36 <USB_EP0_OutStart+0xaa>
 800dcc6:	697b      	ldr	r3, [r7, #20]
 800dcc8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dccc:	461a      	mov	r2, r3
 800dcce:	2300      	movs	r3, #0
 800dcd0:	6113      	str	r3, [r2, #16]
 800dcd2:	697b      	ldr	r3, [r7, #20]
 800dcd4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dcd8:	691b      	ldr	r3, [r3, #16]
 800dcda:	697a      	ldr	r2, [r7, #20]
 800dcdc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800dce0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800dce4:	6113      	str	r3, [r2, #16]
 800dce6:	697b      	ldr	r3, [r7, #20]
 800dce8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dcec:	691b      	ldr	r3, [r3, #16]
 800dcee:	697a      	ldr	r2, [r7, #20]
 800dcf0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800dcf4:	f043 0318 	orr.w	r3, r3, #24
 800dcf8:	6113      	str	r3, [r2, #16]
 800dcfa:	697b      	ldr	r3, [r7, #20]
 800dcfc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dd00:	691b      	ldr	r3, [r3, #16]
 800dd02:	697a      	ldr	r2, [r7, #20]
 800dd04:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800dd08:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 800dd0c:	6113      	str	r3, [r2, #16]
 800dd0e:	7afb      	ldrb	r3, [r7, #11]
 800dd10:	2b01      	cmp	r3, #1
 800dd12:	d10f      	bne.n	800dd34 <USB_EP0_OutStart+0xa8>
 800dd14:	697b      	ldr	r3, [r7, #20]
 800dd16:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dd1a:	461a      	mov	r2, r3
 800dd1c:	687b      	ldr	r3, [r7, #4]
 800dd1e:	6153      	str	r3, [r2, #20]
 800dd20:	697b      	ldr	r3, [r7, #20]
 800dd22:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800dd26:	681b      	ldr	r3, [r3, #0]
 800dd28:	697a      	ldr	r2, [r7, #20]
 800dd2a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800dd2e:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 800dd32:	6013      	str	r3, [r2, #0]
 800dd34:	2300      	movs	r3, #0
 800dd36:	4618      	mov	r0, r3
 800dd38:	371c      	adds	r7, #28
 800dd3a:	46bd      	mov	sp, r7
 800dd3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd40:	4770      	bx	lr
 800dd42:	bf00      	nop
 800dd44:	4f54300a 	.word	0x4f54300a

0800dd48 <USB_CoreReset>:
 800dd48:	b480      	push	{r7}
 800dd4a:	b085      	sub	sp, #20
 800dd4c:	af00      	add	r7, sp, #0
 800dd4e:	6078      	str	r0, [r7, #4]
 800dd50:	2300      	movs	r3, #0
 800dd52:	60fb      	str	r3, [r7, #12]
 800dd54:	68fb      	ldr	r3, [r7, #12]
 800dd56:	3301      	adds	r3, #1
 800dd58:	60fb      	str	r3, [r7, #12]
 800dd5a:	68fb      	ldr	r3, [r7, #12]
 800dd5c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800dd60:	d901      	bls.n	800dd66 <USB_CoreReset+0x1e>
 800dd62:	2303      	movs	r3, #3
 800dd64:	e01b      	b.n	800dd9e <USB_CoreReset+0x56>
 800dd66:	687b      	ldr	r3, [r7, #4]
 800dd68:	691b      	ldr	r3, [r3, #16]
 800dd6a:	2b00      	cmp	r3, #0
 800dd6c:	daf2      	bge.n	800dd54 <USB_CoreReset+0xc>
 800dd6e:	2300      	movs	r3, #0
 800dd70:	60fb      	str	r3, [r7, #12]
 800dd72:	687b      	ldr	r3, [r7, #4]
 800dd74:	691b      	ldr	r3, [r3, #16]
 800dd76:	f043 0201 	orr.w	r2, r3, #1
 800dd7a:	687b      	ldr	r3, [r7, #4]
 800dd7c:	611a      	str	r2, [r3, #16]
 800dd7e:	68fb      	ldr	r3, [r7, #12]
 800dd80:	3301      	adds	r3, #1
 800dd82:	60fb      	str	r3, [r7, #12]
 800dd84:	68fb      	ldr	r3, [r7, #12]
 800dd86:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 800dd8a:	d901      	bls.n	800dd90 <USB_CoreReset+0x48>
 800dd8c:	2303      	movs	r3, #3
 800dd8e:	e006      	b.n	800dd9e <USB_CoreReset+0x56>
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	691b      	ldr	r3, [r3, #16]
 800dd94:	f003 0301 	and.w	r3, r3, #1
 800dd98:	2b01      	cmp	r3, #1
 800dd9a:	d0f0      	beq.n	800dd7e <USB_CoreReset+0x36>
 800dd9c:	2300      	movs	r3, #0
 800dd9e:	4618      	mov	r0, r3
 800dda0:	3714      	adds	r7, #20
 800dda2:	46bd      	mov	sp, r7
 800dda4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dda8:	4770      	bx	lr
	...

0800ddac <USBD_CDC_Init>:
 800ddac:	b580      	push	{r7, lr}
 800ddae:	b084      	sub	sp, #16
 800ddb0:	af00      	add	r7, sp, #0
 800ddb2:	6078      	str	r0, [r7, #4]
 800ddb4:	460b      	mov	r3, r1
 800ddb6:	70fb      	strb	r3, [r7, #3]
 800ddb8:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 800ddbc:	f002 fcee 	bl	801079c <USBD_static_malloc>
 800ddc0:	60f8      	str	r0, [r7, #12]
 800ddc2:	68fb      	ldr	r3, [r7, #12]
 800ddc4:	2b00      	cmp	r3, #0
 800ddc6:	d109      	bne.n	800dddc <USBD_CDC_Init+0x30>
 800ddc8:	687b      	ldr	r3, [r7, #4]
 800ddca:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ddce:	687b      	ldr	r3, [r7, #4]
 800ddd0:	32b0      	adds	r2, #176	@ 0xb0
 800ddd2:	2100      	movs	r1, #0
 800ddd4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ddd8:	2302      	movs	r3, #2
 800ddda:	e0d4      	b.n	800df86 <USBD_CDC_Init+0x1da>
 800dddc:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 800dde0:	2100      	movs	r1, #0
 800dde2:	68f8      	ldr	r0, [r7, #12]
 800dde4:	f002 fd3e 	bl	8010864 <memset>
 800dde8:	687b      	ldr	r3, [r7, #4]
 800ddea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ddee:	687b      	ldr	r3, [r7, #4]
 800ddf0:	32b0      	adds	r2, #176	@ 0xb0
 800ddf2:	68f9      	ldr	r1, [r7, #12]
 800ddf4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ddf8:	687b      	ldr	r3, [r7, #4]
 800ddfa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ddfe:	687b      	ldr	r3, [r7, #4]
 800de00:	32b0      	adds	r2, #176	@ 0xb0
 800de02:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800de06:	687b      	ldr	r3, [r7, #4]
 800de08:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 800de0c:	687b      	ldr	r3, [r7, #4]
 800de0e:	7c1b      	ldrb	r3, [r3, #16]
 800de10:	2b00      	cmp	r3, #0
 800de12:	d138      	bne.n	800de86 <USBD_CDC_Init+0xda>
 800de14:	4b5e      	ldr	r3, [pc, #376]	@ (800df90 <USBD_CDC_Init+0x1e4>)
 800de16:	7819      	ldrb	r1, [r3, #0]
 800de18:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800de1c:	2202      	movs	r2, #2
 800de1e:	6878      	ldr	r0, [r7, #4]
 800de20:	f002 fb99 	bl	8010556 <USBD_LL_OpenEP>
 800de24:	4b5a      	ldr	r3, [pc, #360]	@ (800df90 <USBD_CDC_Init+0x1e4>)
 800de26:	781b      	ldrb	r3, [r3, #0]
 800de28:	f003 020f 	and.w	r2, r3, #15
 800de2c:	6879      	ldr	r1, [r7, #4]
 800de2e:	4613      	mov	r3, r2
 800de30:	009b      	lsls	r3, r3, #2
 800de32:	4413      	add	r3, r2
 800de34:	009b      	lsls	r3, r3, #2
 800de36:	440b      	add	r3, r1
 800de38:	3324      	adds	r3, #36	@ 0x24
 800de3a:	2201      	movs	r2, #1
 800de3c:	801a      	strh	r2, [r3, #0]
 800de3e:	4b55      	ldr	r3, [pc, #340]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800de40:	7819      	ldrb	r1, [r3, #0]
 800de42:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800de46:	2202      	movs	r2, #2
 800de48:	6878      	ldr	r0, [r7, #4]
 800de4a:	f002 fb84 	bl	8010556 <USBD_LL_OpenEP>
 800de4e:	4b51      	ldr	r3, [pc, #324]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800de50:	781b      	ldrb	r3, [r3, #0]
 800de52:	f003 020f 	and.w	r2, r3, #15
 800de56:	6879      	ldr	r1, [r7, #4]
 800de58:	4613      	mov	r3, r2
 800de5a:	009b      	lsls	r3, r3, #2
 800de5c:	4413      	add	r3, r2
 800de5e:	009b      	lsls	r3, r3, #2
 800de60:	440b      	add	r3, r1
 800de62:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800de66:	2201      	movs	r2, #1
 800de68:	801a      	strh	r2, [r3, #0]
 800de6a:	4b4b      	ldr	r3, [pc, #300]	@ (800df98 <USBD_CDC_Init+0x1ec>)
 800de6c:	781b      	ldrb	r3, [r3, #0]
 800de6e:	f003 020f 	and.w	r2, r3, #15
 800de72:	6879      	ldr	r1, [r7, #4]
 800de74:	4613      	mov	r3, r2
 800de76:	009b      	lsls	r3, r3, #2
 800de78:	4413      	add	r3, r2
 800de7a:	009b      	lsls	r3, r3, #2
 800de7c:	440b      	add	r3, r1
 800de7e:	3326      	adds	r3, #38	@ 0x26
 800de80:	2210      	movs	r2, #16
 800de82:	801a      	strh	r2, [r3, #0]
 800de84:	e035      	b.n	800def2 <USBD_CDC_Init+0x146>
 800de86:	4b42      	ldr	r3, [pc, #264]	@ (800df90 <USBD_CDC_Init+0x1e4>)
 800de88:	7819      	ldrb	r1, [r3, #0]
 800de8a:	2340      	movs	r3, #64	@ 0x40
 800de8c:	2202      	movs	r2, #2
 800de8e:	6878      	ldr	r0, [r7, #4]
 800de90:	f002 fb61 	bl	8010556 <USBD_LL_OpenEP>
 800de94:	4b3e      	ldr	r3, [pc, #248]	@ (800df90 <USBD_CDC_Init+0x1e4>)
 800de96:	781b      	ldrb	r3, [r3, #0]
 800de98:	f003 020f 	and.w	r2, r3, #15
 800de9c:	6879      	ldr	r1, [r7, #4]
 800de9e:	4613      	mov	r3, r2
 800dea0:	009b      	lsls	r3, r3, #2
 800dea2:	4413      	add	r3, r2
 800dea4:	009b      	lsls	r3, r3, #2
 800dea6:	440b      	add	r3, r1
 800dea8:	3324      	adds	r3, #36	@ 0x24
 800deaa:	2201      	movs	r2, #1
 800deac:	801a      	strh	r2, [r3, #0]
 800deae:	4b39      	ldr	r3, [pc, #228]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800deb0:	7819      	ldrb	r1, [r3, #0]
 800deb2:	2340      	movs	r3, #64	@ 0x40
 800deb4:	2202      	movs	r2, #2
 800deb6:	6878      	ldr	r0, [r7, #4]
 800deb8:	f002 fb4d 	bl	8010556 <USBD_LL_OpenEP>
 800debc:	4b35      	ldr	r3, [pc, #212]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800debe:	781b      	ldrb	r3, [r3, #0]
 800dec0:	f003 020f 	and.w	r2, r3, #15
 800dec4:	6879      	ldr	r1, [r7, #4]
 800dec6:	4613      	mov	r3, r2
 800dec8:	009b      	lsls	r3, r3, #2
 800deca:	4413      	add	r3, r2
 800decc:	009b      	lsls	r3, r3, #2
 800dece:	440b      	add	r3, r1
 800ded0:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800ded4:	2201      	movs	r2, #1
 800ded6:	801a      	strh	r2, [r3, #0]
 800ded8:	4b2f      	ldr	r3, [pc, #188]	@ (800df98 <USBD_CDC_Init+0x1ec>)
 800deda:	781b      	ldrb	r3, [r3, #0]
 800dedc:	f003 020f 	and.w	r2, r3, #15
 800dee0:	6879      	ldr	r1, [r7, #4]
 800dee2:	4613      	mov	r3, r2
 800dee4:	009b      	lsls	r3, r3, #2
 800dee6:	4413      	add	r3, r2
 800dee8:	009b      	lsls	r3, r3, #2
 800deea:	440b      	add	r3, r1
 800deec:	3326      	adds	r3, #38	@ 0x26
 800deee:	2210      	movs	r2, #16
 800def0:	801a      	strh	r2, [r3, #0]
 800def2:	4b29      	ldr	r3, [pc, #164]	@ (800df98 <USBD_CDC_Init+0x1ec>)
 800def4:	7819      	ldrb	r1, [r3, #0]
 800def6:	2308      	movs	r3, #8
 800def8:	2203      	movs	r2, #3
 800defa:	6878      	ldr	r0, [r7, #4]
 800defc:	f002 fb2b 	bl	8010556 <USBD_LL_OpenEP>
 800df00:	4b25      	ldr	r3, [pc, #148]	@ (800df98 <USBD_CDC_Init+0x1ec>)
 800df02:	781b      	ldrb	r3, [r3, #0]
 800df04:	f003 020f 	and.w	r2, r3, #15
 800df08:	6879      	ldr	r1, [r7, #4]
 800df0a:	4613      	mov	r3, r2
 800df0c:	009b      	lsls	r3, r3, #2
 800df0e:	4413      	add	r3, r2
 800df10:	009b      	lsls	r3, r3, #2
 800df12:	440b      	add	r3, r1
 800df14:	3324      	adds	r3, #36	@ 0x24
 800df16:	2201      	movs	r2, #1
 800df18:	801a      	strh	r2, [r3, #0]
 800df1a:	68fb      	ldr	r3, [r7, #12]
 800df1c:	2200      	movs	r2, #0
 800df1e:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800df22:	687b      	ldr	r3, [r7, #4]
 800df24:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800df28:	687a      	ldr	r2, [r7, #4]
 800df2a:	33b0      	adds	r3, #176	@ 0xb0
 800df2c:	009b      	lsls	r3, r3, #2
 800df2e:	4413      	add	r3, r2
 800df30:	685b      	ldr	r3, [r3, #4]
 800df32:	681b      	ldr	r3, [r3, #0]
 800df34:	4798      	blx	r3
 800df36:	68fb      	ldr	r3, [r7, #12]
 800df38:	2200      	movs	r2, #0
 800df3a:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800df3e:	68fb      	ldr	r3, [r7, #12]
 800df40:	2200      	movs	r2, #0
 800df42:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 800df46:	68fb      	ldr	r3, [r7, #12]
 800df48:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 800df4c:	2b00      	cmp	r3, #0
 800df4e:	d101      	bne.n	800df54 <USBD_CDC_Init+0x1a8>
 800df50:	2302      	movs	r3, #2
 800df52:	e018      	b.n	800df86 <USBD_CDC_Init+0x1da>
 800df54:	687b      	ldr	r3, [r7, #4]
 800df56:	7c1b      	ldrb	r3, [r3, #16]
 800df58:	2b00      	cmp	r3, #0
 800df5a:	d10a      	bne.n	800df72 <USBD_CDC_Init+0x1c6>
 800df5c:	4b0d      	ldr	r3, [pc, #52]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800df5e:	7819      	ldrb	r1, [r3, #0]
 800df60:	68fb      	ldr	r3, [r7, #12]
 800df62:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800df66:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800df6a:	6878      	ldr	r0, [r7, #4]
 800df6c:	f002 fbe2 	bl	8010734 <USBD_LL_PrepareReceive>
 800df70:	e008      	b.n	800df84 <USBD_CDC_Init+0x1d8>
 800df72:	4b08      	ldr	r3, [pc, #32]	@ (800df94 <USBD_CDC_Init+0x1e8>)
 800df74:	7819      	ldrb	r1, [r3, #0]
 800df76:	68fb      	ldr	r3, [r7, #12]
 800df78:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800df7c:	2340      	movs	r3, #64	@ 0x40
 800df7e:	6878      	ldr	r0, [r7, #4]
 800df80:	f002 fbd8 	bl	8010734 <USBD_LL_PrepareReceive>
 800df84:	2300      	movs	r3, #0
 800df86:	4618      	mov	r0, r3
 800df88:	3710      	adds	r7, #16
 800df8a:	46bd      	mov	sp, r7
 800df8c:	bd80      	pop	{r7, pc}
 800df8e:	bf00      	nop
 800df90:	24000127 	.word	0x24000127
 800df94:	24000128 	.word	0x24000128
 800df98:	24000129 	.word	0x24000129

0800df9c <USBD_CDC_DeInit>:
 800df9c:	b580      	push	{r7, lr}
 800df9e:	b082      	sub	sp, #8
 800dfa0:	af00      	add	r7, sp, #0
 800dfa2:	6078      	str	r0, [r7, #4]
 800dfa4:	460b      	mov	r3, r1
 800dfa6:	70fb      	strb	r3, [r7, #3]
 800dfa8:	4b3a      	ldr	r3, [pc, #232]	@ (800e094 <USBD_CDC_DeInit+0xf8>)
 800dfaa:	781b      	ldrb	r3, [r3, #0]
 800dfac:	4619      	mov	r1, r3
 800dfae:	6878      	ldr	r0, [r7, #4]
 800dfb0:	f002 faf7 	bl	80105a2 <USBD_LL_CloseEP>
 800dfb4:	4b37      	ldr	r3, [pc, #220]	@ (800e094 <USBD_CDC_DeInit+0xf8>)
 800dfb6:	781b      	ldrb	r3, [r3, #0]
 800dfb8:	f003 020f 	and.w	r2, r3, #15
 800dfbc:	6879      	ldr	r1, [r7, #4]
 800dfbe:	4613      	mov	r3, r2
 800dfc0:	009b      	lsls	r3, r3, #2
 800dfc2:	4413      	add	r3, r2
 800dfc4:	009b      	lsls	r3, r3, #2
 800dfc6:	440b      	add	r3, r1
 800dfc8:	3324      	adds	r3, #36	@ 0x24
 800dfca:	2200      	movs	r2, #0
 800dfcc:	801a      	strh	r2, [r3, #0]
 800dfce:	4b32      	ldr	r3, [pc, #200]	@ (800e098 <USBD_CDC_DeInit+0xfc>)
 800dfd0:	781b      	ldrb	r3, [r3, #0]
 800dfd2:	4619      	mov	r1, r3
 800dfd4:	6878      	ldr	r0, [r7, #4]
 800dfd6:	f002 fae4 	bl	80105a2 <USBD_LL_CloseEP>
 800dfda:	4b2f      	ldr	r3, [pc, #188]	@ (800e098 <USBD_CDC_DeInit+0xfc>)
 800dfdc:	781b      	ldrb	r3, [r3, #0]
 800dfde:	f003 020f 	and.w	r2, r3, #15
 800dfe2:	6879      	ldr	r1, [r7, #4]
 800dfe4:	4613      	mov	r3, r2
 800dfe6:	009b      	lsls	r3, r3, #2
 800dfe8:	4413      	add	r3, r2
 800dfea:	009b      	lsls	r3, r3, #2
 800dfec:	440b      	add	r3, r1
 800dfee:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800dff2:	2200      	movs	r2, #0
 800dff4:	801a      	strh	r2, [r3, #0]
 800dff6:	4b29      	ldr	r3, [pc, #164]	@ (800e09c <USBD_CDC_DeInit+0x100>)
 800dff8:	781b      	ldrb	r3, [r3, #0]
 800dffa:	4619      	mov	r1, r3
 800dffc:	6878      	ldr	r0, [r7, #4]
 800dffe:	f002 fad0 	bl	80105a2 <USBD_LL_CloseEP>
 800e002:	4b26      	ldr	r3, [pc, #152]	@ (800e09c <USBD_CDC_DeInit+0x100>)
 800e004:	781b      	ldrb	r3, [r3, #0]
 800e006:	f003 020f 	and.w	r2, r3, #15
 800e00a:	6879      	ldr	r1, [r7, #4]
 800e00c:	4613      	mov	r3, r2
 800e00e:	009b      	lsls	r3, r3, #2
 800e010:	4413      	add	r3, r2
 800e012:	009b      	lsls	r3, r3, #2
 800e014:	440b      	add	r3, r1
 800e016:	3324      	adds	r3, #36	@ 0x24
 800e018:	2200      	movs	r2, #0
 800e01a:	801a      	strh	r2, [r3, #0]
 800e01c:	4b1f      	ldr	r3, [pc, #124]	@ (800e09c <USBD_CDC_DeInit+0x100>)
 800e01e:	781b      	ldrb	r3, [r3, #0]
 800e020:	f003 020f 	and.w	r2, r3, #15
 800e024:	6879      	ldr	r1, [r7, #4]
 800e026:	4613      	mov	r3, r2
 800e028:	009b      	lsls	r3, r3, #2
 800e02a:	4413      	add	r3, r2
 800e02c:	009b      	lsls	r3, r3, #2
 800e02e:	440b      	add	r3, r1
 800e030:	3326      	adds	r3, #38	@ 0x26
 800e032:	2200      	movs	r2, #0
 800e034:	801a      	strh	r2, [r3, #0]
 800e036:	687b      	ldr	r3, [r7, #4]
 800e038:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e03c:	687b      	ldr	r3, [r7, #4]
 800e03e:	32b0      	adds	r2, #176	@ 0xb0
 800e040:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e044:	2b00      	cmp	r3, #0
 800e046:	d01f      	beq.n	800e088 <USBD_CDC_DeInit+0xec>
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e04e:	687a      	ldr	r2, [r7, #4]
 800e050:	33b0      	adds	r3, #176	@ 0xb0
 800e052:	009b      	lsls	r3, r3, #2
 800e054:	4413      	add	r3, r2
 800e056:	685b      	ldr	r3, [r3, #4]
 800e058:	685b      	ldr	r3, [r3, #4]
 800e05a:	4798      	blx	r3
 800e05c:	687b      	ldr	r3, [r7, #4]
 800e05e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e062:	687b      	ldr	r3, [r7, #4]
 800e064:	32b0      	adds	r2, #176	@ 0xb0
 800e066:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e06a:	4618      	mov	r0, r3
 800e06c:	f002 fba4 	bl	80107b8 <USBD_static_free>
 800e070:	687b      	ldr	r3, [r7, #4]
 800e072:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e076:	687b      	ldr	r3, [r7, #4]
 800e078:	32b0      	adds	r2, #176	@ 0xb0
 800e07a:	2100      	movs	r1, #0
 800e07c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	2200      	movs	r2, #0
 800e084:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 800e088:	2300      	movs	r3, #0
 800e08a:	4618      	mov	r0, r3
 800e08c:	3708      	adds	r7, #8
 800e08e:	46bd      	mov	sp, r7
 800e090:	bd80      	pop	{r7, pc}
 800e092:	bf00      	nop
 800e094:	24000127 	.word	0x24000127
 800e098:	24000128 	.word	0x24000128
 800e09c:	24000129 	.word	0x24000129

0800e0a0 <USBD_CDC_Setup>:
 800e0a0:	b580      	push	{r7, lr}
 800e0a2:	b086      	sub	sp, #24
 800e0a4:	af00      	add	r7, sp, #0
 800e0a6:	6078      	str	r0, [r7, #4]
 800e0a8:	6039      	str	r1, [r7, #0]
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e0b0:	687b      	ldr	r3, [r7, #4]
 800e0b2:	32b0      	adds	r2, #176	@ 0xb0
 800e0b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e0b8:	613b      	str	r3, [r7, #16]
 800e0ba:	2300      	movs	r3, #0
 800e0bc:	737b      	strb	r3, [r7, #13]
 800e0be:	2300      	movs	r3, #0
 800e0c0:	817b      	strh	r3, [r7, #10]
 800e0c2:	2300      	movs	r3, #0
 800e0c4:	75fb      	strb	r3, [r7, #23]
 800e0c6:	693b      	ldr	r3, [r7, #16]
 800e0c8:	2b00      	cmp	r3, #0
 800e0ca:	d101      	bne.n	800e0d0 <USBD_CDC_Setup+0x30>
 800e0cc:	2303      	movs	r3, #3
 800e0ce:	e0bf      	b.n	800e250 <USBD_CDC_Setup+0x1b0>
 800e0d0:	683b      	ldr	r3, [r7, #0]
 800e0d2:	781b      	ldrb	r3, [r3, #0]
 800e0d4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800e0d8:	2b00      	cmp	r3, #0
 800e0da:	d050      	beq.n	800e17e <USBD_CDC_Setup+0xde>
 800e0dc:	2b20      	cmp	r3, #32
 800e0de:	f040 80af 	bne.w	800e240 <USBD_CDC_Setup+0x1a0>
 800e0e2:	683b      	ldr	r3, [r7, #0]
 800e0e4:	88db      	ldrh	r3, [r3, #6]
 800e0e6:	2b00      	cmp	r3, #0
 800e0e8:	d03a      	beq.n	800e160 <USBD_CDC_Setup+0xc0>
 800e0ea:	683b      	ldr	r3, [r7, #0]
 800e0ec:	781b      	ldrb	r3, [r3, #0]
 800e0ee:	b25b      	sxtb	r3, r3
 800e0f0:	2b00      	cmp	r3, #0
 800e0f2:	da1b      	bge.n	800e12c <USBD_CDC_Setup+0x8c>
 800e0f4:	687b      	ldr	r3, [r7, #4]
 800e0f6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e0fa:	687a      	ldr	r2, [r7, #4]
 800e0fc:	33b0      	adds	r3, #176	@ 0xb0
 800e0fe:	009b      	lsls	r3, r3, #2
 800e100:	4413      	add	r3, r2
 800e102:	685b      	ldr	r3, [r3, #4]
 800e104:	689b      	ldr	r3, [r3, #8]
 800e106:	683a      	ldr	r2, [r7, #0]
 800e108:	7850      	ldrb	r0, [r2, #1]
 800e10a:	6939      	ldr	r1, [r7, #16]
 800e10c:	683a      	ldr	r2, [r7, #0]
 800e10e:	88d2      	ldrh	r2, [r2, #6]
 800e110:	4798      	blx	r3
 800e112:	683b      	ldr	r3, [r7, #0]
 800e114:	88db      	ldrh	r3, [r3, #6]
 800e116:	2b07      	cmp	r3, #7
 800e118:	bf28      	it	cs
 800e11a:	2307      	movcs	r3, #7
 800e11c:	81fb      	strh	r3, [r7, #14]
 800e11e:	693b      	ldr	r3, [r7, #16]
 800e120:	89fa      	ldrh	r2, [r7, #14]
 800e122:	4619      	mov	r1, r3
 800e124:	6878      	ldr	r0, [r7, #4]
 800e126:	f001 fdbd 	bl	800fca4 <USBD_CtlSendData>
 800e12a:	e090      	b.n	800e24e <USBD_CDC_Setup+0x1ae>
 800e12c:	683b      	ldr	r3, [r7, #0]
 800e12e:	785a      	ldrb	r2, [r3, #1]
 800e130:	693b      	ldr	r3, [r7, #16]
 800e132:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 800e136:	683b      	ldr	r3, [r7, #0]
 800e138:	88db      	ldrh	r3, [r3, #6]
 800e13a:	2b3f      	cmp	r3, #63	@ 0x3f
 800e13c:	d803      	bhi.n	800e146 <USBD_CDC_Setup+0xa6>
 800e13e:	683b      	ldr	r3, [r7, #0]
 800e140:	88db      	ldrh	r3, [r3, #6]
 800e142:	b2da      	uxtb	r2, r3
 800e144:	e000      	b.n	800e148 <USBD_CDC_Setup+0xa8>
 800e146:	2240      	movs	r2, #64	@ 0x40
 800e148:	693b      	ldr	r3, [r7, #16]
 800e14a:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 800e14e:	6939      	ldr	r1, [r7, #16]
 800e150:	693b      	ldr	r3, [r7, #16]
 800e152:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 800e156:	461a      	mov	r2, r3
 800e158:	6878      	ldr	r0, [r7, #4]
 800e15a:	f001 fdcf 	bl	800fcfc <USBD_CtlPrepareRx>
 800e15e:	e076      	b.n	800e24e <USBD_CDC_Setup+0x1ae>
 800e160:	687b      	ldr	r3, [r7, #4]
 800e162:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e166:	687a      	ldr	r2, [r7, #4]
 800e168:	33b0      	adds	r3, #176	@ 0xb0
 800e16a:	009b      	lsls	r3, r3, #2
 800e16c:	4413      	add	r3, r2
 800e16e:	685b      	ldr	r3, [r3, #4]
 800e170:	689b      	ldr	r3, [r3, #8]
 800e172:	683a      	ldr	r2, [r7, #0]
 800e174:	7850      	ldrb	r0, [r2, #1]
 800e176:	2200      	movs	r2, #0
 800e178:	6839      	ldr	r1, [r7, #0]
 800e17a:	4798      	blx	r3
 800e17c:	e067      	b.n	800e24e <USBD_CDC_Setup+0x1ae>
 800e17e:	683b      	ldr	r3, [r7, #0]
 800e180:	785b      	ldrb	r3, [r3, #1]
 800e182:	2b0b      	cmp	r3, #11
 800e184:	d851      	bhi.n	800e22a <USBD_CDC_Setup+0x18a>
 800e186:	a201      	add	r2, pc, #4	@ (adr r2, 800e18c <USBD_CDC_Setup+0xec>)
 800e188:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e18c:	0800e1bd 	.word	0x0800e1bd
 800e190:	0800e239 	.word	0x0800e239
 800e194:	0800e22b 	.word	0x0800e22b
 800e198:	0800e22b 	.word	0x0800e22b
 800e19c:	0800e22b 	.word	0x0800e22b
 800e1a0:	0800e22b 	.word	0x0800e22b
 800e1a4:	0800e22b 	.word	0x0800e22b
 800e1a8:	0800e22b 	.word	0x0800e22b
 800e1ac:	0800e22b 	.word	0x0800e22b
 800e1b0:	0800e22b 	.word	0x0800e22b
 800e1b4:	0800e1e7 	.word	0x0800e1e7
 800e1b8:	0800e211 	.word	0x0800e211
 800e1bc:	687b      	ldr	r3, [r7, #4]
 800e1be:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800e1c2:	b2db      	uxtb	r3, r3
 800e1c4:	2b03      	cmp	r3, #3
 800e1c6:	d107      	bne.n	800e1d8 <USBD_CDC_Setup+0x138>
 800e1c8:	f107 030a 	add.w	r3, r7, #10
 800e1cc:	2202      	movs	r2, #2
 800e1ce:	4619      	mov	r1, r3
 800e1d0:	6878      	ldr	r0, [r7, #4]
 800e1d2:	f001 fd67 	bl	800fca4 <USBD_CtlSendData>
 800e1d6:	e032      	b.n	800e23e <USBD_CDC_Setup+0x19e>
 800e1d8:	6839      	ldr	r1, [r7, #0]
 800e1da:	6878      	ldr	r0, [r7, #4]
 800e1dc:	f001 fce5 	bl	800fbaa <USBD_CtlError>
 800e1e0:	2303      	movs	r3, #3
 800e1e2:	75fb      	strb	r3, [r7, #23]
 800e1e4:	e02b      	b.n	800e23e <USBD_CDC_Setup+0x19e>
 800e1e6:	687b      	ldr	r3, [r7, #4]
 800e1e8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800e1ec:	b2db      	uxtb	r3, r3
 800e1ee:	2b03      	cmp	r3, #3
 800e1f0:	d107      	bne.n	800e202 <USBD_CDC_Setup+0x162>
 800e1f2:	f107 030d 	add.w	r3, r7, #13
 800e1f6:	2201      	movs	r2, #1
 800e1f8:	4619      	mov	r1, r3
 800e1fa:	6878      	ldr	r0, [r7, #4]
 800e1fc:	f001 fd52 	bl	800fca4 <USBD_CtlSendData>
 800e200:	e01d      	b.n	800e23e <USBD_CDC_Setup+0x19e>
 800e202:	6839      	ldr	r1, [r7, #0]
 800e204:	6878      	ldr	r0, [r7, #4]
 800e206:	f001 fcd0 	bl	800fbaa <USBD_CtlError>
 800e20a:	2303      	movs	r3, #3
 800e20c:	75fb      	strb	r3, [r7, #23]
 800e20e:	e016      	b.n	800e23e <USBD_CDC_Setup+0x19e>
 800e210:	687b      	ldr	r3, [r7, #4]
 800e212:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800e216:	b2db      	uxtb	r3, r3
 800e218:	2b03      	cmp	r3, #3
 800e21a:	d00f      	beq.n	800e23c <USBD_CDC_Setup+0x19c>
 800e21c:	6839      	ldr	r1, [r7, #0]
 800e21e:	6878      	ldr	r0, [r7, #4]
 800e220:	f001 fcc3 	bl	800fbaa <USBD_CtlError>
 800e224:	2303      	movs	r3, #3
 800e226:	75fb      	strb	r3, [r7, #23]
 800e228:	e008      	b.n	800e23c <USBD_CDC_Setup+0x19c>
 800e22a:	6839      	ldr	r1, [r7, #0]
 800e22c:	6878      	ldr	r0, [r7, #4]
 800e22e:	f001 fcbc 	bl	800fbaa <USBD_CtlError>
 800e232:	2303      	movs	r3, #3
 800e234:	75fb      	strb	r3, [r7, #23]
 800e236:	e002      	b.n	800e23e <USBD_CDC_Setup+0x19e>
 800e238:	bf00      	nop
 800e23a:	e008      	b.n	800e24e <USBD_CDC_Setup+0x1ae>
 800e23c:	bf00      	nop
 800e23e:	e006      	b.n	800e24e <USBD_CDC_Setup+0x1ae>
 800e240:	6839      	ldr	r1, [r7, #0]
 800e242:	6878      	ldr	r0, [r7, #4]
 800e244:	f001 fcb1 	bl	800fbaa <USBD_CtlError>
 800e248:	2303      	movs	r3, #3
 800e24a:	75fb      	strb	r3, [r7, #23]
 800e24c:	bf00      	nop
 800e24e:	7dfb      	ldrb	r3, [r7, #23]
 800e250:	4618      	mov	r0, r3
 800e252:	3718      	adds	r7, #24
 800e254:	46bd      	mov	sp, r7
 800e256:	bd80      	pop	{r7, pc}

0800e258 <USBD_CDC_DataIn>:
 800e258:	b580      	push	{r7, lr}
 800e25a:	b084      	sub	sp, #16
 800e25c:	af00      	add	r7, sp, #0
 800e25e:	6078      	str	r0, [r7, #4]
 800e260:	460b      	mov	r3, r1
 800e262:	70fb      	strb	r3, [r7, #3]
 800e264:	687b      	ldr	r3, [r7, #4]
 800e266:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 800e26a:	60fb      	str	r3, [r7, #12]
 800e26c:	687b      	ldr	r3, [r7, #4]
 800e26e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e272:	687b      	ldr	r3, [r7, #4]
 800e274:	32b0      	adds	r2, #176	@ 0xb0
 800e276:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e27a:	2b00      	cmp	r3, #0
 800e27c:	d101      	bne.n	800e282 <USBD_CDC_DataIn+0x2a>
 800e27e:	2303      	movs	r3, #3
 800e280:	e065      	b.n	800e34e <USBD_CDC_DataIn+0xf6>
 800e282:	687b      	ldr	r3, [r7, #4]
 800e284:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e288:	687b      	ldr	r3, [r7, #4]
 800e28a:	32b0      	adds	r2, #176	@ 0xb0
 800e28c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e290:	60bb      	str	r3, [r7, #8]
 800e292:	78fb      	ldrb	r3, [r7, #3]
 800e294:	f003 020f 	and.w	r2, r3, #15
 800e298:	6879      	ldr	r1, [r7, #4]
 800e29a:	4613      	mov	r3, r2
 800e29c:	009b      	lsls	r3, r3, #2
 800e29e:	4413      	add	r3, r2
 800e2a0:	009b      	lsls	r3, r3, #2
 800e2a2:	440b      	add	r3, r1
 800e2a4:	3318      	adds	r3, #24
 800e2a6:	681b      	ldr	r3, [r3, #0]
 800e2a8:	2b00      	cmp	r3, #0
 800e2aa:	d02f      	beq.n	800e30c <USBD_CDC_DataIn+0xb4>
 800e2ac:	78fb      	ldrb	r3, [r7, #3]
 800e2ae:	f003 020f 	and.w	r2, r3, #15
 800e2b2:	6879      	ldr	r1, [r7, #4]
 800e2b4:	4613      	mov	r3, r2
 800e2b6:	009b      	lsls	r3, r3, #2
 800e2b8:	4413      	add	r3, r2
 800e2ba:	009b      	lsls	r3, r3, #2
 800e2bc:	440b      	add	r3, r1
 800e2be:	3318      	adds	r3, #24
 800e2c0:	681a      	ldr	r2, [r3, #0]
 800e2c2:	78fb      	ldrb	r3, [r7, #3]
 800e2c4:	f003 010f 	and.w	r1, r3, #15
 800e2c8:	68f8      	ldr	r0, [r7, #12]
 800e2ca:	460b      	mov	r3, r1
 800e2cc:	00db      	lsls	r3, r3, #3
 800e2ce:	440b      	add	r3, r1
 800e2d0:	009b      	lsls	r3, r3, #2
 800e2d2:	4403      	add	r3, r0
 800e2d4:	331c      	adds	r3, #28
 800e2d6:	681b      	ldr	r3, [r3, #0]
 800e2d8:	fbb2 f1f3 	udiv	r1, r2, r3
 800e2dc:	fb01 f303 	mul.w	r3, r1, r3
 800e2e0:	1ad3      	subs	r3, r2, r3
 800e2e2:	2b00      	cmp	r3, #0
 800e2e4:	d112      	bne.n	800e30c <USBD_CDC_DataIn+0xb4>
 800e2e6:	78fb      	ldrb	r3, [r7, #3]
 800e2e8:	f003 020f 	and.w	r2, r3, #15
 800e2ec:	6879      	ldr	r1, [r7, #4]
 800e2ee:	4613      	mov	r3, r2
 800e2f0:	009b      	lsls	r3, r3, #2
 800e2f2:	4413      	add	r3, r2
 800e2f4:	009b      	lsls	r3, r3, #2
 800e2f6:	440b      	add	r3, r1
 800e2f8:	3318      	adds	r3, #24
 800e2fa:	2200      	movs	r2, #0
 800e2fc:	601a      	str	r2, [r3, #0]
 800e2fe:	78f9      	ldrb	r1, [r7, #3]
 800e300:	2300      	movs	r3, #0
 800e302:	2200      	movs	r2, #0
 800e304:	6878      	ldr	r0, [r7, #4]
 800e306:	f002 f9f4 	bl	80106f2 <USBD_LL_Transmit>
 800e30a:	e01f      	b.n	800e34c <USBD_CDC_DataIn+0xf4>
 800e30c:	68bb      	ldr	r3, [r7, #8]
 800e30e:	2200      	movs	r2, #0
 800e310:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800e314:	687b      	ldr	r3, [r7, #4]
 800e316:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e31a:	687a      	ldr	r2, [r7, #4]
 800e31c:	33b0      	adds	r3, #176	@ 0xb0
 800e31e:	009b      	lsls	r3, r3, #2
 800e320:	4413      	add	r3, r2
 800e322:	685b      	ldr	r3, [r3, #4]
 800e324:	691b      	ldr	r3, [r3, #16]
 800e326:	2b00      	cmp	r3, #0
 800e328:	d010      	beq.n	800e34c <USBD_CDC_DataIn+0xf4>
 800e32a:	687b      	ldr	r3, [r7, #4]
 800e32c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e330:	687a      	ldr	r2, [r7, #4]
 800e332:	33b0      	adds	r3, #176	@ 0xb0
 800e334:	009b      	lsls	r3, r3, #2
 800e336:	4413      	add	r3, r2
 800e338:	685b      	ldr	r3, [r3, #4]
 800e33a:	691b      	ldr	r3, [r3, #16]
 800e33c:	68ba      	ldr	r2, [r7, #8]
 800e33e:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 800e342:	68ba      	ldr	r2, [r7, #8]
 800e344:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 800e348:	78fa      	ldrb	r2, [r7, #3]
 800e34a:	4798      	blx	r3
 800e34c:	2300      	movs	r3, #0
 800e34e:	4618      	mov	r0, r3
 800e350:	3710      	adds	r7, #16
 800e352:	46bd      	mov	sp, r7
 800e354:	bd80      	pop	{r7, pc}

0800e356 <USBD_CDC_DataOut>:
 800e356:	b580      	push	{r7, lr}
 800e358:	b084      	sub	sp, #16
 800e35a:	af00      	add	r7, sp, #0
 800e35c:	6078      	str	r0, [r7, #4]
 800e35e:	460b      	mov	r3, r1
 800e360:	70fb      	strb	r3, [r7, #3]
 800e362:	687b      	ldr	r3, [r7, #4]
 800e364:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e368:	687b      	ldr	r3, [r7, #4]
 800e36a:	32b0      	adds	r2, #176	@ 0xb0
 800e36c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e370:	60fb      	str	r3, [r7, #12]
 800e372:	687b      	ldr	r3, [r7, #4]
 800e374:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e378:	687b      	ldr	r3, [r7, #4]
 800e37a:	32b0      	adds	r2, #176	@ 0xb0
 800e37c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e380:	2b00      	cmp	r3, #0
 800e382:	d101      	bne.n	800e388 <USBD_CDC_DataOut+0x32>
 800e384:	2303      	movs	r3, #3
 800e386:	e01a      	b.n	800e3be <USBD_CDC_DataOut+0x68>
 800e388:	78fb      	ldrb	r3, [r7, #3]
 800e38a:	4619      	mov	r1, r3
 800e38c:	6878      	ldr	r0, [r7, #4]
 800e38e:	f002 f9f2 	bl	8010776 <USBD_LL_GetRxDataSize>
 800e392:	4602      	mov	r2, r0
 800e394:	68fb      	ldr	r3, [r7, #12]
 800e396:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e3a0:	687a      	ldr	r2, [r7, #4]
 800e3a2:	33b0      	adds	r3, #176	@ 0xb0
 800e3a4:	009b      	lsls	r3, r3, #2
 800e3a6:	4413      	add	r3, r2
 800e3a8:	685b      	ldr	r3, [r3, #4]
 800e3aa:	68db      	ldr	r3, [r3, #12]
 800e3ac:	68fa      	ldr	r2, [r7, #12]
 800e3ae:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 800e3b2:	68fa      	ldr	r2, [r7, #12]
 800e3b4:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 800e3b8:	4611      	mov	r1, r2
 800e3ba:	4798      	blx	r3
 800e3bc:	2300      	movs	r3, #0
 800e3be:	4618      	mov	r0, r3
 800e3c0:	3710      	adds	r7, #16
 800e3c2:	46bd      	mov	sp, r7
 800e3c4:	bd80      	pop	{r7, pc}

0800e3c6 <USBD_CDC_EP0_RxReady>:
 800e3c6:	b580      	push	{r7, lr}
 800e3c8:	b084      	sub	sp, #16
 800e3ca:	af00      	add	r7, sp, #0
 800e3cc:	6078      	str	r0, [r7, #4]
 800e3ce:	687b      	ldr	r3, [r7, #4]
 800e3d0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e3d4:	687b      	ldr	r3, [r7, #4]
 800e3d6:	32b0      	adds	r2, #176	@ 0xb0
 800e3d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e3dc:	60fb      	str	r3, [r7, #12]
 800e3de:	68fb      	ldr	r3, [r7, #12]
 800e3e0:	2b00      	cmp	r3, #0
 800e3e2:	d101      	bne.n	800e3e8 <USBD_CDC_EP0_RxReady+0x22>
 800e3e4:	2303      	movs	r3, #3
 800e3e6:	e024      	b.n	800e432 <USBD_CDC_EP0_RxReady+0x6c>
 800e3e8:	687b      	ldr	r3, [r7, #4]
 800e3ea:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e3ee:	687a      	ldr	r2, [r7, #4]
 800e3f0:	33b0      	adds	r3, #176	@ 0xb0
 800e3f2:	009b      	lsls	r3, r3, #2
 800e3f4:	4413      	add	r3, r2
 800e3f6:	685b      	ldr	r3, [r3, #4]
 800e3f8:	2b00      	cmp	r3, #0
 800e3fa:	d019      	beq.n	800e430 <USBD_CDC_EP0_RxReady+0x6a>
 800e3fc:	68fb      	ldr	r3, [r7, #12]
 800e3fe:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 800e402:	2bff      	cmp	r3, #255	@ 0xff
 800e404:	d014      	beq.n	800e430 <USBD_CDC_EP0_RxReady+0x6a>
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e40c:	687a      	ldr	r2, [r7, #4]
 800e40e:	33b0      	adds	r3, #176	@ 0xb0
 800e410:	009b      	lsls	r3, r3, #2
 800e412:	4413      	add	r3, r2
 800e414:	685b      	ldr	r3, [r3, #4]
 800e416:	689b      	ldr	r3, [r3, #8]
 800e418:	68fa      	ldr	r2, [r7, #12]
 800e41a:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 800e41e:	68f9      	ldr	r1, [r7, #12]
 800e420:	68fa      	ldr	r2, [r7, #12]
 800e422:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 800e426:	4798      	blx	r3
 800e428:	68fb      	ldr	r3, [r7, #12]
 800e42a:	22ff      	movs	r2, #255	@ 0xff
 800e42c:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 800e430:	2300      	movs	r3, #0
 800e432:	4618      	mov	r0, r3
 800e434:	3710      	adds	r7, #16
 800e436:	46bd      	mov	sp, r7
 800e438:	bd80      	pop	{r7, pc}
	...

0800e43c <USBD_CDC_GetFSCfgDesc>:
 800e43c:	b580      	push	{r7, lr}
 800e43e:	b086      	sub	sp, #24
 800e440:	af00      	add	r7, sp, #0
 800e442:	6078      	str	r0, [r7, #4]
 800e444:	2182      	movs	r1, #130	@ 0x82
 800e446:	4818      	ldr	r0, [pc, #96]	@ (800e4a8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800e448:	f000 fd4f 	bl	800eeea <USBD_GetEpDesc>
 800e44c:	6178      	str	r0, [r7, #20]
 800e44e:	2101      	movs	r1, #1
 800e450:	4815      	ldr	r0, [pc, #84]	@ (800e4a8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800e452:	f000 fd4a 	bl	800eeea <USBD_GetEpDesc>
 800e456:	6138      	str	r0, [r7, #16]
 800e458:	2181      	movs	r1, #129	@ 0x81
 800e45a:	4813      	ldr	r0, [pc, #76]	@ (800e4a8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800e45c:	f000 fd45 	bl	800eeea <USBD_GetEpDesc>
 800e460:	60f8      	str	r0, [r7, #12]
 800e462:	697b      	ldr	r3, [r7, #20]
 800e464:	2b00      	cmp	r3, #0
 800e466:	d002      	beq.n	800e46e <USBD_CDC_GetFSCfgDesc+0x32>
 800e468:	697b      	ldr	r3, [r7, #20]
 800e46a:	2210      	movs	r2, #16
 800e46c:	719a      	strb	r2, [r3, #6]
 800e46e:	693b      	ldr	r3, [r7, #16]
 800e470:	2b00      	cmp	r3, #0
 800e472:	d006      	beq.n	800e482 <USBD_CDC_GetFSCfgDesc+0x46>
 800e474:	693b      	ldr	r3, [r7, #16]
 800e476:	2200      	movs	r2, #0
 800e478:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e47c:	711a      	strb	r2, [r3, #4]
 800e47e:	2200      	movs	r2, #0
 800e480:	715a      	strb	r2, [r3, #5]
 800e482:	68fb      	ldr	r3, [r7, #12]
 800e484:	2b00      	cmp	r3, #0
 800e486:	d006      	beq.n	800e496 <USBD_CDC_GetFSCfgDesc+0x5a>
 800e488:	68fb      	ldr	r3, [r7, #12]
 800e48a:	2200      	movs	r2, #0
 800e48c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e490:	711a      	strb	r2, [r3, #4]
 800e492:	2200      	movs	r2, #0
 800e494:	715a      	strb	r2, [r3, #5]
 800e496:	687b      	ldr	r3, [r7, #4]
 800e498:	2243      	movs	r2, #67	@ 0x43
 800e49a:	801a      	strh	r2, [r3, #0]
 800e49c:	4b02      	ldr	r3, [pc, #8]	@ (800e4a8 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800e49e:	4618      	mov	r0, r3
 800e4a0:	3718      	adds	r7, #24
 800e4a2:	46bd      	mov	sp, r7
 800e4a4:	bd80      	pop	{r7, pc}
 800e4a6:	bf00      	nop
 800e4a8:	240000e4 	.word	0x240000e4

0800e4ac <USBD_CDC_GetHSCfgDesc>:
 800e4ac:	b580      	push	{r7, lr}
 800e4ae:	b086      	sub	sp, #24
 800e4b0:	af00      	add	r7, sp, #0
 800e4b2:	6078      	str	r0, [r7, #4]
 800e4b4:	2182      	movs	r1, #130	@ 0x82
 800e4b6:	4818      	ldr	r0, [pc, #96]	@ (800e518 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800e4b8:	f000 fd17 	bl	800eeea <USBD_GetEpDesc>
 800e4bc:	6178      	str	r0, [r7, #20]
 800e4be:	2101      	movs	r1, #1
 800e4c0:	4815      	ldr	r0, [pc, #84]	@ (800e518 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800e4c2:	f000 fd12 	bl	800eeea <USBD_GetEpDesc>
 800e4c6:	6138      	str	r0, [r7, #16]
 800e4c8:	2181      	movs	r1, #129	@ 0x81
 800e4ca:	4813      	ldr	r0, [pc, #76]	@ (800e518 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800e4cc:	f000 fd0d 	bl	800eeea <USBD_GetEpDesc>
 800e4d0:	60f8      	str	r0, [r7, #12]
 800e4d2:	697b      	ldr	r3, [r7, #20]
 800e4d4:	2b00      	cmp	r3, #0
 800e4d6:	d002      	beq.n	800e4de <USBD_CDC_GetHSCfgDesc+0x32>
 800e4d8:	697b      	ldr	r3, [r7, #20]
 800e4da:	2210      	movs	r2, #16
 800e4dc:	719a      	strb	r2, [r3, #6]
 800e4de:	693b      	ldr	r3, [r7, #16]
 800e4e0:	2b00      	cmp	r3, #0
 800e4e2:	d006      	beq.n	800e4f2 <USBD_CDC_GetHSCfgDesc+0x46>
 800e4e4:	693b      	ldr	r3, [r7, #16]
 800e4e6:	2200      	movs	r2, #0
 800e4e8:	711a      	strb	r2, [r3, #4]
 800e4ea:	2200      	movs	r2, #0
 800e4ec:	f042 0202 	orr.w	r2, r2, #2
 800e4f0:	715a      	strb	r2, [r3, #5]
 800e4f2:	68fb      	ldr	r3, [r7, #12]
 800e4f4:	2b00      	cmp	r3, #0
 800e4f6:	d006      	beq.n	800e506 <USBD_CDC_GetHSCfgDesc+0x5a>
 800e4f8:	68fb      	ldr	r3, [r7, #12]
 800e4fa:	2200      	movs	r2, #0
 800e4fc:	711a      	strb	r2, [r3, #4]
 800e4fe:	2200      	movs	r2, #0
 800e500:	f042 0202 	orr.w	r2, r2, #2
 800e504:	715a      	strb	r2, [r3, #5]
 800e506:	687b      	ldr	r3, [r7, #4]
 800e508:	2243      	movs	r2, #67	@ 0x43
 800e50a:	801a      	strh	r2, [r3, #0]
 800e50c:	4b02      	ldr	r3, [pc, #8]	@ (800e518 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800e50e:	4618      	mov	r0, r3
 800e510:	3718      	adds	r7, #24
 800e512:	46bd      	mov	sp, r7
 800e514:	bd80      	pop	{r7, pc}
 800e516:	bf00      	nop
 800e518:	240000e4 	.word	0x240000e4

0800e51c <USBD_CDC_GetOtherSpeedCfgDesc>:
 800e51c:	b580      	push	{r7, lr}
 800e51e:	b086      	sub	sp, #24
 800e520:	af00      	add	r7, sp, #0
 800e522:	6078      	str	r0, [r7, #4]
 800e524:	2182      	movs	r1, #130	@ 0x82
 800e526:	4818      	ldr	r0, [pc, #96]	@ (800e588 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800e528:	f000 fcdf 	bl	800eeea <USBD_GetEpDesc>
 800e52c:	6178      	str	r0, [r7, #20]
 800e52e:	2101      	movs	r1, #1
 800e530:	4815      	ldr	r0, [pc, #84]	@ (800e588 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800e532:	f000 fcda 	bl	800eeea <USBD_GetEpDesc>
 800e536:	6138      	str	r0, [r7, #16]
 800e538:	2181      	movs	r1, #129	@ 0x81
 800e53a:	4813      	ldr	r0, [pc, #76]	@ (800e588 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800e53c:	f000 fcd5 	bl	800eeea <USBD_GetEpDesc>
 800e540:	60f8      	str	r0, [r7, #12]
 800e542:	697b      	ldr	r3, [r7, #20]
 800e544:	2b00      	cmp	r3, #0
 800e546:	d002      	beq.n	800e54e <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 800e548:	697b      	ldr	r3, [r7, #20]
 800e54a:	2210      	movs	r2, #16
 800e54c:	719a      	strb	r2, [r3, #6]
 800e54e:	693b      	ldr	r3, [r7, #16]
 800e550:	2b00      	cmp	r3, #0
 800e552:	d006      	beq.n	800e562 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 800e554:	693b      	ldr	r3, [r7, #16]
 800e556:	2200      	movs	r2, #0
 800e558:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e55c:	711a      	strb	r2, [r3, #4]
 800e55e:	2200      	movs	r2, #0
 800e560:	715a      	strb	r2, [r3, #5]
 800e562:	68fb      	ldr	r3, [r7, #12]
 800e564:	2b00      	cmp	r3, #0
 800e566:	d006      	beq.n	800e576 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 800e568:	68fb      	ldr	r3, [r7, #12]
 800e56a:	2200      	movs	r2, #0
 800e56c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e570:	711a      	strb	r2, [r3, #4]
 800e572:	2200      	movs	r2, #0
 800e574:	715a      	strb	r2, [r3, #5]
 800e576:	687b      	ldr	r3, [r7, #4]
 800e578:	2243      	movs	r2, #67	@ 0x43
 800e57a:	801a      	strh	r2, [r3, #0]
 800e57c:	4b02      	ldr	r3, [pc, #8]	@ (800e588 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800e57e:	4618      	mov	r0, r3
 800e580:	3718      	adds	r7, #24
 800e582:	46bd      	mov	sp, r7
 800e584:	bd80      	pop	{r7, pc}
 800e586:	bf00      	nop
 800e588:	240000e4 	.word	0x240000e4

0800e58c <USBD_CDC_GetDeviceQualifierDescriptor>:
 800e58c:	b480      	push	{r7}
 800e58e:	b083      	sub	sp, #12
 800e590:	af00      	add	r7, sp, #0
 800e592:	6078      	str	r0, [r7, #4]
 800e594:	687b      	ldr	r3, [r7, #4]
 800e596:	220a      	movs	r2, #10
 800e598:	801a      	strh	r2, [r3, #0]
 800e59a:	4b03      	ldr	r3, [pc, #12]	@ (800e5a8 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 800e59c:	4618      	mov	r0, r3
 800e59e:	370c      	adds	r7, #12
 800e5a0:	46bd      	mov	sp, r7
 800e5a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5a6:	4770      	bx	lr
 800e5a8:	240000a0 	.word	0x240000a0

0800e5ac <USBD_CDC_RegisterInterface>:
 800e5ac:	b480      	push	{r7}
 800e5ae:	b083      	sub	sp, #12
 800e5b0:	af00      	add	r7, sp, #0
 800e5b2:	6078      	str	r0, [r7, #4]
 800e5b4:	6039      	str	r1, [r7, #0]
 800e5b6:	683b      	ldr	r3, [r7, #0]
 800e5b8:	2b00      	cmp	r3, #0
 800e5ba:	d101      	bne.n	800e5c0 <USBD_CDC_RegisterInterface+0x14>
 800e5bc:	2303      	movs	r3, #3
 800e5be:	e009      	b.n	800e5d4 <USBD_CDC_RegisterInterface+0x28>
 800e5c0:	687b      	ldr	r3, [r7, #4]
 800e5c2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 800e5c6:	687a      	ldr	r2, [r7, #4]
 800e5c8:	33b0      	adds	r3, #176	@ 0xb0
 800e5ca:	009b      	lsls	r3, r3, #2
 800e5cc:	4413      	add	r3, r2
 800e5ce:	683a      	ldr	r2, [r7, #0]
 800e5d0:	605a      	str	r2, [r3, #4]
 800e5d2:	2300      	movs	r3, #0
 800e5d4:	4618      	mov	r0, r3
 800e5d6:	370c      	adds	r7, #12
 800e5d8:	46bd      	mov	sp, r7
 800e5da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5de:	4770      	bx	lr

0800e5e0 <USBD_CDC_SetTxBuffer>:
 800e5e0:	b480      	push	{r7}
 800e5e2:	b087      	sub	sp, #28
 800e5e4:	af00      	add	r7, sp, #0
 800e5e6:	60f8      	str	r0, [r7, #12]
 800e5e8:	60b9      	str	r1, [r7, #8]
 800e5ea:	607a      	str	r2, [r7, #4]
 800e5ec:	68fb      	ldr	r3, [r7, #12]
 800e5ee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e5f2:	68fb      	ldr	r3, [r7, #12]
 800e5f4:	32b0      	adds	r2, #176	@ 0xb0
 800e5f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e5fa:	617b      	str	r3, [r7, #20]
 800e5fc:	697b      	ldr	r3, [r7, #20]
 800e5fe:	2b00      	cmp	r3, #0
 800e600:	d101      	bne.n	800e606 <USBD_CDC_SetTxBuffer+0x26>
 800e602:	2303      	movs	r3, #3
 800e604:	e008      	b.n	800e618 <USBD_CDC_SetTxBuffer+0x38>
 800e606:	697b      	ldr	r3, [r7, #20]
 800e608:	68ba      	ldr	r2, [r7, #8]
 800e60a:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 800e60e:	697b      	ldr	r3, [r7, #20]
 800e610:	687a      	ldr	r2, [r7, #4]
 800e612:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 800e616:	2300      	movs	r3, #0
 800e618:	4618      	mov	r0, r3
 800e61a:	371c      	adds	r7, #28
 800e61c:	46bd      	mov	sp, r7
 800e61e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e622:	4770      	bx	lr

0800e624 <USBD_CDC_SetRxBuffer>:
 800e624:	b480      	push	{r7}
 800e626:	b085      	sub	sp, #20
 800e628:	af00      	add	r7, sp, #0
 800e62a:	6078      	str	r0, [r7, #4]
 800e62c:	6039      	str	r1, [r7, #0]
 800e62e:	687b      	ldr	r3, [r7, #4]
 800e630:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e634:	687b      	ldr	r3, [r7, #4]
 800e636:	32b0      	adds	r2, #176	@ 0xb0
 800e638:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e63c:	60fb      	str	r3, [r7, #12]
 800e63e:	68fb      	ldr	r3, [r7, #12]
 800e640:	2b00      	cmp	r3, #0
 800e642:	d101      	bne.n	800e648 <USBD_CDC_SetRxBuffer+0x24>
 800e644:	2303      	movs	r3, #3
 800e646:	e004      	b.n	800e652 <USBD_CDC_SetRxBuffer+0x2e>
 800e648:	68fb      	ldr	r3, [r7, #12]
 800e64a:	683a      	ldr	r2, [r7, #0]
 800e64c:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800e650:	2300      	movs	r3, #0
 800e652:	4618      	mov	r0, r3
 800e654:	3714      	adds	r7, #20
 800e656:	46bd      	mov	sp, r7
 800e658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e65c:	4770      	bx	lr
	...

0800e660 <USBD_CDC_TransmitPacket>:
 800e660:	b580      	push	{r7, lr}
 800e662:	b084      	sub	sp, #16
 800e664:	af00      	add	r7, sp, #0
 800e666:	6078      	str	r0, [r7, #4]
 800e668:	687b      	ldr	r3, [r7, #4]
 800e66a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e66e:	687b      	ldr	r3, [r7, #4]
 800e670:	32b0      	adds	r2, #176	@ 0xb0
 800e672:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e676:	60bb      	str	r3, [r7, #8]
 800e678:	2301      	movs	r3, #1
 800e67a:	73fb      	strb	r3, [r7, #15]
 800e67c:	68bb      	ldr	r3, [r7, #8]
 800e67e:	2b00      	cmp	r3, #0
 800e680:	d101      	bne.n	800e686 <USBD_CDC_TransmitPacket+0x26>
 800e682:	2303      	movs	r3, #3
 800e684:	e025      	b.n	800e6d2 <USBD_CDC_TransmitPacket+0x72>
 800e686:	68bb      	ldr	r3, [r7, #8]
 800e688:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 800e68c:	2b00      	cmp	r3, #0
 800e68e:	d11f      	bne.n	800e6d0 <USBD_CDC_TransmitPacket+0x70>
 800e690:	68bb      	ldr	r3, [r7, #8]
 800e692:	2201      	movs	r2, #1
 800e694:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800e698:	4b10      	ldr	r3, [pc, #64]	@ (800e6dc <USBD_CDC_TransmitPacket+0x7c>)
 800e69a:	781b      	ldrb	r3, [r3, #0]
 800e69c:	f003 020f 	and.w	r2, r3, #15
 800e6a0:	68bb      	ldr	r3, [r7, #8]
 800e6a2:	f8d3 1210 	ldr.w	r1, [r3, #528]	@ 0x210
 800e6a6:	6878      	ldr	r0, [r7, #4]
 800e6a8:	4613      	mov	r3, r2
 800e6aa:	009b      	lsls	r3, r3, #2
 800e6ac:	4413      	add	r3, r2
 800e6ae:	009b      	lsls	r3, r3, #2
 800e6b0:	4403      	add	r3, r0
 800e6b2:	3318      	adds	r3, #24
 800e6b4:	6019      	str	r1, [r3, #0]
 800e6b6:	4b09      	ldr	r3, [pc, #36]	@ (800e6dc <USBD_CDC_TransmitPacket+0x7c>)
 800e6b8:	7819      	ldrb	r1, [r3, #0]
 800e6ba:	68bb      	ldr	r3, [r7, #8]
 800e6bc:	f8d3 2208 	ldr.w	r2, [r3, #520]	@ 0x208
 800e6c0:	68bb      	ldr	r3, [r7, #8]
 800e6c2:	f8d3 3210 	ldr.w	r3, [r3, #528]	@ 0x210
 800e6c6:	6878      	ldr	r0, [r7, #4]
 800e6c8:	f002 f813 	bl	80106f2 <USBD_LL_Transmit>
 800e6cc:	2300      	movs	r3, #0
 800e6ce:	73fb      	strb	r3, [r7, #15]
 800e6d0:	7bfb      	ldrb	r3, [r7, #15]
 800e6d2:	4618      	mov	r0, r3
 800e6d4:	3710      	adds	r7, #16
 800e6d6:	46bd      	mov	sp, r7
 800e6d8:	bd80      	pop	{r7, pc}
 800e6da:	bf00      	nop
 800e6dc:	24000127 	.word	0x24000127

0800e6e0 <USBD_CDC_ReceivePacket>:
 800e6e0:	b580      	push	{r7, lr}
 800e6e2:	b084      	sub	sp, #16
 800e6e4:	af00      	add	r7, sp, #0
 800e6e6:	6078      	str	r0, [r7, #4]
 800e6e8:	687b      	ldr	r3, [r7, #4]
 800e6ea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e6ee:	687b      	ldr	r3, [r7, #4]
 800e6f0:	32b0      	adds	r2, #176	@ 0xb0
 800e6f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e6f6:	60fb      	str	r3, [r7, #12]
 800e6f8:	687b      	ldr	r3, [r7, #4]
 800e6fa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e6fe:	687b      	ldr	r3, [r7, #4]
 800e700:	32b0      	adds	r2, #176	@ 0xb0
 800e702:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e706:	2b00      	cmp	r3, #0
 800e708:	d101      	bne.n	800e70e <USBD_CDC_ReceivePacket+0x2e>
 800e70a:	2303      	movs	r3, #3
 800e70c:	e018      	b.n	800e740 <USBD_CDC_ReceivePacket+0x60>
 800e70e:	687b      	ldr	r3, [r7, #4]
 800e710:	7c1b      	ldrb	r3, [r3, #16]
 800e712:	2b00      	cmp	r3, #0
 800e714:	d10a      	bne.n	800e72c <USBD_CDC_ReceivePacket+0x4c>
 800e716:	4b0c      	ldr	r3, [pc, #48]	@ (800e748 <USBD_CDC_ReceivePacket+0x68>)
 800e718:	7819      	ldrb	r1, [r3, #0]
 800e71a:	68fb      	ldr	r3, [r7, #12]
 800e71c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800e720:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800e724:	6878      	ldr	r0, [r7, #4]
 800e726:	f002 f805 	bl	8010734 <USBD_LL_PrepareReceive>
 800e72a:	e008      	b.n	800e73e <USBD_CDC_ReceivePacket+0x5e>
 800e72c:	4b06      	ldr	r3, [pc, #24]	@ (800e748 <USBD_CDC_ReceivePacket+0x68>)
 800e72e:	7819      	ldrb	r1, [r3, #0]
 800e730:	68fb      	ldr	r3, [r7, #12]
 800e732:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800e736:	2340      	movs	r3, #64	@ 0x40
 800e738:	6878      	ldr	r0, [r7, #4]
 800e73a:	f001 fffb 	bl	8010734 <USBD_LL_PrepareReceive>
 800e73e:	2300      	movs	r3, #0
 800e740:	4618      	mov	r0, r3
 800e742:	3710      	adds	r7, #16
 800e744:	46bd      	mov	sp, r7
 800e746:	bd80      	pop	{r7, pc}
 800e748:	24000128 	.word	0x24000128

0800e74c <USBD_Init>:
 800e74c:	b580      	push	{r7, lr}
 800e74e:	b086      	sub	sp, #24
 800e750:	af00      	add	r7, sp, #0
 800e752:	60f8      	str	r0, [r7, #12]
 800e754:	60b9      	str	r1, [r7, #8]
 800e756:	4613      	mov	r3, r2
 800e758:	71fb      	strb	r3, [r7, #7]
 800e75a:	68fb      	ldr	r3, [r7, #12]
 800e75c:	2b00      	cmp	r3, #0
 800e75e:	d101      	bne.n	800e764 <USBD_Init+0x18>
 800e760:	2303      	movs	r3, #3
 800e762:	e01f      	b.n	800e7a4 <USBD_Init+0x58>
 800e764:	68fb      	ldr	r3, [r7, #12]
 800e766:	2200      	movs	r2, #0
 800e768:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 800e76c:	68fb      	ldr	r3, [r7, #12]
 800e76e:	2200      	movs	r2, #0
 800e770:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 800e774:	68fb      	ldr	r3, [r7, #12]
 800e776:	2200      	movs	r2, #0
 800e778:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 800e77c:	68bb      	ldr	r3, [r7, #8]
 800e77e:	2b00      	cmp	r3, #0
 800e780:	d003      	beq.n	800e78a <USBD_Init+0x3e>
 800e782:	68fb      	ldr	r3, [r7, #12]
 800e784:	68ba      	ldr	r2, [r7, #8]
 800e786:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 800e78a:	68fb      	ldr	r3, [r7, #12]
 800e78c:	2201      	movs	r2, #1
 800e78e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800e792:	68fb      	ldr	r3, [r7, #12]
 800e794:	79fa      	ldrb	r2, [r7, #7]
 800e796:	701a      	strb	r2, [r3, #0]
 800e798:	68f8      	ldr	r0, [r7, #12]
 800e79a:	f001 fe71 	bl	8010480 <USBD_LL_Init>
 800e79e:	4603      	mov	r3, r0
 800e7a0:	75fb      	strb	r3, [r7, #23]
 800e7a2:	7dfb      	ldrb	r3, [r7, #23]
 800e7a4:	4618      	mov	r0, r3
 800e7a6:	3718      	adds	r7, #24
 800e7a8:	46bd      	mov	sp, r7
 800e7aa:	bd80      	pop	{r7, pc}

0800e7ac <USBD_RegisterClass>:
 800e7ac:	b580      	push	{r7, lr}
 800e7ae:	b084      	sub	sp, #16
 800e7b0:	af00      	add	r7, sp, #0
 800e7b2:	6078      	str	r0, [r7, #4]
 800e7b4:	6039      	str	r1, [r7, #0]
 800e7b6:	2300      	movs	r3, #0
 800e7b8:	81fb      	strh	r3, [r7, #14]
 800e7ba:	683b      	ldr	r3, [r7, #0]
 800e7bc:	2b00      	cmp	r3, #0
 800e7be:	d101      	bne.n	800e7c4 <USBD_RegisterClass+0x18>
 800e7c0:	2303      	movs	r3, #3
 800e7c2:	e025      	b.n	800e810 <USBD_RegisterClass+0x64>
 800e7c4:	687b      	ldr	r3, [r7, #4]
 800e7c6:	683a      	ldr	r2, [r7, #0]
 800e7c8:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 800e7cc:	687b      	ldr	r3, [r7, #4]
 800e7ce:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e7d2:	687b      	ldr	r3, [r7, #4]
 800e7d4:	32ae      	adds	r2, #174	@ 0xae
 800e7d6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e7da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e7dc:	2b00      	cmp	r3, #0
 800e7de:	d00f      	beq.n	800e800 <USBD_RegisterClass+0x54>
 800e7e0:	687b      	ldr	r3, [r7, #4]
 800e7e2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800e7e6:	687b      	ldr	r3, [r7, #4]
 800e7e8:	32ae      	adds	r2, #174	@ 0xae
 800e7ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e7ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e7f0:	f107 020e 	add.w	r2, r7, #14
 800e7f4:	4610      	mov	r0, r2
 800e7f6:	4798      	blx	r3
 800e7f8:	4602      	mov	r2, r0
 800e7fa:	687b      	ldr	r3, [r7, #4]
 800e7fc:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 800e806:	1c5a      	adds	r2, r3, #1
 800e808:	687b      	ldr	r3, [r7, #4]
 800e80a:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 800e80e:	2300      	movs	r3, #0
 800e810:	4618      	mov	r0, r3
 800e812:	3710      	adds	r7, #16
 800e814:	46bd      	mov	sp, r7
 800e816:	bd80      	pop	{r7, pc}

0800e818 <USBD_Start>:
 800e818:	b580      	push	{r7, lr}
 800e81a:	b082      	sub	sp, #8
 800e81c:	af00      	add	r7, sp, #0
 800e81e:	6078      	str	r0, [r7, #4]
 800e820:	6878      	ldr	r0, [r7, #4]
 800e822:	f001 fe7d 	bl	8010520 <USBD_LL_Start>
 800e826:	4603      	mov	r3, r0
 800e828:	4618      	mov	r0, r3
 800e82a:	3708      	adds	r7, #8
 800e82c:	46bd      	mov	sp, r7
 800e82e:	bd80      	pop	{r7, pc}

0800e830 <USBD_RunTestMode>:
 800e830:	b480      	push	{r7}
 800e832:	b083      	sub	sp, #12
 800e834:	af00      	add	r7, sp, #0
 800e836:	6078      	str	r0, [r7, #4]
 800e838:	2300      	movs	r3, #0
 800e83a:	4618      	mov	r0, r3
 800e83c:	370c      	adds	r7, #12
 800e83e:	46bd      	mov	sp, r7
 800e840:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e844:	4770      	bx	lr

0800e846 <USBD_SetClassConfig>:
 800e846:	b580      	push	{r7, lr}
 800e848:	b084      	sub	sp, #16
 800e84a:	af00      	add	r7, sp, #0
 800e84c:	6078      	str	r0, [r7, #4]
 800e84e:	460b      	mov	r3, r1
 800e850:	70fb      	strb	r3, [r7, #3]
 800e852:	2300      	movs	r3, #0
 800e854:	73fb      	strb	r3, [r7, #15]
 800e856:	687b      	ldr	r3, [r7, #4]
 800e858:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800e85c:	2b00      	cmp	r3, #0
 800e85e:	d009      	beq.n	800e874 <USBD_SetClassConfig+0x2e>
 800e860:	687b      	ldr	r3, [r7, #4]
 800e862:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800e866:	681b      	ldr	r3, [r3, #0]
 800e868:	78fa      	ldrb	r2, [r7, #3]
 800e86a:	4611      	mov	r1, r2
 800e86c:	6878      	ldr	r0, [r7, #4]
 800e86e:	4798      	blx	r3
 800e870:	4603      	mov	r3, r0
 800e872:	73fb      	strb	r3, [r7, #15]
 800e874:	7bfb      	ldrb	r3, [r7, #15]
 800e876:	4618      	mov	r0, r3
 800e878:	3710      	adds	r7, #16
 800e87a:	46bd      	mov	sp, r7
 800e87c:	bd80      	pop	{r7, pc}

0800e87e <USBD_ClrClassConfig>:
 800e87e:	b580      	push	{r7, lr}
 800e880:	b084      	sub	sp, #16
 800e882:	af00      	add	r7, sp, #0
 800e884:	6078      	str	r0, [r7, #4]
 800e886:	460b      	mov	r3, r1
 800e888:	70fb      	strb	r3, [r7, #3]
 800e88a:	2300      	movs	r3, #0
 800e88c:	73fb      	strb	r3, [r7, #15]
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800e894:	685b      	ldr	r3, [r3, #4]
 800e896:	78fa      	ldrb	r2, [r7, #3]
 800e898:	4611      	mov	r1, r2
 800e89a:	6878      	ldr	r0, [r7, #4]
 800e89c:	4798      	blx	r3
 800e89e:	4603      	mov	r3, r0
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d001      	beq.n	800e8a8 <USBD_ClrClassConfig+0x2a>
 800e8a4:	2303      	movs	r3, #3
 800e8a6:	73fb      	strb	r3, [r7, #15]
 800e8a8:	7bfb      	ldrb	r3, [r7, #15]
 800e8aa:	4618      	mov	r0, r3
 800e8ac:	3710      	adds	r7, #16
 800e8ae:	46bd      	mov	sp, r7
 800e8b0:	bd80      	pop	{r7, pc}

0800e8b2 <USBD_LL_SetupStage>:
 800e8b2:	b580      	push	{r7, lr}
 800e8b4:	b084      	sub	sp, #16
 800e8b6:	af00      	add	r7, sp, #0
 800e8b8:	6078      	str	r0, [r7, #4]
 800e8ba:	6039      	str	r1, [r7, #0]
 800e8bc:	687b      	ldr	r3, [r7, #4]
 800e8be:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800e8c2:	6839      	ldr	r1, [r7, #0]
 800e8c4:	4618      	mov	r0, r3
 800e8c6:	f001 f936 	bl	800fb36 <USBD_ParseSetupRequest>
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	2201      	movs	r2, #1
 800e8ce:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800e8d2:	687b      	ldr	r3, [r7, #4]
 800e8d4:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 800e8d8:	461a      	mov	r2, r3
 800e8da:	687b      	ldr	r3, [r7, #4]
 800e8dc:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 800e8e0:	687b      	ldr	r3, [r7, #4]
 800e8e2:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 800e8e6:	f003 031f 	and.w	r3, r3, #31
 800e8ea:	2b02      	cmp	r3, #2
 800e8ec:	d01a      	beq.n	800e924 <USBD_LL_SetupStage+0x72>
 800e8ee:	2b02      	cmp	r3, #2
 800e8f0:	d822      	bhi.n	800e938 <USBD_LL_SetupStage+0x86>
 800e8f2:	2b00      	cmp	r3, #0
 800e8f4:	d002      	beq.n	800e8fc <USBD_LL_SetupStage+0x4a>
 800e8f6:	2b01      	cmp	r3, #1
 800e8f8:	d00a      	beq.n	800e910 <USBD_LL_SetupStage+0x5e>
 800e8fa:	e01d      	b.n	800e938 <USBD_LL_SetupStage+0x86>
 800e8fc:	687b      	ldr	r3, [r7, #4]
 800e8fe:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800e902:	4619      	mov	r1, r3
 800e904:	6878      	ldr	r0, [r7, #4]
 800e906:	f000 fb63 	bl	800efd0 <USBD_StdDevReq>
 800e90a:	4603      	mov	r3, r0
 800e90c:	73fb      	strb	r3, [r7, #15]
 800e90e:	e020      	b.n	800e952 <USBD_LL_SetupStage+0xa0>
 800e910:	687b      	ldr	r3, [r7, #4]
 800e912:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800e916:	4619      	mov	r1, r3
 800e918:	6878      	ldr	r0, [r7, #4]
 800e91a:	f000 fbcb 	bl	800f0b4 <USBD_StdItfReq>
 800e91e:	4603      	mov	r3, r0
 800e920:	73fb      	strb	r3, [r7, #15]
 800e922:	e016      	b.n	800e952 <USBD_LL_SetupStage+0xa0>
 800e924:	687b      	ldr	r3, [r7, #4]
 800e926:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 800e92a:	4619      	mov	r1, r3
 800e92c:	6878      	ldr	r0, [r7, #4]
 800e92e:	f000 fc2d 	bl	800f18c <USBD_StdEPReq>
 800e932:	4603      	mov	r3, r0
 800e934:	73fb      	strb	r3, [r7, #15]
 800e936:	e00c      	b.n	800e952 <USBD_LL_SetupStage+0xa0>
 800e938:	687b      	ldr	r3, [r7, #4]
 800e93a:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 800e93e:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800e942:	b2db      	uxtb	r3, r3
 800e944:	4619      	mov	r1, r3
 800e946:	6878      	ldr	r0, [r7, #4]
 800e948:	f001 fe4a 	bl	80105e0 <USBD_LL_StallEP>
 800e94c:	4603      	mov	r3, r0
 800e94e:	73fb      	strb	r3, [r7, #15]
 800e950:	bf00      	nop
 800e952:	7bfb      	ldrb	r3, [r7, #15]
 800e954:	4618      	mov	r0, r3
 800e956:	3710      	adds	r7, #16
 800e958:	46bd      	mov	sp, r7
 800e95a:	bd80      	pop	{r7, pc}

0800e95c <USBD_LL_DataOutStage>:
 800e95c:	b580      	push	{r7, lr}
 800e95e:	b086      	sub	sp, #24
 800e960:	af00      	add	r7, sp, #0
 800e962:	60f8      	str	r0, [r7, #12]
 800e964:	460b      	mov	r3, r1
 800e966:	607a      	str	r2, [r7, #4]
 800e968:	72fb      	strb	r3, [r7, #11]
 800e96a:	2300      	movs	r3, #0
 800e96c:	75fb      	strb	r3, [r7, #23]
 800e96e:	7afb      	ldrb	r3, [r7, #11]
 800e970:	2b00      	cmp	r3, #0
 800e972:	d16e      	bne.n	800ea52 <USBD_LL_DataOutStage+0xf6>
 800e974:	68fb      	ldr	r3, [r7, #12]
 800e976:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 800e97a:	613b      	str	r3, [r7, #16]
 800e97c:	68fb      	ldr	r3, [r7, #12]
 800e97e:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800e982:	2b03      	cmp	r3, #3
 800e984:	f040 8098 	bne.w	800eab8 <USBD_LL_DataOutStage+0x15c>
 800e988:	693b      	ldr	r3, [r7, #16]
 800e98a:	689a      	ldr	r2, [r3, #8]
 800e98c:	693b      	ldr	r3, [r7, #16]
 800e98e:	68db      	ldr	r3, [r3, #12]
 800e990:	429a      	cmp	r2, r3
 800e992:	d913      	bls.n	800e9bc <USBD_LL_DataOutStage+0x60>
 800e994:	693b      	ldr	r3, [r7, #16]
 800e996:	689a      	ldr	r2, [r3, #8]
 800e998:	693b      	ldr	r3, [r7, #16]
 800e99a:	68db      	ldr	r3, [r3, #12]
 800e99c:	1ad2      	subs	r2, r2, r3
 800e99e:	693b      	ldr	r3, [r7, #16]
 800e9a0:	609a      	str	r2, [r3, #8]
 800e9a2:	693b      	ldr	r3, [r7, #16]
 800e9a4:	68da      	ldr	r2, [r3, #12]
 800e9a6:	693b      	ldr	r3, [r7, #16]
 800e9a8:	689b      	ldr	r3, [r3, #8]
 800e9aa:	4293      	cmp	r3, r2
 800e9ac:	bf28      	it	cs
 800e9ae:	4613      	movcs	r3, r2
 800e9b0:	461a      	mov	r2, r3
 800e9b2:	6879      	ldr	r1, [r7, #4]
 800e9b4:	68f8      	ldr	r0, [r7, #12]
 800e9b6:	f001 f9be 	bl	800fd36 <USBD_CtlContinueRx>
 800e9ba:	e07d      	b.n	800eab8 <USBD_LL_DataOutStage+0x15c>
 800e9bc:	68fb      	ldr	r3, [r7, #12]
 800e9be:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 800e9c2:	f003 031f 	and.w	r3, r3, #31
 800e9c6:	2b02      	cmp	r3, #2
 800e9c8:	d014      	beq.n	800e9f4 <USBD_LL_DataOutStage+0x98>
 800e9ca:	2b02      	cmp	r3, #2
 800e9cc:	d81d      	bhi.n	800ea0a <USBD_LL_DataOutStage+0xae>
 800e9ce:	2b00      	cmp	r3, #0
 800e9d0:	d002      	beq.n	800e9d8 <USBD_LL_DataOutStage+0x7c>
 800e9d2:	2b01      	cmp	r3, #1
 800e9d4:	d003      	beq.n	800e9de <USBD_LL_DataOutStage+0x82>
 800e9d6:	e018      	b.n	800ea0a <USBD_LL_DataOutStage+0xae>
 800e9d8:	2300      	movs	r3, #0
 800e9da:	75bb      	strb	r3, [r7, #22]
 800e9dc:	e018      	b.n	800ea10 <USBD_LL_DataOutStage+0xb4>
 800e9de:	68fb      	ldr	r3, [r7, #12]
 800e9e0:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 800e9e4:	b2db      	uxtb	r3, r3
 800e9e6:	4619      	mov	r1, r3
 800e9e8:	68f8      	ldr	r0, [r7, #12]
 800e9ea:	f000 fa64 	bl	800eeb6 <USBD_CoreFindIF>
 800e9ee:	4603      	mov	r3, r0
 800e9f0:	75bb      	strb	r3, [r7, #22]
 800e9f2:	e00d      	b.n	800ea10 <USBD_LL_DataOutStage+0xb4>
 800e9f4:	68fb      	ldr	r3, [r7, #12]
 800e9f6:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 800e9fa:	b2db      	uxtb	r3, r3
 800e9fc:	4619      	mov	r1, r3
 800e9fe:	68f8      	ldr	r0, [r7, #12]
 800ea00:	f000 fa66 	bl	800eed0 <USBD_CoreFindEP>
 800ea04:	4603      	mov	r3, r0
 800ea06:	75bb      	strb	r3, [r7, #22]
 800ea08:	e002      	b.n	800ea10 <USBD_LL_DataOutStage+0xb4>
 800ea0a:	2300      	movs	r3, #0
 800ea0c:	75bb      	strb	r3, [r7, #22]
 800ea0e:	bf00      	nop
 800ea10:	7dbb      	ldrb	r3, [r7, #22]
 800ea12:	2b00      	cmp	r3, #0
 800ea14:	d119      	bne.n	800ea4a <USBD_LL_DataOutStage+0xee>
 800ea16:	68fb      	ldr	r3, [r7, #12]
 800ea18:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ea1c:	b2db      	uxtb	r3, r3
 800ea1e:	2b03      	cmp	r3, #3
 800ea20:	d113      	bne.n	800ea4a <USBD_LL_DataOutStage+0xee>
 800ea22:	7dba      	ldrb	r2, [r7, #22]
 800ea24:	68fb      	ldr	r3, [r7, #12]
 800ea26:	32ae      	adds	r2, #174	@ 0xae
 800ea28:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ea2c:	691b      	ldr	r3, [r3, #16]
 800ea2e:	2b00      	cmp	r3, #0
 800ea30:	d00b      	beq.n	800ea4a <USBD_LL_DataOutStage+0xee>
 800ea32:	7dba      	ldrb	r2, [r7, #22]
 800ea34:	68fb      	ldr	r3, [r7, #12]
 800ea36:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800ea3a:	7dba      	ldrb	r2, [r7, #22]
 800ea3c:	68fb      	ldr	r3, [r7, #12]
 800ea3e:	32ae      	adds	r2, #174	@ 0xae
 800ea40:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ea44:	691b      	ldr	r3, [r3, #16]
 800ea46:	68f8      	ldr	r0, [r7, #12]
 800ea48:	4798      	blx	r3
 800ea4a:	68f8      	ldr	r0, [r7, #12]
 800ea4c:	f001 f984 	bl	800fd58 <USBD_CtlSendStatus>
 800ea50:	e032      	b.n	800eab8 <USBD_LL_DataOutStage+0x15c>
 800ea52:	7afb      	ldrb	r3, [r7, #11]
 800ea54:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800ea58:	b2db      	uxtb	r3, r3
 800ea5a:	4619      	mov	r1, r3
 800ea5c:	68f8      	ldr	r0, [r7, #12]
 800ea5e:	f000 fa37 	bl	800eed0 <USBD_CoreFindEP>
 800ea62:	4603      	mov	r3, r0
 800ea64:	75bb      	strb	r3, [r7, #22]
 800ea66:	7dbb      	ldrb	r3, [r7, #22]
 800ea68:	2bff      	cmp	r3, #255	@ 0xff
 800ea6a:	d025      	beq.n	800eab8 <USBD_LL_DataOutStage+0x15c>
 800ea6c:	7dbb      	ldrb	r3, [r7, #22]
 800ea6e:	2b00      	cmp	r3, #0
 800ea70:	d122      	bne.n	800eab8 <USBD_LL_DataOutStage+0x15c>
 800ea72:	68fb      	ldr	r3, [r7, #12]
 800ea74:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ea78:	b2db      	uxtb	r3, r3
 800ea7a:	2b03      	cmp	r3, #3
 800ea7c:	d117      	bne.n	800eaae <USBD_LL_DataOutStage+0x152>
 800ea7e:	7dba      	ldrb	r2, [r7, #22]
 800ea80:	68fb      	ldr	r3, [r7, #12]
 800ea82:	32ae      	adds	r2, #174	@ 0xae
 800ea84:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ea88:	699b      	ldr	r3, [r3, #24]
 800ea8a:	2b00      	cmp	r3, #0
 800ea8c:	d00f      	beq.n	800eaae <USBD_LL_DataOutStage+0x152>
 800ea8e:	7dba      	ldrb	r2, [r7, #22]
 800ea90:	68fb      	ldr	r3, [r7, #12]
 800ea92:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800ea96:	7dba      	ldrb	r2, [r7, #22]
 800ea98:	68fb      	ldr	r3, [r7, #12]
 800ea9a:	32ae      	adds	r2, #174	@ 0xae
 800ea9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800eaa0:	699b      	ldr	r3, [r3, #24]
 800eaa2:	7afa      	ldrb	r2, [r7, #11]
 800eaa4:	4611      	mov	r1, r2
 800eaa6:	68f8      	ldr	r0, [r7, #12]
 800eaa8:	4798      	blx	r3
 800eaaa:	4603      	mov	r3, r0
 800eaac:	75fb      	strb	r3, [r7, #23]
 800eaae:	7dfb      	ldrb	r3, [r7, #23]
 800eab0:	2b00      	cmp	r3, #0
 800eab2:	d001      	beq.n	800eab8 <USBD_LL_DataOutStage+0x15c>
 800eab4:	7dfb      	ldrb	r3, [r7, #23]
 800eab6:	e000      	b.n	800eaba <USBD_LL_DataOutStage+0x15e>
 800eab8:	2300      	movs	r3, #0
 800eaba:	4618      	mov	r0, r3
 800eabc:	3718      	adds	r7, #24
 800eabe:	46bd      	mov	sp, r7
 800eac0:	bd80      	pop	{r7, pc}

0800eac2 <USBD_LL_DataInStage>:
 800eac2:	b580      	push	{r7, lr}
 800eac4:	b086      	sub	sp, #24
 800eac6:	af00      	add	r7, sp, #0
 800eac8:	60f8      	str	r0, [r7, #12]
 800eaca:	460b      	mov	r3, r1
 800eacc:	607a      	str	r2, [r7, #4]
 800eace:	72fb      	strb	r3, [r7, #11]
 800ead0:	7afb      	ldrb	r3, [r7, #11]
 800ead2:	2b00      	cmp	r3, #0
 800ead4:	d16f      	bne.n	800ebb6 <USBD_LL_DataInStage+0xf4>
 800ead6:	68fb      	ldr	r3, [r7, #12]
 800ead8:	3314      	adds	r3, #20
 800eada:	613b      	str	r3, [r7, #16]
 800eadc:	68fb      	ldr	r3, [r7, #12]
 800eade:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 800eae2:	2b02      	cmp	r3, #2
 800eae4:	d15a      	bne.n	800eb9c <USBD_LL_DataInStage+0xda>
 800eae6:	693b      	ldr	r3, [r7, #16]
 800eae8:	689a      	ldr	r2, [r3, #8]
 800eaea:	693b      	ldr	r3, [r7, #16]
 800eaec:	68db      	ldr	r3, [r3, #12]
 800eaee:	429a      	cmp	r2, r3
 800eaf0:	d914      	bls.n	800eb1c <USBD_LL_DataInStage+0x5a>
 800eaf2:	693b      	ldr	r3, [r7, #16]
 800eaf4:	689a      	ldr	r2, [r3, #8]
 800eaf6:	693b      	ldr	r3, [r7, #16]
 800eaf8:	68db      	ldr	r3, [r3, #12]
 800eafa:	1ad2      	subs	r2, r2, r3
 800eafc:	693b      	ldr	r3, [r7, #16]
 800eafe:	609a      	str	r2, [r3, #8]
 800eb00:	693b      	ldr	r3, [r7, #16]
 800eb02:	689b      	ldr	r3, [r3, #8]
 800eb04:	461a      	mov	r2, r3
 800eb06:	6879      	ldr	r1, [r7, #4]
 800eb08:	68f8      	ldr	r0, [r7, #12]
 800eb0a:	f001 f8e6 	bl	800fcda <USBD_CtlContinueSendData>
 800eb0e:	2300      	movs	r3, #0
 800eb10:	2200      	movs	r2, #0
 800eb12:	2100      	movs	r1, #0
 800eb14:	68f8      	ldr	r0, [r7, #12]
 800eb16:	f001 fe0d 	bl	8010734 <USBD_LL_PrepareReceive>
 800eb1a:	e03f      	b.n	800eb9c <USBD_LL_DataInStage+0xda>
 800eb1c:	693b      	ldr	r3, [r7, #16]
 800eb1e:	68da      	ldr	r2, [r3, #12]
 800eb20:	693b      	ldr	r3, [r7, #16]
 800eb22:	689b      	ldr	r3, [r3, #8]
 800eb24:	429a      	cmp	r2, r3
 800eb26:	d11c      	bne.n	800eb62 <USBD_LL_DataInStage+0xa0>
 800eb28:	693b      	ldr	r3, [r7, #16]
 800eb2a:	685a      	ldr	r2, [r3, #4]
 800eb2c:	693b      	ldr	r3, [r7, #16]
 800eb2e:	68db      	ldr	r3, [r3, #12]
 800eb30:	429a      	cmp	r2, r3
 800eb32:	d316      	bcc.n	800eb62 <USBD_LL_DataInStage+0xa0>
 800eb34:	693b      	ldr	r3, [r7, #16]
 800eb36:	685a      	ldr	r2, [r3, #4]
 800eb38:	68fb      	ldr	r3, [r7, #12]
 800eb3a:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 800eb3e:	429a      	cmp	r2, r3
 800eb40:	d20f      	bcs.n	800eb62 <USBD_LL_DataInStage+0xa0>
 800eb42:	2200      	movs	r2, #0
 800eb44:	2100      	movs	r1, #0
 800eb46:	68f8      	ldr	r0, [r7, #12]
 800eb48:	f001 f8c7 	bl	800fcda <USBD_CtlContinueSendData>
 800eb4c:	68fb      	ldr	r3, [r7, #12]
 800eb4e:	2200      	movs	r2, #0
 800eb50:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 800eb54:	2300      	movs	r3, #0
 800eb56:	2200      	movs	r2, #0
 800eb58:	2100      	movs	r1, #0
 800eb5a:	68f8      	ldr	r0, [r7, #12]
 800eb5c:	f001 fdea 	bl	8010734 <USBD_LL_PrepareReceive>
 800eb60:	e01c      	b.n	800eb9c <USBD_LL_DataInStage+0xda>
 800eb62:	68fb      	ldr	r3, [r7, #12]
 800eb64:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800eb68:	b2db      	uxtb	r3, r3
 800eb6a:	2b03      	cmp	r3, #3
 800eb6c:	d10f      	bne.n	800eb8e <USBD_LL_DataInStage+0xcc>
 800eb6e:	68fb      	ldr	r3, [r7, #12]
 800eb70:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800eb74:	68db      	ldr	r3, [r3, #12]
 800eb76:	2b00      	cmp	r3, #0
 800eb78:	d009      	beq.n	800eb8e <USBD_LL_DataInStage+0xcc>
 800eb7a:	68fb      	ldr	r3, [r7, #12]
 800eb7c:	2200      	movs	r2, #0
 800eb7e:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800eb82:	68fb      	ldr	r3, [r7, #12]
 800eb84:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800eb88:	68db      	ldr	r3, [r3, #12]
 800eb8a:	68f8      	ldr	r0, [r7, #12]
 800eb8c:	4798      	blx	r3
 800eb8e:	2180      	movs	r1, #128	@ 0x80
 800eb90:	68f8      	ldr	r0, [r7, #12]
 800eb92:	f001 fd25 	bl	80105e0 <USBD_LL_StallEP>
 800eb96:	68f8      	ldr	r0, [r7, #12]
 800eb98:	f001 f8f1 	bl	800fd7e <USBD_CtlReceiveStatus>
 800eb9c:	68fb      	ldr	r3, [r7, #12]
 800eb9e:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d03a      	beq.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800eba6:	68f8      	ldr	r0, [r7, #12]
 800eba8:	f7ff fe42 	bl	800e830 <USBD_RunTestMode>
 800ebac:	68fb      	ldr	r3, [r7, #12]
 800ebae:	2200      	movs	r2, #0
 800ebb0:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 800ebb4:	e032      	b.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ebb6:	7afb      	ldrb	r3, [r7, #11]
 800ebb8:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800ebbc:	b2db      	uxtb	r3, r3
 800ebbe:	4619      	mov	r1, r3
 800ebc0:	68f8      	ldr	r0, [r7, #12]
 800ebc2:	f000 f985 	bl	800eed0 <USBD_CoreFindEP>
 800ebc6:	4603      	mov	r3, r0
 800ebc8:	75fb      	strb	r3, [r7, #23]
 800ebca:	7dfb      	ldrb	r3, [r7, #23]
 800ebcc:	2bff      	cmp	r3, #255	@ 0xff
 800ebce:	d025      	beq.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ebd0:	7dfb      	ldrb	r3, [r7, #23]
 800ebd2:	2b00      	cmp	r3, #0
 800ebd4:	d122      	bne.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ebd6:	68fb      	ldr	r3, [r7, #12]
 800ebd8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ebdc:	b2db      	uxtb	r3, r3
 800ebde:	2b03      	cmp	r3, #3
 800ebe0:	d11c      	bne.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ebe2:	7dfa      	ldrb	r2, [r7, #23]
 800ebe4:	68fb      	ldr	r3, [r7, #12]
 800ebe6:	32ae      	adds	r2, #174	@ 0xae
 800ebe8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ebec:	695b      	ldr	r3, [r3, #20]
 800ebee:	2b00      	cmp	r3, #0
 800ebf0:	d014      	beq.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ebf2:	7dfa      	ldrb	r2, [r7, #23]
 800ebf4:	68fb      	ldr	r3, [r7, #12]
 800ebf6:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800ebfa:	7dfa      	ldrb	r2, [r7, #23]
 800ebfc:	68fb      	ldr	r3, [r7, #12]
 800ebfe:	32ae      	adds	r2, #174	@ 0xae
 800ec00:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ec04:	695b      	ldr	r3, [r3, #20]
 800ec06:	7afa      	ldrb	r2, [r7, #11]
 800ec08:	4611      	mov	r1, r2
 800ec0a:	68f8      	ldr	r0, [r7, #12]
 800ec0c:	4798      	blx	r3
 800ec0e:	4603      	mov	r3, r0
 800ec10:	75bb      	strb	r3, [r7, #22]
 800ec12:	7dbb      	ldrb	r3, [r7, #22]
 800ec14:	2b00      	cmp	r3, #0
 800ec16:	d001      	beq.n	800ec1c <USBD_LL_DataInStage+0x15a>
 800ec18:	7dbb      	ldrb	r3, [r7, #22]
 800ec1a:	e000      	b.n	800ec1e <USBD_LL_DataInStage+0x15c>
 800ec1c:	2300      	movs	r3, #0
 800ec1e:	4618      	mov	r0, r3
 800ec20:	3718      	adds	r7, #24
 800ec22:	46bd      	mov	sp, r7
 800ec24:	bd80      	pop	{r7, pc}

0800ec26 <USBD_LL_Reset>:
 800ec26:	b580      	push	{r7, lr}
 800ec28:	b084      	sub	sp, #16
 800ec2a:	af00      	add	r7, sp, #0
 800ec2c:	6078      	str	r0, [r7, #4]
 800ec2e:	2300      	movs	r3, #0
 800ec30:	73fb      	strb	r3, [r7, #15]
 800ec32:	687b      	ldr	r3, [r7, #4]
 800ec34:	2201      	movs	r2, #1
 800ec36:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800ec3a:	687b      	ldr	r3, [r7, #4]
 800ec3c:	2200      	movs	r2, #0
 800ec3e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800ec42:	687b      	ldr	r3, [r7, #4]
 800ec44:	2200      	movs	r2, #0
 800ec46:	605a      	str	r2, [r3, #4]
 800ec48:	687b      	ldr	r3, [r7, #4]
 800ec4a:	2200      	movs	r2, #0
 800ec4c:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 800ec50:	687b      	ldr	r3, [r7, #4]
 800ec52:	2200      	movs	r2, #0
 800ec54:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 800ec58:	687b      	ldr	r3, [r7, #4]
 800ec5a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ec5e:	2b00      	cmp	r3, #0
 800ec60:	d014      	beq.n	800ec8c <USBD_LL_Reset+0x66>
 800ec62:	687b      	ldr	r3, [r7, #4]
 800ec64:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ec68:	685b      	ldr	r3, [r3, #4]
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	d00e      	beq.n	800ec8c <USBD_LL_Reset+0x66>
 800ec6e:	687b      	ldr	r3, [r7, #4]
 800ec70:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ec74:	685b      	ldr	r3, [r3, #4]
 800ec76:	687a      	ldr	r2, [r7, #4]
 800ec78:	6852      	ldr	r2, [r2, #4]
 800ec7a:	b2d2      	uxtb	r2, r2
 800ec7c:	4611      	mov	r1, r2
 800ec7e:	6878      	ldr	r0, [r7, #4]
 800ec80:	4798      	blx	r3
 800ec82:	4603      	mov	r3, r0
 800ec84:	2b00      	cmp	r3, #0
 800ec86:	d001      	beq.n	800ec8c <USBD_LL_Reset+0x66>
 800ec88:	2303      	movs	r3, #3
 800ec8a:	73fb      	strb	r3, [r7, #15]
 800ec8c:	2340      	movs	r3, #64	@ 0x40
 800ec8e:	2200      	movs	r2, #0
 800ec90:	2100      	movs	r1, #0
 800ec92:	6878      	ldr	r0, [r7, #4]
 800ec94:	f001 fc5f 	bl	8010556 <USBD_LL_OpenEP>
 800ec98:	687b      	ldr	r3, [r7, #4]
 800ec9a:	2201      	movs	r2, #1
 800ec9c:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 800eca0:	687b      	ldr	r3, [r7, #4]
 800eca2:	2240      	movs	r2, #64	@ 0x40
 800eca4:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 800eca8:	2340      	movs	r3, #64	@ 0x40
 800ecaa:	2200      	movs	r2, #0
 800ecac:	2180      	movs	r1, #128	@ 0x80
 800ecae:	6878      	ldr	r0, [r7, #4]
 800ecb0:	f001 fc51 	bl	8010556 <USBD_LL_OpenEP>
 800ecb4:	687b      	ldr	r3, [r7, #4]
 800ecb6:	2201      	movs	r2, #1
 800ecb8:	849a      	strh	r2, [r3, #36]	@ 0x24
 800ecba:	687b      	ldr	r3, [r7, #4]
 800ecbc:	2240      	movs	r2, #64	@ 0x40
 800ecbe:	621a      	str	r2, [r3, #32]
 800ecc0:	7bfb      	ldrb	r3, [r7, #15]
 800ecc2:	4618      	mov	r0, r3
 800ecc4:	3710      	adds	r7, #16
 800ecc6:	46bd      	mov	sp, r7
 800ecc8:	bd80      	pop	{r7, pc}

0800ecca <USBD_LL_SetSpeed>:
 800ecca:	b480      	push	{r7}
 800eccc:	b083      	sub	sp, #12
 800ecce:	af00      	add	r7, sp, #0
 800ecd0:	6078      	str	r0, [r7, #4]
 800ecd2:	460b      	mov	r3, r1
 800ecd4:	70fb      	strb	r3, [r7, #3]
 800ecd6:	687b      	ldr	r3, [r7, #4]
 800ecd8:	78fa      	ldrb	r2, [r7, #3]
 800ecda:	741a      	strb	r2, [r3, #16]
 800ecdc:	2300      	movs	r3, #0
 800ecde:	4618      	mov	r0, r3
 800ece0:	370c      	adds	r7, #12
 800ece2:	46bd      	mov	sp, r7
 800ece4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ece8:	4770      	bx	lr

0800ecea <USBD_LL_Suspend>:
 800ecea:	b480      	push	{r7}
 800ecec:	b083      	sub	sp, #12
 800ecee:	af00      	add	r7, sp, #0
 800ecf0:	6078      	str	r0, [r7, #4]
 800ecf2:	687b      	ldr	r3, [r7, #4]
 800ecf4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ecf8:	b2db      	uxtb	r3, r3
 800ecfa:	2b04      	cmp	r3, #4
 800ecfc:	d006      	beq.n	800ed0c <USBD_LL_Suspend+0x22>
 800ecfe:	687b      	ldr	r3, [r7, #4]
 800ed00:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ed04:	b2da      	uxtb	r2, r3
 800ed06:	687b      	ldr	r3, [r7, #4]
 800ed08:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 800ed0c:	687b      	ldr	r3, [r7, #4]
 800ed0e:	2204      	movs	r2, #4
 800ed10:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800ed14:	2300      	movs	r3, #0
 800ed16:	4618      	mov	r0, r3
 800ed18:	370c      	adds	r7, #12
 800ed1a:	46bd      	mov	sp, r7
 800ed1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed20:	4770      	bx	lr

0800ed22 <USBD_LL_Resume>:
 800ed22:	b480      	push	{r7}
 800ed24:	b083      	sub	sp, #12
 800ed26:	af00      	add	r7, sp, #0
 800ed28:	6078      	str	r0, [r7, #4]
 800ed2a:	687b      	ldr	r3, [r7, #4]
 800ed2c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ed30:	b2db      	uxtb	r3, r3
 800ed32:	2b04      	cmp	r3, #4
 800ed34:	d106      	bne.n	800ed44 <USBD_LL_Resume+0x22>
 800ed36:	687b      	ldr	r3, [r7, #4]
 800ed38:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 800ed3c:	b2da      	uxtb	r2, r3
 800ed3e:	687b      	ldr	r3, [r7, #4]
 800ed40:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800ed44:	2300      	movs	r3, #0
 800ed46:	4618      	mov	r0, r3
 800ed48:	370c      	adds	r7, #12
 800ed4a:	46bd      	mov	sp, r7
 800ed4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed50:	4770      	bx	lr

0800ed52 <USBD_LL_SOF>:
 800ed52:	b580      	push	{r7, lr}
 800ed54:	b082      	sub	sp, #8
 800ed56:	af00      	add	r7, sp, #0
 800ed58:	6078      	str	r0, [r7, #4]
 800ed5a:	687b      	ldr	r3, [r7, #4]
 800ed5c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ed60:	b2db      	uxtb	r3, r3
 800ed62:	2b03      	cmp	r3, #3
 800ed64:	d110      	bne.n	800ed88 <USBD_LL_SOF+0x36>
 800ed66:	687b      	ldr	r3, [r7, #4]
 800ed68:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ed6c:	2b00      	cmp	r3, #0
 800ed6e:	d00b      	beq.n	800ed88 <USBD_LL_SOF+0x36>
 800ed70:	687b      	ldr	r3, [r7, #4]
 800ed72:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ed76:	69db      	ldr	r3, [r3, #28]
 800ed78:	2b00      	cmp	r3, #0
 800ed7a:	d005      	beq.n	800ed88 <USBD_LL_SOF+0x36>
 800ed7c:	687b      	ldr	r3, [r7, #4]
 800ed7e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ed82:	69db      	ldr	r3, [r3, #28]
 800ed84:	6878      	ldr	r0, [r7, #4]
 800ed86:	4798      	blx	r3
 800ed88:	2300      	movs	r3, #0
 800ed8a:	4618      	mov	r0, r3
 800ed8c:	3708      	adds	r7, #8
 800ed8e:	46bd      	mov	sp, r7
 800ed90:	bd80      	pop	{r7, pc}

0800ed92 <USBD_LL_IsoINIncomplete>:
 800ed92:	b580      	push	{r7, lr}
 800ed94:	b082      	sub	sp, #8
 800ed96:	af00      	add	r7, sp, #0
 800ed98:	6078      	str	r0, [r7, #4]
 800ed9a:	460b      	mov	r3, r1
 800ed9c:	70fb      	strb	r3, [r7, #3]
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800eda4:	687b      	ldr	r3, [r7, #4]
 800eda6:	32ae      	adds	r2, #174	@ 0xae
 800eda8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800edac:	2b00      	cmp	r3, #0
 800edae:	d101      	bne.n	800edb4 <USBD_LL_IsoINIncomplete+0x22>
 800edb0:	2303      	movs	r3, #3
 800edb2:	e01c      	b.n	800edee <USBD_LL_IsoINIncomplete+0x5c>
 800edb4:	687b      	ldr	r3, [r7, #4]
 800edb6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800edba:	b2db      	uxtb	r3, r3
 800edbc:	2b03      	cmp	r3, #3
 800edbe:	d115      	bne.n	800edec <USBD_LL_IsoINIncomplete+0x5a>
 800edc0:	687b      	ldr	r3, [r7, #4]
 800edc2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800edc6:	687b      	ldr	r3, [r7, #4]
 800edc8:	32ae      	adds	r2, #174	@ 0xae
 800edca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800edce:	6a1b      	ldr	r3, [r3, #32]
 800edd0:	2b00      	cmp	r3, #0
 800edd2:	d00b      	beq.n	800edec <USBD_LL_IsoINIncomplete+0x5a>
 800edd4:	687b      	ldr	r3, [r7, #4]
 800edd6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800edda:	687b      	ldr	r3, [r7, #4]
 800eddc:	32ae      	adds	r2, #174	@ 0xae
 800edde:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ede2:	6a1b      	ldr	r3, [r3, #32]
 800ede4:	78fa      	ldrb	r2, [r7, #3]
 800ede6:	4611      	mov	r1, r2
 800ede8:	6878      	ldr	r0, [r7, #4]
 800edea:	4798      	blx	r3
 800edec:	2300      	movs	r3, #0
 800edee:	4618      	mov	r0, r3
 800edf0:	3708      	adds	r7, #8
 800edf2:	46bd      	mov	sp, r7
 800edf4:	bd80      	pop	{r7, pc}

0800edf6 <USBD_LL_IsoOUTIncomplete>:
 800edf6:	b580      	push	{r7, lr}
 800edf8:	b082      	sub	sp, #8
 800edfa:	af00      	add	r7, sp, #0
 800edfc:	6078      	str	r0, [r7, #4]
 800edfe:	460b      	mov	r3, r1
 800ee00:	70fb      	strb	r3, [r7, #3]
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ee08:	687b      	ldr	r3, [r7, #4]
 800ee0a:	32ae      	adds	r2, #174	@ 0xae
 800ee0c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ee10:	2b00      	cmp	r3, #0
 800ee12:	d101      	bne.n	800ee18 <USBD_LL_IsoOUTIncomplete+0x22>
 800ee14:	2303      	movs	r3, #3
 800ee16:	e01c      	b.n	800ee52 <USBD_LL_IsoOUTIncomplete+0x5c>
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800ee1e:	b2db      	uxtb	r3, r3
 800ee20:	2b03      	cmp	r3, #3
 800ee22:	d115      	bne.n	800ee50 <USBD_LL_IsoOUTIncomplete+0x5a>
 800ee24:	687b      	ldr	r3, [r7, #4]
 800ee26:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ee2a:	687b      	ldr	r3, [r7, #4]
 800ee2c:	32ae      	adds	r2, #174	@ 0xae
 800ee2e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ee32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ee34:	2b00      	cmp	r3, #0
 800ee36:	d00b      	beq.n	800ee50 <USBD_LL_IsoOUTIncomplete+0x5a>
 800ee38:	687b      	ldr	r3, [r7, #4]
 800ee3a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800ee3e:	687b      	ldr	r3, [r7, #4]
 800ee40:	32ae      	adds	r2, #174	@ 0xae
 800ee42:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ee46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ee48:	78fa      	ldrb	r2, [r7, #3]
 800ee4a:	4611      	mov	r1, r2
 800ee4c:	6878      	ldr	r0, [r7, #4]
 800ee4e:	4798      	blx	r3
 800ee50:	2300      	movs	r3, #0
 800ee52:	4618      	mov	r0, r3
 800ee54:	3708      	adds	r7, #8
 800ee56:	46bd      	mov	sp, r7
 800ee58:	bd80      	pop	{r7, pc}

0800ee5a <USBD_LL_DevConnected>:
 800ee5a:	b480      	push	{r7}
 800ee5c:	b083      	sub	sp, #12
 800ee5e:	af00      	add	r7, sp, #0
 800ee60:	6078      	str	r0, [r7, #4]
 800ee62:	2300      	movs	r3, #0
 800ee64:	4618      	mov	r0, r3
 800ee66:	370c      	adds	r7, #12
 800ee68:	46bd      	mov	sp, r7
 800ee6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee6e:	4770      	bx	lr

0800ee70 <USBD_LL_DevDisconnected>:
 800ee70:	b580      	push	{r7, lr}
 800ee72:	b084      	sub	sp, #16
 800ee74:	af00      	add	r7, sp, #0
 800ee76:	6078      	str	r0, [r7, #4]
 800ee78:	2300      	movs	r3, #0
 800ee7a:	73fb      	strb	r3, [r7, #15]
 800ee7c:	687b      	ldr	r3, [r7, #4]
 800ee7e:	2201      	movs	r2, #1
 800ee80:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800ee84:	687b      	ldr	r3, [r7, #4]
 800ee86:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ee8a:	2b00      	cmp	r3, #0
 800ee8c:	d00e      	beq.n	800eeac <USBD_LL_DevDisconnected+0x3c>
 800ee8e:	687b      	ldr	r3, [r7, #4]
 800ee90:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800ee94:	685b      	ldr	r3, [r3, #4]
 800ee96:	687a      	ldr	r2, [r7, #4]
 800ee98:	6852      	ldr	r2, [r2, #4]
 800ee9a:	b2d2      	uxtb	r2, r2
 800ee9c:	4611      	mov	r1, r2
 800ee9e:	6878      	ldr	r0, [r7, #4]
 800eea0:	4798      	blx	r3
 800eea2:	4603      	mov	r3, r0
 800eea4:	2b00      	cmp	r3, #0
 800eea6:	d001      	beq.n	800eeac <USBD_LL_DevDisconnected+0x3c>
 800eea8:	2303      	movs	r3, #3
 800eeaa:	73fb      	strb	r3, [r7, #15]
 800eeac:	7bfb      	ldrb	r3, [r7, #15]
 800eeae:	4618      	mov	r0, r3
 800eeb0:	3710      	adds	r7, #16
 800eeb2:	46bd      	mov	sp, r7
 800eeb4:	bd80      	pop	{r7, pc}

0800eeb6 <USBD_CoreFindIF>:
 800eeb6:	b480      	push	{r7}
 800eeb8:	b083      	sub	sp, #12
 800eeba:	af00      	add	r7, sp, #0
 800eebc:	6078      	str	r0, [r7, #4]
 800eebe:	460b      	mov	r3, r1
 800eec0:	70fb      	strb	r3, [r7, #3]
 800eec2:	2300      	movs	r3, #0
 800eec4:	4618      	mov	r0, r3
 800eec6:	370c      	adds	r7, #12
 800eec8:	46bd      	mov	sp, r7
 800eeca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eece:	4770      	bx	lr

0800eed0 <USBD_CoreFindEP>:
 800eed0:	b480      	push	{r7}
 800eed2:	b083      	sub	sp, #12
 800eed4:	af00      	add	r7, sp, #0
 800eed6:	6078      	str	r0, [r7, #4]
 800eed8:	460b      	mov	r3, r1
 800eeda:	70fb      	strb	r3, [r7, #3]
 800eedc:	2300      	movs	r3, #0
 800eede:	4618      	mov	r0, r3
 800eee0:	370c      	adds	r7, #12
 800eee2:	46bd      	mov	sp, r7
 800eee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eee8:	4770      	bx	lr

0800eeea <USBD_GetEpDesc>:
 800eeea:	b580      	push	{r7, lr}
 800eeec:	b086      	sub	sp, #24
 800eeee:	af00      	add	r7, sp, #0
 800eef0:	6078      	str	r0, [r7, #4]
 800eef2:	460b      	mov	r3, r1
 800eef4:	70fb      	strb	r3, [r7, #3]
 800eef6:	687b      	ldr	r3, [r7, #4]
 800eef8:	617b      	str	r3, [r7, #20]
 800eefa:	687b      	ldr	r3, [r7, #4]
 800eefc:	60fb      	str	r3, [r7, #12]
 800eefe:	2300      	movs	r3, #0
 800ef00:	613b      	str	r3, [r7, #16]
 800ef02:	68fb      	ldr	r3, [r7, #12]
 800ef04:	885b      	ldrh	r3, [r3, #2]
 800ef06:	b29b      	uxth	r3, r3
 800ef08:	68fa      	ldr	r2, [r7, #12]
 800ef0a:	7812      	ldrb	r2, [r2, #0]
 800ef0c:	4293      	cmp	r3, r2
 800ef0e:	d91f      	bls.n	800ef50 <USBD_GetEpDesc+0x66>
 800ef10:	68fb      	ldr	r3, [r7, #12]
 800ef12:	781b      	ldrb	r3, [r3, #0]
 800ef14:	817b      	strh	r3, [r7, #10]
 800ef16:	e013      	b.n	800ef40 <USBD_GetEpDesc+0x56>
 800ef18:	f107 030a 	add.w	r3, r7, #10
 800ef1c:	4619      	mov	r1, r3
 800ef1e:	6978      	ldr	r0, [r7, #20]
 800ef20:	f000 f81b 	bl	800ef5a <USBD_GetNextDesc>
 800ef24:	6178      	str	r0, [r7, #20]
 800ef26:	697b      	ldr	r3, [r7, #20]
 800ef28:	785b      	ldrb	r3, [r3, #1]
 800ef2a:	2b05      	cmp	r3, #5
 800ef2c:	d108      	bne.n	800ef40 <USBD_GetEpDesc+0x56>
 800ef2e:	697b      	ldr	r3, [r7, #20]
 800ef30:	613b      	str	r3, [r7, #16]
 800ef32:	693b      	ldr	r3, [r7, #16]
 800ef34:	789b      	ldrb	r3, [r3, #2]
 800ef36:	78fa      	ldrb	r2, [r7, #3]
 800ef38:	429a      	cmp	r2, r3
 800ef3a:	d008      	beq.n	800ef4e <USBD_GetEpDesc+0x64>
 800ef3c:	2300      	movs	r3, #0
 800ef3e:	613b      	str	r3, [r7, #16]
 800ef40:	68fb      	ldr	r3, [r7, #12]
 800ef42:	885b      	ldrh	r3, [r3, #2]
 800ef44:	b29a      	uxth	r2, r3
 800ef46:	897b      	ldrh	r3, [r7, #10]
 800ef48:	429a      	cmp	r2, r3
 800ef4a:	d8e5      	bhi.n	800ef18 <USBD_GetEpDesc+0x2e>
 800ef4c:	e000      	b.n	800ef50 <USBD_GetEpDesc+0x66>
 800ef4e:	bf00      	nop
 800ef50:	693b      	ldr	r3, [r7, #16]
 800ef52:	4618      	mov	r0, r3
 800ef54:	3718      	adds	r7, #24
 800ef56:	46bd      	mov	sp, r7
 800ef58:	bd80      	pop	{r7, pc}

0800ef5a <USBD_GetNextDesc>:
 800ef5a:	b480      	push	{r7}
 800ef5c:	b085      	sub	sp, #20
 800ef5e:	af00      	add	r7, sp, #0
 800ef60:	6078      	str	r0, [r7, #4]
 800ef62:	6039      	str	r1, [r7, #0]
 800ef64:	687b      	ldr	r3, [r7, #4]
 800ef66:	60fb      	str	r3, [r7, #12]
 800ef68:	683b      	ldr	r3, [r7, #0]
 800ef6a:	881b      	ldrh	r3, [r3, #0]
 800ef6c:	68fa      	ldr	r2, [r7, #12]
 800ef6e:	7812      	ldrb	r2, [r2, #0]
 800ef70:	4413      	add	r3, r2
 800ef72:	b29a      	uxth	r2, r3
 800ef74:	683b      	ldr	r3, [r7, #0]
 800ef76:	801a      	strh	r2, [r3, #0]
 800ef78:	68fb      	ldr	r3, [r7, #12]
 800ef7a:	781b      	ldrb	r3, [r3, #0]
 800ef7c:	461a      	mov	r2, r3
 800ef7e:	687b      	ldr	r3, [r7, #4]
 800ef80:	4413      	add	r3, r2
 800ef82:	60fb      	str	r3, [r7, #12]
 800ef84:	68fb      	ldr	r3, [r7, #12]
 800ef86:	4618      	mov	r0, r3
 800ef88:	3714      	adds	r7, #20
 800ef8a:	46bd      	mov	sp, r7
 800ef8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef90:	4770      	bx	lr

0800ef92 <SWAPBYTE>:
 800ef92:	b480      	push	{r7}
 800ef94:	b087      	sub	sp, #28
 800ef96:	af00      	add	r7, sp, #0
 800ef98:	6078      	str	r0, [r7, #4]
 800ef9a:	687b      	ldr	r3, [r7, #4]
 800ef9c:	617b      	str	r3, [r7, #20]
 800ef9e:	697b      	ldr	r3, [r7, #20]
 800efa0:	781b      	ldrb	r3, [r3, #0]
 800efa2:	827b      	strh	r3, [r7, #18]
 800efa4:	697b      	ldr	r3, [r7, #20]
 800efa6:	3301      	adds	r3, #1
 800efa8:	617b      	str	r3, [r7, #20]
 800efaa:	697b      	ldr	r3, [r7, #20]
 800efac:	781b      	ldrb	r3, [r3, #0]
 800efae:	823b      	strh	r3, [r7, #16]
 800efb0:	8a3b      	ldrh	r3, [r7, #16]
 800efb2:	021b      	lsls	r3, r3, #8
 800efb4:	b21a      	sxth	r2, r3
 800efb6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800efba:	4313      	orrs	r3, r2
 800efbc:	b21b      	sxth	r3, r3
 800efbe:	81fb      	strh	r3, [r7, #14]
 800efc0:	89fb      	ldrh	r3, [r7, #14]
 800efc2:	4618      	mov	r0, r3
 800efc4:	371c      	adds	r7, #28
 800efc6:	46bd      	mov	sp, r7
 800efc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efcc:	4770      	bx	lr
	...

0800efd0 <USBD_StdDevReq>:
 800efd0:	b580      	push	{r7, lr}
 800efd2:	b084      	sub	sp, #16
 800efd4:	af00      	add	r7, sp, #0
 800efd6:	6078      	str	r0, [r7, #4]
 800efd8:	6039      	str	r1, [r7, #0]
 800efda:	2300      	movs	r3, #0
 800efdc:	73fb      	strb	r3, [r7, #15]
 800efde:	683b      	ldr	r3, [r7, #0]
 800efe0:	781b      	ldrb	r3, [r3, #0]
 800efe2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800efe6:	2b40      	cmp	r3, #64	@ 0x40
 800efe8:	d005      	beq.n	800eff6 <USBD_StdDevReq+0x26>
 800efea:	2b40      	cmp	r3, #64	@ 0x40
 800efec:	d857      	bhi.n	800f09e <USBD_StdDevReq+0xce>
 800efee:	2b00      	cmp	r3, #0
 800eff0:	d00f      	beq.n	800f012 <USBD_StdDevReq+0x42>
 800eff2:	2b20      	cmp	r3, #32
 800eff4:	d153      	bne.n	800f09e <USBD_StdDevReq+0xce>
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 800effc:	687b      	ldr	r3, [r7, #4]
 800effe:	32ae      	adds	r2, #174	@ 0xae
 800f000:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f004:	689b      	ldr	r3, [r3, #8]
 800f006:	6839      	ldr	r1, [r7, #0]
 800f008:	6878      	ldr	r0, [r7, #4]
 800f00a:	4798      	blx	r3
 800f00c:	4603      	mov	r3, r0
 800f00e:	73fb      	strb	r3, [r7, #15]
 800f010:	e04a      	b.n	800f0a8 <USBD_StdDevReq+0xd8>
 800f012:	683b      	ldr	r3, [r7, #0]
 800f014:	785b      	ldrb	r3, [r3, #1]
 800f016:	2b09      	cmp	r3, #9
 800f018:	d83b      	bhi.n	800f092 <USBD_StdDevReq+0xc2>
 800f01a:	a201      	add	r2, pc, #4	@ (adr r2, 800f020 <USBD_StdDevReq+0x50>)
 800f01c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f020:	0800f075 	.word	0x0800f075
 800f024:	0800f089 	.word	0x0800f089
 800f028:	0800f093 	.word	0x0800f093
 800f02c:	0800f07f 	.word	0x0800f07f
 800f030:	0800f093 	.word	0x0800f093
 800f034:	0800f053 	.word	0x0800f053
 800f038:	0800f049 	.word	0x0800f049
 800f03c:	0800f093 	.word	0x0800f093
 800f040:	0800f06b 	.word	0x0800f06b
 800f044:	0800f05d 	.word	0x0800f05d
 800f048:	6839      	ldr	r1, [r7, #0]
 800f04a:	6878      	ldr	r0, [r7, #4]
 800f04c:	f000 fa3c 	bl	800f4c8 <USBD_GetDescriptor>
 800f050:	e024      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f052:	6839      	ldr	r1, [r7, #0]
 800f054:	6878      	ldr	r0, [r7, #4]
 800f056:	f000 fbcb 	bl	800f7f0 <USBD_SetAddress>
 800f05a:	e01f      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f05c:	6839      	ldr	r1, [r7, #0]
 800f05e:	6878      	ldr	r0, [r7, #4]
 800f060:	f000 fc0a 	bl	800f878 <USBD_SetConfig>
 800f064:	4603      	mov	r3, r0
 800f066:	73fb      	strb	r3, [r7, #15]
 800f068:	e018      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f06a:	6839      	ldr	r1, [r7, #0]
 800f06c:	6878      	ldr	r0, [r7, #4]
 800f06e:	f000 fcad 	bl	800f9cc <USBD_GetConfig>
 800f072:	e013      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f074:	6839      	ldr	r1, [r7, #0]
 800f076:	6878      	ldr	r0, [r7, #4]
 800f078:	f000 fcde 	bl	800fa38 <USBD_GetStatus>
 800f07c:	e00e      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f07e:	6839      	ldr	r1, [r7, #0]
 800f080:	6878      	ldr	r0, [r7, #4]
 800f082:	f000 fd0d 	bl	800faa0 <USBD_SetFeature>
 800f086:	e009      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f088:	6839      	ldr	r1, [r7, #0]
 800f08a:	6878      	ldr	r0, [r7, #4]
 800f08c:	f000 fd31 	bl	800faf2 <USBD_ClrFeature>
 800f090:	e004      	b.n	800f09c <USBD_StdDevReq+0xcc>
 800f092:	6839      	ldr	r1, [r7, #0]
 800f094:	6878      	ldr	r0, [r7, #4]
 800f096:	f000 fd88 	bl	800fbaa <USBD_CtlError>
 800f09a:	bf00      	nop
 800f09c:	e004      	b.n	800f0a8 <USBD_StdDevReq+0xd8>
 800f09e:	6839      	ldr	r1, [r7, #0]
 800f0a0:	6878      	ldr	r0, [r7, #4]
 800f0a2:	f000 fd82 	bl	800fbaa <USBD_CtlError>
 800f0a6:	bf00      	nop
 800f0a8:	7bfb      	ldrb	r3, [r7, #15]
 800f0aa:	4618      	mov	r0, r3
 800f0ac:	3710      	adds	r7, #16
 800f0ae:	46bd      	mov	sp, r7
 800f0b0:	bd80      	pop	{r7, pc}
 800f0b2:	bf00      	nop

0800f0b4 <USBD_StdItfReq>:
 800f0b4:	b580      	push	{r7, lr}
 800f0b6:	b084      	sub	sp, #16
 800f0b8:	af00      	add	r7, sp, #0
 800f0ba:	6078      	str	r0, [r7, #4]
 800f0bc:	6039      	str	r1, [r7, #0]
 800f0be:	2300      	movs	r3, #0
 800f0c0:	73fb      	strb	r3, [r7, #15]
 800f0c2:	683b      	ldr	r3, [r7, #0]
 800f0c4:	781b      	ldrb	r3, [r3, #0]
 800f0c6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f0ca:	2b40      	cmp	r3, #64	@ 0x40
 800f0cc:	d005      	beq.n	800f0da <USBD_StdItfReq+0x26>
 800f0ce:	2b40      	cmp	r3, #64	@ 0x40
 800f0d0:	d852      	bhi.n	800f178 <USBD_StdItfReq+0xc4>
 800f0d2:	2b00      	cmp	r3, #0
 800f0d4:	d001      	beq.n	800f0da <USBD_StdItfReq+0x26>
 800f0d6:	2b20      	cmp	r3, #32
 800f0d8:	d14e      	bne.n	800f178 <USBD_StdItfReq+0xc4>
 800f0da:	687b      	ldr	r3, [r7, #4]
 800f0dc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f0e0:	b2db      	uxtb	r3, r3
 800f0e2:	3b01      	subs	r3, #1
 800f0e4:	2b02      	cmp	r3, #2
 800f0e6:	d840      	bhi.n	800f16a <USBD_StdItfReq+0xb6>
 800f0e8:	683b      	ldr	r3, [r7, #0]
 800f0ea:	889b      	ldrh	r3, [r3, #4]
 800f0ec:	b2db      	uxtb	r3, r3
 800f0ee:	2b01      	cmp	r3, #1
 800f0f0:	d836      	bhi.n	800f160 <USBD_StdItfReq+0xac>
 800f0f2:	683b      	ldr	r3, [r7, #0]
 800f0f4:	889b      	ldrh	r3, [r3, #4]
 800f0f6:	b2db      	uxtb	r3, r3
 800f0f8:	4619      	mov	r1, r3
 800f0fa:	6878      	ldr	r0, [r7, #4]
 800f0fc:	f7ff fedb 	bl	800eeb6 <USBD_CoreFindIF>
 800f100:	4603      	mov	r3, r0
 800f102:	73bb      	strb	r3, [r7, #14]
 800f104:	7bbb      	ldrb	r3, [r7, #14]
 800f106:	2bff      	cmp	r3, #255	@ 0xff
 800f108:	d01d      	beq.n	800f146 <USBD_StdItfReq+0x92>
 800f10a:	7bbb      	ldrb	r3, [r7, #14]
 800f10c:	2b00      	cmp	r3, #0
 800f10e:	d11a      	bne.n	800f146 <USBD_StdItfReq+0x92>
 800f110:	7bba      	ldrb	r2, [r7, #14]
 800f112:	687b      	ldr	r3, [r7, #4]
 800f114:	32ae      	adds	r2, #174	@ 0xae
 800f116:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f11a:	689b      	ldr	r3, [r3, #8]
 800f11c:	2b00      	cmp	r3, #0
 800f11e:	d00f      	beq.n	800f140 <USBD_StdItfReq+0x8c>
 800f120:	7bba      	ldrb	r2, [r7, #14]
 800f122:	687b      	ldr	r3, [r7, #4]
 800f124:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800f128:	7bba      	ldrb	r2, [r7, #14]
 800f12a:	687b      	ldr	r3, [r7, #4]
 800f12c:	32ae      	adds	r2, #174	@ 0xae
 800f12e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f132:	689b      	ldr	r3, [r3, #8]
 800f134:	6839      	ldr	r1, [r7, #0]
 800f136:	6878      	ldr	r0, [r7, #4]
 800f138:	4798      	blx	r3
 800f13a:	4603      	mov	r3, r0
 800f13c:	73fb      	strb	r3, [r7, #15]
 800f13e:	e004      	b.n	800f14a <USBD_StdItfReq+0x96>
 800f140:	2303      	movs	r3, #3
 800f142:	73fb      	strb	r3, [r7, #15]
 800f144:	e001      	b.n	800f14a <USBD_StdItfReq+0x96>
 800f146:	2303      	movs	r3, #3
 800f148:	73fb      	strb	r3, [r7, #15]
 800f14a:	683b      	ldr	r3, [r7, #0]
 800f14c:	88db      	ldrh	r3, [r3, #6]
 800f14e:	2b00      	cmp	r3, #0
 800f150:	d110      	bne.n	800f174 <USBD_StdItfReq+0xc0>
 800f152:	7bfb      	ldrb	r3, [r7, #15]
 800f154:	2b00      	cmp	r3, #0
 800f156:	d10d      	bne.n	800f174 <USBD_StdItfReq+0xc0>
 800f158:	6878      	ldr	r0, [r7, #4]
 800f15a:	f000 fdfd 	bl	800fd58 <USBD_CtlSendStatus>
 800f15e:	e009      	b.n	800f174 <USBD_StdItfReq+0xc0>
 800f160:	6839      	ldr	r1, [r7, #0]
 800f162:	6878      	ldr	r0, [r7, #4]
 800f164:	f000 fd21 	bl	800fbaa <USBD_CtlError>
 800f168:	e004      	b.n	800f174 <USBD_StdItfReq+0xc0>
 800f16a:	6839      	ldr	r1, [r7, #0]
 800f16c:	6878      	ldr	r0, [r7, #4]
 800f16e:	f000 fd1c 	bl	800fbaa <USBD_CtlError>
 800f172:	e000      	b.n	800f176 <USBD_StdItfReq+0xc2>
 800f174:	bf00      	nop
 800f176:	e004      	b.n	800f182 <USBD_StdItfReq+0xce>
 800f178:	6839      	ldr	r1, [r7, #0]
 800f17a:	6878      	ldr	r0, [r7, #4]
 800f17c:	f000 fd15 	bl	800fbaa <USBD_CtlError>
 800f180:	bf00      	nop
 800f182:	7bfb      	ldrb	r3, [r7, #15]
 800f184:	4618      	mov	r0, r3
 800f186:	3710      	adds	r7, #16
 800f188:	46bd      	mov	sp, r7
 800f18a:	bd80      	pop	{r7, pc}

0800f18c <USBD_StdEPReq>:
 800f18c:	b580      	push	{r7, lr}
 800f18e:	b084      	sub	sp, #16
 800f190:	af00      	add	r7, sp, #0
 800f192:	6078      	str	r0, [r7, #4]
 800f194:	6039      	str	r1, [r7, #0]
 800f196:	2300      	movs	r3, #0
 800f198:	73fb      	strb	r3, [r7, #15]
 800f19a:	683b      	ldr	r3, [r7, #0]
 800f19c:	889b      	ldrh	r3, [r3, #4]
 800f19e:	73bb      	strb	r3, [r7, #14]
 800f1a0:	683b      	ldr	r3, [r7, #0]
 800f1a2:	781b      	ldrb	r3, [r3, #0]
 800f1a4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800f1a8:	2b40      	cmp	r3, #64	@ 0x40
 800f1aa:	d007      	beq.n	800f1bc <USBD_StdEPReq+0x30>
 800f1ac:	2b40      	cmp	r3, #64	@ 0x40
 800f1ae:	f200 817f 	bhi.w	800f4b0 <USBD_StdEPReq+0x324>
 800f1b2:	2b00      	cmp	r3, #0
 800f1b4:	d02a      	beq.n	800f20c <USBD_StdEPReq+0x80>
 800f1b6:	2b20      	cmp	r3, #32
 800f1b8:	f040 817a 	bne.w	800f4b0 <USBD_StdEPReq+0x324>
 800f1bc:	7bbb      	ldrb	r3, [r7, #14]
 800f1be:	4619      	mov	r1, r3
 800f1c0:	6878      	ldr	r0, [r7, #4]
 800f1c2:	f7ff fe85 	bl	800eed0 <USBD_CoreFindEP>
 800f1c6:	4603      	mov	r3, r0
 800f1c8:	737b      	strb	r3, [r7, #13]
 800f1ca:	7b7b      	ldrb	r3, [r7, #13]
 800f1cc:	2bff      	cmp	r3, #255	@ 0xff
 800f1ce:	f000 8174 	beq.w	800f4ba <USBD_StdEPReq+0x32e>
 800f1d2:	7b7b      	ldrb	r3, [r7, #13]
 800f1d4:	2b00      	cmp	r3, #0
 800f1d6:	f040 8170 	bne.w	800f4ba <USBD_StdEPReq+0x32e>
 800f1da:	7b7a      	ldrb	r2, [r7, #13]
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800f1e2:	7b7a      	ldrb	r2, [r7, #13]
 800f1e4:	687b      	ldr	r3, [r7, #4]
 800f1e6:	32ae      	adds	r2, #174	@ 0xae
 800f1e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f1ec:	689b      	ldr	r3, [r3, #8]
 800f1ee:	2b00      	cmp	r3, #0
 800f1f0:	f000 8163 	beq.w	800f4ba <USBD_StdEPReq+0x32e>
 800f1f4:	7b7a      	ldrb	r2, [r7, #13]
 800f1f6:	687b      	ldr	r3, [r7, #4]
 800f1f8:	32ae      	adds	r2, #174	@ 0xae
 800f1fa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f1fe:	689b      	ldr	r3, [r3, #8]
 800f200:	6839      	ldr	r1, [r7, #0]
 800f202:	6878      	ldr	r0, [r7, #4]
 800f204:	4798      	blx	r3
 800f206:	4603      	mov	r3, r0
 800f208:	73fb      	strb	r3, [r7, #15]
 800f20a:	e156      	b.n	800f4ba <USBD_StdEPReq+0x32e>
 800f20c:	683b      	ldr	r3, [r7, #0]
 800f20e:	785b      	ldrb	r3, [r3, #1]
 800f210:	2b03      	cmp	r3, #3
 800f212:	d008      	beq.n	800f226 <USBD_StdEPReq+0x9a>
 800f214:	2b03      	cmp	r3, #3
 800f216:	f300 8145 	bgt.w	800f4a4 <USBD_StdEPReq+0x318>
 800f21a:	2b00      	cmp	r3, #0
 800f21c:	f000 809b 	beq.w	800f356 <USBD_StdEPReq+0x1ca>
 800f220:	2b01      	cmp	r3, #1
 800f222:	d03c      	beq.n	800f29e <USBD_StdEPReq+0x112>
 800f224:	e13e      	b.n	800f4a4 <USBD_StdEPReq+0x318>
 800f226:	687b      	ldr	r3, [r7, #4]
 800f228:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f22c:	b2db      	uxtb	r3, r3
 800f22e:	2b02      	cmp	r3, #2
 800f230:	d002      	beq.n	800f238 <USBD_StdEPReq+0xac>
 800f232:	2b03      	cmp	r3, #3
 800f234:	d016      	beq.n	800f264 <USBD_StdEPReq+0xd8>
 800f236:	e02c      	b.n	800f292 <USBD_StdEPReq+0x106>
 800f238:	7bbb      	ldrb	r3, [r7, #14]
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	d00d      	beq.n	800f25a <USBD_StdEPReq+0xce>
 800f23e:	7bbb      	ldrb	r3, [r7, #14]
 800f240:	2b80      	cmp	r3, #128	@ 0x80
 800f242:	d00a      	beq.n	800f25a <USBD_StdEPReq+0xce>
 800f244:	7bbb      	ldrb	r3, [r7, #14]
 800f246:	4619      	mov	r1, r3
 800f248:	6878      	ldr	r0, [r7, #4]
 800f24a:	f001 f9c9 	bl	80105e0 <USBD_LL_StallEP>
 800f24e:	2180      	movs	r1, #128	@ 0x80
 800f250:	6878      	ldr	r0, [r7, #4]
 800f252:	f001 f9c5 	bl	80105e0 <USBD_LL_StallEP>
 800f256:	bf00      	nop
 800f258:	e020      	b.n	800f29c <USBD_StdEPReq+0x110>
 800f25a:	6839      	ldr	r1, [r7, #0]
 800f25c:	6878      	ldr	r0, [r7, #4]
 800f25e:	f000 fca4 	bl	800fbaa <USBD_CtlError>
 800f262:	e01b      	b.n	800f29c <USBD_StdEPReq+0x110>
 800f264:	683b      	ldr	r3, [r7, #0]
 800f266:	885b      	ldrh	r3, [r3, #2]
 800f268:	2b00      	cmp	r3, #0
 800f26a:	d10e      	bne.n	800f28a <USBD_StdEPReq+0xfe>
 800f26c:	7bbb      	ldrb	r3, [r7, #14]
 800f26e:	2b00      	cmp	r3, #0
 800f270:	d00b      	beq.n	800f28a <USBD_StdEPReq+0xfe>
 800f272:	7bbb      	ldrb	r3, [r7, #14]
 800f274:	2b80      	cmp	r3, #128	@ 0x80
 800f276:	d008      	beq.n	800f28a <USBD_StdEPReq+0xfe>
 800f278:	683b      	ldr	r3, [r7, #0]
 800f27a:	88db      	ldrh	r3, [r3, #6]
 800f27c:	2b00      	cmp	r3, #0
 800f27e:	d104      	bne.n	800f28a <USBD_StdEPReq+0xfe>
 800f280:	7bbb      	ldrb	r3, [r7, #14]
 800f282:	4619      	mov	r1, r3
 800f284:	6878      	ldr	r0, [r7, #4]
 800f286:	f001 f9ab 	bl	80105e0 <USBD_LL_StallEP>
 800f28a:	6878      	ldr	r0, [r7, #4]
 800f28c:	f000 fd64 	bl	800fd58 <USBD_CtlSendStatus>
 800f290:	e004      	b.n	800f29c <USBD_StdEPReq+0x110>
 800f292:	6839      	ldr	r1, [r7, #0]
 800f294:	6878      	ldr	r0, [r7, #4]
 800f296:	f000 fc88 	bl	800fbaa <USBD_CtlError>
 800f29a:	bf00      	nop
 800f29c:	e107      	b.n	800f4ae <USBD_StdEPReq+0x322>
 800f29e:	687b      	ldr	r3, [r7, #4]
 800f2a0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f2a4:	b2db      	uxtb	r3, r3
 800f2a6:	2b02      	cmp	r3, #2
 800f2a8:	d002      	beq.n	800f2b0 <USBD_StdEPReq+0x124>
 800f2aa:	2b03      	cmp	r3, #3
 800f2ac:	d016      	beq.n	800f2dc <USBD_StdEPReq+0x150>
 800f2ae:	e04b      	b.n	800f348 <USBD_StdEPReq+0x1bc>
 800f2b0:	7bbb      	ldrb	r3, [r7, #14]
 800f2b2:	2b00      	cmp	r3, #0
 800f2b4:	d00d      	beq.n	800f2d2 <USBD_StdEPReq+0x146>
 800f2b6:	7bbb      	ldrb	r3, [r7, #14]
 800f2b8:	2b80      	cmp	r3, #128	@ 0x80
 800f2ba:	d00a      	beq.n	800f2d2 <USBD_StdEPReq+0x146>
 800f2bc:	7bbb      	ldrb	r3, [r7, #14]
 800f2be:	4619      	mov	r1, r3
 800f2c0:	6878      	ldr	r0, [r7, #4]
 800f2c2:	f001 f98d 	bl	80105e0 <USBD_LL_StallEP>
 800f2c6:	2180      	movs	r1, #128	@ 0x80
 800f2c8:	6878      	ldr	r0, [r7, #4]
 800f2ca:	f001 f989 	bl	80105e0 <USBD_LL_StallEP>
 800f2ce:	bf00      	nop
 800f2d0:	e040      	b.n	800f354 <USBD_StdEPReq+0x1c8>
 800f2d2:	6839      	ldr	r1, [r7, #0]
 800f2d4:	6878      	ldr	r0, [r7, #4]
 800f2d6:	f000 fc68 	bl	800fbaa <USBD_CtlError>
 800f2da:	e03b      	b.n	800f354 <USBD_StdEPReq+0x1c8>
 800f2dc:	683b      	ldr	r3, [r7, #0]
 800f2de:	885b      	ldrh	r3, [r3, #2]
 800f2e0:	2b00      	cmp	r3, #0
 800f2e2:	d136      	bne.n	800f352 <USBD_StdEPReq+0x1c6>
 800f2e4:	7bbb      	ldrb	r3, [r7, #14]
 800f2e6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800f2ea:	2b00      	cmp	r3, #0
 800f2ec:	d004      	beq.n	800f2f8 <USBD_StdEPReq+0x16c>
 800f2ee:	7bbb      	ldrb	r3, [r7, #14]
 800f2f0:	4619      	mov	r1, r3
 800f2f2:	6878      	ldr	r0, [r7, #4]
 800f2f4:	f001 f993 	bl	801061e <USBD_LL_ClearStallEP>
 800f2f8:	6878      	ldr	r0, [r7, #4]
 800f2fa:	f000 fd2d 	bl	800fd58 <USBD_CtlSendStatus>
 800f2fe:	7bbb      	ldrb	r3, [r7, #14]
 800f300:	4619      	mov	r1, r3
 800f302:	6878      	ldr	r0, [r7, #4]
 800f304:	f7ff fde4 	bl	800eed0 <USBD_CoreFindEP>
 800f308:	4603      	mov	r3, r0
 800f30a:	737b      	strb	r3, [r7, #13]
 800f30c:	7b7b      	ldrb	r3, [r7, #13]
 800f30e:	2bff      	cmp	r3, #255	@ 0xff
 800f310:	d01f      	beq.n	800f352 <USBD_StdEPReq+0x1c6>
 800f312:	7b7b      	ldrb	r3, [r7, #13]
 800f314:	2b00      	cmp	r3, #0
 800f316:	d11c      	bne.n	800f352 <USBD_StdEPReq+0x1c6>
 800f318:	7b7a      	ldrb	r2, [r7, #13]
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 800f320:	7b7a      	ldrb	r2, [r7, #13]
 800f322:	687b      	ldr	r3, [r7, #4]
 800f324:	32ae      	adds	r2, #174	@ 0xae
 800f326:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f32a:	689b      	ldr	r3, [r3, #8]
 800f32c:	2b00      	cmp	r3, #0
 800f32e:	d010      	beq.n	800f352 <USBD_StdEPReq+0x1c6>
 800f330:	7b7a      	ldrb	r2, [r7, #13]
 800f332:	687b      	ldr	r3, [r7, #4]
 800f334:	32ae      	adds	r2, #174	@ 0xae
 800f336:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f33a:	689b      	ldr	r3, [r3, #8]
 800f33c:	6839      	ldr	r1, [r7, #0]
 800f33e:	6878      	ldr	r0, [r7, #4]
 800f340:	4798      	blx	r3
 800f342:	4603      	mov	r3, r0
 800f344:	73fb      	strb	r3, [r7, #15]
 800f346:	e004      	b.n	800f352 <USBD_StdEPReq+0x1c6>
 800f348:	6839      	ldr	r1, [r7, #0]
 800f34a:	6878      	ldr	r0, [r7, #4]
 800f34c:	f000 fc2d 	bl	800fbaa <USBD_CtlError>
 800f350:	e000      	b.n	800f354 <USBD_StdEPReq+0x1c8>
 800f352:	bf00      	nop
 800f354:	e0ab      	b.n	800f4ae <USBD_StdEPReq+0x322>
 800f356:	687b      	ldr	r3, [r7, #4]
 800f358:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f35c:	b2db      	uxtb	r3, r3
 800f35e:	2b02      	cmp	r3, #2
 800f360:	d002      	beq.n	800f368 <USBD_StdEPReq+0x1dc>
 800f362:	2b03      	cmp	r3, #3
 800f364:	d032      	beq.n	800f3cc <USBD_StdEPReq+0x240>
 800f366:	e097      	b.n	800f498 <USBD_StdEPReq+0x30c>
 800f368:	7bbb      	ldrb	r3, [r7, #14]
 800f36a:	2b00      	cmp	r3, #0
 800f36c:	d007      	beq.n	800f37e <USBD_StdEPReq+0x1f2>
 800f36e:	7bbb      	ldrb	r3, [r7, #14]
 800f370:	2b80      	cmp	r3, #128	@ 0x80
 800f372:	d004      	beq.n	800f37e <USBD_StdEPReq+0x1f2>
 800f374:	6839      	ldr	r1, [r7, #0]
 800f376:	6878      	ldr	r0, [r7, #4]
 800f378:	f000 fc17 	bl	800fbaa <USBD_CtlError>
 800f37c:	e091      	b.n	800f4a2 <USBD_StdEPReq+0x316>
 800f37e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800f382:	2b00      	cmp	r3, #0
 800f384:	da0b      	bge.n	800f39e <USBD_StdEPReq+0x212>
 800f386:	7bbb      	ldrb	r3, [r7, #14]
 800f388:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800f38c:	4613      	mov	r3, r2
 800f38e:	009b      	lsls	r3, r3, #2
 800f390:	4413      	add	r3, r2
 800f392:	009b      	lsls	r3, r3, #2
 800f394:	3310      	adds	r3, #16
 800f396:	687a      	ldr	r2, [r7, #4]
 800f398:	4413      	add	r3, r2
 800f39a:	3304      	adds	r3, #4
 800f39c:	e00b      	b.n	800f3b6 <USBD_StdEPReq+0x22a>
 800f39e:	7bbb      	ldrb	r3, [r7, #14]
 800f3a0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800f3a4:	4613      	mov	r3, r2
 800f3a6:	009b      	lsls	r3, r3, #2
 800f3a8:	4413      	add	r3, r2
 800f3aa:	009b      	lsls	r3, r3, #2
 800f3ac:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800f3b0:	687a      	ldr	r2, [r7, #4]
 800f3b2:	4413      	add	r3, r2
 800f3b4:	3304      	adds	r3, #4
 800f3b6:	60bb      	str	r3, [r7, #8]
 800f3b8:	68bb      	ldr	r3, [r7, #8]
 800f3ba:	2200      	movs	r2, #0
 800f3bc:	601a      	str	r2, [r3, #0]
 800f3be:	68bb      	ldr	r3, [r7, #8]
 800f3c0:	2202      	movs	r2, #2
 800f3c2:	4619      	mov	r1, r3
 800f3c4:	6878      	ldr	r0, [r7, #4]
 800f3c6:	f000 fc6d 	bl	800fca4 <USBD_CtlSendData>
 800f3ca:	e06a      	b.n	800f4a2 <USBD_StdEPReq+0x316>
 800f3cc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800f3d0:	2b00      	cmp	r3, #0
 800f3d2:	da11      	bge.n	800f3f8 <USBD_StdEPReq+0x26c>
 800f3d4:	7bbb      	ldrb	r3, [r7, #14]
 800f3d6:	f003 020f 	and.w	r2, r3, #15
 800f3da:	6879      	ldr	r1, [r7, #4]
 800f3dc:	4613      	mov	r3, r2
 800f3de:	009b      	lsls	r3, r3, #2
 800f3e0:	4413      	add	r3, r2
 800f3e2:	009b      	lsls	r3, r3, #2
 800f3e4:	440b      	add	r3, r1
 800f3e6:	3324      	adds	r3, #36	@ 0x24
 800f3e8:	881b      	ldrh	r3, [r3, #0]
 800f3ea:	2b00      	cmp	r3, #0
 800f3ec:	d117      	bne.n	800f41e <USBD_StdEPReq+0x292>
 800f3ee:	6839      	ldr	r1, [r7, #0]
 800f3f0:	6878      	ldr	r0, [r7, #4]
 800f3f2:	f000 fbda 	bl	800fbaa <USBD_CtlError>
 800f3f6:	e054      	b.n	800f4a2 <USBD_StdEPReq+0x316>
 800f3f8:	7bbb      	ldrb	r3, [r7, #14]
 800f3fa:	f003 020f 	and.w	r2, r3, #15
 800f3fe:	6879      	ldr	r1, [r7, #4]
 800f400:	4613      	mov	r3, r2
 800f402:	009b      	lsls	r3, r3, #2
 800f404:	4413      	add	r3, r2
 800f406:	009b      	lsls	r3, r3, #2
 800f408:	440b      	add	r3, r1
 800f40a:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 800f40e:	881b      	ldrh	r3, [r3, #0]
 800f410:	2b00      	cmp	r3, #0
 800f412:	d104      	bne.n	800f41e <USBD_StdEPReq+0x292>
 800f414:	6839      	ldr	r1, [r7, #0]
 800f416:	6878      	ldr	r0, [r7, #4]
 800f418:	f000 fbc7 	bl	800fbaa <USBD_CtlError>
 800f41c:	e041      	b.n	800f4a2 <USBD_StdEPReq+0x316>
 800f41e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800f422:	2b00      	cmp	r3, #0
 800f424:	da0b      	bge.n	800f43e <USBD_StdEPReq+0x2b2>
 800f426:	7bbb      	ldrb	r3, [r7, #14]
 800f428:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800f42c:	4613      	mov	r3, r2
 800f42e:	009b      	lsls	r3, r3, #2
 800f430:	4413      	add	r3, r2
 800f432:	009b      	lsls	r3, r3, #2
 800f434:	3310      	adds	r3, #16
 800f436:	687a      	ldr	r2, [r7, #4]
 800f438:	4413      	add	r3, r2
 800f43a:	3304      	adds	r3, #4
 800f43c:	e00b      	b.n	800f456 <USBD_StdEPReq+0x2ca>
 800f43e:	7bbb      	ldrb	r3, [r7, #14]
 800f440:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800f444:	4613      	mov	r3, r2
 800f446:	009b      	lsls	r3, r3, #2
 800f448:	4413      	add	r3, r2
 800f44a:	009b      	lsls	r3, r3, #2
 800f44c:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 800f450:	687a      	ldr	r2, [r7, #4]
 800f452:	4413      	add	r3, r2
 800f454:	3304      	adds	r3, #4
 800f456:	60bb      	str	r3, [r7, #8]
 800f458:	7bbb      	ldrb	r3, [r7, #14]
 800f45a:	2b00      	cmp	r3, #0
 800f45c:	d002      	beq.n	800f464 <USBD_StdEPReq+0x2d8>
 800f45e:	7bbb      	ldrb	r3, [r7, #14]
 800f460:	2b80      	cmp	r3, #128	@ 0x80
 800f462:	d103      	bne.n	800f46c <USBD_StdEPReq+0x2e0>
 800f464:	68bb      	ldr	r3, [r7, #8]
 800f466:	2200      	movs	r2, #0
 800f468:	601a      	str	r2, [r3, #0]
 800f46a:	e00e      	b.n	800f48a <USBD_StdEPReq+0x2fe>
 800f46c:	7bbb      	ldrb	r3, [r7, #14]
 800f46e:	4619      	mov	r1, r3
 800f470:	6878      	ldr	r0, [r7, #4]
 800f472:	f001 f8f3 	bl	801065c <USBD_LL_IsStallEP>
 800f476:	4603      	mov	r3, r0
 800f478:	2b00      	cmp	r3, #0
 800f47a:	d003      	beq.n	800f484 <USBD_StdEPReq+0x2f8>
 800f47c:	68bb      	ldr	r3, [r7, #8]
 800f47e:	2201      	movs	r2, #1
 800f480:	601a      	str	r2, [r3, #0]
 800f482:	e002      	b.n	800f48a <USBD_StdEPReq+0x2fe>
 800f484:	68bb      	ldr	r3, [r7, #8]
 800f486:	2200      	movs	r2, #0
 800f488:	601a      	str	r2, [r3, #0]
 800f48a:	68bb      	ldr	r3, [r7, #8]
 800f48c:	2202      	movs	r2, #2
 800f48e:	4619      	mov	r1, r3
 800f490:	6878      	ldr	r0, [r7, #4]
 800f492:	f000 fc07 	bl	800fca4 <USBD_CtlSendData>
 800f496:	e004      	b.n	800f4a2 <USBD_StdEPReq+0x316>
 800f498:	6839      	ldr	r1, [r7, #0]
 800f49a:	6878      	ldr	r0, [r7, #4]
 800f49c:	f000 fb85 	bl	800fbaa <USBD_CtlError>
 800f4a0:	bf00      	nop
 800f4a2:	e004      	b.n	800f4ae <USBD_StdEPReq+0x322>
 800f4a4:	6839      	ldr	r1, [r7, #0]
 800f4a6:	6878      	ldr	r0, [r7, #4]
 800f4a8:	f000 fb7f 	bl	800fbaa <USBD_CtlError>
 800f4ac:	bf00      	nop
 800f4ae:	e005      	b.n	800f4bc <USBD_StdEPReq+0x330>
 800f4b0:	6839      	ldr	r1, [r7, #0]
 800f4b2:	6878      	ldr	r0, [r7, #4]
 800f4b4:	f000 fb79 	bl	800fbaa <USBD_CtlError>
 800f4b8:	e000      	b.n	800f4bc <USBD_StdEPReq+0x330>
 800f4ba:	bf00      	nop
 800f4bc:	7bfb      	ldrb	r3, [r7, #15]
 800f4be:	4618      	mov	r0, r3
 800f4c0:	3710      	adds	r7, #16
 800f4c2:	46bd      	mov	sp, r7
 800f4c4:	bd80      	pop	{r7, pc}
	...

0800f4c8 <USBD_GetDescriptor>:
 800f4c8:	b580      	push	{r7, lr}
 800f4ca:	b084      	sub	sp, #16
 800f4cc:	af00      	add	r7, sp, #0
 800f4ce:	6078      	str	r0, [r7, #4]
 800f4d0:	6039      	str	r1, [r7, #0]
 800f4d2:	2300      	movs	r3, #0
 800f4d4:	813b      	strh	r3, [r7, #8]
 800f4d6:	2300      	movs	r3, #0
 800f4d8:	60fb      	str	r3, [r7, #12]
 800f4da:	2300      	movs	r3, #0
 800f4dc:	72fb      	strb	r3, [r7, #11]
 800f4de:	683b      	ldr	r3, [r7, #0]
 800f4e0:	885b      	ldrh	r3, [r3, #2]
 800f4e2:	0a1b      	lsrs	r3, r3, #8
 800f4e4:	b29b      	uxth	r3, r3
 800f4e6:	3b01      	subs	r3, #1
 800f4e8:	2b0e      	cmp	r3, #14
 800f4ea:	f200 8152 	bhi.w	800f792 <USBD_GetDescriptor+0x2ca>
 800f4ee:	a201      	add	r2, pc, #4	@ (adr r2, 800f4f4 <USBD_GetDescriptor+0x2c>)
 800f4f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f4f4:	0800f565 	.word	0x0800f565
 800f4f8:	0800f57d 	.word	0x0800f57d
 800f4fc:	0800f5bd 	.word	0x0800f5bd
 800f500:	0800f793 	.word	0x0800f793
 800f504:	0800f793 	.word	0x0800f793
 800f508:	0800f733 	.word	0x0800f733
 800f50c:	0800f75f 	.word	0x0800f75f
 800f510:	0800f793 	.word	0x0800f793
 800f514:	0800f793 	.word	0x0800f793
 800f518:	0800f793 	.word	0x0800f793
 800f51c:	0800f793 	.word	0x0800f793
 800f520:	0800f793 	.word	0x0800f793
 800f524:	0800f793 	.word	0x0800f793
 800f528:	0800f793 	.word	0x0800f793
 800f52c:	0800f531 	.word	0x0800f531
 800f530:	687b      	ldr	r3, [r7, #4]
 800f532:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f536:	69db      	ldr	r3, [r3, #28]
 800f538:	2b00      	cmp	r3, #0
 800f53a:	d00b      	beq.n	800f554 <USBD_GetDescriptor+0x8c>
 800f53c:	687b      	ldr	r3, [r7, #4]
 800f53e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f542:	69db      	ldr	r3, [r3, #28]
 800f544:	687a      	ldr	r2, [r7, #4]
 800f546:	7c12      	ldrb	r2, [r2, #16]
 800f548:	f107 0108 	add.w	r1, r7, #8
 800f54c:	4610      	mov	r0, r2
 800f54e:	4798      	blx	r3
 800f550:	60f8      	str	r0, [r7, #12]
 800f552:	e126      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f554:	6839      	ldr	r1, [r7, #0]
 800f556:	6878      	ldr	r0, [r7, #4]
 800f558:	f000 fb27 	bl	800fbaa <USBD_CtlError>
 800f55c:	7afb      	ldrb	r3, [r7, #11]
 800f55e:	3301      	adds	r3, #1
 800f560:	72fb      	strb	r3, [r7, #11]
 800f562:	e11e      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f564:	687b      	ldr	r3, [r7, #4]
 800f566:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f56a:	681b      	ldr	r3, [r3, #0]
 800f56c:	687a      	ldr	r2, [r7, #4]
 800f56e:	7c12      	ldrb	r2, [r2, #16]
 800f570:	f107 0108 	add.w	r1, r7, #8
 800f574:	4610      	mov	r0, r2
 800f576:	4798      	blx	r3
 800f578:	60f8      	str	r0, [r7, #12]
 800f57a:	e112      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f57c:	687b      	ldr	r3, [r7, #4]
 800f57e:	7c1b      	ldrb	r3, [r3, #16]
 800f580:	2b00      	cmp	r3, #0
 800f582:	d10d      	bne.n	800f5a0 <USBD_GetDescriptor+0xd8>
 800f584:	687b      	ldr	r3, [r7, #4]
 800f586:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800f58a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f58c:	f107 0208 	add.w	r2, r7, #8
 800f590:	4610      	mov	r0, r2
 800f592:	4798      	blx	r3
 800f594:	60f8      	str	r0, [r7, #12]
 800f596:	68fb      	ldr	r3, [r7, #12]
 800f598:	3301      	adds	r3, #1
 800f59a:	2202      	movs	r2, #2
 800f59c:	701a      	strb	r2, [r3, #0]
 800f59e:	e100      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f5a0:	687b      	ldr	r3, [r7, #4]
 800f5a2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800f5a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f5a8:	f107 0208 	add.w	r2, r7, #8
 800f5ac:	4610      	mov	r0, r2
 800f5ae:	4798      	blx	r3
 800f5b0:	60f8      	str	r0, [r7, #12]
 800f5b2:	68fb      	ldr	r3, [r7, #12]
 800f5b4:	3301      	adds	r3, #1
 800f5b6:	2202      	movs	r2, #2
 800f5b8:	701a      	strb	r2, [r3, #0]
 800f5ba:	e0f2      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f5bc:	683b      	ldr	r3, [r7, #0]
 800f5be:	885b      	ldrh	r3, [r3, #2]
 800f5c0:	b2db      	uxtb	r3, r3
 800f5c2:	2b05      	cmp	r3, #5
 800f5c4:	f200 80ac 	bhi.w	800f720 <USBD_GetDescriptor+0x258>
 800f5c8:	a201      	add	r2, pc, #4	@ (adr r2, 800f5d0 <USBD_GetDescriptor+0x108>)
 800f5ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f5ce:	bf00      	nop
 800f5d0:	0800f5e9 	.word	0x0800f5e9
 800f5d4:	0800f61d 	.word	0x0800f61d
 800f5d8:	0800f651 	.word	0x0800f651
 800f5dc:	0800f685 	.word	0x0800f685
 800f5e0:	0800f6b9 	.word	0x0800f6b9
 800f5e4:	0800f6ed 	.word	0x0800f6ed
 800f5e8:	687b      	ldr	r3, [r7, #4]
 800f5ea:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f5ee:	685b      	ldr	r3, [r3, #4]
 800f5f0:	2b00      	cmp	r3, #0
 800f5f2:	d00b      	beq.n	800f60c <USBD_GetDescriptor+0x144>
 800f5f4:	687b      	ldr	r3, [r7, #4]
 800f5f6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f5fa:	685b      	ldr	r3, [r3, #4]
 800f5fc:	687a      	ldr	r2, [r7, #4]
 800f5fe:	7c12      	ldrb	r2, [r2, #16]
 800f600:	f107 0108 	add.w	r1, r7, #8
 800f604:	4610      	mov	r0, r2
 800f606:	4798      	blx	r3
 800f608:	60f8      	str	r0, [r7, #12]
 800f60a:	e091      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f60c:	6839      	ldr	r1, [r7, #0]
 800f60e:	6878      	ldr	r0, [r7, #4]
 800f610:	f000 facb 	bl	800fbaa <USBD_CtlError>
 800f614:	7afb      	ldrb	r3, [r7, #11]
 800f616:	3301      	adds	r3, #1
 800f618:	72fb      	strb	r3, [r7, #11]
 800f61a:	e089      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f622:	689b      	ldr	r3, [r3, #8]
 800f624:	2b00      	cmp	r3, #0
 800f626:	d00b      	beq.n	800f640 <USBD_GetDescriptor+0x178>
 800f628:	687b      	ldr	r3, [r7, #4]
 800f62a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f62e:	689b      	ldr	r3, [r3, #8]
 800f630:	687a      	ldr	r2, [r7, #4]
 800f632:	7c12      	ldrb	r2, [r2, #16]
 800f634:	f107 0108 	add.w	r1, r7, #8
 800f638:	4610      	mov	r0, r2
 800f63a:	4798      	blx	r3
 800f63c:	60f8      	str	r0, [r7, #12]
 800f63e:	e077      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f640:	6839      	ldr	r1, [r7, #0]
 800f642:	6878      	ldr	r0, [r7, #4]
 800f644:	f000 fab1 	bl	800fbaa <USBD_CtlError>
 800f648:	7afb      	ldrb	r3, [r7, #11]
 800f64a:	3301      	adds	r3, #1
 800f64c:	72fb      	strb	r3, [r7, #11]
 800f64e:	e06f      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f650:	687b      	ldr	r3, [r7, #4]
 800f652:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f656:	68db      	ldr	r3, [r3, #12]
 800f658:	2b00      	cmp	r3, #0
 800f65a:	d00b      	beq.n	800f674 <USBD_GetDescriptor+0x1ac>
 800f65c:	687b      	ldr	r3, [r7, #4]
 800f65e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f662:	68db      	ldr	r3, [r3, #12]
 800f664:	687a      	ldr	r2, [r7, #4]
 800f666:	7c12      	ldrb	r2, [r2, #16]
 800f668:	f107 0108 	add.w	r1, r7, #8
 800f66c:	4610      	mov	r0, r2
 800f66e:	4798      	blx	r3
 800f670:	60f8      	str	r0, [r7, #12]
 800f672:	e05d      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f674:	6839      	ldr	r1, [r7, #0]
 800f676:	6878      	ldr	r0, [r7, #4]
 800f678:	f000 fa97 	bl	800fbaa <USBD_CtlError>
 800f67c:	7afb      	ldrb	r3, [r7, #11]
 800f67e:	3301      	adds	r3, #1
 800f680:	72fb      	strb	r3, [r7, #11]
 800f682:	e055      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f684:	687b      	ldr	r3, [r7, #4]
 800f686:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f68a:	691b      	ldr	r3, [r3, #16]
 800f68c:	2b00      	cmp	r3, #0
 800f68e:	d00b      	beq.n	800f6a8 <USBD_GetDescriptor+0x1e0>
 800f690:	687b      	ldr	r3, [r7, #4]
 800f692:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f696:	691b      	ldr	r3, [r3, #16]
 800f698:	687a      	ldr	r2, [r7, #4]
 800f69a:	7c12      	ldrb	r2, [r2, #16]
 800f69c:	f107 0108 	add.w	r1, r7, #8
 800f6a0:	4610      	mov	r0, r2
 800f6a2:	4798      	blx	r3
 800f6a4:	60f8      	str	r0, [r7, #12]
 800f6a6:	e043      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f6a8:	6839      	ldr	r1, [r7, #0]
 800f6aa:	6878      	ldr	r0, [r7, #4]
 800f6ac:	f000 fa7d 	bl	800fbaa <USBD_CtlError>
 800f6b0:	7afb      	ldrb	r3, [r7, #11]
 800f6b2:	3301      	adds	r3, #1
 800f6b4:	72fb      	strb	r3, [r7, #11]
 800f6b6:	e03b      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f6b8:	687b      	ldr	r3, [r7, #4]
 800f6ba:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f6be:	695b      	ldr	r3, [r3, #20]
 800f6c0:	2b00      	cmp	r3, #0
 800f6c2:	d00b      	beq.n	800f6dc <USBD_GetDescriptor+0x214>
 800f6c4:	687b      	ldr	r3, [r7, #4]
 800f6c6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f6ca:	695b      	ldr	r3, [r3, #20]
 800f6cc:	687a      	ldr	r2, [r7, #4]
 800f6ce:	7c12      	ldrb	r2, [r2, #16]
 800f6d0:	f107 0108 	add.w	r1, r7, #8
 800f6d4:	4610      	mov	r0, r2
 800f6d6:	4798      	blx	r3
 800f6d8:	60f8      	str	r0, [r7, #12]
 800f6da:	e029      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f6dc:	6839      	ldr	r1, [r7, #0]
 800f6de:	6878      	ldr	r0, [r7, #4]
 800f6e0:	f000 fa63 	bl	800fbaa <USBD_CtlError>
 800f6e4:	7afb      	ldrb	r3, [r7, #11]
 800f6e6:	3301      	adds	r3, #1
 800f6e8:	72fb      	strb	r3, [r7, #11]
 800f6ea:	e021      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f6ec:	687b      	ldr	r3, [r7, #4]
 800f6ee:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f6f2:	699b      	ldr	r3, [r3, #24]
 800f6f4:	2b00      	cmp	r3, #0
 800f6f6:	d00b      	beq.n	800f710 <USBD_GetDescriptor+0x248>
 800f6f8:	687b      	ldr	r3, [r7, #4]
 800f6fa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800f6fe:	699b      	ldr	r3, [r3, #24]
 800f700:	687a      	ldr	r2, [r7, #4]
 800f702:	7c12      	ldrb	r2, [r2, #16]
 800f704:	f107 0108 	add.w	r1, r7, #8
 800f708:	4610      	mov	r0, r2
 800f70a:	4798      	blx	r3
 800f70c:	60f8      	str	r0, [r7, #12]
 800f70e:	e00f      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f710:	6839      	ldr	r1, [r7, #0]
 800f712:	6878      	ldr	r0, [r7, #4]
 800f714:	f000 fa49 	bl	800fbaa <USBD_CtlError>
 800f718:	7afb      	ldrb	r3, [r7, #11]
 800f71a:	3301      	adds	r3, #1
 800f71c:	72fb      	strb	r3, [r7, #11]
 800f71e:	e007      	b.n	800f730 <USBD_GetDescriptor+0x268>
 800f720:	6839      	ldr	r1, [r7, #0]
 800f722:	6878      	ldr	r0, [r7, #4]
 800f724:	f000 fa41 	bl	800fbaa <USBD_CtlError>
 800f728:	7afb      	ldrb	r3, [r7, #11]
 800f72a:	3301      	adds	r3, #1
 800f72c:	72fb      	strb	r3, [r7, #11]
 800f72e:	bf00      	nop
 800f730:	e037      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f732:	687b      	ldr	r3, [r7, #4]
 800f734:	7c1b      	ldrb	r3, [r3, #16]
 800f736:	2b00      	cmp	r3, #0
 800f738:	d109      	bne.n	800f74e <USBD_GetDescriptor+0x286>
 800f73a:	687b      	ldr	r3, [r7, #4]
 800f73c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800f740:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f742:	f107 0208 	add.w	r2, r7, #8
 800f746:	4610      	mov	r0, r2
 800f748:	4798      	blx	r3
 800f74a:	60f8      	str	r0, [r7, #12]
 800f74c:	e029      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f74e:	6839      	ldr	r1, [r7, #0]
 800f750:	6878      	ldr	r0, [r7, #4]
 800f752:	f000 fa2a 	bl	800fbaa <USBD_CtlError>
 800f756:	7afb      	ldrb	r3, [r7, #11]
 800f758:	3301      	adds	r3, #1
 800f75a:	72fb      	strb	r3, [r7, #11]
 800f75c:	e021      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	7c1b      	ldrb	r3, [r3, #16]
 800f762:	2b00      	cmp	r3, #0
 800f764:	d10d      	bne.n	800f782 <USBD_GetDescriptor+0x2ba>
 800f766:	687b      	ldr	r3, [r7, #4]
 800f768:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 800f76c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f76e:	f107 0208 	add.w	r2, r7, #8
 800f772:	4610      	mov	r0, r2
 800f774:	4798      	blx	r3
 800f776:	60f8      	str	r0, [r7, #12]
 800f778:	68fb      	ldr	r3, [r7, #12]
 800f77a:	3301      	adds	r3, #1
 800f77c:	2207      	movs	r2, #7
 800f77e:	701a      	strb	r2, [r3, #0]
 800f780:	e00f      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f782:	6839      	ldr	r1, [r7, #0]
 800f784:	6878      	ldr	r0, [r7, #4]
 800f786:	f000 fa10 	bl	800fbaa <USBD_CtlError>
 800f78a:	7afb      	ldrb	r3, [r7, #11]
 800f78c:	3301      	adds	r3, #1
 800f78e:	72fb      	strb	r3, [r7, #11]
 800f790:	e007      	b.n	800f7a2 <USBD_GetDescriptor+0x2da>
 800f792:	6839      	ldr	r1, [r7, #0]
 800f794:	6878      	ldr	r0, [r7, #4]
 800f796:	f000 fa08 	bl	800fbaa <USBD_CtlError>
 800f79a:	7afb      	ldrb	r3, [r7, #11]
 800f79c:	3301      	adds	r3, #1
 800f79e:	72fb      	strb	r3, [r7, #11]
 800f7a0:	bf00      	nop
 800f7a2:	7afb      	ldrb	r3, [r7, #11]
 800f7a4:	2b00      	cmp	r3, #0
 800f7a6:	d11e      	bne.n	800f7e6 <USBD_GetDescriptor+0x31e>
 800f7a8:	683b      	ldr	r3, [r7, #0]
 800f7aa:	88db      	ldrh	r3, [r3, #6]
 800f7ac:	2b00      	cmp	r3, #0
 800f7ae:	d016      	beq.n	800f7de <USBD_GetDescriptor+0x316>
 800f7b0:	893b      	ldrh	r3, [r7, #8]
 800f7b2:	2b00      	cmp	r3, #0
 800f7b4:	d00e      	beq.n	800f7d4 <USBD_GetDescriptor+0x30c>
 800f7b6:	683b      	ldr	r3, [r7, #0]
 800f7b8:	88da      	ldrh	r2, [r3, #6]
 800f7ba:	893b      	ldrh	r3, [r7, #8]
 800f7bc:	4293      	cmp	r3, r2
 800f7be:	bf28      	it	cs
 800f7c0:	4613      	movcs	r3, r2
 800f7c2:	b29b      	uxth	r3, r3
 800f7c4:	813b      	strh	r3, [r7, #8]
 800f7c6:	893b      	ldrh	r3, [r7, #8]
 800f7c8:	461a      	mov	r2, r3
 800f7ca:	68f9      	ldr	r1, [r7, #12]
 800f7cc:	6878      	ldr	r0, [r7, #4]
 800f7ce:	f000 fa69 	bl	800fca4 <USBD_CtlSendData>
 800f7d2:	e009      	b.n	800f7e8 <USBD_GetDescriptor+0x320>
 800f7d4:	6839      	ldr	r1, [r7, #0]
 800f7d6:	6878      	ldr	r0, [r7, #4]
 800f7d8:	f000 f9e7 	bl	800fbaa <USBD_CtlError>
 800f7dc:	e004      	b.n	800f7e8 <USBD_GetDescriptor+0x320>
 800f7de:	6878      	ldr	r0, [r7, #4]
 800f7e0:	f000 faba 	bl	800fd58 <USBD_CtlSendStatus>
 800f7e4:	e000      	b.n	800f7e8 <USBD_GetDescriptor+0x320>
 800f7e6:	bf00      	nop
 800f7e8:	3710      	adds	r7, #16
 800f7ea:	46bd      	mov	sp, r7
 800f7ec:	bd80      	pop	{r7, pc}
 800f7ee:	bf00      	nop

0800f7f0 <USBD_SetAddress>:
 800f7f0:	b580      	push	{r7, lr}
 800f7f2:	b084      	sub	sp, #16
 800f7f4:	af00      	add	r7, sp, #0
 800f7f6:	6078      	str	r0, [r7, #4]
 800f7f8:	6039      	str	r1, [r7, #0]
 800f7fa:	683b      	ldr	r3, [r7, #0]
 800f7fc:	889b      	ldrh	r3, [r3, #4]
 800f7fe:	2b00      	cmp	r3, #0
 800f800:	d131      	bne.n	800f866 <USBD_SetAddress+0x76>
 800f802:	683b      	ldr	r3, [r7, #0]
 800f804:	88db      	ldrh	r3, [r3, #6]
 800f806:	2b00      	cmp	r3, #0
 800f808:	d12d      	bne.n	800f866 <USBD_SetAddress+0x76>
 800f80a:	683b      	ldr	r3, [r7, #0]
 800f80c:	885b      	ldrh	r3, [r3, #2]
 800f80e:	2b7f      	cmp	r3, #127	@ 0x7f
 800f810:	d829      	bhi.n	800f866 <USBD_SetAddress+0x76>
 800f812:	683b      	ldr	r3, [r7, #0]
 800f814:	885b      	ldrh	r3, [r3, #2]
 800f816:	b2db      	uxtb	r3, r3
 800f818:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800f81c:	73fb      	strb	r3, [r7, #15]
 800f81e:	687b      	ldr	r3, [r7, #4]
 800f820:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f824:	b2db      	uxtb	r3, r3
 800f826:	2b03      	cmp	r3, #3
 800f828:	d104      	bne.n	800f834 <USBD_SetAddress+0x44>
 800f82a:	6839      	ldr	r1, [r7, #0]
 800f82c:	6878      	ldr	r0, [r7, #4]
 800f82e:	f000 f9bc 	bl	800fbaa <USBD_CtlError>
 800f832:	e01d      	b.n	800f870 <USBD_SetAddress+0x80>
 800f834:	687b      	ldr	r3, [r7, #4]
 800f836:	7bfa      	ldrb	r2, [r7, #15]
 800f838:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 800f83c:	7bfb      	ldrb	r3, [r7, #15]
 800f83e:	4619      	mov	r1, r3
 800f840:	6878      	ldr	r0, [r7, #4]
 800f842:	f000 ff37 	bl	80106b4 <USBD_LL_SetUSBAddress>
 800f846:	6878      	ldr	r0, [r7, #4]
 800f848:	f000 fa86 	bl	800fd58 <USBD_CtlSendStatus>
 800f84c:	7bfb      	ldrb	r3, [r7, #15]
 800f84e:	2b00      	cmp	r3, #0
 800f850:	d004      	beq.n	800f85c <USBD_SetAddress+0x6c>
 800f852:	687b      	ldr	r3, [r7, #4]
 800f854:	2202      	movs	r2, #2
 800f856:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f85a:	e009      	b.n	800f870 <USBD_SetAddress+0x80>
 800f85c:	687b      	ldr	r3, [r7, #4]
 800f85e:	2201      	movs	r2, #1
 800f860:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f864:	e004      	b.n	800f870 <USBD_SetAddress+0x80>
 800f866:	6839      	ldr	r1, [r7, #0]
 800f868:	6878      	ldr	r0, [r7, #4]
 800f86a:	f000 f99e 	bl	800fbaa <USBD_CtlError>
 800f86e:	bf00      	nop
 800f870:	bf00      	nop
 800f872:	3710      	adds	r7, #16
 800f874:	46bd      	mov	sp, r7
 800f876:	bd80      	pop	{r7, pc}

0800f878 <USBD_SetConfig>:
 800f878:	b580      	push	{r7, lr}
 800f87a:	b084      	sub	sp, #16
 800f87c:	af00      	add	r7, sp, #0
 800f87e:	6078      	str	r0, [r7, #4]
 800f880:	6039      	str	r1, [r7, #0]
 800f882:	2300      	movs	r3, #0
 800f884:	73fb      	strb	r3, [r7, #15]
 800f886:	683b      	ldr	r3, [r7, #0]
 800f888:	885b      	ldrh	r3, [r3, #2]
 800f88a:	b2da      	uxtb	r2, r3
 800f88c:	4b4e      	ldr	r3, [pc, #312]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f88e:	701a      	strb	r2, [r3, #0]
 800f890:	4b4d      	ldr	r3, [pc, #308]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f892:	781b      	ldrb	r3, [r3, #0]
 800f894:	2b01      	cmp	r3, #1
 800f896:	d905      	bls.n	800f8a4 <USBD_SetConfig+0x2c>
 800f898:	6839      	ldr	r1, [r7, #0]
 800f89a:	6878      	ldr	r0, [r7, #4]
 800f89c:	f000 f985 	bl	800fbaa <USBD_CtlError>
 800f8a0:	2303      	movs	r3, #3
 800f8a2:	e08c      	b.n	800f9be <USBD_SetConfig+0x146>
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f8aa:	b2db      	uxtb	r3, r3
 800f8ac:	2b02      	cmp	r3, #2
 800f8ae:	d002      	beq.n	800f8b6 <USBD_SetConfig+0x3e>
 800f8b0:	2b03      	cmp	r3, #3
 800f8b2:	d029      	beq.n	800f908 <USBD_SetConfig+0x90>
 800f8b4:	e075      	b.n	800f9a2 <USBD_SetConfig+0x12a>
 800f8b6:	4b44      	ldr	r3, [pc, #272]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f8b8:	781b      	ldrb	r3, [r3, #0]
 800f8ba:	2b00      	cmp	r3, #0
 800f8bc:	d020      	beq.n	800f900 <USBD_SetConfig+0x88>
 800f8be:	4b42      	ldr	r3, [pc, #264]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f8c0:	781b      	ldrb	r3, [r3, #0]
 800f8c2:	461a      	mov	r2, r3
 800f8c4:	687b      	ldr	r3, [r7, #4]
 800f8c6:	605a      	str	r2, [r3, #4]
 800f8c8:	4b3f      	ldr	r3, [pc, #252]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f8ca:	781b      	ldrb	r3, [r3, #0]
 800f8cc:	4619      	mov	r1, r3
 800f8ce:	6878      	ldr	r0, [r7, #4]
 800f8d0:	f7fe ffb9 	bl	800e846 <USBD_SetClassConfig>
 800f8d4:	4603      	mov	r3, r0
 800f8d6:	73fb      	strb	r3, [r7, #15]
 800f8d8:	7bfb      	ldrb	r3, [r7, #15]
 800f8da:	2b00      	cmp	r3, #0
 800f8dc:	d008      	beq.n	800f8f0 <USBD_SetConfig+0x78>
 800f8de:	6839      	ldr	r1, [r7, #0]
 800f8e0:	6878      	ldr	r0, [r7, #4]
 800f8e2:	f000 f962 	bl	800fbaa <USBD_CtlError>
 800f8e6:	687b      	ldr	r3, [r7, #4]
 800f8e8:	2202      	movs	r2, #2
 800f8ea:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f8ee:	e065      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f8f0:	6878      	ldr	r0, [r7, #4]
 800f8f2:	f000 fa31 	bl	800fd58 <USBD_CtlSendStatus>
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	2203      	movs	r2, #3
 800f8fa:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f8fe:	e05d      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f900:	6878      	ldr	r0, [r7, #4]
 800f902:	f000 fa29 	bl	800fd58 <USBD_CtlSendStatus>
 800f906:	e059      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f908:	4b2f      	ldr	r3, [pc, #188]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f90a:	781b      	ldrb	r3, [r3, #0]
 800f90c:	2b00      	cmp	r3, #0
 800f90e:	d112      	bne.n	800f936 <USBD_SetConfig+0xbe>
 800f910:	687b      	ldr	r3, [r7, #4]
 800f912:	2202      	movs	r2, #2
 800f914:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f918:	4b2b      	ldr	r3, [pc, #172]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f91a:	781b      	ldrb	r3, [r3, #0]
 800f91c:	461a      	mov	r2, r3
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	605a      	str	r2, [r3, #4]
 800f922:	4b29      	ldr	r3, [pc, #164]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f924:	781b      	ldrb	r3, [r3, #0]
 800f926:	4619      	mov	r1, r3
 800f928:	6878      	ldr	r0, [r7, #4]
 800f92a:	f7fe ffa8 	bl	800e87e <USBD_ClrClassConfig>
 800f92e:	6878      	ldr	r0, [r7, #4]
 800f930:	f000 fa12 	bl	800fd58 <USBD_CtlSendStatus>
 800f934:	e042      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f936:	4b24      	ldr	r3, [pc, #144]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f938:	781b      	ldrb	r3, [r3, #0]
 800f93a:	461a      	mov	r2, r3
 800f93c:	687b      	ldr	r3, [r7, #4]
 800f93e:	685b      	ldr	r3, [r3, #4]
 800f940:	429a      	cmp	r2, r3
 800f942:	d02a      	beq.n	800f99a <USBD_SetConfig+0x122>
 800f944:	687b      	ldr	r3, [r7, #4]
 800f946:	685b      	ldr	r3, [r3, #4]
 800f948:	b2db      	uxtb	r3, r3
 800f94a:	4619      	mov	r1, r3
 800f94c:	6878      	ldr	r0, [r7, #4]
 800f94e:	f7fe ff96 	bl	800e87e <USBD_ClrClassConfig>
 800f952:	4b1d      	ldr	r3, [pc, #116]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f954:	781b      	ldrb	r3, [r3, #0]
 800f956:	461a      	mov	r2, r3
 800f958:	687b      	ldr	r3, [r7, #4]
 800f95a:	605a      	str	r2, [r3, #4]
 800f95c:	4b1a      	ldr	r3, [pc, #104]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f95e:	781b      	ldrb	r3, [r3, #0]
 800f960:	4619      	mov	r1, r3
 800f962:	6878      	ldr	r0, [r7, #4]
 800f964:	f7fe ff6f 	bl	800e846 <USBD_SetClassConfig>
 800f968:	4603      	mov	r3, r0
 800f96a:	73fb      	strb	r3, [r7, #15]
 800f96c:	7bfb      	ldrb	r3, [r7, #15]
 800f96e:	2b00      	cmp	r3, #0
 800f970:	d00f      	beq.n	800f992 <USBD_SetConfig+0x11a>
 800f972:	6839      	ldr	r1, [r7, #0]
 800f974:	6878      	ldr	r0, [r7, #4]
 800f976:	f000 f918 	bl	800fbaa <USBD_CtlError>
 800f97a:	687b      	ldr	r3, [r7, #4]
 800f97c:	685b      	ldr	r3, [r3, #4]
 800f97e:	b2db      	uxtb	r3, r3
 800f980:	4619      	mov	r1, r3
 800f982:	6878      	ldr	r0, [r7, #4]
 800f984:	f7fe ff7b 	bl	800e87e <USBD_ClrClassConfig>
 800f988:	687b      	ldr	r3, [r7, #4]
 800f98a:	2202      	movs	r2, #2
 800f98c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 800f990:	e014      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f992:	6878      	ldr	r0, [r7, #4]
 800f994:	f000 f9e0 	bl	800fd58 <USBD_CtlSendStatus>
 800f998:	e010      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f99a:	6878      	ldr	r0, [r7, #4]
 800f99c:	f000 f9dc 	bl	800fd58 <USBD_CtlSendStatus>
 800f9a0:	e00c      	b.n	800f9bc <USBD_SetConfig+0x144>
 800f9a2:	6839      	ldr	r1, [r7, #0]
 800f9a4:	6878      	ldr	r0, [r7, #4]
 800f9a6:	f000 f900 	bl	800fbaa <USBD_CtlError>
 800f9aa:	4b07      	ldr	r3, [pc, #28]	@ (800f9c8 <USBD_SetConfig+0x150>)
 800f9ac:	781b      	ldrb	r3, [r3, #0]
 800f9ae:	4619      	mov	r1, r3
 800f9b0:	6878      	ldr	r0, [r7, #4]
 800f9b2:	f7fe ff64 	bl	800e87e <USBD_ClrClassConfig>
 800f9b6:	2303      	movs	r3, #3
 800f9b8:	73fb      	strb	r3, [r7, #15]
 800f9ba:	bf00      	nop
 800f9bc:	7bfb      	ldrb	r3, [r7, #15]
 800f9be:	4618      	mov	r0, r3
 800f9c0:	3710      	adds	r7, #16
 800f9c2:	46bd      	mov	sp, r7
 800f9c4:	bd80      	pop	{r7, pc}
 800f9c6:	bf00      	nop
 800f9c8:	24000990 	.word	0x24000990

0800f9cc <USBD_GetConfig>:
 800f9cc:	b580      	push	{r7, lr}
 800f9ce:	b082      	sub	sp, #8
 800f9d0:	af00      	add	r7, sp, #0
 800f9d2:	6078      	str	r0, [r7, #4]
 800f9d4:	6039      	str	r1, [r7, #0]
 800f9d6:	683b      	ldr	r3, [r7, #0]
 800f9d8:	88db      	ldrh	r3, [r3, #6]
 800f9da:	2b01      	cmp	r3, #1
 800f9dc:	d004      	beq.n	800f9e8 <USBD_GetConfig+0x1c>
 800f9de:	6839      	ldr	r1, [r7, #0]
 800f9e0:	6878      	ldr	r0, [r7, #4]
 800f9e2:	f000 f8e2 	bl	800fbaa <USBD_CtlError>
 800f9e6:	e023      	b.n	800fa30 <USBD_GetConfig+0x64>
 800f9e8:	687b      	ldr	r3, [r7, #4]
 800f9ea:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800f9ee:	b2db      	uxtb	r3, r3
 800f9f0:	2b02      	cmp	r3, #2
 800f9f2:	dc02      	bgt.n	800f9fa <USBD_GetConfig+0x2e>
 800f9f4:	2b00      	cmp	r3, #0
 800f9f6:	dc03      	bgt.n	800fa00 <USBD_GetConfig+0x34>
 800f9f8:	e015      	b.n	800fa26 <USBD_GetConfig+0x5a>
 800f9fa:	2b03      	cmp	r3, #3
 800f9fc:	d00b      	beq.n	800fa16 <USBD_GetConfig+0x4a>
 800f9fe:	e012      	b.n	800fa26 <USBD_GetConfig+0x5a>
 800fa00:	687b      	ldr	r3, [r7, #4]
 800fa02:	2200      	movs	r2, #0
 800fa04:	609a      	str	r2, [r3, #8]
 800fa06:	687b      	ldr	r3, [r7, #4]
 800fa08:	3308      	adds	r3, #8
 800fa0a:	2201      	movs	r2, #1
 800fa0c:	4619      	mov	r1, r3
 800fa0e:	6878      	ldr	r0, [r7, #4]
 800fa10:	f000 f948 	bl	800fca4 <USBD_CtlSendData>
 800fa14:	e00c      	b.n	800fa30 <USBD_GetConfig+0x64>
 800fa16:	687b      	ldr	r3, [r7, #4]
 800fa18:	3304      	adds	r3, #4
 800fa1a:	2201      	movs	r2, #1
 800fa1c:	4619      	mov	r1, r3
 800fa1e:	6878      	ldr	r0, [r7, #4]
 800fa20:	f000 f940 	bl	800fca4 <USBD_CtlSendData>
 800fa24:	e004      	b.n	800fa30 <USBD_GetConfig+0x64>
 800fa26:	6839      	ldr	r1, [r7, #0]
 800fa28:	6878      	ldr	r0, [r7, #4]
 800fa2a:	f000 f8be 	bl	800fbaa <USBD_CtlError>
 800fa2e:	bf00      	nop
 800fa30:	bf00      	nop
 800fa32:	3708      	adds	r7, #8
 800fa34:	46bd      	mov	sp, r7
 800fa36:	bd80      	pop	{r7, pc}

0800fa38 <USBD_GetStatus>:
 800fa38:	b580      	push	{r7, lr}
 800fa3a:	b082      	sub	sp, #8
 800fa3c:	af00      	add	r7, sp, #0
 800fa3e:	6078      	str	r0, [r7, #4]
 800fa40:	6039      	str	r1, [r7, #0]
 800fa42:	687b      	ldr	r3, [r7, #4]
 800fa44:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800fa48:	b2db      	uxtb	r3, r3
 800fa4a:	3b01      	subs	r3, #1
 800fa4c:	2b02      	cmp	r3, #2
 800fa4e:	d81e      	bhi.n	800fa8e <USBD_GetStatus+0x56>
 800fa50:	683b      	ldr	r3, [r7, #0]
 800fa52:	88db      	ldrh	r3, [r3, #6]
 800fa54:	2b02      	cmp	r3, #2
 800fa56:	d004      	beq.n	800fa62 <USBD_GetStatus+0x2a>
 800fa58:	6839      	ldr	r1, [r7, #0]
 800fa5a:	6878      	ldr	r0, [r7, #4]
 800fa5c:	f000 f8a5 	bl	800fbaa <USBD_CtlError>
 800fa60:	e01a      	b.n	800fa98 <USBD_GetStatus+0x60>
 800fa62:	687b      	ldr	r3, [r7, #4]
 800fa64:	2201      	movs	r2, #1
 800fa66:	60da      	str	r2, [r3, #12]
 800fa68:	687b      	ldr	r3, [r7, #4]
 800fa6a:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 800fa6e:	2b00      	cmp	r3, #0
 800fa70:	d005      	beq.n	800fa7e <USBD_GetStatus+0x46>
 800fa72:	687b      	ldr	r3, [r7, #4]
 800fa74:	68db      	ldr	r3, [r3, #12]
 800fa76:	f043 0202 	orr.w	r2, r3, #2
 800fa7a:	687b      	ldr	r3, [r7, #4]
 800fa7c:	60da      	str	r2, [r3, #12]
 800fa7e:	687b      	ldr	r3, [r7, #4]
 800fa80:	330c      	adds	r3, #12
 800fa82:	2202      	movs	r2, #2
 800fa84:	4619      	mov	r1, r3
 800fa86:	6878      	ldr	r0, [r7, #4]
 800fa88:	f000 f90c 	bl	800fca4 <USBD_CtlSendData>
 800fa8c:	e004      	b.n	800fa98 <USBD_GetStatus+0x60>
 800fa8e:	6839      	ldr	r1, [r7, #0]
 800fa90:	6878      	ldr	r0, [r7, #4]
 800fa92:	f000 f88a 	bl	800fbaa <USBD_CtlError>
 800fa96:	bf00      	nop
 800fa98:	bf00      	nop
 800fa9a:	3708      	adds	r7, #8
 800fa9c:	46bd      	mov	sp, r7
 800fa9e:	bd80      	pop	{r7, pc}

0800faa0 <USBD_SetFeature>:
 800faa0:	b580      	push	{r7, lr}
 800faa2:	b082      	sub	sp, #8
 800faa4:	af00      	add	r7, sp, #0
 800faa6:	6078      	str	r0, [r7, #4]
 800faa8:	6039      	str	r1, [r7, #0]
 800faaa:	683b      	ldr	r3, [r7, #0]
 800faac:	885b      	ldrh	r3, [r3, #2]
 800faae:	2b01      	cmp	r3, #1
 800fab0:	d107      	bne.n	800fac2 <USBD_SetFeature+0x22>
 800fab2:	687b      	ldr	r3, [r7, #4]
 800fab4:	2201      	movs	r2, #1
 800fab6:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 800faba:	6878      	ldr	r0, [r7, #4]
 800fabc:	f000 f94c 	bl	800fd58 <USBD_CtlSendStatus>
 800fac0:	e013      	b.n	800faea <USBD_SetFeature+0x4a>
 800fac2:	683b      	ldr	r3, [r7, #0]
 800fac4:	885b      	ldrh	r3, [r3, #2]
 800fac6:	2b02      	cmp	r3, #2
 800fac8:	d10b      	bne.n	800fae2 <USBD_SetFeature+0x42>
 800faca:	683b      	ldr	r3, [r7, #0]
 800facc:	889b      	ldrh	r3, [r3, #4]
 800face:	0a1b      	lsrs	r3, r3, #8
 800fad0:	b29b      	uxth	r3, r3
 800fad2:	b2da      	uxtb	r2, r3
 800fad4:	687b      	ldr	r3, [r7, #4]
 800fad6:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 800fada:	6878      	ldr	r0, [r7, #4]
 800fadc:	f000 f93c 	bl	800fd58 <USBD_CtlSendStatus>
 800fae0:	e003      	b.n	800faea <USBD_SetFeature+0x4a>
 800fae2:	6839      	ldr	r1, [r7, #0]
 800fae4:	6878      	ldr	r0, [r7, #4]
 800fae6:	f000 f860 	bl	800fbaa <USBD_CtlError>
 800faea:	bf00      	nop
 800faec:	3708      	adds	r7, #8
 800faee:	46bd      	mov	sp, r7
 800faf0:	bd80      	pop	{r7, pc}

0800faf2 <USBD_ClrFeature>:
 800faf2:	b580      	push	{r7, lr}
 800faf4:	b082      	sub	sp, #8
 800faf6:	af00      	add	r7, sp, #0
 800faf8:	6078      	str	r0, [r7, #4]
 800fafa:	6039      	str	r1, [r7, #0]
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 800fb02:	b2db      	uxtb	r3, r3
 800fb04:	3b01      	subs	r3, #1
 800fb06:	2b02      	cmp	r3, #2
 800fb08:	d80b      	bhi.n	800fb22 <USBD_ClrFeature+0x30>
 800fb0a:	683b      	ldr	r3, [r7, #0]
 800fb0c:	885b      	ldrh	r3, [r3, #2]
 800fb0e:	2b01      	cmp	r3, #1
 800fb10:	d10c      	bne.n	800fb2c <USBD_ClrFeature+0x3a>
 800fb12:	687b      	ldr	r3, [r7, #4]
 800fb14:	2200      	movs	r2, #0
 800fb16:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 800fb1a:	6878      	ldr	r0, [r7, #4]
 800fb1c:	f000 f91c 	bl	800fd58 <USBD_CtlSendStatus>
 800fb20:	e004      	b.n	800fb2c <USBD_ClrFeature+0x3a>
 800fb22:	6839      	ldr	r1, [r7, #0]
 800fb24:	6878      	ldr	r0, [r7, #4]
 800fb26:	f000 f840 	bl	800fbaa <USBD_CtlError>
 800fb2a:	e000      	b.n	800fb2e <USBD_ClrFeature+0x3c>
 800fb2c:	bf00      	nop
 800fb2e:	bf00      	nop
 800fb30:	3708      	adds	r7, #8
 800fb32:	46bd      	mov	sp, r7
 800fb34:	bd80      	pop	{r7, pc}

0800fb36 <USBD_ParseSetupRequest>:
 800fb36:	b580      	push	{r7, lr}
 800fb38:	b084      	sub	sp, #16
 800fb3a:	af00      	add	r7, sp, #0
 800fb3c:	6078      	str	r0, [r7, #4]
 800fb3e:	6039      	str	r1, [r7, #0]
 800fb40:	683b      	ldr	r3, [r7, #0]
 800fb42:	60fb      	str	r3, [r7, #12]
 800fb44:	68fb      	ldr	r3, [r7, #12]
 800fb46:	781a      	ldrb	r2, [r3, #0]
 800fb48:	687b      	ldr	r3, [r7, #4]
 800fb4a:	701a      	strb	r2, [r3, #0]
 800fb4c:	68fb      	ldr	r3, [r7, #12]
 800fb4e:	3301      	adds	r3, #1
 800fb50:	60fb      	str	r3, [r7, #12]
 800fb52:	68fb      	ldr	r3, [r7, #12]
 800fb54:	781a      	ldrb	r2, [r3, #0]
 800fb56:	687b      	ldr	r3, [r7, #4]
 800fb58:	705a      	strb	r2, [r3, #1]
 800fb5a:	68fb      	ldr	r3, [r7, #12]
 800fb5c:	3301      	adds	r3, #1
 800fb5e:	60fb      	str	r3, [r7, #12]
 800fb60:	68f8      	ldr	r0, [r7, #12]
 800fb62:	f7ff fa16 	bl	800ef92 <SWAPBYTE>
 800fb66:	4603      	mov	r3, r0
 800fb68:	461a      	mov	r2, r3
 800fb6a:	687b      	ldr	r3, [r7, #4]
 800fb6c:	805a      	strh	r2, [r3, #2]
 800fb6e:	68fb      	ldr	r3, [r7, #12]
 800fb70:	3301      	adds	r3, #1
 800fb72:	60fb      	str	r3, [r7, #12]
 800fb74:	68fb      	ldr	r3, [r7, #12]
 800fb76:	3301      	adds	r3, #1
 800fb78:	60fb      	str	r3, [r7, #12]
 800fb7a:	68f8      	ldr	r0, [r7, #12]
 800fb7c:	f7ff fa09 	bl	800ef92 <SWAPBYTE>
 800fb80:	4603      	mov	r3, r0
 800fb82:	461a      	mov	r2, r3
 800fb84:	687b      	ldr	r3, [r7, #4]
 800fb86:	809a      	strh	r2, [r3, #4]
 800fb88:	68fb      	ldr	r3, [r7, #12]
 800fb8a:	3301      	adds	r3, #1
 800fb8c:	60fb      	str	r3, [r7, #12]
 800fb8e:	68fb      	ldr	r3, [r7, #12]
 800fb90:	3301      	adds	r3, #1
 800fb92:	60fb      	str	r3, [r7, #12]
 800fb94:	68f8      	ldr	r0, [r7, #12]
 800fb96:	f7ff f9fc 	bl	800ef92 <SWAPBYTE>
 800fb9a:	4603      	mov	r3, r0
 800fb9c:	461a      	mov	r2, r3
 800fb9e:	687b      	ldr	r3, [r7, #4]
 800fba0:	80da      	strh	r2, [r3, #6]
 800fba2:	bf00      	nop
 800fba4:	3710      	adds	r7, #16
 800fba6:	46bd      	mov	sp, r7
 800fba8:	bd80      	pop	{r7, pc}

0800fbaa <USBD_CtlError>:
 800fbaa:	b580      	push	{r7, lr}
 800fbac:	b082      	sub	sp, #8
 800fbae:	af00      	add	r7, sp, #0
 800fbb0:	6078      	str	r0, [r7, #4]
 800fbb2:	6039      	str	r1, [r7, #0]
 800fbb4:	2180      	movs	r1, #128	@ 0x80
 800fbb6:	6878      	ldr	r0, [r7, #4]
 800fbb8:	f000 fd12 	bl	80105e0 <USBD_LL_StallEP>
 800fbbc:	2100      	movs	r1, #0
 800fbbe:	6878      	ldr	r0, [r7, #4]
 800fbc0:	f000 fd0e 	bl	80105e0 <USBD_LL_StallEP>
 800fbc4:	bf00      	nop
 800fbc6:	3708      	adds	r7, #8
 800fbc8:	46bd      	mov	sp, r7
 800fbca:	bd80      	pop	{r7, pc}

0800fbcc <USBD_GetString>:
 800fbcc:	b580      	push	{r7, lr}
 800fbce:	b086      	sub	sp, #24
 800fbd0:	af00      	add	r7, sp, #0
 800fbd2:	60f8      	str	r0, [r7, #12]
 800fbd4:	60b9      	str	r1, [r7, #8]
 800fbd6:	607a      	str	r2, [r7, #4]
 800fbd8:	2300      	movs	r3, #0
 800fbda:	75fb      	strb	r3, [r7, #23]
 800fbdc:	68fb      	ldr	r3, [r7, #12]
 800fbde:	2b00      	cmp	r3, #0
 800fbe0:	d042      	beq.n	800fc68 <USBD_GetString+0x9c>
 800fbe2:	68fb      	ldr	r3, [r7, #12]
 800fbe4:	613b      	str	r3, [r7, #16]
 800fbe6:	6938      	ldr	r0, [r7, #16]
 800fbe8:	f000 f842 	bl	800fc70 <USBD_GetLen>
 800fbec:	4603      	mov	r3, r0
 800fbee:	3301      	adds	r3, #1
 800fbf0:	005b      	lsls	r3, r3, #1
 800fbf2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800fbf6:	d808      	bhi.n	800fc0a <USBD_GetString+0x3e>
 800fbf8:	6938      	ldr	r0, [r7, #16]
 800fbfa:	f000 f839 	bl	800fc70 <USBD_GetLen>
 800fbfe:	4603      	mov	r3, r0
 800fc00:	3301      	adds	r3, #1
 800fc02:	b29b      	uxth	r3, r3
 800fc04:	005b      	lsls	r3, r3, #1
 800fc06:	b29a      	uxth	r2, r3
 800fc08:	e001      	b.n	800fc0e <USBD_GetString+0x42>
 800fc0a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800fc0e:	687b      	ldr	r3, [r7, #4]
 800fc10:	801a      	strh	r2, [r3, #0]
 800fc12:	7dfb      	ldrb	r3, [r7, #23]
 800fc14:	68ba      	ldr	r2, [r7, #8]
 800fc16:	4413      	add	r3, r2
 800fc18:	687a      	ldr	r2, [r7, #4]
 800fc1a:	7812      	ldrb	r2, [r2, #0]
 800fc1c:	701a      	strb	r2, [r3, #0]
 800fc1e:	7dfb      	ldrb	r3, [r7, #23]
 800fc20:	3301      	adds	r3, #1
 800fc22:	75fb      	strb	r3, [r7, #23]
 800fc24:	7dfb      	ldrb	r3, [r7, #23]
 800fc26:	68ba      	ldr	r2, [r7, #8]
 800fc28:	4413      	add	r3, r2
 800fc2a:	2203      	movs	r2, #3
 800fc2c:	701a      	strb	r2, [r3, #0]
 800fc2e:	7dfb      	ldrb	r3, [r7, #23]
 800fc30:	3301      	adds	r3, #1
 800fc32:	75fb      	strb	r3, [r7, #23]
 800fc34:	e013      	b.n	800fc5e <USBD_GetString+0x92>
 800fc36:	7dfb      	ldrb	r3, [r7, #23]
 800fc38:	68ba      	ldr	r2, [r7, #8]
 800fc3a:	4413      	add	r3, r2
 800fc3c:	693a      	ldr	r2, [r7, #16]
 800fc3e:	7812      	ldrb	r2, [r2, #0]
 800fc40:	701a      	strb	r2, [r3, #0]
 800fc42:	693b      	ldr	r3, [r7, #16]
 800fc44:	3301      	adds	r3, #1
 800fc46:	613b      	str	r3, [r7, #16]
 800fc48:	7dfb      	ldrb	r3, [r7, #23]
 800fc4a:	3301      	adds	r3, #1
 800fc4c:	75fb      	strb	r3, [r7, #23]
 800fc4e:	7dfb      	ldrb	r3, [r7, #23]
 800fc50:	68ba      	ldr	r2, [r7, #8]
 800fc52:	4413      	add	r3, r2
 800fc54:	2200      	movs	r2, #0
 800fc56:	701a      	strb	r2, [r3, #0]
 800fc58:	7dfb      	ldrb	r3, [r7, #23]
 800fc5a:	3301      	adds	r3, #1
 800fc5c:	75fb      	strb	r3, [r7, #23]
 800fc5e:	693b      	ldr	r3, [r7, #16]
 800fc60:	781b      	ldrb	r3, [r3, #0]
 800fc62:	2b00      	cmp	r3, #0
 800fc64:	d1e7      	bne.n	800fc36 <USBD_GetString+0x6a>
 800fc66:	e000      	b.n	800fc6a <USBD_GetString+0x9e>
 800fc68:	bf00      	nop
 800fc6a:	3718      	adds	r7, #24
 800fc6c:	46bd      	mov	sp, r7
 800fc6e:	bd80      	pop	{r7, pc}

0800fc70 <USBD_GetLen>:
 800fc70:	b480      	push	{r7}
 800fc72:	b085      	sub	sp, #20
 800fc74:	af00      	add	r7, sp, #0
 800fc76:	6078      	str	r0, [r7, #4]
 800fc78:	2300      	movs	r3, #0
 800fc7a:	73fb      	strb	r3, [r7, #15]
 800fc7c:	687b      	ldr	r3, [r7, #4]
 800fc7e:	60bb      	str	r3, [r7, #8]
 800fc80:	e005      	b.n	800fc8e <USBD_GetLen+0x1e>
 800fc82:	7bfb      	ldrb	r3, [r7, #15]
 800fc84:	3301      	adds	r3, #1
 800fc86:	73fb      	strb	r3, [r7, #15]
 800fc88:	68bb      	ldr	r3, [r7, #8]
 800fc8a:	3301      	adds	r3, #1
 800fc8c:	60bb      	str	r3, [r7, #8]
 800fc8e:	68bb      	ldr	r3, [r7, #8]
 800fc90:	781b      	ldrb	r3, [r3, #0]
 800fc92:	2b00      	cmp	r3, #0
 800fc94:	d1f5      	bne.n	800fc82 <USBD_GetLen+0x12>
 800fc96:	7bfb      	ldrb	r3, [r7, #15]
 800fc98:	4618      	mov	r0, r3
 800fc9a:	3714      	adds	r7, #20
 800fc9c:	46bd      	mov	sp, r7
 800fc9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fca2:	4770      	bx	lr

0800fca4 <USBD_CtlSendData>:
 800fca4:	b580      	push	{r7, lr}
 800fca6:	b084      	sub	sp, #16
 800fca8:	af00      	add	r7, sp, #0
 800fcaa:	60f8      	str	r0, [r7, #12]
 800fcac:	60b9      	str	r1, [r7, #8]
 800fcae:	607a      	str	r2, [r7, #4]
 800fcb0:	68fb      	ldr	r3, [r7, #12]
 800fcb2:	2202      	movs	r2, #2
 800fcb4:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800fcb8:	68fb      	ldr	r3, [r7, #12]
 800fcba:	687a      	ldr	r2, [r7, #4]
 800fcbc:	619a      	str	r2, [r3, #24]
 800fcbe:	68fb      	ldr	r3, [r7, #12]
 800fcc0:	687a      	ldr	r2, [r7, #4]
 800fcc2:	61da      	str	r2, [r3, #28]
 800fcc4:	687b      	ldr	r3, [r7, #4]
 800fcc6:	68ba      	ldr	r2, [r7, #8]
 800fcc8:	2100      	movs	r1, #0
 800fcca:	68f8      	ldr	r0, [r7, #12]
 800fccc:	f000 fd11 	bl	80106f2 <USBD_LL_Transmit>
 800fcd0:	2300      	movs	r3, #0
 800fcd2:	4618      	mov	r0, r3
 800fcd4:	3710      	adds	r7, #16
 800fcd6:	46bd      	mov	sp, r7
 800fcd8:	bd80      	pop	{r7, pc}

0800fcda <USBD_CtlContinueSendData>:
 800fcda:	b580      	push	{r7, lr}
 800fcdc:	b084      	sub	sp, #16
 800fcde:	af00      	add	r7, sp, #0
 800fce0:	60f8      	str	r0, [r7, #12]
 800fce2:	60b9      	str	r1, [r7, #8]
 800fce4:	607a      	str	r2, [r7, #4]
 800fce6:	687b      	ldr	r3, [r7, #4]
 800fce8:	68ba      	ldr	r2, [r7, #8]
 800fcea:	2100      	movs	r1, #0
 800fcec:	68f8      	ldr	r0, [r7, #12]
 800fcee:	f000 fd00 	bl	80106f2 <USBD_LL_Transmit>
 800fcf2:	2300      	movs	r3, #0
 800fcf4:	4618      	mov	r0, r3
 800fcf6:	3710      	adds	r7, #16
 800fcf8:	46bd      	mov	sp, r7
 800fcfa:	bd80      	pop	{r7, pc}

0800fcfc <USBD_CtlPrepareRx>:
 800fcfc:	b580      	push	{r7, lr}
 800fcfe:	b084      	sub	sp, #16
 800fd00:	af00      	add	r7, sp, #0
 800fd02:	60f8      	str	r0, [r7, #12]
 800fd04:	60b9      	str	r1, [r7, #8]
 800fd06:	607a      	str	r2, [r7, #4]
 800fd08:	68fb      	ldr	r3, [r7, #12]
 800fd0a:	2203      	movs	r2, #3
 800fd0c:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800fd10:	68fb      	ldr	r3, [r7, #12]
 800fd12:	687a      	ldr	r2, [r7, #4]
 800fd14:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 800fd18:	68fb      	ldr	r3, [r7, #12]
 800fd1a:	687a      	ldr	r2, [r7, #4]
 800fd1c:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 800fd20:	687b      	ldr	r3, [r7, #4]
 800fd22:	68ba      	ldr	r2, [r7, #8]
 800fd24:	2100      	movs	r1, #0
 800fd26:	68f8      	ldr	r0, [r7, #12]
 800fd28:	f000 fd04 	bl	8010734 <USBD_LL_PrepareReceive>
 800fd2c:	2300      	movs	r3, #0
 800fd2e:	4618      	mov	r0, r3
 800fd30:	3710      	adds	r7, #16
 800fd32:	46bd      	mov	sp, r7
 800fd34:	bd80      	pop	{r7, pc}

0800fd36 <USBD_CtlContinueRx>:
 800fd36:	b580      	push	{r7, lr}
 800fd38:	b084      	sub	sp, #16
 800fd3a:	af00      	add	r7, sp, #0
 800fd3c:	60f8      	str	r0, [r7, #12]
 800fd3e:	60b9      	str	r1, [r7, #8]
 800fd40:	607a      	str	r2, [r7, #4]
 800fd42:	687b      	ldr	r3, [r7, #4]
 800fd44:	68ba      	ldr	r2, [r7, #8]
 800fd46:	2100      	movs	r1, #0
 800fd48:	68f8      	ldr	r0, [r7, #12]
 800fd4a:	f000 fcf3 	bl	8010734 <USBD_LL_PrepareReceive>
 800fd4e:	2300      	movs	r3, #0
 800fd50:	4618      	mov	r0, r3
 800fd52:	3710      	adds	r7, #16
 800fd54:	46bd      	mov	sp, r7
 800fd56:	bd80      	pop	{r7, pc}

0800fd58 <USBD_CtlSendStatus>:
 800fd58:	b580      	push	{r7, lr}
 800fd5a:	b082      	sub	sp, #8
 800fd5c:	af00      	add	r7, sp, #0
 800fd5e:	6078      	str	r0, [r7, #4]
 800fd60:	687b      	ldr	r3, [r7, #4]
 800fd62:	2204      	movs	r2, #4
 800fd64:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800fd68:	2300      	movs	r3, #0
 800fd6a:	2200      	movs	r2, #0
 800fd6c:	2100      	movs	r1, #0
 800fd6e:	6878      	ldr	r0, [r7, #4]
 800fd70:	f000 fcbf 	bl	80106f2 <USBD_LL_Transmit>
 800fd74:	2300      	movs	r3, #0
 800fd76:	4618      	mov	r0, r3
 800fd78:	3708      	adds	r7, #8
 800fd7a:	46bd      	mov	sp, r7
 800fd7c:	bd80      	pop	{r7, pc}

0800fd7e <USBD_CtlReceiveStatus>:
 800fd7e:	b580      	push	{r7, lr}
 800fd80:	b082      	sub	sp, #8
 800fd82:	af00      	add	r7, sp, #0
 800fd84:	6078      	str	r0, [r7, #4]
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	2205      	movs	r2, #5
 800fd8a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 800fd8e:	2300      	movs	r3, #0
 800fd90:	2200      	movs	r2, #0
 800fd92:	2100      	movs	r1, #0
 800fd94:	6878      	ldr	r0, [r7, #4]
 800fd96:	f000 fccd 	bl	8010734 <USBD_LL_PrepareReceive>
 800fd9a:	2300      	movs	r3, #0
 800fd9c:	4618      	mov	r0, r3
 800fd9e:	3708      	adds	r7, #8
 800fda0:	46bd      	mov	sp, r7
 800fda2:	bd80      	pop	{r7, pc}

0800fda4 <MX_USB_DEVICE_Init>:
 800fda4:	b580      	push	{r7, lr}
 800fda6:	af00      	add	r7, sp, #0
 800fda8:	2200      	movs	r2, #0
 800fdaa:	4913      	ldr	r1, [pc, #76]	@ (800fdf8 <MX_USB_DEVICE_Init+0x54>)
 800fdac:	4813      	ldr	r0, [pc, #76]	@ (800fdfc <MX_USB_DEVICE_Init+0x58>)
 800fdae:	f7fe fccd 	bl	800e74c <USBD_Init>
 800fdb2:	4603      	mov	r3, r0
 800fdb4:	2b00      	cmp	r3, #0
 800fdb6:	d001      	beq.n	800fdbc <MX_USB_DEVICE_Init+0x18>
 800fdb8:	f7f1 fd2c 	bl	8001814 <Error_Handler>
 800fdbc:	4910      	ldr	r1, [pc, #64]	@ (800fe00 <MX_USB_DEVICE_Init+0x5c>)
 800fdbe:	480f      	ldr	r0, [pc, #60]	@ (800fdfc <MX_USB_DEVICE_Init+0x58>)
 800fdc0:	f7fe fcf4 	bl	800e7ac <USBD_RegisterClass>
 800fdc4:	4603      	mov	r3, r0
 800fdc6:	2b00      	cmp	r3, #0
 800fdc8:	d001      	beq.n	800fdce <MX_USB_DEVICE_Init+0x2a>
 800fdca:	f7f1 fd23 	bl	8001814 <Error_Handler>
 800fdce:	490d      	ldr	r1, [pc, #52]	@ (800fe04 <MX_USB_DEVICE_Init+0x60>)
 800fdd0:	480a      	ldr	r0, [pc, #40]	@ (800fdfc <MX_USB_DEVICE_Init+0x58>)
 800fdd2:	f7fe fbeb 	bl	800e5ac <USBD_CDC_RegisterInterface>
 800fdd6:	4603      	mov	r3, r0
 800fdd8:	2b00      	cmp	r3, #0
 800fdda:	d001      	beq.n	800fde0 <MX_USB_DEVICE_Init+0x3c>
 800fddc:	f7f1 fd1a 	bl	8001814 <Error_Handler>
 800fde0:	4806      	ldr	r0, [pc, #24]	@ (800fdfc <MX_USB_DEVICE_Init+0x58>)
 800fde2:	f7fe fd19 	bl	800e818 <USBD_Start>
 800fde6:	4603      	mov	r3, r0
 800fde8:	2b00      	cmp	r3, #0
 800fdea:	d001      	beq.n	800fdf0 <MX_USB_DEVICE_Init+0x4c>
 800fdec:	f7f1 fd12 	bl	8001814 <Error_Handler>
 800fdf0:	f7f6 ffb0 	bl	8006d54 <HAL_PWREx_EnableUSBVoltageDetector>
 800fdf4:	bf00      	nop
 800fdf6:	bd80      	pop	{r7, pc}
 800fdf8:	24000140 	.word	0x24000140
 800fdfc:	24000994 	.word	0x24000994
 800fe00:	240000ac 	.word	0x240000ac
 800fe04:	2400012c 	.word	0x2400012c

0800fe08 <CDC_Init_FS>:
 800fe08:	b580      	push	{r7, lr}
 800fe0a:	af00      	add	r7, sp, #0
 800fe0c:	2200      	movs	r2, #0
 800fe0e:	4905      	ldr	r1, [pc, #20]	@ (800fe24 <CDC_Init_FS+0x1c>)
 800fe10:	4805      	ldr	r0, [pc, #20]	@ (800fe28 <CDC_Init_FS+0x20>)
 800fe12:	f7fe fbe5 	bl	800e5e0 <USBD_CDC_SetTxBuffer>
 800fe16:	4905      	ldr	r1, [pc, #20]	@ (800fe2c <CDC_Init_FS+0x24>)
 800fe18:	4803      	ldr	r0, [pc, #12]	@ (800fe28 <CDC_Init_FS+0x20>)
 800fe1a:	f7fe fc03 	bl	800e624 <USBD_CDC_SetRxBuffer>
 800fe1e:	2300      	movs	r3, #0
 800fe20:	4618      	mov	r0, r3
 800fe22:	bd80      	pop	{r7, pc}
 800fe24:	24001470 	.word	0x24001470
 800fe28:	24000994 	.word	0x24000994
 800fe2c:	24000c70 	.word	0x24000c70

0800fe30 <CDC_DeInit_FS>:
 800fe30:	b480      	push	{r7}
 800fe32:	af00      	add	r7, sp, #0
 800fe34:	2300      	movs	r3, #0
 800fe36:	4618      	mov	r0, r3
 800fe38:	46bd      	mov	sp, r7
 800fe3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe3e:	4770      	bx	lr

0800fe40 <CDC_Control_FS>:
 800fe40:	b480      	push	{r7}
 800fe42:	b083      	sub	sp, #12
 800fe44:	af00      	add	r7, sp, #0
 800fe46:	4603      	mov	r3, r0
 800fe48:	6039      	str	r1, [r7, #0]
 800fe4a:	71fb      	strb	r3, [r7, #7]
 800fe4c:	4613      	mov	r3, r2
 800fe4e:	80bb      	strh	r3, [r7, #4]
 800fe50:	79fb      	ldrb	r3, [r7, #7]
 800fe52:	2b23      	cmp	r3, #35	@ 0x23
 800fe54:	d84a      	bhi.n	800feec <CDC_Control_FS+0xac>
 800fe56:	a201      	add	r2, pc, #4	@ (adr r2, 800fe5c <CDC_Control_FS+0x1c>)
 800fe58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fe5c:	0800feed 	.word	0x0800feed
 800fe60:	0800feed 	.word	0x0800feed
 800fe64:	0800feed 	.word	0x0800feed
 800fe68:	0800feed 	.word	0x0800feed
 800fe6c:	0800feed 	.word	0x0800feed
 800fe70:	0800feed 	.word	0x0800feed
 800fe74:	0800feed 	.word	0x0800feed
 800fe78:	0800feed 	.word	0x0800feed
 800fe7c:	0800feed 	.word	0x0800feed
 800fe80:	0800feed 	.word	0x0800feed
 800fe84:	0800feed 	.word	0x0800feed
 800fe88:	0800feed 	.word	0x0800feed
 800fe8c:	0800feed 	.word	0x0800feed
 800fe90:	0800feed 	.word	0x0800feed
 800fe94:	0800feed 	.word	0x0800feed
 800fe98:	0800feed 	.word	0x0800feed
 800fe9c:	0800feed 	.word	0x0800feed
 800fea0:	0800feed 	.word	0x0800feed
 800fea4:	0800feed 	.word	0x0800feed
 800fea8:	0800feed 	.word	0x0800feed
 800feac:	0800feed 	.word	0x0800feed
 800feb0:	0800feed 	.word	0x0800feed
 800feb4:	0800feed 	.word	0x0800feed
 800feb8:	0800feed 	.word	0x0800feed
 800febc:	0800feed 	.word	0x0800feed
 800fec0:	0800feed 	.word	0x0800feed
 800fec4:	0800feed 	.word	0x0800feed
 800fec8:	0800feed 	.word	0x0800feed
 800fecc:	0800feed 	.word	0x0800feed
 800fed0:	0800feed 	.word	0x0800feed
 800fed4:	0800feed 	.word	0x0800feed
 800fed8:	0800feed 	.word	0x0800feed
 800fedc:	0800feed 	.word	0x0800feed
 800fee0:	0800feed 	.word	0x0800feed
 800fee4:	0800feed 	.word	0x0800feed
 800fee8:	0800feed 	.word	0x0800feed
 800feec:	bf00      	nop
 800feee:	2300      	movs	r3, #0
 800fef0:	4618      	mov	r0, r3
 800fef2:	370c      	adds	r7, #12
 800fef4:	46bd      	mov	sp, r7
 800fef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fefa:	4770      	bx	lr

0800fefc <CDC_Receive_FS>:
 800fefc:	b580      	push	{r7, lr}
 800fefe:	b082      	sub	sp, #8
 800ff00:	af00      	add	r7, sp, #0
 800ff02:	6078      	str	r0, [r7, #4]
 800ff04:	6039      	str	r1, [r7, #0]
 800ff06:	6879      	ldr	r1, [r7, #4]
 800ff08:	4805      	ldr	r0, [pc, #20]	@ (800ff20 <CDC_Receive_FS+0x24>)
 800ff0a:	f7fe fb8b 	bl	800e624 <USBD_CDC_SetRxBuffer>
 800ff0e:	4804      	ldr	r0, [pc, #16]	@ (800ff20 <CDC_Receive_FS+0x24>)
 800ff10:	f7fe fbe6 	bl	800e6e0 <USBD_CDC_ReceivePacket>
 800ff14:	2300      	movs	r3, #0
 800ff16:	4618      	mov	r0, r3
 800ff18:	3708      	adds	r7, #8
 800ff1a:	46bd      	mov	sp, r7
 800ff1c:	bd80      	pop	{r7, pc}
 800ff1e:	bf00      	nop
 800ff20:	24000994 	.word	0x24000994

0800ff24 <CDC_Transmit_FS>:
 800ff24:	b580      	push	{r7, lr}
 800ff26:	b084      	sub	sp, #16
 800ff28:	af00      	add	r7, sp, #0
 800ff2a:	6078      	str	r0, [r7, #4]
 800ff2c:	460b      	mov	r3, r1
 800ff2e:	807b      	strh	r3, [r7, #2]
 800ff30:	2300      	movs	r3, #0
 800ff32:	73fb      	strb	r3, [r7, #15]
 800ff34:	4b0d      	ldr	r3, [pc, #52]	@ (800ff6c <CDC_Transmit_FS+0x48>)
 800ff36:	f8d3 32bc 	ldr.w	r3, [r3, #700]	@ 0x2bc
 800ff3a:	60bb      	str	r3, [r7, #8]
 800ff3c:	68bb      	ldr	r3, [r7, #8]
 800ff3e:	f8d3 3214 	ldr.w	r3, [r3, #532]	@ 0x214
 800ff42:	2b00      	cmp	r3, #0
 800ff44:	d001      	beq.n	800ff4a <CDC_Transmit_FS+0x26>
 800ff46:	2301      	movs	r3, #1
 800ff48:	e00b      	b.n	800ff62 <CDC_Transmit_FS+0x3e>
 800ff4a:	887b      	ldrh	r3, [r7, #2]
 800ff4c:	461a      	mov	r2, r3
 800ff4e:	6879      	ldr	r1, [r7, #4]
 800ff50:	4806      	ldr	r0, [pc, #24]	@ (800ff6c <CDC_Transmit_FS+0x48>)
 800ff52:	f7fe fb45 	bl	800e5e0 <USBD_CDC_SetTxBuffer>
 800ff56:	4805      	ldr	r0, [pc, #20]	@ (800ff6c <CDC_Transmit_FS+0x48>)
 800ff58:	f7fe fb82 	bl	800e660 <USBD_CDC_TransmitPacket>
 800ff5c:	4603      	mov	r3, r0
 800ff5e:	73fb      	strb	r3, [r7, #15]
 800ff60:	7bfb      	ldrb	r3, [r7, #15]
 800ff62:	4618      	mov	r0, r3
 800ff64:	3710      	adds	r7, #16
 800ff66:	46bd      	mov	sp, r7
 800ff68:	bd80      	pop	{r7, pc}
 800ff6a:	bf00      	nop
 800ff6c:	24000994 	.word	0x24000994

0800ff70 <CDC_TransmitCplt_FS>:
 800ff70:	b480      	push	{r7}
 800ff72:	b087      	sub	sp, #28
 800ff74:	af00      	add	r7, sp, #0
 800ff76:	60f8      	str	r0, [r7, #12]
 800ff78:	60b9      	str	r1, [r7, #8]
 800ff7a:	4613      	mov	r3, r2
 800ff7c:	71fb      	strb	r3, [r7, #7]
 800ff7e:	2300      	movs	r3, #0
 800ff80:	75fb      	strb	r3, [r7, #23]
 800ff82:	f997 3017 	ldrsb.w	r3, [r7, #23]
 800ff86:	4618      	mov	r0, r3
 800ff88:	371c      	adds	r7, #28
 800ff8a:	46bd      	mov	sp, r7
 800ff8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff90:	4770      	bx	lr
	...

0800ff94 <USBD_FS_DeviceDescriptor>:
 800ff94:	b480      	push	{r7}
 800ff96:	b083      	sub	sp, #12
 800ff98:	af00      	add	r7, sp, #0
 800ff9a:	4603      	mov	r3, r0
 800ff9c:	6039      	str	r1, [r7, #0]
 800ff9e:	71fb      	strb	r3, [r7, #7]
 800ffa0:	683b      	ldr	r3, [r7, #0]
 800ffa2:	2212      	movs	r2, #18
 800ffa4:	801a      	strh	r2, [r3, #0]
 800ffa6:	4b03      	ldr	r3, [pc, #12]	@ (800ffb4 <USBD_FS_DeviceDescriptor+0x20>)
 800ffa8:	4618      	mov	r0, r3
 800ffaa:	370c      	adds	r7, #12
 800ffac:	46bd      	mov	sp, r7
 800ffae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffb2:	4770      	bx	lr
 800ffb4:	24000160 	.word	0x24000160

0800ffb8 <USBD_FS_LangIDStrDescriptor>:
 800ffb8:	b480      	push	{r7}
 800ffba:	b083      	sub	sp, #12
 800ffbc:	af00      	add	r7, sp, #0
 800ffbe:	4603      	mov	r3, r0
 800ffc0:	6039      	str	r1, [r7, #0]
 800ffc2:	71fb      	strb	r3, [r7, #7]
 800ffc4:	683b      	ldr	r3, [r7, #0]
 800ffc6:	2204      	movs	r2, #4
 800ffc8:	801a      	strh	r2, [r3, #0]
 800ffca:	4b03      	ldr	r3, [pc, #12]	@ (800ffd8 <USBD_FS_LangIDStrDescriptor+0x20>)
 800ffcc:	4618      	mov	r0, r3
 800ffce:	370c      	adds	r7, #12
 800ffd0:	46bd      	mov	sp, r7
 800ffd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffd6:	4770      	bx	lr
 800ffd8:	24000174 	.word	0x24000174

0800ffdc <USBD_FS_ProductStrDescriptor>:
 800ffdc:	b580      	push	{r7, lr}
 800ffde:	b082      	sub	sp, #8
 800ffe0:	af00      	add	r7, sp, #0
 800ffe2:	4603      	mov	r3, r0
 800ffe4:	6039      	str	r1, [r7, #0]
 800ffe6:	71fb      	strb	r3, [r7, #7]
 800ffe8:	79fb      	ldrb	r3, [r7, #7]
 800ffea:	2b00      	cmp	r3, #0
 800ffec:	d105      	bne.n	800fffa <USBD_FS_ProductStrDescriptor+0x1e>
 800ffee:	683a      	ldr	r2, [r7, #0]
 800fff0:	4907      	ldr	r1, [pc, #28]	@ (8010010 <USBD_FS_ProductStrDescriptor+0x34>)
 800fff2:	4808      	ldr	r0, [pc, #32]	@ (8010014 <USBD_FS_ProductStrDescriptor+0x38>)
 800fff4:	f7ff fdea 	bl	800fbcc <USBD_GetString>
 800fff8:	e004      	b.n	8010004 <USBD_FS_ProductStrDescriptor+0x28>
 800fffa:	683a      	ldr	r2, [r7, #0]
 800fffc:	4904      	ldr	r1, [pc, #16]	@ (8010010 <USBD_FS_ProductStrDescriptor+0x34>)
 800fffe:	4805      	ldr	r0, [pc, #20]	@ (8010014 <USBD_FS_ProductStrDescriptor+0x38>)
 8010000:	f7ff fde4 	bl	800fbcc <USBD_GetString>
 8010004:	4b02      	ldr	r3, [pc, #8]	@ (8010010 <USBD_FS_ProductStrDescriptor+0x34>)
 8010006:	4618      	mov	r0, r3
 8010008:	3708      	adds	r7, #8
 801000a:	46bd      	mov	sp, r7
 801000c:	bd80      	pop	{r7, pc}
 801000e:	bf00      	nop
 8010010:	24001c70 	.word	0x24001c70
 8010014:	080111f0 	.word	0x080111f0

08010018 <USBD_FS_ManufacturerStrDescriptor>:
 8010018:	b580      	push	{r7, lr}
 801001a:	b082      	sub	sp, #8
 801001c:	af00      	add	r7, sp, #0
 801001e:	4603      	mov	r3, r0
 8010020:	6039      	str	r1, [r7, #0]
 8010022:	71fb      	strb	r3, [r7, #7]
 8010024:	683a      	ldr	r2, [r7, #0]
 8010026:	4904      	ldr	r1, [pc, #16]	@ (8010038 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8010028:	4804      	ldr	r0, [pc, #16]	@ (801003c <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801002a:	f7ff fdcf 	bl	800fbcc <USBD_GetString>
 801002e:	4b02      	ldr	r3, [pc, #8]	@ (8010038 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8010030:	4618      	mov	r0, r3
 8010032:	3708      	adds	r7, #8
 8010034:	46bd      	mov	sp, r7
 8010036:	bd80      	pop	{r7, pc}
 8010038:	24001c70 	.word	0x24001c70
 801003c:	08011208 	.word	0x08011208

08010040 <USBD_FS_SerialStrDescriptor>:
 8010040:	b580      	push	{r7, lr}
 8010042:	b082      	sub	sp, #8
 8010044:	af00      	add	r7, sp, #0
 8010046:	4603      	mov	r3, r0
 8010048:	6039      	str	r1, [r7, #0]
 801004a:	71fb      	strb	r3, [r7, #7]
 801004c:	683b      	ldr	r3, [r7, #0]
 801004e:	221a      	movs	r2, #26
 8010050:	801a      	strh	r2, [r3, #0]
 8010052:	f000 f843 	bl	80100dc <Get_SerialNum>
 8010056:	4b02      	ldr	r3, [pc, #8]	@ (8010060 <USBD_FS_SerialStrDescriptor+0x20>)
 8010058:	4618      	mov	r0, r3
 801005a:	3708      	adds	r7, #8
 801005c:	46bd      	mov	sp, r7
 801005e:	bd80      	pop	{r7, pc}
 8010060:	24000178 	.word	0x24000178

08010064 <USBD_FS_ConfigStrDescriptor>:
 8010064:	b580      	push	{r7, lr}
 8010066:	b082      	sub	sp, #8
 8010068:	af00      	add	r7, sp, #0
 801006a:	4603      	mov	r3, r0
 801006c:	6039      	str	r1, [r7, #0]
 801006e:	71fb      	strb	r3, [r7, #7]
 8010070:	79fb      	ldrb	r3, [r7, #7]
 8010072:	2b00      	cmp	r3, #0
 8010074:	d105      	bne.n	8010082 <USBD_FS_ConfigStrDescriptor+0x1e>
 8010076:	683a      	ldr	r2, [r7, #0]
 8010078:	4907      	ldr	r1, [pc, #28]	@ (8010098 <USBD_FS_ConfigStrDescriptor+0x34>)
 801007a:	4808      	ldr	r0, [pc, #32]	@ (801009c <USBD_FS_ConfigStrDescriptor+0x38>)
 801007c:	f7ff fda6 	bl	800fbcc <USBD_GetString>
 8010080:	e004      	b.n	801008c <USBD_FS_ConfigStrDescriptor+0x28>
 8010082:	683a      	ldr	r2, [r7, #0]
 8010084:	4904      	ldr	r1, [pc, #16]	@ (8010098 <USBD_FS_ConfigStrDescriptor+0x34>)
 8010086:	4805      	ldr	r0, [pc, #20]	@ (801009c <USBD_FS_ConfigStrDescriptor+0x38>)
 8010088:	f7ff fda0 	bl	800fbcc <USBD_GetString>
 801008c:	4b02      	ldr	r3, [pc, #8]	@ (8010098 <USBD_FS_ConfigStrDescriptor+0x34>)
 801008e:	4618      	mov	r0, r3
 8010090:	3708      	adds	r7, #8
 8010092:	46bd      	mov	sp, r7
 8010094:	bd80      	pop	{r7, pc}
 8010096:	bf00      	nop
 8010098:	24001c70 	.word	0x24001c70
 801009c:	0801121c 	.word	0x0801121c

080100a0 <USBD_FS_InterfaceStrDescriptor>:
 80100a0:	b580      	push	{r7, lr}
 80100a2:	b082      	sub	sp, #8
 80100a4:	af00      	add	r7, sp, #0
 80100a6:	4603      	mov	r3, r0
 80100a8:	6039      	str	r1, [r7, #0]
 80100aa:	71fb      	strb	r3, [r7, #7]
 80100ac:	79fb      	ldrb	r3, [r7, #7]
 80100ae:	2b00      	cmp	r3, #0
 80100b0:	d105      	bne.n	80100be <USBD_FS_InterfaceStrDescriptor+0x1e>
 80100b2:	683a      	ldr	r2, [r7, #0]
 80100b4:	4907      	ldr	r1, [pc, #28]	@ (80100d4 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80100b6:	4808      	ldr	r0, [pc, #32]	@ (80100d8 <USBD_FS_InterfaceStrDescriptor+0x38>)
 80100b8:	f7ff fd88 	bl	800fbcc <USBD_GetString>
 80100bc:	e004      	b.n	80100c8 <USBD_FS_InterfaceStrDescriptor+0x28>
 80100be:	683a      	ldr	r2, [r7, #0]
 80100c0:	4904      	ldr	r1, [pc, #16]	@ (80100d4 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80100c2:	4805      	ldr	r0, [pc, #20]	@ (80100d8 <USBD_FS_InterfaceStrDescriptor+0x38>)
 80100c4:	f7ff fd82 	bl	800fbcc <USBD_GetString>
 80100c8:	4b02      	ldr	r3, [pc, #8]	@ (80100d4 <USBD_FS_InterfaceStrDescriptor+0x34>)
 80100ca:	4618      	mov	r0, r3
 80100cc:	3708      	adds	r7, #8
 80100ce:	46bd      	mov	sp, r7
 80100d0:	bd80      	pop	{r7, pc}
 80100d2:	bf00      	nop
 80100d4:	24001c70 	.word	0x24001c70
 80100d8:	08011228 	.word	0x08011228

080100dc <Get_SerialNum>:
 80100dc:	b580      	push	{r7, lr}
 80100de:	b084      	sub	sp, #16
 80100e0:	af00      	add	r7, sp, #0
 80100e2:	4b0f      	ldr	r3, [pc, #60]	@ (8010120 <Get_SerialNum+0x44>)
 80100e4:	681b      	ldr	r3, [r3, #0]
 80100e6:	60fb      	str	r3, [r7, #12]
 80100e8:	4b0e      	ldr	r3, [pc, #56]	@ (8010124 <Get_SerialNum+0x48>)
 80100ea:	681b      	ldr	r3, [r3, #0]
 80100ec:	60bb      	str	r3, [r7, #8]
 80100ee:	4b0e      	ldr	r3, [pc, #56]	@ (8010128 <Get_SerialNum+0x4c>)
 80100f0:	681b      	ldr	r3, [r3, #0]
 80100f2:	607b      	str	r3, [r7, #4]
 80100f4:	68fa      	ldr	r2, [r7, #12]
 80100f6:	687b      	ldr	r3, [r7, #4]
 80100f8:	4413      	add	r3, r2
 80100fa:	60fb      	str	r3, [r7, #12]
 80100fc:	68fb      	ldr	r3, [r7, #12]
 80100fe:	2b00      	cmp	r3, #0
 8010100:	d009      	beq.n	8010116 <Get_SerialNum+0x3a>
 8010102:	2208      	movs	r2, #8
 8010104:	4909      	ldr	r1, [pc, #36]	@ (801012c <Get_SerialNum+0x50>)
 8010106:	68f8      	ldr	r0, [r7, #12]
 8010108:	f000 f814 	bl	8010134 <IntToUnicode>
 801010c:	2204      	movs	r2, #4
 801010e:	4908      	ldr	r1, [pc, #32]	@ (8010130 <Get_SerialNum+0x54>)
 8010110:	68b8      	ldr	r0, [r7, #8]
 8010112:	f000 f80f 	bl	8010134 <IntToUnicode>
 8010116:	bf00      	nop
 8010118:	3710      	adds	r7, #16
 801011a:	46bd      	mov	sp, r7
 801011c:	bd80      	pop	{r7, pc}
 801011e:	bf00      	nop
 8010120:	1ff1e800 	.word	0x1ff1e800
 8010124:	1ff1e804 	.word	0x1ff1e804
 8010128:	1ff1e808 	.word	0x1ff1e808
 801012c:	2400017a 	.word	0x2400017a
 8010130:	2400018a 	.word	0x2400018a

08010134 <IntToUnicode>:
 8010134:	b480      	push	{r7}
 8010136:	b087      	sub	sp, #28
 8010138:	af00      	add	r7, sp, #0
 801013a:	60f8      	str	r0, [r7, #12]
 801013c:	60b9      	str	r1, [r7, #8]
 801013e:	4613      	mov	r3, r2
 8010140:	71fb      	strb	r3, [r7, #7]
 8010142:	2300      	movs	r3, #0
 8010144:	75fb      	strb	r3, [r7, #23]
 8010146:	2300      	movs	r3, #0
 8010148:	75fb      	strb	r3, [r7, #23]
 801014a:	e027      	b.n	801019c <IntToUnicode+0x68>
 801014c:	68fb      	ldr	r3, [r7, #12]
 801014e:	0f1b      	lsrs	r3, r3, #28
 8010150:	2b09      	cmp	r3, #9
 8010152:	d80b      	bhi.n	801016c <IntToUnicode+0x38>
 8010154:	68fb      	ldr	r3, [r7, #12]
 8010156:	0f1b      	lsrs	r3, r3, #28
 8010158:	b2da      	uxtb	r2, r3
 801015a:	7dfb      	ldrb	r3, [r7, #23]
 801015c:	005b      	lsls	r3, r3, #1
 801015e:	4619      	mov	r1, r3
 8010160:	68bb      	ldr	r3, [r7, #8]
 8010162:	440b      	add	r3, r1
 8010164:	3230      	adds	r2, #48	@ 0x30
 8010166:	b2d2      	uxtb	r2, r2
 8010168:	701a      	strb	r2, [r3, #0]
 801016a:	e00a      	b.n	8010182 <IntToUnicode+0x4e>
 801016c:	68fb      	ldr	r3, [r7, #12]
 801016e:	0f1b      	lsrs	r3, r3, #28
 8010170:	b2da      	uxtb	r2, r3
 8010172:	7dfb      	ldrb	r3, [r7, #23]
 8010174:	005b      	lsls	r3, r3, #1
 8010176:	4619      	mov	r1, r3
 8010178:	68bb      	ldr	r3, [r7, #8]
 801017a:	440b      	add	r3, r1
 801017c:	3237      	adds	r2, #55	@ 0x37
 801017e:	b2d2      	uxtb	r2, r2
 8010180:	701a      	strb	r2, [r3, #0]
 8010182:	68fb      	ldr	r3, [r7, #12]
 8010184:	011b      	lsls	r3, r3, #4
 8010186:	60fb      	str	r3, [r7, #12]
 8010188:	7dfb      	ldrb	r3, [r7, #23]
 801018a:	005b      	lsls	r3, r3, #1
 801018c:	3301      	adds	r3, #1
 801018e:	68ba      	ldr	r2, [r7, #8]
 8010190:	4413      	add	r3, r2
 8010192:	2200      	movs	r2, #0
 8010194:	701a      	strb	r2, [r3, #0]
 8010196:	7dfb      	ldrb	r3, [r7, #23]
 8010198:	3301      	adds	r3, #1
 801019a:	75fb      	strb	r3, [r7, #23]
 801019c:	7dfa      	ldrb	r2, [r7, #23]
 801019e:	79fb      	ldrb	r3, [r7, #7]
 80101a0:	429a      	cmp	r2, r3
 80101a2:	d3d3      	bcc.n	801014c <IntToUnicode+0x18>
 80101a4:	bf00      	nop
 80101a6:	bf00      	nop
 80101a8:	371c      	adds	r7, #28
 80101aa:	46bd      	mov	sp, r7
 80101ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101b0:	4770      	bx	lr
	...

080101b4 <HAL_PCD_MspInit>:
 80101b4:	b580      	push	{r7, lr}
 80101b6:	b0ba      	sub	sp, #232	@ 0xe8
 80101b8:	af00      	add	r7, sp, #0
 80101ba:	6078      	str	r0, [r7, #4]
 80101bc:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 80101c0:	2200      	movs	r2, #0
 80101c2:	601a      	str	r2, [r3, #0]
 80101c4:	605a      	str	r2, [r3, #4]
 80101c6:	609a      	str	r2, [r3, #8]
 80101c8:	60da      	str	r2, [r3, #12]
 80101ca:	611a      	str	r2, [r3, #16]
 80101cc:	f107 0310 	add.w	r3, r7, #16
 80101d0:	22c0      	movs	r2, #192	@ 0xc0
 80101d2:	2100      	movs	r1, #0
 80101d4:	4618      	mov	r0, r3
 80101d6:	f000 fb45 	bl	8010864 <memset>
 80101da:	687b      	ldr	r3, [r7, #4]
 80101dc:	681b      	ldr	r3, [r3, #0]
 80101de:	4a2c      	ldr	r2, [pc, #176]	@ (8010290 <HAL_PCD_MspInit+0xdc>)
 80101e0:	4293      	cmp	r3, r2
 80101e2:	d151      	bne.n	8010288 <HAL_PCD_MspInit+0xd4>
 80101e4:	f44f 2280 	mov.w	r2, #262144	@ 0x40000
 80101e8:	f04f 0300 	mov.w	r3, #0
 80101ec:	e9c7 2304 	strd	r2, r3, [r7, #16]
 80101f0:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 80101f4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80101f8:	f107 0310 	add.w	r3, r7, #16
 80101fc:	4618      	mov	r0, r3
 80101fe:	f7f7 fd89 	bl	8007d14 <HAL_RCCEx_PeriphCLKConfig>
 8010202:	4603      	mov	r3, r0
 8010204:	2b00      	cmp	r3, #0
 8010206:	d001      	beq.n	801020c <HAL_PCD_MspInit+0x58>
 8010208:	f7f1 fb04 	bl	8001814 <Error_Handler>
 801020c:	f7f6 fda2 	bl	8006d54 <HAL_PWREx_EnableUSBVoltageDetector>
 8010210:	4b20      	ldr	r3, [pc, #128]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 8010212:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8010216:	4a1f      	ldr	r2, [pc, #124]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 8010218:	f043 0301 	orr.w	r3, r3, #1
 801021c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8010220:	4b1c      	ldr	r3, [pc, #112]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 8010222:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8010226:	f003 0301 	and.w	r3, r3, #1
 801022a:	60fb      	str	r3, [r7, #12]
 801022c:	68fb      	ldr	r3, [r7, #12]
 801022e:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 8010232:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8010236:	2302      	movs	r3, #2
 8010238:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 801023c:	2300      	movs	r3, #0
 801023e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8010242:	2300      	movs	r3, #0
 8010244:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8010248:	230a      	movs	r3, #10
 801024a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 801024e:	f107 03d4 	add.w	r3, r7, #212	@ 0xd4
 8010252:	4619      	mov	r1, r3
 8010254:	4810      	ldr	r0, [pc, #64]	@ (8010298 <HAL_PCD_MspInit+0xe4>)
 8010256:	f7f5 f8c3 	bl	80053e0 <HAL_GPIO_Init>
 801025a:	4b0e      	ldr	r3, [pc, #56]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 801025c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8010260:	4a0c      	ldr	r2, [pc, #48]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 8010262:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8010266:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 801026a:	4b0a      	ldr	r3, [pc, #40]	@ (8010294 <HAL_PCD_MspInit+0xe0>)
 801026c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8010270:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8010274:	60bb      	str	r3, [r7, #8]
 8010276:	68bb      	ldr	r3, [r7, #8]
 8010278:	2200      	movs	r2, #0
 801027a:	2100      	movs	r1, #0
 801027c:	2065      	movs	r0, #101	@ 0x65
 801027e:	f7f5 f802 	bl	8005286 <HAL_NVIC_SetPriority>
 8010282:	2065      	movs	r0, #101	@ 0x65
 8010284:	f7f5 f819 	bl	80052ba <HAL_NVIC_EnableIRQ>
 8010288:	bf00      	nop
 801028a:	37e8      	adds	r7, #232	@ 0xe8
 801028c:	46bd      	mov	sp, r7
 801028e:	bd80      	pop	{r7, pc}
 8010290:	40080000 	.word	0x40080000
 8010294:	58024400 	.word	0x58024400
 8010298:	58020000 	.word	0x58020000

0801029c <HAL_PCD_SetupStageCallback>:
 801029c:	b580      	push	{r7, lr}
 801029e:	b082      	sub	sp, #8
 80102a0:	af00      	add	r7, sp, #0
 80102a2:	6078      	str	r0, [r7, #4]
 80102a4:	687b      	ldr	r3, [r7, #4]
 80102a6:	f8d3 24e0 	ldr.w	r2, [r3, #1248]	@ 0x4e0
 80102aa:	687b      	ldr	r3, [r7, #4]
 80102ac:	f203 439c 	addw	r3, r3, #1180	@ 0x49c
 80102b0:	4619      	mov	r1, r3
 80102b2:	4610      	mov	r0, r2
 80102b4:	f7fe fafd 	bl	800e8b2 <USBD_LL_SetupStage>
 80102b8:	bf00      	nop
 80102ba:	3708      	adds	r7, #8
 80102bc:	46bd      	mov	sp, r7
 80102be:	bd80      	pop	{r7, pc}

080102c0 <HAL_PCD_DataOutStageCallback>:
 80102c0:	b580      	push	{r7, lr}
 80102c2:	b082      	sub	sp, #8
 80102c4:	af00      	add	r7, sp, #0
 80102c6:	6078      	str	r0, [r7, #4]
 80102c8:	460b      	mov	r3, r1
 80102ca:	70fb      	strb	r3, [r7, #3]
 80102cc:	687b      	ldr	r3, [r7, #4]
 80102ce:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 80102d2:	78fa      	ldrb	r2, [r7, #3]
 80102d4:	6879      	ldr	r1, [r7, #4]
 80102d6:	4613      	mov	r3, r2
 80102d8:	00db      	lsls	r3, r3, #3
 80102da:	4413      	add	r3, r2
 80102dc:	009b      	lsls	r3, r3, #2
 80102de:	440b      	add	r3, r1
 80102e0:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 80102e4:	681a      	ldr	r2, [r3, #0]
 80102e6:	78fb      	ldrb	r3, [r7, #3]
 80102e8:	4619      	mov	r1, r3
 80102ea:	f7fe fb37 	bl	800e95c <USBD_LL_DataOutStage>
 80102ee:	bf00      	nop
 80102f0:	3708      	adds	r7, #8
 80102f2:	46bd      	mov	sp, r7
 80102f4:	bd80      	pop	{r7, pc}

080102f6 <HAL_PCD_DataInStageCallback>:
 80102f6:	b580      	push	{r7, lr}
 80102f8:	b082      	sub	sp, #8
 80102fa:	af00      	add	r7, sp, #0
 80102fc:	6078      	str	r0, [r7, #4]
 80102fe:	460b      	mov	r3, r1
 8010300:	70fb      	strb	r3, [r7, #3]
 8010302:	687b      	ldr	r3, [r7, #4]
 8010304:	f8d3 04e0 	ldr.w	r0, [r3, #1248]	@ 0x4e0
 8010308:	78fa      	ldrb	r2, [r7, #3]
 801030a:	6879      	ldr	r1, [r7, #4]
 801030c:	4613      	mov	r3, r2
 801030e:	00db      	lsls	r3, r3, #3
 8010310:	4413      	add	r3, r2
 8010312:	009b      	lsls	r3, r3, #2
 8010314:	440b      	add	r3, r1
 8010316:	3320      	adds	r3, #32
 8010318:	681a      	ldr	r2, [r3, #0]
 801031a:	78fb      	ldrb	r3, [r7, #3]
 801031c:	4619      	mov	r1, r3
 801031e:	f7fe fbd0 	bl	800eac2 <USBD_LL_DataInStage>
 8010322:	bf00      	nop
 8010324:	3708      	adds	r7, #8
 8010326:	46bd      	mov	sp, r7
 8010328:	bd80      	pop	{r7, pc}

0801032a <HAL_PCD_SOFCallback>:
 801032a:	b580      	push	{r7, lr}
 801032c:	b082      	sub	sp, #8
 801032e:	af00      	add	r7, sp, #0
 8010330:	6078      	str	r0, [r7, #4]
 8010332:	687b      	ldr	r3, [r7, #4]
 8010334:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010338:	4618      	mov	r0, r3
 801033a:	f7fe fd0a 	bl	800ed52 <USBD_LL_SOF>
 801033e:	bf00      	nop
 8010340:	3708      	adds	r7, #8
 8010342:	46bd      	mov	sp, r7
 8010344:	bd80      	pop	{r7, pc}

08010346 <HAL_PCD_ResetCallback>:
 8010346:	b580      	push	{r7, lr}
 8010348:	b084      	sub	sp, #16
 801034a:	af00      	add	r7, sp, #0
 801034c:	6078      	str	r0, [r7, #4]
 801034e:	2301      	movs	r3, #1
 8010350:	73fb      	strb	r3, [r7, #15]
 8010352:	687b      	ldr	r3, [r7, #4]
 8010354:	79db      	ldrb	r3, [r3, #7]
 8010356:	2b00      	cmp	r3, #0
 8010358:	d102      	bne.n	8010360 <HAL_PCD_ResetCallback+0x1a>
 801035a:	2300      	movs	r3, #0
 801035c:	73fb      	strb	r3, [r7, #15]
 801035e:	e008      	b.n	8010372 <HAL_PCD_ResetCallback+0x2c>
 8010360:	687b      	ldr	r3, [r7, #4]
 8010362:	79db      	ldrb	r3, [r3, #7]
 8010364:	2b02      	cmp	r3, #2
 8010366:	d102      	bne.n	801036e <HAL_PCD_ResetCallback+0x28>
 8010368:	2301      	movs	r3, #1
 801036a:	73fb      	strb	r3, [r7, #15]
 801036c:	e001      	b.n	8010372 <HAL_PCD_ResetCallback+0x2c>
 801036e:	f7f1 fa51 	bl	8001814 <Error_Handler>
 8010372:	687b      	ldr	r3, [r7, #4]
 8010374:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010378:	7bfa      	ldrb	r2, [r7, #15]
 801037a:	4611      	mov	r1, r2
 801037c:	4618      	mov	r0, r3
 801037e:	f7fe fca4 	bl	800ecca <USBD_LL_SetSpeed>
 8010382:	687b      	ldr	r3, [r7, #4]
 8010384:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010388:	4618      	mov	r0, r3
 801038a:	f7fe fc4c 	bl	800ec26 <USBD_LL_Reset>
 801038e:	bf00      	nop
 8010390:	3710      	adds	r7, #16
 8010392:	46bd      	mov	sp, r7
 8010394:	bd80      	pop	{r7, pc}
	...

08010398 <HAL_PCD_SuspendCallback>:
 8010398:	b580      	push	{r7, lr}
 801039a:	b082      	sub	sp, #8
 801039c:	af00      	add	r7, sp, #0
 801039e:	6078      	str	r0, [r7, #4]
 80103a0:	687b      	ldr	r3, [r7, #4]
 80103a2:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80103a6:	4618      	mov	r0, r3
 80103a8:	f7fe fc9f 	bl	800ecea <USBD_LL_Suspend>
 80103ac:	687b      	ldr	r3, [r7, #4]
 80103ae:	681b      	ldr	r3, [r3, #0]
 80103b0:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 80103b4:	681b      	ldr	r3, [r3, #0]
 80103b6:	687a      	ldr	r2, [r7, #4]
 80103b8:	6812      	ldr	r2, [r2, #0]
 80103ba:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 80103be:	f043 0301 	orr.w	r3, r3, #1
 80103c2:	6013      	str	r3, [r2, #0]
 80103c4:	687b      	ldr	r3, [r7, #4]
 80103c6:	7adb      	ldrb	r3, [r3, #11]
 80103c8:	2b00      	cmp	r3, #0
 80103ca:	d005      	beq.n	80103d8 <HAL_PCD_SuspendCallback+0x40>
 80103cc:	4b04      	ldr	r3, [pc, #16]	@ (80103e0 <HAL_PCD_SuspendCallback+0x48>)
 80103ce:	691b      	ldr	r3, [r3, #16]
 80103d0:	4a03      	ldr	r2, [pc, #12]	@ (80103e0 <HAL_PCD_SuspendCallback+0x48>)
 80103d2:	f043 0306 	orr.w	r3, r3, #6
 80103d6:	6113      	str	r3, [r2, #16]
 80103d8:	bf00      	nop
 80103da:	3708      	adds	r7, #8
 80103dc:	46bd      	mov	sp, r7
 80103de:	bd80      	pop	{r7, pc}
 80103e0:	e000ed00 	.word	0xe000ed00

080103e4 <HAL_PCD_ResumeCallback>:
 80103e4:	b580      	push	{r7, lr}
 80103e6:	b082      	sub	sp, #8
 80103e8:	af00      	add	r7, sp, #0
 80103ea:	6078      	str	r0, [r7, #4]
 80103ec:	687b      	ldr	r3, [r7, #4]
 80103ee:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 80103f2:	4618      	mov	r0, r3
 80103f4:	f7fe fc95 	bl	800ed22 <USBD_LL_Resume>
 80103f8:	bf00      	nop
 80103fa:	3708      	adds	r7, #8
 80103fc:	46bd      	mov	sp, r7
 80103fe:	bd80      	pop	{r7, pc}

08010400 <HAL_PCD_ISOOUTIncompleteCallback>:
 8010400:	b580      	push	{r7, lr}
 8010402:	b082      	sub	sp, #8
 8010404:	af00      	add	r7, sp, #0
 8010406:	6078      	str	r0, [r7, #4]
 8010408:	460b      	mov	r3, r1
 801040a:	70fb      	strb	r3, [r7, #3]
 801040c:	687b      	ldr	r3, [r7, #4]
 801040e:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010412:	78fa      	ldrb	r2, [r7, #3]
 8010414:	4611      	mov	r1, r2
 8010416:	4618      	mov	r0, r3
 8010418:	f7fe fced 	bl	800edf6 <USBD_LL_IsoOUTIncomplete>
 801041c:	bf00      	nop
 801041e:	3708      	adds	r7, #8
 8010420:	46bd      	mov	sp, r7
 8010422:	bd80      	pop	{r7, pc}

08010424 <HAL_PCD_ISOINIncompleteCallback>:
 8010424:	b580      	push	{r7, lr}
 8010426:	b082      	sub	sp, #8
 8010428:	af00      	add	r7, sp, #0
 801042a:	6078      	str	r0, [r7, #4]
 801042c:	460b      	mov	r3, r1
 801042e:	70fb      	strb	r3, [r7, #3]
 8010430:	687b      	ldr	r3, [r7, #4]
 8010432:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010436:	78fa      	ldrb	r2, [r7, #3]
 8010438:	4611      	mov	r1, r2
 801043a:	4618      	mov	r0, r3
 801043c:	f7fe fca9 	bl	800ed92 <USBD_LL_IsoINIncomplete>
 8010440:	bf00      	nop
 8010442:	3708      	adds	r7, #8
 8010444:	46bd      	mov	sp, r7
 8010446:	bd80      	pop	{r7, pc}

08010448 <HAL_PCD_ConnectCallback>:
 8010448:	b580      	push	{r7, lr}
 801044a:	b082      	sub	sp, #8
 801044c:	af00      	add	r7, sp, #0
 801044e:	6078      	str	r0, [r7, #4]
 8010450:	687b      	ldr	r3, [r7, #4]
 8010452:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010456:	4618      	mov	r0, r3
 8010458:	f7fe fcff 	bl	800ee5a <USBD_LL_DevConnected>
 801045c:	bf00      	nop
 801045e:	3708      	adds	r7, #8
 8010460:	46bd      	mov	sp, r7
 8010462:	bd80      	pop	{r7, pc}

08010464 <HAL_PCD_DisconnectCallback>:
 8010464:	b580      	push	{r7, lr}
 8010466:	b082      	sub	sp, #8
 8010468:	af00      	add	r7, sp, #0
 801046a:	6078      	str	r0, [r7, #4]
 801046c:	687b      	ldr	r3, [r7, #4]
 801046e:	f8d3 34e0 	ldr.w	r3, [r3, #1248]	@ 0x4e0
 8010472:	4618      	mov	r0, r3
 8010474:	f7fe fcfc 	bl	800ee70 <USBD_LL_DevDisconnected>
 8010478:	bf00      	nop
 801047a:	3708      	adds	r7, #8
 801047c:	46bd      	mov	sp, r7
 801047e:	bd80      	pop	{r7, pc}

08010480 <USBD_LL_Init>:
 8010480:	b580      	push	{r7, lr}
 8010482:	b082      	sub	sp, #8
 8010484:	af00      	add	r7, sp, #0
 8010486:	6078      	str	r0, [r7, #4]
 8010488:	687b      	ldr	r3, [r7, #4]
 801048a:	781b      	ldrb	r3, [r3, #0]
 801048c:	2b00      	cmp	r3, #0
 801048e:	d13e      	bne.n	801050e <USBD_LL_Init+0x8e>
 8010490:	4a21      	ldr	r2, [pc, #132]	@ (8010518 <USBD_LL_Init+0x98>)
 8010492:	687b      	ldr	r3, [r7, #4]
 8010494:	f8c2 34e0 	str.w	r3, [r2, #1248]	@ 0x4e0
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	4a1f      	ldr	r2, [pc, #124]	@ (8010518 <USBD_LL_Init+0x98>)
 801049c:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 80104a0:	4b1d      	ldr	r3, [pc, #116]	@ (8010518 <USBD_LL_Init+0x98>)
 80104a2:	4a1e      	ldr	r2, [pc, #120]	@ (801051c <USBD_LL_Init+0x9c>)
 80104a4:	601a      	str	r2, [r3, #0]
 80104a6:	4b1c      	ldr	r3, [pc, #112]	@ (8010518 <USBD_LL_Init+0x98>)
 80104a8:	2209      	movs	r2, #9
 80104aa:	711a      	strb	r2, [r3, #4]
 80104ac:	4b1a      	ldr	r3, [pc, #104]	@ (8010518 <USBD_LL_Init+0x98>)
 80104ae:	2202      	movs	r2, #2
 80104b0:	71da      	strb	r2, [r3, #7]
 80104b2:	4b19      	ldr	r3, [pc, #100]	@ (8010518 <USBD_LL_Init+0x98>)
 80104b4:	2200      	movs	r2, #0
 80104b6:	719a      	strb	r2, [r3, #6]
 80104b8:	4b17      	ldr	r3, [pc, #92]	@ (8010518 <USBD_LL_Init+0x98>)
 80104ba:	2202      	movs	r2, #2
 80104bc:	725a      	strb	r2, [r3, #9]
 80104be:	4b16      	ldr	r3, [pc, #88]	@ (8010518 <USBD_LL_Init+0x98>)
 80104c0:	2200      	movs	r2, #0
 80104c2:	729a      	strb	r2, [r3, #10]
 80104c4:	4b14      	ldr	r3, [pc, #80]	@ (8010518 <USBD_LL_Init+0x98>)
 80104c6:	2200      	movs	r2, #0
 80104c8:	72da      	strb	r2, [r3, #11]
 80104ca:	4b13      	ldr	r3, [pc, #76]	@ (8010518 <USBD_LL_Init+0x98>)
 80104cc:	2200      	movs	r2, #0
 80104ce:	731a      	strb	r2, [r3, #12]
 80104d0:	4b11      	ldr	r3, [pc, #68]	@ (8010518 <USBD_LL_Init+0x98>)
 80104d2:	2200      	movs	r2, #0
 80104d4:	735a      	strb	r2, [r3, #13]
 80104d6:	4b10      	ldr	r3, [pc, #64]	@ (8010518 <USBD_LL_Init+0x98>)
 80104d8:	2200      	movs	r2, #0
 80104da:	739a      	strb	r2, [r3, #14]
 80104dc:	4b0e      	ldr	r3, [pc, #56]	@ (8010518 <USBD_LL_Init+0x98>)
 80104de:	2200      	movs	r2, #0
 80104e0:	73da      	strb	r2, [r3, #15]
 80104e2:	480d      	ldr	r0, [pc, #52]	@ (8010518 <USBD_LL_Init+0x98>)
 80104e4:	f7f5 f95d 	bl	80057a2 <HAL_PCD_Init>
 80104e8:	4603      	mov	r3, r0
 80104ea:	2b00      	cmp	r3, #0
 80104ec:	d001      	beq.n	80104f2 <USBD_LL_Init+0x72>
 80104ee:	f7f1 f991 	bl	8001814 <Error_Handler>
 80104f2:	2180      	movs	r1, #128	@ 0x80
 80104f4:	4808      	ldr	r0, [pc, #32]	@ (8010518 <USBD_LL_Init+0x98>)
 80104f6:	f7f6 fbb2 	bl	8006c5e <HAL_PCDEx_SetRxFiFo>
 80104fa:	2240      	movs	r2, #64	@ 0x40
 80104fc:	2100      	movs	r1, #0
 80104fe:	4806      	ldr	r0, [pc, #24]	@ (8010518 <USBD_LL_Init+0x98>)
 8010500:	f7f6 fb66 	bl	8006bd0 <HAL_PCDEx_SetTxFiFo>
 8010504:	2280      	movs	r2, #128	@ 0x80
 8010506:	2101      	movs	r1, #1
 8010508:	4803      	ldr	r0, [pc, #12]	@ (8010518 <USBD_LL_Init+0x98>)
 801050a:	f7f6 fb61 	bl	8006bd0 <HAL_PCDEx_SetTxFiFo>
 801050e:	2300      	movs	r3, #0
 8010510:	4618      	mov	r0, r3
 8010512:	3708      	adds	r7, #8
 8010514:	46bd      	mov	sp, r7
 8010516:	bd80      	pop	{r7, pc}
 8010518:	24001e70 	.word	0x24001e70
 801051c:	40080000 	.word	0x40080000

08010520 <USBD_LL_Start>:
 8010520:	b580      	push	{r7, lr}
 8010522:	b084      	sub	sp, #16
 8010524:	af00      	add	r7, sp, #0
 8010526:	6078      	str	r0, [r7, #4]
 8010528:	2300      	movs	r3, #0
 801052a:	73fb      	strb	r3, [r7, #15]
 801052c:	2300      	movs	r3, #0
 801052e:	73bb      	strb	r3, [r7, #14]
 8010530:	687b      	ldr	r3, [r7, #4]
 8010532:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8010536:	4618      	mov	r0, r3
 8010538:	f7f5 fa3f 	bl	80059ba <HAL_PCD_Start>
 801053c:	4603      	mov	r3, r0
 801053e:	73fb      	strb	r3, [r7, #15]
 8010540:	7bfb      	ldrb	r3, [r7, #15]
 8010542:	4618      	mov	r0, r3
 8010544:	f000 f942 	bl	80107cc <USBD_Get_USB_Status>
 8010548:	4603      	mov	r3, r0
 801054a:	73bb      	strb	r3, [r7, #14]
 801054c:	7bbb      	ldrb	r3, [r7, #14]
 801054e:	4618      	mov	r0, r3
 8010550:	3710      	adds	r7, #16
 8010552:	46bd      	mov	sp, r7
 8010554:	bd80      	pop	{r7, pc}

08010556 <USBD_LL_OpenEP>:
 8010556:	b580      	push	{r7, lr}
 8010558:	b084      	sub	sp, #16
 801055a:	af00      	add	r7, sp, #0
 801055c:	6078      	str	r0, [r7, #4]
 801055e:	4608      	mov	r0, r1
 8010560:	4611      	mov	r1, r2
 8010562:	461a      	mov	r2, r3
 8010564:	4603      	mov	r3, r0
 8010566:	70fb      	strb	r3, [r7, #3]
 8010568:	460b      	mov	r3, r1
 801056a:	70bb      	strb	r3, [r7, #2]
 801056c:	4613      	mov	r3, r2
 801056e:	803b      	strh	r3, [r7, #0]
 8010570:	2300      	movs	r3, #0
 8010572:	73fb      	strb	r3, [r7, #15]
 8010574:	2300      	movs	r3, #0
 8010576:	73bb      	strb	r3, [r7, #14]
 8010578:	687b      	ldr	r3, [r7, #4]
 801057a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801057e:	78bb      	ldrb	r3, [r7, #2]
 8010580:	883a      	ldrh	r2, [r7, #0]
 8010582:	78f9      	ldrb	r1, [r7, #3]
 8010584:	f7f5 ff40 	bl	8006408 <HAL_PCD_EP_Open>
 8010588:	4603      	mov	r3, r0
 801058a:	73fb      	strb	r3, [r7, #15]
 801058c:	7bfb      	ldrb	r3, [r7, #15]
 801058e:	4618      	mov	r0, r3
 8010590:	f000 f91c 	bl	80107cc <USBD_Get_USB_Status>
 8010594:	4603      	mov	r3, r0
 8010596:	73bb      	strb	r3, [r7, #14]
 8010598:	7bbb      	ldrb	r3, [r7, #14]
 801059a:	4618      	mov	r0, r3
 801059c:	3710      	adds	r7, #16
 801059e:	46bd      	mov	sp, r7
 80105a0:	bd80      	pop	{r7, pc}

080105a2 <USBD_LL_CloseEP>:
 80105a2:	b580      	push	{r7, lr}
 80105a4:	b084      	sub	sp, #16
 80105a6:	af00      	add	r7, sp, #0
 80105a8:	6078      	str	r0, [r7, #4]
 80105aa:	460b      	mov	r3, r1
 80105ac:	70fb      	strb	r3, [r7, #3]
 80105ae:	2300      	movs	r3, #0
 80105b0:	73fb      	strb	r3, [r7, #15]
 80105b2:	2300      	movs	r3, #0
 80105b4:	73bb      	strb	r3, [r7, #14]
 80105b6:	687b      	ldr	r3, [r7, #4]
 80105b8:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80105bc:	78fa      	ldrb	r2, [r7, #3]
 80105be:	4611      	mov	r1, r2
 80105c0:	4618      	mov	r0, r3
 80105c2:	f7f5 ff89 	bl	80064d8 <HAL_PCD_EP_Close>
 80105c6:	4603      	mov	r3, r0
 80105c8:	73fb      	strb	r3, [r7, #15]
 80105ca:	7bfb      	ldrb	r3, [r7, #15]
 80105cc:	4618      	mov	r0, r3
 80105ce:	f000 f8fd 	bl	80107cc <USBD_Get_USB_Status>
 80105d2:	4603      	mov	r3, r0
 80105d4:	73bb      	strb	r3, [r7, #14]
 80105d6:	7bbb      	ldrb	r3, [r7, #14]
 80105d8:	4618      	mov	r0, r3
 80105da:	3710      	adds	r7, #16
 80105dc:	46bd      	mov	sp, r7
 80105de:	bd80      	pop	{r7, pc}

080105e0 <USBD_LL_StallEP>:
 80105e0:	b580      	push	{r7, lr}
 80105e2:	b084      	sub	sp, #16
 80105e4:	af00      	add	r7, sp, #0
 80105e6:	6078      	str	r0, [r7, #4]
 80105e8:	460b      	mov	r3, r1
 80105ea:	70fb      	strb	r3, [r7, #3]
 80105ec:	2300      	movs	r3, #0
 80105ee:	73fb      	strb	r3, [r7, #15]
 80105f0:	2300      	movs	r3, #0
 80105f2:	73bb      	strb	r3, [r7, #14]
 80105f4:	687b      	ldr	r3, [r7, #4]
 80105f6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80105fa:	78fa      	ldrb	r2, [r7, #3]
 80105fc:	4611      	mov	r1, r2
 80105fe:	4618      	mov	r0, r3
 8010600:	f7f6 f841 	bl	8006686 <HAL_PCD_EP_SetStall>
 8010604:	4603      	mov	r3, r0
 8010606:	73fb      	strb	r3, [r7, #15]
 8010608:	7bfb      	ldrb	r3, [r7, #15]
 801060a:	4618      	mov	r0, r3
 801060c:	f000 f8de 	bl	80107cc <USBD_Get_USB_Status>
 8010610:	4603      	mov	r3, r0
 8010612:	73bb      	strb	r3, [r7, #14]
 8010614:	7bbb      	ldrb	r3, [r7, #14]
 8010616:	4618      	mov	r0, r3
 8010618:	3710      	adds	r7, #16
 801061a:	46bd      	mov	sp, r7
 801061c:	bd80      	pop	{r7, pc}

0801061e <USBD_LL_ClearStallEP>:
 801061e:	b580      	push	{r7, lr}
 8010620:	b084      	sub	sp, #16
 8010622:	af00      	add	r7, sp, #0
 8010624:	6078      	str	r0, [r7, #4]
 8010626:	460b      	mov	r3, r1
 8010628:	70fb      	strb	r3, [r7, #3]
 801062a:	2300      	movs	r3, #0
 801062c:	73fb      	strb	r3, [r7, #15]
 801062e:	2300      	movs	r3, #0
 8010630:	73bb      	strb	r3, [r7, #14]
 8010632:	687b      	ldr	r3, [r7, #4]
 8010634:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8010638:	78fa      	ldrb	r2, [r7, #3]
 801063a:	4611      	mov	r1, r2
 801063c:	4618      	mov	r0, r3
 801063e:	f7f6 f885 	bl	800674c <HAL_PCD_EP_ClrStall>
 8010642:	4603      	mov	r3, r0
 8010644:	73fb      	strb	r3, [r7, #15]
 8010646:	7bfb      	ldrb	r3, [r7, #15]
 8010648:	4618      	mov	r0, r3
 801064a:	f000 f8bf 	bl	80107cc <USBD_Get_USB_Status>
 801064e:	4603      	mov	r3, r0
 8010650:	73bb      	strb	r3, [r7, #14]
 8010652:	7bbb      	ldrb	r3, [r7, #14]
 8010654:	4618      	mov	r0, r3
 8010656:	3710      	adds	r7, #16
 8010658:	46bd      	mov	sp, r7
 801065a:	bd80      	pop	{r7, pc}

0801065c <USBD_LL_IsStallEP>:
 801065c:	b480      	push	{r7}
 801065e:	b085      	sub	sp, #20
 8010660:	af00      	add	r7, sp, #0
 8010662:	6078      	str	r0, [r7, #4]
 8010664:	460b      	mov	r3, r1
 8010666:	70fb      	strb	r3, [r7, #3]
 8010668:	687b      	ldr	r3, [r7, #4]
 801066a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801066e:	60fb      	str	r3, [r7, #12]
 8010670:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8010674:	2b00      	cmp	r3, #0
 8010676:	da0b      	bge.n	8010690 <USBD_LL_IsStallEP+0x34>
 8010678:	78fb      	ldrb	r3, [r7, #3]
 801067a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801067e:	68f9      	ldr	r1, [r7, #12]
 8010680:	4613      	mov	r3, r2
 8010682:	00db      	lsls	r3, r3, #3
 8010684:	4413      	add	r3, r2
 8010686:	009b      	lsls	r3, r3, #2
 8010688:	440b      	add	r3, r1
 801068a:	3316      	adds	r3, #22
 801068c:	781b      	ldrb	r3, [r3, #0]
 801068e:	e00b      	b.n	80106a8 <USBD_LL_IsStallEP+0x4c>
 8010690:	78fb      	ldrb	r3, [r7, #3]
 8010692:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8010696:	68f9      	ldr	r1, [r7, #12]
 8010698:	4613      	mov	r3, r2
 801069a:	00db      	lsls	r3, r3, #3
 801069c:	4413      	add	r3, r2
 801069e:	009b      	lsls	r3, r3, #2
 80106a0:	440b      	add	r3, r1
 80106a2:	f203 2356 	addw	r3, r3, #598	@ 0x256
 80106a6:	781b      	ldrb	r3, [r3, #0]
 80106a8:	4618      	mov	r0, r3
 80106aa:	3714      	adds	r7, #20
 80106ac:	46bd      	mov	sp, r7
 80106ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106b2:	4770      	bx	lr

080106b4 <USBD_LL_SetUSBAddress>:
 80106b4:	b580      	push	{r7, lr}
 80106b6:	b084      	sub	sp, #16
 80106b8:	af00      	add	r7, sp, #0
 80106ba:	6078      	str	r0, [r7, #4]
 80106bc:	460b      	mov	r3, r1
 80106be:	70fb      	strb	r3, [r7, #3]
 80106c0:	2300      	movs	r3, #0
 80106c2:	73fb      	strb	r3, [r7, #15]
 80106c4:	2300      	movs	r3, #0
 80106c6:	73bb      	strb	r3, [r7, #14]
 80106c8:	687b      	ldr	r3, [r7, #4]
 80106ca:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80106ce:	78fa      	ldrb	r2, [r7, #3]
 80106d0:	4611      	mov	r1, r2
 80106d2:	4618      	mov	r0, r3
 80106d4:	f7f5 fe74 	bl	80063c0 <HAL_PCD_SetAddress>
 80106d8:	4603      	mov	r3, r0
 80106da:	73fb      	strb	r3, [r7, #15]
 80106dc:	7bfb      	ldrb	r3, [r7, #15]
 80106de:	4618      	mov	r0, r3
 80106e0:	f000 f874 	bl	80107cc <USBD_Get_USB_Status>
 80106e4:	4603      	mov	r3, r0
 80106e6:	73bb      	strb	r3, [r7, #14]
 80106e8:	7bbb      	ldrb	r3, [r7, #14]
 80106ea:	4618      	mov	r0, r3
 80106ec:	3710      	adds	r7, #16
 80106ee:	46bd      	mov	sp, r7
 80106f0:	bd80      	pop	{r7, pc}

080106f2 <USBD_LL_Transmit>:
 80106f2:	b580      	push	{r7, lr}
 80106f4:	b086      	sub	sp, #24
 80106f6:	af00      	add	r7, sp, #0
 80106f8:	60f8      	str	r0, [r7, #12]
 80106fa:	607a      	str	r2, [r7, #4]
 80106fc:	603b      	str	r3, [r7, #0]
 80106fe:	460b      	mov	r3, r1
 8010700:	72fb      	strb	r3, [r7, #11]
 8010702:	2300      	movs	r3, #0
 8010704:	75fb      	strb	r3, [r7, #23]
 8010706:	2300      	movs	r3, #0
 8010708:	75bb      	strb	r3, [r7, #22]
 801070a:	68fb      	ldr	r3, [r7, #12]
 801070c:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8010710:	7af9      	ldrb	r1, [r7, #11]
 8010712:	683b      	ldr	r3, [r7, #0]
 8010714:	687a      	ldr	r2, [r7, #4]
 8010716:	f7f5 ff7c 	bl	8006612 <HAL_PCD_EP_Transmit>
 801071a:	4603      	mov	r3, r0
 801071c:	75fb      	strb	r3, [r7, #23]
 801071e:	7dfb      	ldrb	r3, [r7, #23]
 8010720:	4618      	mov	r0, r3
 8010722:	f000 f853 	bl	80107cc <USBD_Get_USB_Status>
 8010726:	4603      	mov	r3, r0
 8010728:	75bb      	strb	r3, [r7, #22]
 801072a:	7dbb      	ldrb	r3, [r7, #22]
 801072c:	4618      	mov	r0, r3
 801072e:	3718      	adds	r7, #24
 8010730:	46bd      	mov	sp, r7
 8010732:	bd80      	pop	{r7, pc}

08010734 <USBD_LL_PrepareReceive>:
 8010734:	b580      	push	{r7, lr}
 8010736:	b086      	sub	sp, #24
 8010738:	af00      	add	r7, sp, #0
 801073a:	60f8      	str	r0, [r7, #12]
 801073c:	607a      	str	r2, [r7, #4]
 801073e:	603b      	str	r3, [r7, #0]
 8010740:	460b      	mov	r3, r1
 8010742:	72fb      	strb	r3, [r7, #11]
 8010744:	2300      	movs	r3, #0
 8010746:	75fb      	strb	r3, [r7, #23]
 8010748:	2300      	movs	r3, #0
 801074a:	75bb      	strb	r3, [r7, #22]
 801074c:	68fb      	ldr	r3, [r7, #12]
 801074e:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 8010752:	7af9      	ldrb	r1, [r7, #11]
 8010754:	683b      	ldr	r3, [r7, #0]
 8010756:	687a      	ldr	r2, [r7, #4]
 8010758:	f7f5 ff08 	bl	800656c <HAL_PCD_EP_Receive>
 801075c:	4603      	mov	r3, r0
 801075e:	75fb      	strb	r3, [r7, #23]
 8010760:	7dfb      	ldrb	r3, [r7, #23]
 8010762:	4618      	mov	r0, r3
 8010764:	f000 f832 	bl	80107cc <USBD_Get_USB_Status>
 8010768:	4603      	mov	r3, r0
 801076a:	75bb      	strb	r3, [r7, #22]
 801076c:	7dbb      	ldrb	r3, [r7, #22]
 801076e:	4618      	mov	r0, r3
 8010770:	3718      	adds	r7, #24
 8010772:	46bd      	mov	sp, r7
 8010774:	bd80      	pop	{r7, pc}

08010776 <USBD_LL_GetRxDataSize>:
 8010776:	b580      	push	{r7, lr}
 8010778:	b082      	sub	sp, #8
 801077a:	af00      	add	r7, sp, #0
 801077c:	6078      	str	r0, [r7, #4]
 801077e:	460b      	mov	r3, r1
 8010780:	70fb      	strb	r3, [r7, #3]
 8010782:	687b      	ldr	r3, [r7, #4]
 8010784:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8010788:	78fa      	ldrb	r2, [r7, #3]
 801078a:	4611      	mov	r1, r2
 801078c:	4618      	mov	r0, r3
 801078e:	f7f5 ff28 	bl	80065e2 <HAL_PCD_EP_GetRxCount>
 8010792:	4603      	mov	r3, r0
 8010794:	4618      	mov	r0, r3
 8010796:	3708      	adds	r7, #8
 8010798:	46bd      	mov	sp, r7
 801079a:	bd80      	pop	{r7, pc}

0801079c <USBD_static_malloc>:
 801079c:	b480      	push	{r7}
 801079e:	b083      	sub	sp, #12
 80107a0:	af00      	add	r7, sp, #0
 80107a2:	6078      	str	r0, [r7, #4]
 80107a4:	4b03      	ldr	r3, [pc, #12]	@ (80107b4 <USBD_static_malloc+0x18>)
 80107a6:	4618      	mov	r0, r3
 80107a8:	370c      	adds	r7, #12
 80107aa:	46bd      	mov	sp, r7
 80107ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107b0:	4770      	bx	lr
 80107b2:	bf00      	nop
 80107b4:	24002354 	.word	0x24002354

080107b8 <USBD_static_free>:
 80107b8:	b480      	push	{r7}
 80107ba:	b083      	sub	sp, #12
 80107bc:	af00      	add	r7, sp, #0
 80107be:	6078      	str	r0, [r7, #4]
 80107c0:	bf00      	nop
 80107c2:	370c      	adds	r7, #12
 80107c4:	46bd      	mov	sp, r7
 80107c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107ca:	4770      	bx	lr

080107cc <USBD_Get_USB_Status>:
 80107cc:	b480      	push	{r7}
 80107ce:	b085      	sub	sp, #20
 80107d0:	af00      	add	r7, sp, #0
 80107d2:	4603      	mov	r3, r0
 80107d4:	71fb      	strb	r3, [r7, #7]
 80107d6:	2300      	movs	r3, #0
 80107d8:	73fb      	strb	r3, [r7, #15]
 80107da:	79fb      	ldrb	r3, [r7, #7]
 80107dc:	2b03      	cmp	r3, #3
 80107de:	d817      	bhi.n	8010810 <USBD_Get_USB_Status+0x44>
 80107e0:	a201      	add	r2, pc, #4	@ (adr r2, 80107e8 <USBD_Get_USB_Status+0x1c>)
 80107e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80107e6:	bf00      	nop
 80107e8:	080107f9 	.word	0x080107f9
 80107ec:	080107ff 	.word	0x080107ff
 80107f0:	08010805 	.word	0x08010805
 80107f4:	0801080b 	.word	0x0801080b
 80107f8:	2300      	movs	r3, #0
 80107fa:	73fb      	strb	r3, [r7, #15]
 80107fc:	e00b      	b.n	8010816 <USBD_Get_USB_Status+0x4a>
 80107fe:	2303      	movs	r3, #3
 8010800:	73fb      	strb	r3, [r7, #15]
 8010802:	e008      	b.n	8010816 <USBD_Get_USB_Status+0x4a>
 8010804:	2301      	movs	r3, #1
 8010806:	73fb      	strb	r3, [r7, #15]
 8010808:	e005      	b.n	8010816 <USBD_Get_USB_Status+0x4a>
 801080a:	2303      	movs	r3, #3
 801080c:	73fb      	strb	r3, [r7, #15]
 801080e:	e002      	b.n	8010816 <USBD_Get_USB_Status+0x4a>
 8010810:	2303      	movs	r3, #3
 8010812:	73fb      	strb	r3, [r7, #15]
 8010814:	bf00      	nop
 8010816:	7bfb      	ldrb	r3, [r7, #15]
 8010818:	4618      	mov	r0, r3
 801081a:	3714      	adds	r7, #20
 801081c:	46bd      	mov	sp, r7
 801081e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010822:	4770      	bx	lr

08010824 <siprintf>:
 8010824:	b40e      	push	{r1, r2, r3}
 8010826:	b500      	push	{lr}
 8010828:	b09c      	sub	sp, #112	@ 0x70
 801082a:	ab1d      	add	r3, sp, #116	@ 0x74
 801082c:	9002      	str	r0, [sp, #8]
 801082e:	9006      	str	r0, [sp, #24]
 8010830:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8010834:	4809      	ldr	r0, [pc, #36]	@ (801085c <siprintf+0x38>)
 8010836:	9107      	str	r1, [sp, #28]
 8010838:	9104      	str	r1, [sp, #16]
 801083a:	4909      	ldr	r1, [pc, #36]	@ (8010860 <siprintf+0x3c>)
 801083c:	f853 2b04 	ldr.w	r2, [r3], #4
 8010840:	9105      	str	r1, [sp, #20]
 8010842:	6800      	ldr	r0, [r0, #0]
 8010844:	9301      	str	r3, [sp, #4]
 8010846:	a902      	add	r1, sp, #8
 8010848:	f000 f994 	bl	8010b74 <_svfiprintf_r>
 801084c:	9b02      	ldr	r3, [sp, #8]
 801084e:	2200      	movs	r2, #0
 8010850:	701a      	strb	r2, [r3, #0]
 8010852:	b01c      	add	sp, #112	@ 0x70
 8010854:	f85d eb04 	ldr.w	lr, [sp], #4
 8010858:	b003      	add	sp, #12
 801085a:	4770      	bx	lr
 801085c:	24000194 	.word	0x24000194
 8010860:	ffff0208 	.word	0xffff0208

08010864 <memset>:
 8010864:	4402      	add	r2, r0
 8010866:	4603      	mov	r3, r0
 8010868:	4293      	cmp	r3, r2
 801086a:	d100      	bne.n	801086e <memset+0xa>
 801086c:	4770      	bx	lr
 801086e:	f803 1b01 	strb.w	r1, [r3], #1
 8010872:	e7f9      	b.n	8010868 <memset+0x4>

08010874 <__errno>:
 8010874:	4b01      	ldr	r3, [pc, #4]	@ (801087c <__errno+0x8>)
 8010876:	6818      	ldr	r0, [r3, #0]
 8010878:	4770      	bx	lr
 801087a:	bf00      	nop
 801087c:	24000194 	.word	0x24000194

08010880 <__libc_init_array>:
 8010880:	b570      	push	{r4, r5, r6, lr}
 8010882:	4d0d      	ldr	r5, [pc, #52]	@ (80108b8 <__libc_init_array+0x38>)
 8010884:	4c0d      	ldr	r4, [pc, #52]	@ (80108bc <__libc_init_array+0x3c>)
 8010886:	1b64      	subs	r4, r4, r5
 8010888:	10a4      	asrs	r4, r4, #2
 801088a:	2600      	movs	r6, #0
 801088c:	42a6      	cmp	r6, r4
 801088e:	d109      	bne.n	80108a4 <__libc_init_array+0x24>
 8010890:	4d0b      	ldr	r5, [pc, #44]	@ (80108c0 <__libc_init_array+0x40>)
 8010892:	4c0c      	ldr	r4, [pc, #48]	@ (80108c4 <__libc_init_array+0x44>)
 8010894:	f000 fc66 	bl	8011164 <_init>
 8010898:	1b64      	subs	r4, r4, r5
 801089a:	10a4      	asrs	r4, r4, #2
 801089c:	2600      	movs	r6, #0
 801089e:	42a6      	cmp	r6, r4
 80108a0:	d105      	bne.n	80108ae <__libc_init_array+0x2e>
 80108a2:	bd70      	pop	{r4, r5, r6, pc}
 80108a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80108a8:	4798      	blx	r3
 80108aa:	3601      	adds	r6, #1
 80108ac:	e7ee      	b.n	801088c <__libc_init_array+0xc>
 80108ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80108b2:	4798      	blx	r3
 80108b4:	3601      	adds	r6, #1
 80108b6:	e7f2      	b.n	801089e <__libc_init_array+0x1e>
 80108b8:	08018174 	.word	0x08018174
 80108bc:	08018174 	.word	0x08018174
 80108c0:	08018174 	.word	0x08018174
 80108c4:	08018178 	.word	0x08018178

080108c8 <__retarget_lock_acquire_recursive>:
 80108c8:	4770      	bx	lr

080108ca <__retarget_lock_release_recursive>:
 80108ca:	4770      	bx	lr

080108cc <_free_r>:
 80108cc:	b538      	push	{r3, r4, r5, lr}
 80108ce:	4605      	mov	r5, r0
 80108d0:	2900      	cmp	r1, #0
 80108d2:	d041      	beq.n	8010958 <_free_r+0x8c>
 80108d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80108d8:	1f0c      	subs	r4, r1, #4
 80108da:	2b00      	cmp	r3, #0
 80108dc:	bfb8      	it	lt
 80108de:	18e4      	addlt	r4, r4, r3
 80108e0:	f000 f8e0 	bl	8010aa4 <__malloc_lock>
 80108e4:	4a1d      	ldr	r2, [pc, #116]	@ (801095c <_free_r+0x90>)
 80108e6:	6813      	ldr	r3, [r2, #0]
 80108e8:	b933      	cbnz	r3, 80108f8 <_free_r+0x2c>
 80108ea:	6063      	str	r3, [r4, #4]
 80108ec:	6014      	str	r4, [r2, #0]
 80108ee:	4628      	mov	r0, r5
 80108f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80108f4:	f000 b8dc 	b.w	8010ab0 <__malloc_unlock>
 80108f8:	42a3      	cmp	r3, r4
 80108fa:	d908      	bls.n	801090e <_free_r+0x42>
 80108fc:	6820      	ldr	r0, [r4, #0]
 80108fe:	1821      	adds	r1, r4, r0
 8010900:	428b      	cmp	r3, r1
 8010902:	bf01      	itttt	eq
 8010904:	6819      	ldreq	r1, [r3, #0]
 8010906:	685b      	ldreq	r3, [r3, #4]
 8010908:	1809      	addeq	r1, r1, r0
 801090a:	6021      	streq	r1, [r4, #0]
 801090c:	e7ed      	b.n	80108ea <_free_r+0x1e>
 801090e:	461a      	mov	r2, r3
 8010910:	685b      	ldr	r3, [r3, #4]
 8010912:	b10b      	cbz	r3, 8010918 <_free_r+0x4c>
 8010914:	42a3      	cmp	r3, r4
 8010916:	d9fa      	bls.n	801090e <_free_r+0x42>
 8010918:	6811      	ldr	r1, [r2, #0]
 801091a:	1850      	adds	r0, r2, r1
 801091c:	42a0      	cmp	r0, r4
 801091e:	d10b      	bne.n	8010938 <_free_r+0x6c>
 8010920:	6820      	ldr	r0, [r4, #0]
 8010922:	4401      	add	r1, r0
 8010924:	1850      	adds	r0, r2, r1
 8010926:	4283      	cmp	r3, r0
 8010928:	6011      	str	r1, [r2, #0]
 801092a:	d1e0      	bne.n	80108ee <_free_r+0x22>
 801092c:	6818      	ldr	r0, [r3, #0]
 801092e:	685b      	ldr	r3, [r3, #4]
 8010930:	6053      	str	r3, [r2, #4]
 8010932:	4408      	add	r0, r1
 8010934:	6010      	str	r0, [r2, #0]
 8010936:	e7da      	b.n	80108ee <_free_r+0x22>
 8010938:	d902      	bls.n	8010940 <_free_r+0x74>
 801093a:	230c      	movs	r3, #12
 801093c:	602b      	str	r3, [r5, #0]
 801093e:	e7d6      	b.n	80108ee <_free_r+0x22>
 8010940:	6820      	ldr	r0, [r4, #0]
 8010942:	1821      	adds	r1, r4, r0
 8010944:	428b      	cmp	r3, r1
 8010946:	bf04      	itt	eq
 8010948:	6819      	ldreq	r1, [r3, #0]
 801094a:	685b      	ldreq	r3, [r3, #4]
 801094c:	6063      	str	r3, [r4, #4]
 801094e:	bf04      	itt	eq
 8010950:	1809      	addeq	r1, r1, r0
 8010952:	6021      	streq	r1, [r4, #0]
 8010954:	6054      	str	r4, [r2, #4]
 8010956:	e7ca      	b.n	80108ee <_free_r+0x22>
 8010958:	bd38      	pop	{r3, r4, r5, pc}
 801095a:	bf00      	nop
 801095c:	240026b8 	.word	0x240026b8

08010960 <sbrk_aligned>:
 8010960:	b570      	push	{r4, r5, r6, lr}
 8010962:	4e0f      	ldr	r6, [pc, #60]	@ (80109a0 <sbrk_aligned+0x40>)
 8010964:	460c      	mov	r4, r1
 8010966:	6831      	ldr	r1, [r6, #0]
 8010968:	4605      	mov	r5, r0
 801096a:	b911      	cbnz	r1, 8010972 <sbrk_aligned+0x12>
 801096c:	f000 fba6 	bl	80110bc <_sbrk_r>
 8010970:	6030      	str	r0, [r6, #0]
 8010972:	4621      	mov	r1, r4
 8010974:	4628      	mov	r0, r5
 8010976:	f000 fba1 	bl	80110bc <_sbrk_r>
 801097a:	1c43      	adds	r3, r0, #1
 801097c:	d103      	bne.n	8010986 <sbrk_aligned+0x26>
 801097e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8010982:	4620      	mov	r0, r4
 8010984:	bd70      	pop	{r4, r5, r6, pc}
 8010986:	1cc4      	adds	r4, r0, #3
 8010988:	f024 0403 	bic.w	r4, r4, #3
 801098c:	42a0      	cmp	r0, r4
 801098e:	d0f8      	beq.n	8010982 <sbrk_aligned+0x22>
 8010990:	1a21      	subs	r1, r4, r0
 8010992:	4628      	mov	r0, r5
 8010994:	f000 fb92 	bl	80110bc <_sbrk_r>
 8010998:	3001      	adds	r0, #1
 801099a:	d1f2      	bne.n	8010982 <sbrk_aligned+0x22>
 801099c:	e7ef      	b.n	801097e <sbrk_aligned+0x1e>
 801099e:	bf00      	nop
 80109a0:	240026b4 	.word	0x240026b4

080109a4 <_malloc_r>:
 80109a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80109a8:	1ccd      	adds	r5, r1, #3
 80109aa:	f025 0503 	bic.w	r5, r5, #3
 80109ae:	3508      	adds	r5, #8
 80109b0:	2d0c      	cmp	r5, #12
 80109b2:	bf38      	it	cc
 80109b4:	250c      	movcc	r5, #12
 80109b6:	2d00      	cmp	r5, #0
 80109b8:	4606      	mov	r6, r0
 80109ba:	db01      	blt.n	80109c0 <_malloc_r+0x1c>
 80109bc:	42a9      	cmp	r1, r5
 80109be:	d904      	bls.n	80109ca <_malloc_r+0x26>
 80109c0:	230c      	movs	r3, #12
 80109c2:	6033      	str	r3, [r6, #0]
 80109c4:	2000      	movs	r0, #0
 80109c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80109ca:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8010aa0 <_malloc_r+0xfc>
 80109ce:	f000 f869 	bl	8010aa4 <__malloc_lock>
 80109d2:	f8d8 3000 	ldr.w	r3, [r8]
 80109d6:	461c      	mov	r4, r3
 80109d8:	bb44      	cbnz	r4, 8010a2c <_malloc_r+0x88>
 80109da:	4629      	mov	r1, r5
 80109dc:	4630      	mov	r0, r6
 80109de:	f7ff ffbf 	bl	8010960 <sbrk_aligned>
 80109e2:	1c43      	adds	r3, r0, #1
 80109e4:	4604      	mov	r4, r0
 80109e6:	d158      	bne.n	8010a9a <_malloc_r+0xf6>
 80109e8:	f8d8 4000 	ldr.w	r4, [r8]
 80109ec:	4627      	mov	r7, r4
 80109ee:	2f00      	cmp	r7, #0
 80109f0:	d143      	bne.n	8010a7a <_malloc_r+0xd6>
 80109f2:	2c00      	cmp	r4, #0
 80109f4:	d04b      	beq.n	8010a8e <_malloc_r+0xea>
 80109f6:	6823      	ldr	r3, [r4, #0]
 80109f8:	4639      	mov	r1, r7
 80109fa:	4630      	mov	r0, r6
 80109fc:	eb04 0903 	add.w	r9, r4, r3
 8010a00:	f000 fb5c 	bl	80110bc <_sbrk_r>
 8010a04:	4581      	cmp	r9, r0
 8010a06:	d142      	bne.n	8010a8e <_malloc_r+0xea>
 8010a08:	6821      	ldr	r1, [r4, #0]
 8010a0a:	1a6d      	subs	r5, r5, r1
 8010a0c:	4629      	mov	r1, r5
 8010a0e:	4630      	mov	r0, r6
 8010a10:	f7ff ffa6 	bl	8010960 <sbrk_aligned>
 8010a14:	3001      	adds	r0, #1
 8010a16:	d03a      	beq.n	8010a8e <_malloc_r+0xea>
 8010a18:	6823      	ldr	r3, [r4, #0]
 8010a1a:	442b      	add	r3, r5
 8010a1c:	6023      	str	r3, [r4, #0]
 8010a1e:	f8d8 3000 	ldr.w	r3, [r8]
 8010a22:	685a      	ldr	r2, [r3, #4]
 8010a24:	bb62      	cbnz	r2, 8010a80 <_malloc_r+0xdc>
 8010a26:	f8c8 7000 	str.w	r7, [r8]
 8010a2a:	e00f      	b.n	8010a4c <_malloc_r+0xa8>
 8010a2c:	6822      	ldr	r2, [r4, #0]
 8010a2e:	1b52      	subs	r2, r2, r5
 8010a30:	d420      	bmi.n	8010a74 <_malloc_r+0xd0>
 8010a32:	2a0b      	cmp	r2, #11
 8010a34:	d917      	bls.n	8010a66 <_malloc_r+0xc2>
 8010a36:	1961      	adds	r1, r4, r5
 8010a38:	42a3      	cmp	r3, r4
 8010a3a:	6025      	str	r5, [r4, #0]
 8010a3c:	bf18      	it	ne
 8010a3e:	6059      	strne	r1, [r3, #4]
 8010a40:	6863      	ldr	r3, [r4, #4]
 8010a42:	bf08      	it	eq
 8010a44:	f8c8 1000 	streq.w	r1, [r8]
 8010a48:	5162      	str	r2, [r4, r5]
 8010a4a:	604b      	str	r3, [r1, #4]
 8010a4c:	4630      	mov	r0, r6
 8010a4e:	f000 f82f 	bl	8010ab0 <__malloc_unlock>
 8010a52:	f104 000b 	add.w	r0, r4, #11
 8010a56:	1d23      	adds	r3, r4, #4
 8010a58:	f020 0007 	bic.w	r0, r0, #7
 8010a5c:	1ac2      	subs	r2, r0, r3
 8010a5e:	bf1c      	itt	ne
 8010a60:	1a1b      	subne	r3, r3, r0
 8010a62:	50a3      	strne	r3, [r4, r2]
 8010a64:	e7af      	b.n	80109c6 <_malloc_r+0x22>
 8010a66:	6862      	ldr	r2, [r4, #4]
 8010a68:	42a3      	cmp	r3, r4
 8010a6a:	bf0c      	ite	eq
 8010a6c:	f8c8 2000 	streq.w	r2, [r8]
 8010a70:	605a      	strne	r2, [r3, #4]
 8010a72:	e7eb      	b.n	8010a4c <_malloc_r+0xa8>
 8010a74:	4623      	mov	r3, r4
 8010a76:	6864      	ldr	r4, [r4, #4]
 8010a78:	e7ae      	b.n	80109d8 <_malloc_r+0x34>
 8010a7a:	463c      	mov	r4, r7
 8010a7c:	687f      	ldr	r7, [r7, #4]
 8010a7e:	e7b6      	b.n	80109ee <_malloc_r+0x4a>
 8010a80:	461a      	mov	r2, r3
 8010a82:	685b      	ldr	r3, [r3, #4]
 8010a84:	42a3      	cmp	r3, r4
 8010a86:	d1fb      	bne.n	8010a80 <_malloc_r+0xdc>
 8010a88:	2300      	movs	r3, #0
 8010a8a:	6053      	str	r3, [r2, #4]
 8010a8c:	e7de      	b.n	8010a4c <_malloc_r+0xa8>
 8010a8e:	230c      	movs	r3, #12
 8010a90:	6033      	str	r3, [r6, #0]
 8010a92:	4630      	mov	r0, r6
 8010a94:	f000 f80c 	bl	8010ab0 <__malloc_unlock>
 8010a98:	e794      	b.n	80109c4 <_malloc_r+0x20>
 8010a9a:	6005      	str	r5, [r0, #0]
 8010a9c:	e7d6      	b.n	8010a4c <_malloc_r+0xa8>
 8010a9e:	bf00      	nop
 8010aa0:	240026b8 	.word	0x240026b8

08010aa4 <__malloc_lock>:
 8010aa4:	4801      	ldr	r0, [pc, #4]	@ (8010aac <__malloc_lock+0x8>)
 8010aa6:	f7ff bf0f 	b.w	80108c8 <__retarget_lock_acquire_recursive>
 8010aaa:	bf00      	nop
 8010aac:	240026b0 	.word	0x240026b0

08010ab0 <__malloc_unlock>:
 8010ab0:	4801      	ldr	r0, [pc, #4]	@ (8010ab8 <__malloc_unlock+0x8>)
 8010ab2:	f7ff bf0a 	b.w	80108ca <__retarget_lock_release_recursive>
 8010ab6:	bf00      	nop
 8010ab8:	240026b0 	.word	0x240026b0

08010abc <__ssputs_r>:
 8010abc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010ac0:	688e      	ldr	r6, [r1, #8]
 8010ac2:	461f      	mov	r7, r3
 8010ac4:	42be      	cmp	r6, r7
 8010ac6:	680b      	ldr	r3, [r1, #0]
 8010ac8:	4682      	mov	sl, r0
 8010aca:	460c      	mov	r4, r1
 8010acc:	4690      	mov	r8, r2
 8010ace:	d82d      	bhi.n	8010b2c <__ssputs_r+0x70>
 8010ad0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8010ad4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8010ad8:	d026      	beq.n	8010b28 <__ssputs_r+0x6c>
 8010ada:	6965      	ldr	r5, [r4, #20]
 8010adc:	6909      	ldr	r1, [r1, #16]
 8010ade:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8010ae2:	eba3 0901 	sub.w	r9, r3, r1
 8010ae6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8010aea:	1c7b      	adds	r3, r7, #1
 8010aec:	444b      	add	r3, r9
 8010aee:	106d      	asrs	r5, r5, #1
 8010af0:	429d      	cmp	r5, r3
 8010af2:	bf38      	it	cc
 8010af4:	461d      	movcc	r5, r3
 8010af6:	0553      	lsls	r3, r2, #21
 8010af8:	d527      	bpl.n	8010b4a <__ssputs_r+0x8e>
 8010afa:	4629      	mov	r1, r5
 8010afc:	f7ff ff52 	bl	80109a4 <_malloc_r>
 8010b00:	4606      	mov	r6, r0
 8010b02:	b360      	cbz	r0, 8010b5e <__ssputs_r+0xa2>
 8010b04:	6921      	ldr	r1, [r4, #16]
 8010b06:	464a      	mov	r2, r9
 8010b08:	f000 fae8 	bl	80110dc <memcpy>
 8010b0c:	89a3      	ldrh	r3, [r4, #12]
 8010b0e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8010b12:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8010b16:	81a3      	strh	r3, [r4, #12]
 8010b18:	6126      	str	r6, [r4, #16]
 8010b1a:	6165      	str	r5, [r4, #20]
 8010b1c:	444e      	add	r6, r9
 8010b1e:	eba5 0509 	sub.w	r5, r5, r9
 8010b22:	6026      	str	r6, [r4, #0]
 8010b24:	60a5      	str	r5, [r4, #8]
 8010b26:	463e      	mov	r6, r7
 8010b28:	42be      	cmp	r6, r7
 8010b2a:	d900      	bls.n	8010b2e <__ssputs_r+0x72>
 8010b2c:	463e      	mov	r6, r7
 8010b2e:	6820      	ldr	r0, [r4, #0]
 8010b30:	4632      	mov	r2, r6
 8010b32:	4641      	mov	r1, r8
 8010b34:	f000 faa8 	bl	8011088 <memmove>
 8010b38:	68a3      	ldr	r3, [r4, #8]
 8010b3a:	1b9b      	subs	r3, r3, r6
 8010b3c:	60a3      	str	r3, [r4, #8]
 8010b3e:	6823      	ldr	r3, [r4, #0]
 8010b40:	4433      	add	r3, r6
 8010b42:	6023      	str	r3, [r4, #0]
 8010b44:	2000      	movs	r0, #0
 8010b46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010b4a:	462a      	mov	r2, r5
 8010b4c:	f000 fad4 	bl	80110f8 <_realloc_r>
 8010b50:	4606      	mov	r6, r0
 8010b52:	2800      	cmp	r0, #0
 8010b54:	d1e0      	bne.n	8010b18 <__ssputs_r+0x5c>
 8010b56:	6921      	ldr	r1, [r4, #16]
 8010b58:	4650      	mov	r0, sl
 8010b5a:	f7ff feb7 	bl	80108cc <_free_r>
 8010b5e:	230c      	movs	r3, #12
 8010b60:	f8ca 3000 	str.w	r3, [sl]
 8010b64:	89a3      	ldrh	r3, [r4, #12]
 8010b66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8010b6a:	81a3      	strh	r3, [r4, #12]
 8010b6c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010b70:	e7e9      	b.n	8010b46 <__ssputs_r+0x8a>
	...

08010b74 <_svfiprintf_r>:
 8010b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b78:	4698      	mov	r8, r3
 8010b7a:	898b      	ldrh	r3, [r1, #12]
 8010b7c:	061b      	lsls	r3, r3, #24
 8010b7e:	b09d      	sub	sp, #116	@ 0x74
 8010b80:	4607      	mov	r7, r0
 8010b82:	460d      	mov	r5, r1
 8010b84:	4614      	mov	r4, r2
 8010b86:	d510      	bpl.n	8010baa <_svfiprintf_r+0x36>
 8010b88:	690b      	ldr	r3, [r1, #16]
 8010b8a:	b973      	cbnz	r3, 8010baa <_svfiprintf_r+0x36>
 8010b8c:	2140      	movs	r1, #64	@ 0x40
 8010b8e:	f7ff ff09 	bl	80109a4 <_malloc_r>
 8010b92:	6028      	str	r0, [r5, #0]
 8010b94:	6128      	str	r0, [r5, #16]
 8010b96:	b930      	cbnz	r0, 8010ba6 <_svfiprintf_r+0x32>
 8010b98:	230c      	movs	r3, #12
 8010b9a:	603b      	str	r3, [r7, #0]
 8010b9c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010ba0:	b01d      	add	sp, #116	@ 0x74
 8010ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ba6:	2340      	movs	r3, #64	@ 0x40
 8010ba8:	616b      	str	r3, [r5, #20]
 8010baa:	2300      	movs	r3, #0
 8010bac:	9309      	str	r3, [sp, #36]	@ 0x24
 8010bae:	2320      	movs	r3, #32
 8010bb0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8010bb4:	f8cd 800c 	str.w	r8, [sp, #12]
 8010bb8:	2330      	movs	r3, #48	@ 0x30
 8010bba:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8010d58 <_svfiprintf_r+0x1e4>
 8010bbe:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8010bc2:	f04f 0901 	mov.w	r9, #1
 8010bc6:	4623      	mov	r3, r4
 8010bc8:	469a      	mov	sl, r3
 8010bca:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010bce:	b10a      	cbz	r2, 8010bd4 <_svfiprintf_r+0x60>
 8010bd0:	2a25      	cmp	r2, #37	@ 0x25
 8010bd2:	d1f9      	bne.n	8010bc8 <_svfiprintf_r+0x54>
 8010bd4:	ebba 0b04 	subs.w	fp, sl, r4
 8010bd8:	d00b      	beq.n	8010bf2 <_svfiprintf_r+0x7e>
 8010bda:	465b      	mov	r3, fp
 8010bdc:	4622      	mov	r2, r4
 8010bde:	4629      	mov	r1, r5
 8010be0:	4638      	mov	r0, r7
 8010be2:	f7ff ff6b 	bl	8010abc <__ssputs_r>
 8010be6:	3001      	adds	r0, #1
 8010be8:	f000 80a7 	beq.w	8010d3a <_svfiprintf_r+0x1c6>
 8010bec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010bee:	445a      	add	r2, fp
 8010bf0:	9209      	str	r2, [sp, #36]	@ 0x24
 8010bf2:	f89a 3000 	ldrb.w	r3, [sl]
 8010bf6:	2b00      	cmp	r3, #0
 8010bf8:	f000 809f 	beq.w	8010d3a <_svfiprintf_r+0x1c6>
 8010bfc:	2300      	movs	r3, #0
 8010bfe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8010c02:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8010c06:	f10a 0a01 	add.w	sl, sl, #1
 8010c0a:	9304      	str	r3, [sp, #16]
 8010c0c:	9307      	str	r3, [sp, #28]
 8010c0e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8010c12:	931a      	str	r3, [sp, #104]	@ 0x68
 8010c14:	4654      	mov	r4, sl
 8010c16:	2205      	movs	r2, #5
 8010c18:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010c1c:	484e      	ldr	r0, [pc, #312]	@ (8010d58 <_svfiprintf_r+0x1e4>)
 8010c1e:	f7ef fb67 	bl	80002f0 <memchr>
 8010c22:	9a04      	ldr	r2, [sp, #16]
 8010c24:	b9d8      	cbnz	r0, 8010c5e <_svfiprintf_r+0xea>
 8010c26:	06d0      	lsls	r0, r2, #27
 8010c28:	bf44      	itt	mi
 8010c2a:	2320      	movmi	r3, #32
 8010c2c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8010c30:	0711      	lsls	r1, r2, #28
 8010c32:	bf44      	itt	mi
 8010c34:	232b      	movmi	r3, #43	@ 0x2b
 8010c36:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8010c3a:	f89a 3000 	ldrb.w	r3, [sl]
 8010c3e:	2b2a      	cmp	r3, #42	@ 0x2a
 8010c40:	d015      	beq.n	8010c6e <_svfiprintf_r+0xfa>
 8010c42:	9a07      	ldr	r2, [sp, #28]
 8010c44:	4654      	mov	r4, sl
 8010c46:	2000      	movs	r0, #0
 8010c48:	f04f 0c0a 	mov.w	ip, #10
 8010c4c:	4621      	mov	r1, r4
 8010c4e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010c52:	3b30      	subs	r3, #48	@ 0x30
 8010c54:	2b09      	cmp	r3, #9
 8010c56:	d94b      	bls.n	8010cf0 <_svfiprintf_r+0x17c>
 8010c58:	b1b0      	cbz	r0, 8010c88 <_svfiprintf_r+0x114>
 8010c5a:	9207      	str	r2, [sp, #28]
 8010c5c:	e014      	b.n	8010c88 <_svfiprintf_r+0x114>
 8010c5e:	eba0 0308 	sub.w	r3, r0, r8
 8010c62:	fa09 f303 	lsl.w	r3, r9, r3
 8010c66:	4313      	orrs	r3, r2
 8010c68:	9304      	str	r3, [sp, #16]
 8010c6a:	46a2      	mov	sl, r4
 8010c6c:	e7d2      	b.n	8010c14 <_svfiprintf_r+0xa0>
 8010c6e:	9b03      	ldr	r3, [sp, #12]
 8010c70:	1d19      	adds	r1, r3, #4
 8010c72:	681b      	ldr	r3, [r3, #0]
 8010c74:	9103      	str	r1, [sp, #12]
 8010c76:	2b00      	cmp	r3, #0
 8010c78:	bfbb      	ittet	lt
 8010c7a:	425b      	neglt	r3, r3
 8010c7c:	f042 0202 	orrlt.w	r2, r2, #2
 8010c80:	9307      	strge	r3, [sp, #28]
 8010c82:	9307      	strlt	r3, [sp, #28]
 8010c84:	bfb8      	it	lt
 8010c86:	9204      	strlt	r2, [sp, #16]
 8010c88:	7823      	ldrb	r3, [r4, #0]
 8010c8a:	2b2e      	cmp	r3, #46	@ 0x2e
 8010c8c:	d10a      	bne.n	8010ca4 <_svfiprintf_r+0x130>
 8010c8e:	7863      	ldrb	r3, [r4, #1]
 8010c90:	2b2a      	cmp	r3, #42	@ 0x2a
 8010c92:	d132      	bne.n	8010cfa <_svfiprintf_r+0x186>
 8010c94:	9b03      	ldr	r3, [sp, #12]
 8010c96:	1d1a      	adds	r2, r3, #4
 8010c98:	681b      	ldr	r3, [r3, #0]
 8010c9a:	9203      	str	r2, [sp, #12]
 8010c9c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8010ca0:	3402      	adds	r4, #2
 8010ca2:	9305      	str	r3, [sp, #20]
 8010ca4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8010d68 <_svfiprintf_r+0x1f4>
 8010ca8:	7821      	ldrb	r1, [r4, #0]
 8010caa:	2203      	movs	r2, #3
 8010cac:	4650      	mov	r0, sl
 8010cae:	f7ef fb1f 	bl	80002f0 <memchr>
 8010cb2:	b138      	cbz	r0, 8010cc4 <_svfiprintf_r+0x150>
 8010cb4:	9b04      	ldr	r3, [sp, #16]
 8010cb6:	eba0 000a 	sub.w	r0, r0, sl
 8010cba:	2240      	movs	r2, #64	@ 0x40
 8010cbc:	4082      	lsls	r2, r0
 8010cbe:	4313      	orrs	r3, r2
 8010cc0:	3401      	adds	r4, #1
 8010cc2:	9304      	str	r3, [sp, #16]
 8010cc4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010cc8:	4824      	ldr	r0, [pc, #144]	@ (8010d5c <_svfiprintf_r+0x1e8>)
 8010cca:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8010cce:	2206      	movs	r2, #6
 8010cd0:	f7ef fb0e 	bl	80002f0 <memchr>
 8010cd4:	2800      	cmp	r0, #0
 8010cd6:	d036      	beq.n	8010d46 <_svfiprintf_r+0x1d2>
 8010cd8:	4b21      	ldr	r3, [pc, #132]	@ (8010d60 <_svfiprintf_r+0x1ec>)
 8010cda:	bb1b      	cbnz	r3, 8010d24 <_svfiprintf_r+0x1b0>
 8010cdc:	9b03      	ldr	r3, [sp, #12]
 8010cde:	3307      	adds	r3, #7
 8010ce0:	f023 0307 	bic.w	r3, r3, #7
 8010ce4:	3308      	adds	r3, #8
 8010ce6:	9303      	str	r3, [sp, #12]
 8010ce8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010cea:	4433      	add	r3, r6
 8010cec:	9309      	str	r3, [sp, #36]	@ 0x24
 8010cee:	e76a      	b.n	8010bc6 <_svfiprintf_r+0x52>
 8010cf0:	fb0c 3202 	mla	r2, ip, r2, r3
 8010cf4:	460c      	mov	r4, r1
 8010cf6:	2001      	movs	r0, #1
 8010cf8:	e7a8      	b.n	8010c4c <_svfiprintf_r+0xd8>
 8010cfa:	2300      	movs	r3, #0
 8010cfc:	3401      	adds	r4, #1
 8010cfe:	9305      	str	r3, [sp, #20]
 8010d00:	4619      	mov	r1, r3
 8010d02:	f04f 0c0a 	mov.w	ip, #10
 8010d06:	4620      	mov	r0, r4
 8010d08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010d0c:	3a30      	subs	r2, #48	@ 0x30
 8010d0e:	2a09      	cmp	r2, #9
 8010d10:	d903      	bls.n	8010d1a <_svfiprintf_r+0x1a6>
 8010d12:	2b00      	cmp	r3, #0
 8010d14:	d0c6      	beq.n	8010ca4 <_svfiprintf_r+0x130>
 8010d16:	9105      	str	r1, [sp, #20]
 8010d18:	e7c4      	b.n	8010ca4 <_svfiprintf_r+0x130>
 8010d1a:	fb0c 2101 	mla	r1, ip, r1, r2
 8010d1e:	4604      	mov	r4, r0
 8010d20:	2301      	movs	r3, #1
 8010d22:	e7f0      	b.n	8010d06 <_svfiprintf_r+0x192>
 8010d24:	ab03      	add	r3, sp, #12
 8010d26:	9300      	str	r3, [sp, #0]
 8010d28:	462a      	mov	r2, r5
 8010d2a:	4b0e      	ldr	r3, [pc, #56]	@ (8010d64 <_svfiprintf_r+0x1f0>)
 8010d2c:	a904      	add	r1, sp, #16
 8010d2e:	4638      	mov	r0, r7
 8010d30:	f3af 8000 	nop.w
 8010d34:	1c42      	adds	r2, r0, #1
 8010d36:	4606      	mov	r6, r0
 8010d38:	d1d6      	bne.n	8010ce8 <_svfiprintf_r+0x174>
 8010d3a:	89ab      	ldrh	r3, [r5, #12]
 8010d3c:	065b      	lsls	r3, r3, #25
 8010d3e:	f53f af2d 	bmi.w	8010b9c <_svfiprintf_r+0x28>
 8010d42:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010d44:	e72c      	b.n	8010ba0 <_svfiprintf_r+0x2c>
 8010d46:	ab03      	add	r3, sp, #12
 8010d48:	9300      	str	r3, [sp, #0]
 8010d4a:	462a      	mov	r2, r5
 8010d4c:	4b05      	ldr	r3, [pc, #20]	@ (8010d64 <_svfiprintf_r+0x1f0>)
 8010d4e:	a904      	add	r1, sp, #16
 8010d50:	4638      	mov	r0, r7
 8010d52:	f000 f879 	bl	8010e48 <_printf_i>
 8010d56:	e7ed      	b.n	8010d34 <_svfiprintf_r+0x1c0>
 8010d58:	08018138 	.word	0x08018138
 8010d5c:	08018142 	.word	0x08018142
 8010d60:	00000000 	.word	0x00000000
 8010d64:	08010abd 	.word	0x08010abd
 8010d68:	0801813e 	.word	0x0801813e

08010d6c <_printf_common>:
 8010d6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010d70:	4616      	mov	r6, r2
 8010d72:	4698      	mov	r8, r3
 8010d74:	688a      	ldr	r2, [r1, #8]
 8010d76:	690b      	ldr	r3, [r1, #16]
 8010d78:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8010d7c:	4293      	cmp	r3, r2
 8010d7e:	bfb8      	it	lt
 8010d80:	4613      	movlt	r3, r2
 8010d82:	6033      	str	r3, [r6, #0]
 8010d84:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8010d88:	4607      	mov	r7, r0
 8010d8a:	460c      	mov	r4, r1
 8010d8c:	b10a      	cbz	r2, 8010d92 <_printf_common+0x26>
 8010d8e:	3301      	adds	r3, #1
 8010d90:	6033      	str	r3, [r6, #0]
 8010d92:	6823      	ldr	r3, [r4, #0]
 8010d94:	0699      	lsls	r1, r3, #26
 8010d96:	bf42      	ittt	mi
 8010d98:	6833      	ldrmi	r3, [r6, #0]
 8010d9a:	3302      	addmi	r3, #2
 8010d9c:	6033      	strmi	r3, [r6, #0]
 8010d9e:	6825      	ldr	r5, [r4, #0]
 8010da0:	f015 0506 	ands.w	r5, r5, #6
 8010da4:	d106      	bne.n	8010db4 <_printf_common+0x48>
 8010da6:	f104 0a19 	add.w	sl, r4, #25
 8010daa:	68e3      	ldr	r3, [r4, #12]
 8010dac:	6832      	ldr	r2, [r6, #0]
 8010dae:	1a9b      	subs	r3, r3, r2
 8010db0:	42ab      	cmp	r3, r5
 8010db2:	dc26      	bgt.n	8010e02 <_printf_common+0x96>
 8010db4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8010db8:	6822      	ldr	r2, [r4, #0]
 8010dba:	3b00      	subs	r3, #0
 8010dbc:	bf18      	it	ne
 8010dbe:	2301      	movne	r3, #1
 8010dc0:	0692      	lsls	r2, r2, #26
 8010dc2:	d42b      	bmi.n	8010e1c <_printf_common+0xb0>
 8010dc4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8010dc8:	4641      	mov	r1, r8
 8010dca:	4638      	mov	r0, r7
 8010dcc:	47c8      	blx	r9
 8010dce:	3001      	adds	r0, #1
 8010dd0:	d01e      	beq.n	8010e10 <_printf_common+0xa4>
 8010dd2:	6823      	ldr	r3, [r4, #0]
 8010dd4:	6922      	ldr	r2, [r4, #16]
 8010dd6:	f003 0306 	and.w	r3, r3, #6
 8010dda:	2b04      	cmp	r3, #4
 8010ddc:	bf02      	ittt	eq
 8010dde:	68e5      	ldreq	r5, [r4, #12]
 8010de0:	6833      	ldreq	r3, [r6, #0]
 8010de2:	1aed      	subeq	r5, r5, r3
 8010de4:	68a3      	ldr	r3, [r4, #8]
 8010de6:	bf0c      	ite	eq
 8010de8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8010dec:	2500      	movne	r5, #0
 8010dee:	4293      	cmp	r3, r2
 8010df0:	bfc4      	itt	gt
 8010df2:	1a9b      	subgt	r3, r3, r2
 8010df4:	18ed      	addgt	r5, r5, r3
 8010df6:	2600      	movs	r6, #0
 8010df8:	341a      	adds	r4, #26
 8010dfa:	42b5      	cmp	r5, r6
 8010dfc:	d11a      	bne.n	8010e34 <_printf_common+0xc8>
 8010dfe:	2000      	movs	r0, #0
 8010e00:	e008      	b.n	8010e14 <_printf_common+0xa8>
 8010e02:	2301      	movs	r3, #1
 8010e04:	4652      	mov	r2, sl
 8010e06:	4641      	mov	r1, r8
 8010e08:	4638      	mov	r0, r7
 8010e0a:	47c8      	blx	r9
 8010e0c:	3001      	adds	r0, #1
 8010e0e:	d103      	bne.n	8010e18 <_printf_common+0xac>
 8010e10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010e14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010e18:	3501      	adds	r5, #1
 8010e1a:	e7c6      	b.n	8010daa <_printf_common+0x3e>
 8010e1c:	18e1      	adds	r1, r4, r3
 8010e1e:	1c5a      	adds	r2, r3, #1
 8010e20:	2030      	movs	r0, #48	@ 0x30
 8010e22:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8010e26:	4422      	add	r2, r4
 8010e28:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8010e2c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8010e30:	3302      	adds	r3, #2
 8010e32:	e7c7      	b.n	8010dc4 <_printf_common+0x58>
 8010e34:	2301      	movs	r3, #1
 8010e36:	4622      	mov	r2, r4
 8010e38:	4641      	mov	r1, r8
 8010e3a:	4638      	mov	r0, r7
 8010e3c:	47c8      	blx	r9
 8010e3e:	3001      	adds	r0, #1
 8010e40:	d0e6      	beq.n	8010e10 <_printf_common+0xa4>
 8010e42:	3601      	adds	r6, #1
 8010e44:	e7d9      	b.n	8010dfa <_printf_common+0x8e>
	...

08010e48 <_printf_i>:
 8010e48:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010e4c:	7e0f      	ldrb	r7, [r1, #24]
 8010e4e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8010e50:	2f78      	cmp	r7, #120	@ 0x78
 8010e52:	4691      	mov	r9, r2
 8010e54:	4680      	mov	r8, r0
 8010e56:	460c      	mov	r4, r1
 8010e58:	469a      	mov	sl, r3
 8010e5a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8010e5e:	d807      	bhi.n	8010e70 <_printf_i+0x28>
 8010e60:	2f62      	cmp	r7, #98	@ 0x62
 8010e62:	d80a      	bhi.n	8010e7a <_printf_i+0x32>
 8010e64:	2f00      	cmp	r7, #0
 8010e66:	f000 80d2 	beq.w	801100e <_printf_i+0x1c6>
 8010e6a:	2f58      	cmp	r7, #88	@ 0x58
 8010e6c:	f000 80b9 	beq.w	8010fe2 <_printf_i+0x19a>
 8010e70:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8010e74:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8010e78:	e03a      	b.n	8010ef0 <_printf_i+0xa8>
 8010e7a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8010e7e:	2b15      	cmp	r3, #21
 8010e80:	d8f6      	bhi.n	8010e70 <_printf_i+0x28>
 8010e82:	a101      	add	r1, pc, #4	@ (adr r1, 8010e88 <_printf_i+0x40>)
 8010e84:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8010e88:	08010ee1 	.word	0x08010ee1
 8010e8c:	08010ef5 	.word	0x08010ef5
 8010e90:	08010e71 	.word	0x08010e71
 8010e94:	08010e71 	.word	0x08010e71
 8010e98:	08010e71 	.word	0x08010e71
 8010e9c:	08010e71 	.word	0x08010e71
 8010ea0:	08010ef5 	.word	0x08010ef5
 8010ea4:	08010e71 	.word	0x08010e71
 8010ea8:	08010e71 	.word	0x08010e71
 8010eac:	08010e71 	.word	0x08010e71
 8010eb0:	08010e71 	.word	0x08010e71
 8010eb4:	08010ff5 	.word	0x08010ff5
 8010eb8:	08010f1f 	.word	0x08010f1f
 8010ebc:	08010faf 	.word	0x08010faf
 8010ec0:	08010e71 	.word	0x08010e71
 8010ec4:	08010e71 	.word	0x08010e71
 8010ec8:	08011017 	.word	0x08011017
 8010ecc:	08010e71 	.word	0x08010e71
 8010ed0:	08010f1f 	.word	0x08010f1f
 8010ed4:	08010e71 	.word	0x08010e71
 8010ed8:	08010e71 	.word	0x08010e71
 8010edc:	08010fb7 	.word	0x08010fb7
 8010ee0:	6833      	ldr	r3, [r6, #0]
 8010ee2:	1d1a      	adds	r2, r3, #4
 8010ee4:	681b      	ldr	r3, [r3, #0]
 8010ee6:	6032      	str	r2, [r6, #0]
 8010ee8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8010eec:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8010ef0:	2301      	movs	r3, #1
 8010ef2:	e09d      	b.n	8011030 <_printf_i+0x1e8>
 8010ef4:	6833      	ldr	r3, [r6, #0]
 8010ef6:	6820      	ldr	r0, [r4, #0]
 8010ef8:	1d19      	adds	r1, r3, #4
 8010efa:	6031      	str	r1, [r6, #0]
 8010efc:	0606      	lsls	r6, r0, #24
 8010efe:	d501      	bpl.n	8010f04 <_printf_i+0xbc>
 8010f00:	681d      	ldr	r5, [r3, #0]
 8010f02:	e003      	b.n	8010f0c <_printf_i+0xc4>
 8010f04:	0645      	lsls	r5, r0, #25
 8010f06:	d5fb      	bpl.n	8010f00 <_printf_i+0xb8>
 8010f08:	f9b3 5000 	ldrsh.w	r5, [r3]
 8010f0c:	2d00      	cmp	r5, #0
 8010f0e:	da03      	bge.n	8010f18 <_printf_i+0xd0>
 8010f10:	232d      	movs	r3, #45	@ 0x2d
 8010f12:	426d      	negs	r5, r5
 8010f14:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8010f18:	4859      	ldr	r0, [pc, #356]	@ (8011080 <_printf_i+0x238>)
 8010f1a:	230a      	movs	r3, #10
 8010f1c:	e011      	b.n	8010f42 <_printf_i+0xfa>
 8010f1e:	6821      	ldr	r1, [r4, #0]
 8010f20:	6833      	ldr	r3, [r6, #0]
 8010f22:	0608      	lsls	r0, r1, #24
 8010f24:	f853 5b04 	ldr.w	r5, [r3], #4
 8010f28:	d402      	bmi.n	8010f30 <_printf_i+0xe8>
 8010f2a:	0649      	lsls	r1, r1, #25
 8010f2c:	bf48      	it	mi
 8010f2e:	b2ad      	uxthmi	r5, r5
 8010f30:	2f6f      	cmp	r7, #111	@ 0x6f
 8010f32:	4853      	ldr	r0, [pc, #332]	@ (8011080 <_printf_i+0x238>)
 8010f34:	6033      	str	r3, [r6, #0]
 8010f36:	bf14      	ite	ne
 8010f38:	230a      	movne	r3, #10
 8010f3a:	2308      	moveq	r3, #8
 8010f3c:	2100      	movs	r1, #0
 8010f3e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8010f42:	6866      	ldr	r6, [r4, #4]
 8010f44:	60a6      	str	r6, [r4, #8]
 8010f46:	2e00      	cmp	r6, #0
 8010f48:	bfa2      	ittt	ge
 8010f4a:	6821      	ldrge	r1, [r4, #0]
 8010f4c:	f021 0104 	bicge.w	r1, r1, #4
 8010f50:	6021      	strge	r1, [r4, #0]
 8010f52:	b90d      	cbnz	r5, 8010f58 <_printf_i+0x110>
 8010f54:	2e00      	cmp	r6, #0
 8010f56:	d04b      	beq.n	8010ff0 <_printf_i+0x1a8>
 8010f58:	4616      	mov	r6, r2
 8010f5a:	fbb5 f1f3 	udiv	r1, r5, r3
 8010f5e:	fb03 5711 	mls	r7, r3, r1, r5
 8010f62:	5dc7      	ldrb	r7, [r0, r7]
 8010f64:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8010f68:	462f      	mov	r7, r5
 8010f6a:	42bb      	cmp	r3, r7
 8010f6c:	460d      	mov	r5, r1
 8010f6e:	d9f4      	bls.n	8010f5a <_printf_i+0x112>
 8010f70:	2b08      	cmp	r3, #8
 8010f72:	d10b      	bne.n	8010f8c <_printf_i+0x144>
 8010f74:	6823      	ldr	r3, [r4, #0]
 8010f76:	07df      	lsls	r7, r3, #31
 8010f78:	d508      	bpl.n	8010f8c <_printf_i+0x144>
 8010f7a:	6923      	ldr	r3, [r4, #16]
 8010f7c:	6861      	ldr	r1, [r4, #4]
 8010f7e:	4299      	cmp	r1, r3
 8010f80:	bfde      	ittt	le
 8010f82:	2330      	movle	r3, #48	@ 0x30
 8010f84:	f806 3c01 	strble.w	r3, [r6, #-1]
 8010f88:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8010f8c:	1b92      	subs	r2, r2, r6
 8010f8e:	6122      	str	r2, [r4, #16]
 8010f90:	f8cd a000 	str.w	sl, [sp]
 8010f94:	464b      	mov	r3, r9
 8010f96:	aa03      	add	r2, sp, #12
 8010f98:	4621      	mov	r1, r4
 8010f9a:	4640      	mov	r0, r8
 8010f9c:	f7ff fee6 	bl	8010d6c <_printf_common>
 8010fa0:	3001      	adds	r0, #1
 8010fa2:	d14a      	bne.n	801103a <_printf_i+0x1f2>
 8010fa4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8010fa8:	b004      	add	sp, #16
 8010faa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010fae:	6823      	ldr	r3, [r4, #0]
 8010fb0:	f043 0320 	orr.w	r3, r3, #32
 8010fb4:	6023      	str	r3, [r4, #0]
 8010fb6:	4833      	ldr	r0, [pc, #204]	@ (8011084 <_printf_i+0x23c>)
 8010fb8:	2778      	movs	r7, #120	@ 0x78
 8010fba:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8010fbe:	6823      	ldr	r3, [r4, #0]
 8010fc0:	6831      	ldr	r1, [r6, #0]
 8010fc2:	061f      	lsls	r7, r3, #24
 8010fc4:	f851 5b04 	ldr.w	r5, [r1], #4
 8010fc8:	d402      	bmi.n	8010fd0 <_printf_i+0x188>
 8010fca:	065f      	lsls	r7, r3, #25
 8010fcc:	bf48      	it	mi
 8010fce:	b2ad      	uxthmi	r5, r5
 8010fd0:	6031      	str	r1, [r6, #0]
 8010fd2:	07d9      	lsls	r1, r3, #31
 8010fd4:	bf44      	itt	mi
 8010fd6:	f043 0320 	orrmi.w	r3, r3, #32
 8010fda:	6023      	strmi	r3, [r4, #0]
 8010fdc:	b11d      	cbz	r5, 8010fe6 <_printf_i+0x19e>
 8010fde:	2310      	movs	r3, #16
 8010fe0:	e7ac      	b.n	8010f3c <_printf_i+0xf4>
 8010fe2:	4827      	ldr	r0, [pc, #156]	@ (8011080 <_printf_i+0x238>)
 8010fe4:	e7e9      	b.n	8010fba <_printf_i+0x172>
 8010fe6:	6823      	ldr	r3, [r4, #0]
 8010fe8:	f023 0320 	bic.w	r3, r3, #32
 8010fec:	6023      	str	r3, [r4, #0]
 8010fee:	e7f6      	b.n	8010fde <_printf_i+0x196>
 8010ff0:	4616      	mov	r6, r2
 8010ff2:	e7bd      	b.n	8010f70 <_printf_i+0x128>
 8010ff4:	6833      	ldr	r3, [r6, #0]
 8010ff6:	6825      	ldr	r5, [r4, #0]
 8010ff8:	6961      	ldr	r1, [r4, #20]
 8010ffa:	1d18      	adds	r0, r3, #4
 8010ffc:	6030      	str	r0, [r6, #0]
 8010ffe:	062e      	lsls	r6, r5, #24
 8011000:	681b      	ldr	r3, [r3, #0]
 8011002:	d501      	bpl.n	8011008 <_printf_i+0x1c0>
 8011004:	6019      	str	r1, [r3, #0]
 8011006:	e002      	b.n	801100e <_printf_i+0x1c6>
 8011008:	0668      	lsls	r0, r5, #25
 801100a:	d5fb      	bpl.n	8011004 <_printf_i+0x1bc>
 801100c:	8019      	strh	r1, [r3, #0]
 801100e:	2300      	movs	r3, #0
 8011010:	6123      	str	r3, [r4, #16]
 8011012:	4616      	mov	r6, r2
 8011014:	e7bc      	b.n	8010f90 <_printf_i+0x148>
 8011016:	6833      	ldr	r3, [r6, #0]
 8011018:	1d1a      	adds	r2, r3, #4
 801101a:	6032      	str	r2, [r6, #0]
 801101c:	681e      	ldr	r6, [r3, #0]
 801101e:	6862      	ldr	r2, [r4, #4]
 8011020:	2100      	movs	r1, #0
 8011022:	4630      	mov	r0, r6
 8011024:	f7ef f964 	bl	80002f0 <memchr>
 8011028:	b108      	cbz	r0, 801102e <_printf_i+0x1e6>
 801102a:	1b80      	subs	r0, r0, r6
 801102c:	6060      	str	r0, [r4, #4]
 801102e:	6863      	ldr	r3, [r4, #4]
 8011030:	6123      	str	r3, [r4, #16]
 8011032:	2300      	movs	r3, #0
 8011034:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8011038:	e7aa      	b.n	8010f90 <_printf_i+0x148>
 801103a:	6923      	ldr	r3, [r4, #16]
 801103c:	4632      	mov	r2, r6
 801103e:	4649      	mov	r1, r9
 8011040:	4640      	mov	r0, r8
 8011042:	47d0      	blx	sl
 8011044:	3001      	adds	r0, #1
 8011046:	d0ad      	beq.n	8010fa4 <_printf_i+0x15c>
 8011048:	6823      	ldr	r3, [r4, #0]
 801104a:	079b      	lsls	r3, r3, #30
 801104c:	d413      	bmi.n	8011076 <_printf_i+0x22e>
 801104e:	68e0      	ldr	r0, [r4, #12]
 8011050:	9b03      	ldr	r3, [sp, #12]
 8011052:	4298      	cmp	r0, r3
 8011054:	bfb8      	it	lt
 8011056:	4618      	movlt	r0, r3
 8011058:	e7a6      	b.n	8010fa8 <_printf_i+0x160>
 801105a:	2301      	movs	r3, #1
 801105c:	4632      	mov	r2, r6
 801105e:	4649      	mov	r1, r9
 8011060:	4640      	mov	r0, r8
 8011062:	47d0      	blx	sl
 8011064:	3001      	adds	r0, #1
 8011066:	d09d      	beq.n	8010fa4 <_printf_i+0x15c>
 8011068:	3501      	adds	r5, #1
 801106a:	68e3      	ldr	r3, [r4, #12]
 801106c:	9903      	ldr	r1, [sp, #12]
 801106e:	1a5b      	subs	r3, r3, r1
 8011070:	42ab      	cmp	r3, r5
 8011072:	dcf2      	bgt.n	801105a <_printf_i+0x212>
 8011074:	e7eb      	b.n	801104e <_printf_i+0x206>
 8011076:	2500      	movs	r5, #0
 8011078:	f104 0619 	add.w	r6, r4, #25
 801107c:	e7f5      	b.n	801106a <_printf_i+0x222>
 801107e:	bf00      	nop
 8011080:	08018149 	.word	0x08018149
 8011084:	0801815a 	.word	0x0801815a

08011088 <memmove>:
 8011088:	4288      	cmp	r0, r1
 801108a:	b510      	push	{r4, lr}
 801108c:	eb01 0402 	add.w	r4, r1, r2
 8011090:	d902      	bls.n	8011098 <memmove+0x10>
 8011092:	4284      	cmp	r4, r0
 8011094:	4623      	mov	r3, r4
 8011096:	d807      	bhi.n	80110a8 <memmove+0x20>
 8011098:	1e43      	subs	r3, r0, #1
 801109a:	42a1      	cmp	r1, r4
 801109c:	d008      	beq.n	80110b0 <memmove+0x28>
 801109e:	f811 2b01 	ldrb.w	r2, [r1], #1
 80110a2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80110a6:	e7f8      	b.n	801109a <memmove+0x12>
 80110a8:	4402      	add	r2, r0
 80110aa:	4601      	mov	r1, r0
 80110ac:	428a      	cmp	r2, r1
 80110ae:	d100      	bne.n	80110b2 <memmove+0x2a>
 80110b0:	bd10      	pop	{r4, pc}
 80110b2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80110b6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80110ba:	e7f7      	b.n	80110ac <memmove+0x24>

080110bc <_sbrk_r>:
 80110bc:	b538      	push	{r3, r4, r5, lr}
 80110be:	4d06      	ldr	r5, [pc, #24]	@ (80110d8 <_sbrk_r+0x1c>)
 80110c0:	2300      	movs	r3, #0
 80110c2:	4604      	mov	r4, r0
 80110c4:	4608      	mov	r0, r1
 80110c6:	602b      	str	r3, [r5, #0]
 80110c8:	f7f2 f814 	bl	80030f4 <_sbrk>
 80110cc:	1c43      	adds	r3, r0, #1
 80110ce:	d102      	bne.n	80110d6 <_sbrk_r+0x1a>
 80110d0:	682b      	ldr	r3, [r5, #0]
 80110d2:	b103      	cbz	r3, 80110d6 <_sbrk_r+0x1a>
 80110d4:	6023      	str	r3, [r4, #0]
 80110d6:	bd38      	pop	{r3, r4, r5, pc}
 80110d8:	240026ac 	.word	0x240026ac

080110dc <memcpy>:
 80110dc:	440a      	add	r2, r1
 80110de:	4291      	cmp	r1, r2
 80110e0:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 80110e4:	d100      	bne.n	80110e8 <memcpy+0xc>
 80110e6:	4770      	bx	lr
 80110e8:	b510      	push	{r4, lr}
 80110ea:	f811 4b01 	ldrb.w	r4, [r1], #1
 80110ee:	f803 4f01 	strb.w	r4, [r3, #1]!
 80110f2:	4291      	cmp	r1, r2
 80110f4:	d1f9      	bne.n	80110ea <memcpy+0xe>
 80110f6:	bd10      	pop	{r4, pc}

080110f8 <_realloc_r>:
 80110f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80110fc:	4680      	mov	r8, r0
 80110fe:	4615      	mov	r5, r2
 8011100:	460c      	mov	r4, r1
 8011102:	b921      	cbnz	r1, 801110e <_realloc_r+0x16>
 8011104:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011108:	4611      	mov	r1, r2
 801110a:	f7ff bc4b 	b.w	80109a4 <_malloc_r>
 801110e:	b92a      	cbnz	r2, 801111c <_realloc_r+0x24>
 8011110:	f7ff fbdc 	bl	80108cc <_free_r>
 8011114:	2400      	movs	r4, #0
 8011116:	4620      	mov	r0, r4
 8011118:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801111c:	f000 f81a 	bl	8011154 <_malloc_usable_size_r>
 8011120:	4285      	cmp	r5, r0
 8011122:	4606      	mov	r6, r0
 8011124:	d802      	bhi.n	801112c <_realloc_r+0x34>
 8011126:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 801112a:	d8f4      	bhi.n	8011116 <_realloc_r+0x1e>
 801112c:	4629      	mov	r1, r5
 801112e:	4640      	mov	r0, r8
 8011130:	f7ff fc38 	bl	80109a4 <_malloc_r>
 8011134:	4607      	mov	r7, r0
 8011136:	2800      	cmp	r0, #0
 8011138:	d0ec      	beq.n	8011114 <_realloc_r+0x1c>
 801113a:	42b5      	cmp	r5, r6
 801113c:	462a      	mov	r2, r5
 801113e:	4621      	mov	r1, r4
 8011140:	bf28      	it	cs
 8011142:	4632      	movcs	r2, r6
 8011144:	f7ff ffca 	bl	80110dc <memcpy>
 8011148:	4621      	mov	r1, r4
 801114a:	4640      	mov	r0, r8
 801114c:	f7ff fbbe 	bl	80108cc <_free_r>
 8011150:	463c      	mov	r4, r7
 8011152:	e7e0      	b.n	8011116 <_realloc_r+0x1e>

08011154 <_malloc_usable_size_r>:
 8011154:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8011158:	1f18      	subs	r0, r3, #4
 801115a:	2b00      	cmp	r3, #0
 801115c:	bfbc      	itt	lt
 801115e:	580b      	ldrlt	r3, [r1, r0]
 8011160:	18c0      	addlt	r0, r0, r3
 8011162:	4770      	bx	lr

08011164 <_init>:
 8011164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011166:	bf00      	nop
 8011168:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801116a:	bc08      	pop	{r3}
 801116c:	469e      	mov	lr, r3
 801116e:	4770      	bx	lr

08011170 <_fini>:
 8011170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011172:	bf00      	nop
 8011174:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8011176:	bc08      	pop	{r3}
 8011178:	469e      	mov	lr, r3
 801117a:	4770      	bx	lr
